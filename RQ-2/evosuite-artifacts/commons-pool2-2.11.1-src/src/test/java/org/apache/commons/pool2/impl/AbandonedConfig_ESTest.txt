 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setUseUsageTracking(true);
      boolean boolean0 = abandonedConfig0.getUseUsageTracking();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      assertFalse(abandonedConfig0.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRequireFullStackTrace(false);
      boolean boolean0 = abandonedConfig0.getRequireFullStackTrace();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRemoveAbandonedTimeout(0);
      int int0 = abandonedConfig0.getRemoveAbandonedTimeout();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRemoveAbandonedTimeout(0);
      int int0 = abandonedConfig0.getRemoveAbandonedTimeout();
      assertFalse(abandonedConfig0.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      ChronoUnit chronoUnit0 = ChronoUnit.CENTURIES;
      Duration duration0 = chronoUnit0.getDuration();
      abandonedConfig0.setRemoveAbandonedTimeout(duration0);
      abandonedConfig0.getRemoveAbandonedTimeout();
      assertFalse(abandonedConfig0.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRemoveAbandonedOnMaintenance(true);
      boolean boolean0 = abandonedConfig0.getRemoveAbandonedOnMaintenance();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRemoveAbandonedOnBorrow(true);
      boolean boolean0 = abandonedConfig0.getRemoveAbandonedOnBorrow();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setLogAbandoned(true);
      boolean boolean0 = abandonedConfig0.getLogAbandoned();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setUseUsageTracking(true);
      AbandonedConfig.copy(abandonedConfig0);
      assertTrue(abandonedConfig0.getUseUsageTracking());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setUseUsageTracking(true);
      AbandonedConfig.copy(abandonedConfig0);
      assertFalse(abandonedConfig0.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRemoveAbandonedOnMaintenance(true);
      AbandonedConfig.copy(abandonedConfig0);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRemoveAbandonedOnMaintenance(true);
      AbandonedConfig.copy(abandonedConfig0);
      assertFalse(abandonedConfig0.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setLogWriter((PrintWriter) null);
      abandonedConfig0.getLogWriter();
      assertFalse(abandonedConfig0.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getRemoveAbandonedTimeoutDuration();
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRemoveAbandonedOnBorrow(true);
      AbandonedConfig abandonedConfig1 = AbandonedConfig.copy(abandonedConfig0);
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRemoveAbandonedOnBorrow(true);
      AbandonedConfig abandonedConfig1 = AbandonedConfig.copy(abandonedConfig0);
      assertFalse(abandonedConfig1.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      boolean boolean0 = abandonedConfig0.getRequireFullStackTrace();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getUseUsageTracking();
      assertFalse(abandonedConfig0.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getRemoveAbandonedOnBorrow();
      assertFalse(abandonedConfig0.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setLogAbandoned(true);
      AbandonedConfig abandonedConfig1 = AbandonedConfig.copy(abandonedConfig0);
      assertTrue(abandonedConfig0.getLogAbandoned());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setLogAbandoned(true);
      AbandonedConfig abandonedConfig1 = AbandonedConfig.copy(abandonedConfig0);
      assertFalse(abandonedConfig1.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      assertFalse(abandonedConfig0.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRequireFullStackTrace(false);
      AbandonedConfig.copy(abandonedConfig0);
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getLogWriter();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getLogAbandoned();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getRemoveAbandonedOnMaintenance();
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = AbandonedConfig.copy((AbandonedConfig) null);
      assertNotNull(abandonedConfig0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.toString();
      assertFalse(abandonedConfig0.getRequireFullStackTrace());
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getRemoveAbandonedTimeout();
      assertFalse(abandonedConfig0.getRequireFullStackTrace());
}
