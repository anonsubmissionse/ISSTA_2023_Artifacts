/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 16:41:28 GMT 2022
 */

package org.apache.commons.weaver.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.lang.annotation.ElementType;
import java.lang.reflect.Array;
import java.util.Set;
import org.apache.commons.weaver.model.ScanRequest;
import org.apache.commons.weaver.model.WeaveInterest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ScanRequest_ESTest extends ScanRequest_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ScanRequest scanRequest0 = new ScanRequest();
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 0);
      ScanRequest scanRequest1 = scanRequest0.addSupertypes(classArray0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ScanRequest scanRequest0 = new ScanRequest();
      // Undeclared exception!
      try { 
        scanRequest0.addSupertypes((Class<?>[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ScanRequest scanRequest0 = new ScanRequest();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ScanRequest scanRequest0 = new ScanRequest();
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 1);
      Class<String> class0 = String.class;
      classArray0[0] = class0;
      ScanRequest scanRequest1 = scanRequest0.addSupertypes(classArray0);
      boolean boolean0 = scanRequest1.isConstrained();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ScanRequest scanRequest0 = new ScanRequest();
      boolean boolean0 = scanRequest0.isConstrained();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ScanRequest scanRequest0 = new ScanRequest();
      // Undeclared exception!
      try { 
        scanRequest0.add((WeaveInterest) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.weaver.model.ScanRequest", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ScanRequest scanRequest0 = new ScanRequest();
      assertTrue(scanRequest0.isConstrained());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ScanRequest scanRequest0 = new ScanRequest();
      Class<Annotation> class0 = Annotation.class;
      ElementType elementType0 = ElementType.LOCAL_VARIABLE;
      WeaveInterest weaveInterest0 = WeaveInterest.of(class0, elementType0);
      scanRequest0.add(weaveInterest0);
      boolean boolean0 = scanRequest0.isConstrained();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ScanRequest scanRequest0 = new ScanRequest();
      Iterable<WeaveInterest> iterable0 = scanRequest0.getInterests();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ScanRequest scanRequest0 = new ScanRequest();
      Set<Class<?>> set0 = scanRequest0.getSupertypes();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ScanRequest scanRequest0 = new ScanRequest();
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 7);
      // Undeclared exception!
      try { 
        scanRequest0.addSupertypes(classArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // null element at [0]
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
}
