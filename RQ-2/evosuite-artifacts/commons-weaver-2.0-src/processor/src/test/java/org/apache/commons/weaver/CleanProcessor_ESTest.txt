 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      MockFile mockFile0 = new MockFile("");
      Properties properties0 = new Properties();
      CleanProcessor cleanProcessor0 = null;
      try {
        cleanProcessor0 = new CleanProcessor(linkedList0, mockFile0, properties0, (Iterable<Cleaner>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) null);
      File file0 = MockFile.createTempFile("|3C>.Q.#Y$nVN", "|3C>.Q.#Y$nVN");
      TreeSet<TestCleaner> treeSet0 = new TreeSet<TestCleaner>();
      LinkedList<Cleaner> linkedList0 = new LinkedList<Cleaner>(treeSet0);
      CleanProcessor cleanProcessor0 = null;
      try {
        cleanProcessor0 = new CleanProcessor(list0, file0, (Properties) null, linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // /tmp/|3C>.Q.#Y$nVN0|3C>.Q.#Y$nVN is not a directory
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Properties properties0 = new Properties();
      CleanProcessor cleanProcessor0 = null;
      try {
        cleanProcessor0 = new CleanProcessor((List<String>) null, (File) null, properties0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // classpath
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      MockFile mockFile0 = new MockFile("1sqZj9c", "8BpRp>6GT_Hb?");
      File file0 = MockFile.createTempFile("8BpRp>6GT_Hb?", "", (File) mockFile0);
      Properties properties0 = new Properties();
      CleanProcessor cleanProcessor0 = null;
      try {
        cleanProcessor0 = new CleanProcessor(linkedList0, file0, properties0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // /media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/commons-weaver-2.0-src/processor/1sqZj9c/8BpRp>6GT_Hb?/8BpRp>6GT_Hb?0 is not a directory
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      MockFile mockFile0 = new MockFile("");
      mockFile0.delete();
      Properties properties0 = new Properties();
      CleanProcessor cleanProcessor0 = new CleanProcessor(list0, mockFile0, properties0);
      cleanProcessor0.clean();
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      MockFile mockFile0 = new MockFile("3o~:p!6) 7oI>zCW", "3o~:p!6) 7oI>zCW");
      Properties properties0 = new Properties();
      MockFile.createTempFile("3o~:p!6) 7oI>zCW", "3o~:p!6) 7oI>zCW", (File) mockFile0);
      CleanProcessor cleanProcessor0 = new CleanProcessor(list0, mockFile0, properties0);
      cleanProcessor0.clean();
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      MockFile mockFile0 = new MockFile("", "");
      Properties properties0 = new Properties();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      PriorityQueue<Cleaner> priorityQueue0 = new PriorityQueue<Cleaner>(76, comparator0);
      CleanProcessor cleanProcessor0 = new CleanProcessor(arrayList0, mockFile0, properties0, priorityQueue0);
  }
