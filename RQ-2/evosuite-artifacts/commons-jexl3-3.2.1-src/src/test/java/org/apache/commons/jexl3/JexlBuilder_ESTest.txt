 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cacheThreshold(2139);
      jexlBuilder0.create();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cacheThreshold(0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cacheThreshold(0);
      assertEquals(1, jexlBuilder1.cache());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cacheThreshold(0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cacheThreshold(0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode((-1727));
      boolean boolean0 = jexlBuilder1.collectAll();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode((-1727));
      boolean boolean0 = jexlBuilder1.collectAll();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("error");
      Uberspect uberspect0 = new Uberspect(jdk13LumberjackLogger0, jexlUberspect_ResolverStrategy0);
      jexlBuilder0.uberspect((JexlUberspect) uberspect0);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      NoOpLog noOpLog0 = new NoOpLog();
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      Uberspect uberspect0 = new Uberspect(noOpLog0, jexlUberspect_ResolverStrategy0);
      jexlBuilder0.stackOverflow((-2823));
      jexlBuilder0.uberspect((JexlUberspect) uberspect0);
      assertEquals(1, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      NoOpLog noOpLog0 = new NoOpLog();
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      Uberspect uberspect0 = new Uberspect(noOpLog0, jexlUberspect_ResolverStrategy0);
      jexlBuilder1.uberspect((JexlUberspect) uberspect0);
      assertTrue(jexlBuilder0.lexical());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      NoOpLog noOpLog0 = new NoOpLog();
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      Uberspect uberspect0 = new Uberspect(noOpLog0, jexlUberspect_ResolverStrategy0);
      jexlBuilder1.uberspect((JexlUberspect) uberspect0);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-3044));
      JexlEngine jexlEngine0 = jexlBuilder0.create();
      JexlUberspect jexlUberspect0 = jexlEngine0.getUberspect();
      jexlBuilder0.uberspect(jexlUberspect0);
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      NoOpLog noOpLog0 = new NoOpLog("53");
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      Permissions permissions0 = Permissions.DEFAULT;
      Uberspect uberspect0 = new Uberspect(noOpLog0, jexlUberspect_ResolverStrategy0, permissions0);
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectAll(false);
      jexlBuilder1.uberspect((JexlUberspect) uberspect0);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      NoOpLog noOpLog0 = new NoOpLog("53");
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      Permissions permissions0 = Permissions.DEFAULT;
      Uberspect uberspect0 = new Uberspect(noOpLog0, jexlUberspect_ResolverStrategy0, permissions0);
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectAll(false);
      jexlBuilder1.uberspect((JexlUberspect) uberspect0);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      NoOpLog noOpLog0 = new NoOpLog();
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      Permissions permissions0 = Permissions.DEFAULT;
      Uberspect uberspect0 = new Uberspect(noOpLog0, jexlUberspect_ResolverStrategy0, permissions0);
      jexlBuilder1.uberspect((JexlUberspect) uberspect0);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      NoOpLog noOpLog0 = new NoOpLog();
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      Permissions permissions0 = Permissions.DEFAULT;
      Uberspect uberspect0 = new Uberspect(noOpLog0, jexlUberspect_ResolverStrategy0, permissions0);
      jexlBuilder1.uberspect((JexlUberspect) uberspect0);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(14);
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("forEach");
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      Uberspect uberspect0 = new Uberspect(jdk13LumberjackLogger0, jexlUberspect_ResolverStrategy0, (Permissions) null);
      jexlBuilder0.uberspect((JexlUberspect) uberspect0);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      NoOpLog noOpLog0 = new NoOpLog("53");
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      Permissions permissions0 = Permissions.DEFAULT;
      Uberspect uberspect0 = new Uberspect(noOpLog0, jexlUberspect_ResolverStrategy0, permissions0);
      jexlBuilder1.uberspect((JexlUberspect) uberspect0);
      assertFalse(jexlBuilder0.antish());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      NoOpLog noOpLog0 = new NoOpLog("53");
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      Permissions permissions0 = Permissions.DEFAULT;
      Uberspect uberspect0 = new Uberspect(noOpLog0, jexlUberspect_ResolverStrategy0, permissions0);
      jexlBuilder1.uberspect((JexlUberspect) uberspect0);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("forEach");
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      Uberspect uberspect0 = new Uberspect(jdk13LumberjackLogger0, jexlUberspect_ResolverStrategy0, (Permissions) null);
      JexlBuilder jexlBuilder1 = jexlBuilder0.uberspect((JexlUberspect) uberspect0);
      jexlBuilder1.uberspect();
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("forEach");
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      Uberspect uberspect0 = new Uberspect(jdk13LumberjackLogger0, jexlUberspect_ResolverStrategy0, (Permissions) null);
      JexlBuilder jexlBuilder1 = jexlBuilder0.uberspect((JexlUberspect) uberspect0);
      jexlBuilder1.uberspect();
      assertTrue(jexlBuilder1.collectAll());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("forEach");
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      Uberspect uberspect0 = new Uberspect(jdk13LumberjackLogger0, jexlUberspect_ResolverStrategy0, (Permissions) null);
      JexlBuilder jexlBuilder1 = jexlBuilder0.uberspect((JexlUberspect) uberspect0);
      jexlBuilder1.uberspect();
      assertEquals(1, jexlBuilder1.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("forEach");
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      Uberspect uberspect0 = new Uberspect(jdk13LumberjackLogger0, jexlUberspect_ResolverStrategy0, (Permissions) null);
      JexlBuilder jexlBuilder1 = jexlBuilder0.uberspect((JexlUberspect) uberspect0);
      jexlBuilder1.uberspect();
      assertEquals(0, jexlBuilder1.cache());
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      jexlBuilder0.strict(true);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-696));
      jexlBuilder0.strict(false);
      assertTrue(jexlBuilder0.strict());
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade(true);
      jexlBuilder0.strict(true);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode((-3044));
      jexlBuilder1.strict(true);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode((-3044));
      jexlBuilder1.strict(true);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectAll(false);
      jexlBuilder1.strict(true);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectAll(false);
      jexlBuilder1.strict(true);
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      jexlBuilder1.strict(false);
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(4095);
      jexlBuilder0.strict(true);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.strict(true);
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.strict(true);
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.strict(false);
      jexlBuilder0.strict();
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      jexlBuilder0.strategy(jexlUberspect_ResolverStrategy0);
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-303));
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      jexlBuilder0.strategy(jexlUberspect_ResolverStrategy0);
      assertEquals(1, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      jexlBuilder1.strategy(jexlUberspect_ResolverStrategy0);
      assertTrue(jexlBuilder0.lexical());
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      jexlBuilder1.strategy(jexlUberspect_ResolverStrategy0);
      ;
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexical(true);
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      jexlBuilder0.strategy(jexlUberspect_ResolverStrategy0);
      assertTrue(jexlBuilder0.lexical());
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-13));
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      jexlBuilder0.strategy(jexlUberspect_ResolverStrategy0);
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      jexlBuilder0.strategy(jexlUberspect_ResolverStrategy0);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(0);
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      jexlBuilder0.strategy(jexlUberspect_ResolverStrategy0);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(Integer.MAX_VALUE);
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      jexlBuilder1.strategy(jexlUberspect_ResolverStrategy0);
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.antish(false);
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      jexlBuilder0.strategy(jexlUberspect_ResolverStrategy0);
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      jexlBuilder0.strategy(jexlUberspect_ResolverStrategy0);
      jexlBuilder0.strategy();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      jexlBuilder0.strategy(jexlUberspect_ResolverStrategy0);
      jexlBuilder0.strategy();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      jexlBuilder0.strategy(jexlUberspect_ResolverStrategy0);
      jexlBuilder0.strategy();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      jexlBuilder0.strategy(jexlUberspect_ResolverStrategy0);
      jexlBuilder0.strategy();
      ;
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade(true);
      jexlBuilder0.stackOverflow((-303));
      assertTrue(jexlBuilder0.lexicalShade());
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-303));
      jexlBuilder0.stackOverflow((-303));
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      jexlBuilder0.stackOverflow(2738);
      assertEquals(0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      jexlBuilder1.stackOverflow(19);
      assertEquals(0, jexlBuilder1.stackOverflow());
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(Integer.MAX_VALUE);
      jexlBuilder1.stackOverflow(Integer.MAX_VALUE);
      ;
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(Integer.MAX_VALUE);
      jexlBuilder1.stackOverflow(Integer.MAX_VALUE);
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.stackOverflow(10);
      ;
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.stackOverflow(10);
      ;
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      int int0 = jexlBuilder0.stackOverflow();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-303));
      int int0 = jexlBuilder0.stackOverflow();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      jexlBuilder0.silent(false);
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-303));
      jexlBuilder0.silent(true);
      ;
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade(true);
      jexlBuilder0.silent(true);
      assertTrue(jexlBuilder0.silent());
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-515));
      jexlBuilder0.silent(true);
      ;
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      jexlBuilder0.silent(false);
      ;
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(0);
      jexlBuilder0.silent(false);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(25);
      jexlBuilder0.silent(true);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.antish(false);
      jexlBuilder0.silent(false);
      ;
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.silent(true);
      jexlBuilder0.silent();
      assertTrue(jexlBuilder0.silent());
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      JexlSandbox jexlSandbox0 = new JexlSandbox(true);
      jexlBuilder0.sandbox(jexlSandbox0);
      assertEquals(0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-303));
      JexlSandbox jexlSandbox0 = new JexlSandbox();
      jexlBuilder0.sandbox(jexlSandbox0);
      assertEquals(0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade(true);
      JexlSandbox jexlSandbox0 = new JexlSandbox();
      jexlBuilder0.sandbox(jexlSandbox0);
      assertTrue(jexlBuilder0.lexical());
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-303));
      JexlSandbox jexlSandbox0 = new JexlSandbox();
      jexlBuilder0.sandbox(jexlSandbox0);
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      JexlSandbox jexlSandbox0 = new JexlSandbox();
      jexlBuilder0.sandbox(jexlSandbox0);
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      JexlSandbox jexlSandbox0 = new JexlSandbox();
      jexlBuilder1.sandbox(jexlSandbox0);
      ;
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      JexlSandbox jexlSandbox0 = new JexlSandbox();
      jexlBuilder1.sandbox(jexlSandbox0);
      ;
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(1);
      JexlSandbox jexlSandbox0 = new JexlSandbox();
      jexlBuilder1.sandbox(jexlSandbox0);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(1);
      JexlSandbox jexlSandbox0 = new JexlSandbox();
      jexlBuilder1.sandbox(jexlSandbox0);
      ;
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.antish(false);
      JexlSandbox jexlSandbox0 = new JexlSandbox();
      jexlBuilder0.sandbox(jexlSandbox0);
      ;
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      jexlBuilder0.safe(true);
      ;
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-2));
      jexlBuilder0.safe(false);
      assertEquals(0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      jexlBuilder1.safe(false);
      ;
}
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      jexlBuilder1.safe(false);
      ;
}
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-3044));
      jexlBuilder0.safe(true);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode(0);
      jexlBuilder1.safe(true);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode(0);
      jexlBuilder1.safe(true);
      ;
}
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(0);
      jexlBuilder0.safe(true);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(Integer.MAX_VALUE);
      jexlBuilder0.safe(true);
      ;
}
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.safe(false);
      assertFalse(jexlBuilder1.safe());
}
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.safe(false);
      jexlBuilder0.safe();
      ;
}
 @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.strict(false);
      jexlBuilder0.options();
      ;
}
 @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.silent(true);
      jexlBuilder0.options();
      assertTrue(jexlBuilder0.silent());
}
 @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      jexlBuilder1.options();
      assertTrue(jexlBuilder0.lexicalShade());
}
 @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      jexlBuilder1.options();
      ;
}
 @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cancellable(false);
      JexlOptions jexlOptions0 = jexlBuilder0.options();
      assertFalse(jexlOptions0.isCancellable());
}
 @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cancellable(false);
      JexlOptions jexlOptions0 = jexlBuilder0.options();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cancellable(false);
      JexlOptions jexlOptions0 = jexlBuilder0.options();
      ;
}
 @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cancellable(false);
      JexlOptions jexlOptions0 = jexlBuilder0.options();
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cancellable(false);
      JexlOptions jexlOptions0 = jexlBuilder0.options();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.antish(false);
      jexlBuilder0.options();
      assertFalse(jexlBuilder0.antish());
}
 @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false);
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      MathContext mathContext0 = new MathContext(1724, roundingMode0);
      JexlArithmetic jexlArithmetic1 = jexlArithmetic0.createWithOptions(true, mathContext0, 0);
      jexlBuilder0.arithmetic(jexlArithmetic1);
      jexlBuilder0.options();
      ;
}
 @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false);
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      MathContext mathContext0 = new MathContext(1724, roundingMode0);
      JexlArithmetic jexlArithmetic1 = jexlArithmetic0.createWithOptions(true, mathContext0, 0);
      jexlBuilder0.arithmetic(jexlArithmetic1);
      jexlBuilder0.options();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false);
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      MathContext mathContext0 = new MathContext(1724, roundingMode0);
      JexlArithmetic jexlArithmetic1 = jexlArithmetic0.createWithOptions(true, mathContext0, 0);
      jexlBuilder0.arithmetic(jexlArithmetic1);
      jexlBuilder0.options();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false);
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      MathContext mathContext0 = new MathContext(1724, roundingMode0);
      JexlArithmetic jexlArithmetic1 = jexlArithmetic0.createWithOptions(true, mathContext0, 0);
      jexlBuilder0.arithmetic(jexlArithmetic1);
      jexlBuilder0.options();
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false);
      MathContext mathContext0 = MathContext.UNLIMITED;
      JexlArithmetic jexlArithmetic1 = jexlArithmetic0.createWithOptions(false, mathContext0, 1);
      jexlBuilder0.arithmetic(jexlArithmetic1);
      jexlBuilder0.options();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false);
      MathContext mathContext0 = MathContext.UNLIMITED;
      JexlArithmetic jexlArithmetic1 = jexlArithmetic0.createWithOptions(false, mathContext0, 1);
      jexlBuilder0.arithmetic(jexlArithmetic1);
      jexlBuilder0.options();
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false);
      MathContext mathContext0 = MathContext.UNLIMITED;
      JexlArithmetic jexlArithmetic1 = jexlArithmetic0.createWithOptions(false, mathContext0, 1);
      jexlBuilder0.arithmetic(jexlArithmetic1);
      jexlBuilder0.options();
      ;
}
 @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false);
      MathContext mathContext0 = MathContext.UNLIMITED;
      JexlArithmetic jexlArithmetic1 = jexlArithmetic0.createWithOptions(false, mathContext0, 1);
      jexlBuilder0.arithmetic(jexlArithmetic1);
      jexlBuilder0.options();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.stackOverflow(0);
      Map<String, Object> map0 = jexlBuilder0.namespaces();
      jexlBuilder1.namespaces(map0);
      ;
}
 @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.stackOverflow((-696));
      Map<String, Object> map0 = jexlBuilder1.namespaces();
      jexlBuilder0.namespaces(map0);
      ;
}
 @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade(true);
      Map<String, Object> map0 = jexlBuilder0.namespaces();
      jexlBuilder0.namespaces(map0);
      assertTrue(jexlBuilder0.lexical());
}
 @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-13));
      jexlBuilder0.namespaces((Map<String, Object>) null);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      jexlBuilder0.namespaces((Map<String, Object>) hashMap0);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      JexlOptions jexlOptions0 = jexlBuilder0.options();
      Map<String, Object> map0 = jexlOptions0.getNamespaces();
      jexlBuilder1.namespaces(map0);
      ;
}
 @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      JexlOptions jexlOptions0 = jexlBuilder0.options();
      Map<String, Object> map0 = jexlOptions0.getNamespaces();
      jexlBuilder1.namespaces(map0);
      ;
}
 @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(25);
      Map<String, Object> map0 = jexlBuilder0.namespaces();
      jexlBuilder0.namespaces(map0);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.antish(false);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      jexlBuilder0.namespaces((Map<String, Object>) hashMap0);
      assertFalse(jexlBuilder0.antish());
}
 @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>(hashMap0);
      jexlBuilder0.namespaces((Map<String, Object>) hashMap1);
      jexlBuilder0.namespaces();
      assertEquals(jexlBuilder0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>(hashMap0);
      jexlBuilder0.namespaces((Map<String, Object>) hashMap1);
      jexlBuilder0.namespaces();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>(hashMap0);
      jexlBuilder0.namespaces((Map<String, Object>) hashMap1);
      jexlBuilder0.namespaces();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>(hashMap0);
      jexlBuilder0.namespaces((Map<String, Object>) hashMap1);
      jexlBuilder0.namespaces();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      jexlBuilder0.namespaces((Map<String, Object>) hashMap0);
      hashMap0.put("/x", "/x");
      jexlBuilder0.namespaces();
      ;
}
 @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      jexlBuilder0.namespaces((Map<String, Object>) hashMap0);
      hashMap0.put("/x", "/x");
      jexlBuilder0.namespaces();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      jexlBuilder0.namespaces((Map<String, Object>) hashMap0);
      hashMap0.put("/x", "/x");
      jexlBuilder0.namespaces();
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      jexlBuilder0.namespaces((Map<String, Object>) hashMap0);
      hashMap0.put("/x", "/x");
      jexlBuilder0.namespaces();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("selfXor");
      jexlBuilder0.stackOverflow(0);
      jexlBuilder0.logger((Log) jdk13LumberjackLogger0);
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("Ad8V:c>_4J");
      jexlBuilder0.stackOverflow((-303));
      jexlBuilder0.logger((Log) jdk14Logger0);
      ;
}
 @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("Ad8V:c>_4J");
      jexlBuilder1.logger((Log) jdk14Logger0);
      assertTrue(jexlBuilder0.lexicalShade());
}
 @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("Ad8V:c>_4J");
      jexlBuilder1.logger((Log) jdk14Logger0);
      ;
}
 @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("Ad8V:c>_4J");
      jexlBuilder0.collectMode((-303));
      jexlBuilder0.logger((Log) jdk14Logger0);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectAll(false);
      NoOpLog noOpLog0 = new NoOpLog();
      jexlBuilder1.logger((Log) noOpLog0);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectAll(false);
      NoOpLog noOpLog0 = new NoOpLog();
      jexlBuilder1.logger((Log) noOpLog0);
      ;
}
 @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(0);
      NoOpLog noOpLog0 = new NoOpLog();
      jexlBuilder0.logger((Log) noOpLog0);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(4095);
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("ykewkCZ/i [~");
      jexlBuilder1.logger((Log) jdk13LumberjackLogger0);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(4095);
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("ykewkCZ/i [~");
      jexlBuilder1.logger((Log) jdk13LumberjackLogger0);
      ;
}
 @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("org.apache.commons.jexl3.JexlBuilder");
      jexlBuilder0.antish(false);
      jexlBuilder0.logger((Log) jdk13LumberjackLogger0);
      assertTrue(jexlBuilder0.antish());
}
 @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      SimpleLog simpleLog0 = new SimpleLog("L!yW{Jvg'O|~Te");
      jexlBuilder0.logger((Log) simpleLog0);
      jexlBuilder0.logger();
      ;
}
 @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      SimpleLog simpleLog0 = new SimpleLog("L!yW{Jvg'O|~Te");
      jexlBuilder0.logger((Log) simpleLog0);
      jexlBuilder0.logger();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      SimpleLog simpleLog0 = new SimpleLog("L!yW{Jvg'O|~Te");
      jexlBuilder0.logger((Log) simpleLog0);
      jexlBuilder0.logger();
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      SimpleLog simpleLog0 = new SimpleLog("L!yW{Jvg'O|~Te");
      jexlBuilder0.logger((Log) simpleLog0);
      jexlBuilder0.logger();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.stackOverflow(0);
      Charset charset0 = jexlBuilder1.charset();
      jexlBuilder1.loader(charset0);
      assertEquals(0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Charset charset0 = Charset.defaultCharset();
      jexlBuilder0.stackOverflow((-2));
      jexlBuilder0.loader(charset0);
      assertEquals(0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade(true);
      Charset charset0 = Charset.defaultCharset();
      jexlBuilder0.loader(charset0);
      ;
}
 @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-1078));
      Charset charset0 = jexlBuilder0.charset();
      jexlBuilder0.loader(charset0);
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectAll(false);
      Charset charset0 = Charset.defaultCharset();
      jexlBuilder1.loader(charset0);
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectAll(false);
      Charset charset0 = Charset.defaultCharset();
      jexlBuilder1.loader(charset0);
      ;
}
 @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      Charset charset0 = Charset.defaultCharset();
      jexlBuilder1.loader(charset0);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      Charset charset0 = Charset.defaultCharset();
      jexlBuilder1.loader(charset0);
      ;
}
 @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(6);
      Charset charset0 = jexlBuilder0.charset();
      jexlBuilder0.loader(charset0);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Charset charset0 = Charset.defaultCharset();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.loader(charset0);
      assertTrue(jexlBuilder0.antish());
}
 @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Charset charset0 = Charset.defaultCharset();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.loader(charset0);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.stackOverflow(0);
      jexlBuilder1.loader((ClassLoader) null);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.stackOverflow((-714));
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      jexlBuilder1.loader(classLoader0);
      assertEquals(0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.stackOverflow((-714));
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      jexlBuilder1.loader(classLoader0);
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade(true);
      jexlBuilder0.loader((ClassLoader) null);
      assertTrue(jexlBuilder0.lexicalShade());
}
 @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      jexlBuilder0.loader(classLoader0);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      jexlBuilder0.loader(classLoader0);
      ;
}
 @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(812);
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("org.apache.commons.jexl3.JexlBuilder");
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      Uberspect uberspect0 = new Uberspect(jdk14Logger0, jexlUberspect_ResolverStrategy0);
      ClassLoader classLoader0 = uberspect0.getClassLoader();
      jexlBuilder1.loader(classLoader0);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(812);
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("org.apache.commons.jexl3.JexlBuilder");
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.JEXL_STRATEGY;
      Uberspect uberspect0 = new Uberspect(jdk14Logger0, jexlUberspect_ResolverStrategy0);
      ClassLoader classLoader0 = uberspect0.getClassLoader();
      jexlBuilder1.loader(classLoader0);
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      jexlBuilder1.loader(classLoader0);
      assertFalse(jexlBuilder0.antish());
}
 @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      jexlBuilder1.loader(classLoader0);
      ;
}
 @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      NoOpLog noOpLog0 = new NoOpLog();
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      Uberspect uberspect0 = new Uberspect(noOpLog0, jexlUberspect_ResolverStrategy0);
      ClassLoader classLoader0 = uberspect0.getClassLoader();
      JexlBuilder jexlBuilder1 = jexlBuilder0.loader(classLoader0);
      jexlBuilder1.loader();
      assertEquals(1, jexlBuilder1.cache());
}
 @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      NoOpLog noOpLog0 = new NoOpLog();
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      Uberspect uberspect0 = new Uberspect(noOpLog0, jexlUberspect_ResolverStrategy0);
      ClassLoader classLoader0 = uberspect0.getClassLoader();
      JexlBuilder jexlBuilder1 = jexlBuilder0.loader(classLoader0);
      jexlBuilder1.loader();
      ;
}
 @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      NoOpLog noOpLog0 = new NoOpLog();
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      Uberspect uberspect0 = new Uberspect(noOpLog0, jexlUberspect_ResolverStrategy0);
      ClassLoader classLoader0 = uberspect0.getClassLoader();
      JexlBuilder jexlBuilder1 = jexlBuilder0.loader(classLoader0);
      jexlBuilder1.loader();
      assertTrue(jexlBuilder1.collectAll());
}
 @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      NoOpLog noOpLog0 = new NoOpLog();
      JexlUberspect.ResolverStrategy jexlUberspect_ResolverStrategy0 = JexlUberspect.MAP_STRATEGY;
      Uberspect uberspect0 = new Uberspect(noOpLog0, jexlUberspect_ResolverStrategy0);
      ClassLoader classLoader0 = uberspect0.getClassLoader();
      JexlBuilder jexlBuilder1 = jexlBuilder0.loader(classLoader0);
      jexlBuilder1.loader();
      assertEquals(1, jexlBuilder1.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.stackOverflow(0);
      jexlBuilder1.lexicalShade(false);
      ;
}
 @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-3688));
      jexlBuilder0.lexicalShade(true);
      assertTrue(jexlBuilder0.lexicalShade());
}
 @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-617));
      jexlBuilder0.lexicalShade(true);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      jexlBuilder0.lexicalShade(false);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      jexlBuilder1.lexicalShade(false);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(1);
      jexlBuilder0.lexicalShade(false);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.lexicalShade(false);
      assertFalse(jexlBuilder0.antish());
}
 @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      boolean boolean0 = jexlBuilder1.lexicalShade();
      ;
}
 @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      boolean boolean0 = jexlBuilder1.lexicalShade();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      jexlBuilder0.lexical(true);
      ;
}
 @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.stackOverflow((-303));
      jexlBuilder1.lexical(true);
      assertFalse(jexlBuilder1.lexical());
}
 @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade(true);
      jexlBuilder0.lexical(true);
      assertFalse(jexlBuilder0.lexical());
}
 @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode((-1005));
      jexlBuilder1.lexical(true);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode((-1005));
      jexlBuilder1.lexical(true);
      ;
}
 @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      jexlBuilder0.lexical(false);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(0);
      jexlBuilder0.lexical(false);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(25);
      jexlBuilder0.lexical(false);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.lexical(false);
      ;
}
 @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.lexical(false);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.stackOverflow(0);
      JexlFeatures jexlFeatures0 = new JexlFeatures();
      jexlBuilder1.features(jexlFeatures0);
      ;
}
 @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlBuilder0.stackOverflow((-3688));
      jexlBuilder0.features(jexlFeatures0);
      ;
}
 @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode((-3044));
      JexlFeatures jexlFeatures0 = new JexlFeatures();
      jexlBuilder1.features(jexlFeatures0);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode((-3044));
      JexlFeatures jexlFeatures0 = new JexlFeatures();
      jexlBuilder1.features(jexlFeatures0);
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      jexlBuilder0.features((JexlFeatures) null);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(0);
      JexlFeatures jexlFeatures0 = new JexlFeatures();
      jexlBuilder0.features(jexlFeatures0);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlBuilder0.cache(8);
      jexlBuilder0.features(jexlFeatures0);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.features((JexlFeatures) null);
      ;
}
 @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.structuredLiteral(false);
      jexlBuilder0.features();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.structuredLiteral(false);
      jexlBuilder0.features();
      assertTrue(jexlBuilder0.lexical());
}
 @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.structuredLiteral(false);
      jexlBuilder0.features();
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.structuredLiteral(false);
      jexlBuilder0.features();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.structuredLiteral(false);
      jexlBuilder0.features();
      ;
}
 @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = new JexlFeatures();
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.sideEffectGlobal(false);
      jexlBuilder1.features();
      assertEquals(1, jexlBuilder1.cache());
}
 @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = new JexlFeatures();
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.sideEffectGlobal(false);
      jexlBuilder1.features();
      ;
}
 @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = new JexlFeatures();
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.sideEffectGlobal(false);
      jexlBuilder1.features();
      assertEquals(0, jexlBuilder1.collectMode());
}
 @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = new JexlFeatures();
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.sideEffectGlobal(false);
      jexlBuilder1.features();
      assertEquals(1, jexlBuilder1.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = new JexlFeatures();
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.sideEffectGlobal(false);
      jexlBuilder1.features();
      ;
}
 @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.newInstance(false);
      jexlBuilder1.features();
      ;
}
 @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.newInstance(false);
      jexlBuilder1.features();
      assertEquals(0, jexlBuilder1.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.newInstance(false);
      jexlBuilder1.features();
      assertEquals(0, jexlBuilder1.cache());
}
 @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.newInstance(false);
      jexlBuilder1.features();
      assertTrue(jexlBuilder1.collectAll());
}
 @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.newInstance(false);
      jexlBuilder1.features();
      assertFalse(jexlBuilder1.lexical());
}
 @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.lambda(false);
      jexlBuilder0.features();
      ;
}
 @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.lambda(false);
      jexlBuilder0.features();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.lambda(false);
      jexlBuilder0.features();
      assertTrue(jexlBuilder0.lexical());
}
 @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.lambda(false);
      jexlBuilder0.features();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlBuilder0.features(jexlFeatures0);
      jexlFeatures0.lambda(false);
      jexlBuilder0.features();
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlFeatures0.script(false);
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlBuilder1.features();
      ;
}
 @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlFeatures0.script(false);
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlBuilder1.features();
      assertEquals(1, jexlBuilder1.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlFeatures0.script(false);
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlBuilder1.features();
      assertEquals(0, jexlBuilder1.cache());
}
 @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlFeatures0.script(false);
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlBuilder1.features();
      assertTrue(jexlBuilder1.collectAll());
}
 @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlFeatures0.script(false);
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlBuilder1.features();
      ;
}
 @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlFeatures0.arrayReferenceExpr(false);
      jexlBuilder0.features(jexlFeatures0);
      jexlBuilder0.features();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlFeatures0.arrayReferenceExpr(false);
      jexlBuilder0.features(jexlFeatures0);
      jexlBuilder0.features();
      ;
}
 @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlFeatures0.arrayReferenceExpr(false);
      jexlBuilder0.features(jexlFeatures0);
      jexlBuilder0.features();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlFeatures0.arrayReferenceExpr(false);
      jexlBuilder0.features(jexlFeatures0);
      jexlBuilder0.features();
      assertTrue(jexlBuilder0.lexical());
}
 @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlFeatures0.arrayReferenceExpr(false);
      jexlBuilder0.features(jexlFeatures0);
      jexlBuilder0.features();
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlFeatures0.lexicalShade(true);
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlBuilder1.features();
      assertTrue(jexlBuilder0.lexical());
}
 @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlFeatures0.lexicalShade(true);
      JexlBuilder jexlBuilder1 = jexlBuilder0.features(jexlFeatures0);
      jexlBuilder1.features();
      ;
}
 @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      jexlBuilder0.debug(true);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-696));
      jexlBuilder0.debug(true);
      assertEquals(0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade(true);
      jexlBuilder0.debug(false);
      assertFalse(jexlBuilder0.lexicalShade());
}
 @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode((-177));
      jexlBuilder1.debug(false);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode((-177));
      jexlBuilder1.debug(false);
      ;
}
 @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      jexlBuilder0.debug(false);
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      jexlBuilder1.debug(false);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      jexlBuilder1.debug(false);
      assertEquals(jexlBuilder1, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(Integer.MAX_VALUE);
      jexlBuilder0.debug(false);
      ;
}
 @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.debug(false);
      ;
}
 @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.debug(false);
      ;
}
 @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug(false);
      Boolean boolean0 = jexlBuilder0.debug();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug(false);
      Boolean boolean0 = jexlBuilder0.debug();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug(false);
      Boolean boolean0 = jexlBuilder0.debug();
      ;
}
 @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug(false);
      Boolean boolean0 = jexlBuilder0.debug();
      ;
}
 @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug(false);
      Boolean boolean0 = jexlBuilder0.debug();
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      jexlBuilder0.collectMode((-3911));
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-303));
      jexlBuilder0.collectMode(14);
      assertEquals(1, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      jexlBuilder1.collectMode(0);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      jexlBuilder1.collectMode(0);
      assertEquals(1, jexlBuilder1.collectMode());
}
 @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(25);
      jexlBuilder0.collectMode(14);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.collectMode(806);
      ;
}
 @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.collectMode(806);
      ;
}
 @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      int int0 = jexlBuilder0.collectMode();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-558));
      int int0 = jexlBuilder0.collectMode();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      jexlBuilder0.collectAll(true);
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-1));
      jexlBuilder0.collectAll(true);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade(true);
      jexlBuilder0.collectAll(true);
      assertTrue(jexlBuilder0.lexical());
}
 @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      jexlBuilder1.collectAll(false);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      jexlBuilder1.collectAll(false);
      assertEquals(0, jexlBuilder1.collectMode());
}
 @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(1243);
      jexlBuilder1.collectAll(true);
      ;
}
 @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.antish(false);
      jexlBuilder0.collectAll(false);
      assertFalse(jexlBuilder0.antish());
}
 @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.stackOverflow(0);
      Charset charset0 = Charset.defaultCharset();
      jexlBuilder1.charset(charset0);
      ;
}
 @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-303));
      Charset charset0 = Charset.defaultCharset();
      jexlBuilder0.charset(charset0);
      ;
}
 @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade(true);
      Charset charset0 = Charset.defaultCharset();
      jexlBuilder0.charset(charset0);
      assertTrue(jexlBuilder0.lexicalShade());
}
 @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode((-1138));
      JexlEngine jexlEngine0 = jexlBuilder0.create();
      Charset charset0 = jexlEngine0.getCharset();
      jexlBuilder1.charset(charset0);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Charset charset0 = Charset.defaultCharset();
      jexlBuilder0.collectAll(false);
      jexlBuilder0.charset(charset0);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      Charset charset0 = Charset.defaultCharset();
      jexlBuilder1.charset(charset0);
      ;
}
 @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      Charset charset0 = Charset.defaultCharset();
      jexlBuilder1.charset(charset0);
      ;
}
 @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(654);
      jexlBuilder1.charset((Charset) null);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(654);
      jexlBuilder1.charset((Charset) null);
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Charset charset0 = Charset.defaultCharset();
      jexlBuilder0.antish(false);
      jexlBuilder0.charset(charset0);
      assertTrue(jexlBuilder0.antish());
}
 @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.charset((Charset) null);
      jexlBuilder1.charset();
      ;
}
 @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.charset((Charset) null);
      jexlBuilder1.charset();
      ;
}
 @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.charset((Charset) null);
      jexlBuilder1.charset();
      assertEquals(1, jexlBuilder1.cache());
}
 @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.charset((Charset) null);
      jexlBuilder1.charset();
      assertTrue(jexlBuilder1.collectAll());
}
 @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      jexlBuilder0.cancellable(true);
      assertEquals(0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-303));
      jexlBuilder0.cancellable(true);
      assertEquals(0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade(true);
      jexlBuilder0.cancellable(true);
      assertTrue(jexlBuilder0.lexical());
}
 @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-303));
      jexlBuilder0.cancellable(true);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      jexlBuilder0.cancellable(false);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(0);
      jexlBuilder0.cancellable(true);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(4095);
      jexlBuilder1.cancellable(false);
      ;
}
 @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(4095);
      jexlBuilder1.cancellable(false);
      ;
}
 @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.antish(false);
      jexlBuilder0.cancellable(false);
      assertFalse(jexlBuilder0.antish());
}
 @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cancellable(false);
      Boolean boolean0 = jexlBuilder1.cancellable();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cancellable(false);
      Boolean boolean0 = jexlBuilder1.cancellable();
      ;
}
 @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cancellable(false);
      Boolean boolean0 = jexlBuilder1.cancellable();
      assertEquals(1, jexlBuilder1.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cancellable(false);
      Boolean boolean0 = jexlBuilder1.cancellable();
      assertFalse(jexlBuilder1.collectAll());
}
 @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cancellable(false);
      Boolean boolean0 = jexlBuilder1.cancellable();
      assertEquals(0, jexlBuilder1.cache());
}
 @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.stackOverflow(0);
      jexlBuilder1.cacheThreshold((-5169));
      ;
}
 @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-696));
      jexlBuilder0.cacheThreshold(6);
      assertEquals(0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      jexlBuilder1.cacheThreshold(14);
      assertEquals(1, jexlBuilder1.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-515));
      jexlBuilder0.cacheThreshold(14);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      jexlBuilder0.cacheThreshold(10);
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      jexlBuilder1.cacheThreshold((-3659));
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      jexlBuilder1.cacheThreshold((-3659));
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(25);
      jexlBuilder0.cacheThreshold(14);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.cacheThreshold(10);
      ;
}
 @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.antish(false);
      jexlBuilder1.cacheThreshold(10);
      ;
}
 @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      jexlBuilder0.cache((-484));
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-303));
      jexlBuilder0.cache(25);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade(true);
      jexlBuilder0.cache(25);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-303));
      jexlBuilder0.cache((-303));
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode(0);
      jexlBuilder0.cache(0);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode(0);
      jexlBuilder0.cache(0);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.antish(false);
      jexlBuilder0.cache((-4717));
      ;
}
 @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(0);
      int int0 = jexlBuilder0.cache();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(Integer.MAX_VALUE);
      int int0 = jexlBuilder1.cache();
      assertEquals(jexlBuilder0, int0);
}
 @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.stackOverflow(0);
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(true);
      jexlBuilder1.arithmetic(jexlArithmetic0);
      ;
}
 @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-2));
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(true);
      jexlBuilder0.arithmetic(jexlArithmetic0);
      assertEquals(0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      MathContext mathContext0 = MathContext.DECIMAL32;
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(true, mathContext0, (-697));
      jexlBuilder1.arithmetic(jexlArithmetic0);
      ;
}
 @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      MathContext mathContext0 = MathContext.DECIMAL32;
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(true, mathContext0, (-697));
      jexlBuilder1.arithmetic(jexlArithmetic0);
      ;
}
 @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectMode((-1138));
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(true);
      jexlBuilder1.arithmetic(jexlArithmetic0);
      ;
}
 @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false);
      jexlBuilder0.collectAll(false);
      jexlBuilder0.arithmetic(jexlArithmetic0);
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      MathContext mathContext0 = MathContext.UNLIMITED;
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false, mathContext0, 37);
      jexlBuilder1.arithmetic(jexlArithmetic0);
      ;
}
 @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(0);
      MathContext mathContext0 = MathContext.UNLIMITED;
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false, mathContext0, 37);
      jexlBuilder1.arithmetic(jexlArithmetic0);
      ;
}
 @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cache(1243);
      MathContext mathContext0 = MathContext.DECIMAL64;
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false, mathContext0, 1243);
      jexlBuilder1.arithmetic(jexlArithmetic0);
      ;
}
 @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlEngine jexlEngine0 = jexlBuilder0.create();
      jexlBuilder0.antish(false);
      JexlArithmetic jexlArithmetic0 = jexlEngine0.getArithmetic();
      jexlBuilder0.arithmetic(jexlArithmetic0);
      assertTrue(jexlBuilder0.antish());
}
 @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlEngine jexlEngine0 = jexlBuilder0.create();
      JexlArithmetic jexlArithmetic0 = jexlEngine0.getArithmetic();
      jexlBuilder0.arithmetic(jexlArithmetic0);
      jexlBuilder0.arithmetic();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlEngine jexlEngine0 = jexlBuilder0.create();
      JexlArithmetic jexlArithmetic0 = jexlEngine0.getArithmetic();
      jexlBuilder0.arithmetic(jexlArithmetic0);
      jexlBuilder0.arithmetic();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlEngine jexlEngine0 = jexlBuilder0.create();
      JexlArithmetic jexlArithmetic0 = jexlEngine0.getArithmetic();
      jexlBuilder0.arithmetic(jexlArithmetic0);
      jexlBuilder0.arithmetic();
      ;
}
 @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlEngine jexlEngine0 = jexlBuilder0.create();
      JexlArithmetic jexlArithmetic0 = jexlEngine0.getArithmetic();
      jexlBuilder0.arithmetic(jexlArithmetic0);
      jexlBuilder0.arithmetic();
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      MathContext mathContext0 = MathContext.DECIMAL64;
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false, mathContext0, 1243);
      jexlBuilder0.arithmetic(jexlArithmetic0);
      jexlBuilder0.arithmetic();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      MathContext mathContext0 = MathContext.DECIMAL64;
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false, mathContext0, 1243);
      jexlBuilder0.arithmetic(jexlArithmetic0);
      jexlBuilder0.arithmetic();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      MathContext mathContext0 = MathContext.DECIMAL64;
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false, mathContext0, 1243);
      jexlBuilder0.arithmetic(jexlArithmetic0);
      jexlBuilder0.arithmetic();
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      MathContext mathContext0 = MathContext.DECIMAL64;
      JexlArithmetic jexlArithmetic0 = new JexlArithmetic(false, mathContext0, 1243);
      jexlBuilder0.arithmetic(jexlArithmetic0);
      jexlBuilder0.arithmetic();
      ;
}
 @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow(0);
      jexlBuilder0.antish(true);
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.stackOverflow((-303));
      jexlBuilder0.antish(true);
      assertEquals(0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      jexlBuilder1.antish(true);
      ;
}
 @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.lexicalShade(true);
      jexlBuilder1.antish(true);
      ;
}
 @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-303));
      jexlBuilder0.antish(true);
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.collectAll(false);
      jexlBuilder1.antish(false);
      ;
}
 @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(0);
      jexlBuilder0.antish(true);
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cache(1243);
      jexlBuilder0.antish(true);
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      // Undeclared exception!
      try { 
        jexlBuilder0.arithmetic((JexlArithmetic) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.JexlBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.loader();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.loader();
      ;
}
 @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.loader();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.loader();
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.cache();
      ;
}
 @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.cache();
      ;
}
 @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.cache();
      ;
}
 @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.cache();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.cacheThreshold();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.cacheThreshold();
      ;
}
 @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.cacheThreshold();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.cacheThreshold();
      assertFalse(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.features();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.features();
      ;
}
 @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.features();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.features();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.collectMode();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.collectMode();
      ;
}
 @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.collectMode();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.collectMode();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.strategy();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.strategy();
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.strategy();
      ;
}
 @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.strategy();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.logger();
      ;
}
 @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.logger();
      assertFalse(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.logger();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.logger();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.stackOverflow();
      assertEquals(jexlBuilder0, int0);
}
 @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.stackOverflow();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.stackOverflow();
      assertFalse(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      int int0 = jexlBuilder0.stackOverflow();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.uberspect();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.uberspect();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.uberspect();
      ;
}
 @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.uberspect();
      assertFalse(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.sandbox();
      ;
}
 @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.sandbox();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.sandbox();
      ;
}
 @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.sandbox();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectMode((-13));
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      jexlBuilder0.loader(classLoader0);
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug();
      ;
}
 @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug();
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.arithmetic();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.arithmetic();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.arithmetic();
      ;
}
 @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.arithmetic();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cancellable();
      ;
}
 @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cancellable();
      ;
}
 @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cancellable();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.cancellable();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      boolean boolean0 = jexlBuilder0.collectAll();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      boolean boolean0 = jexlBuilder0.collectAll();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      boolean boolean0 = jexlBuilder0.collectAll();
      ;
}
 @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      boolean boolean0 = jexlBuilder0.collectAll();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlFeatures jexlFeatures0 = JexlEngine.DEFAULT_FEATURES;
      jexlFeatures0.lexicalShade(true);
      jexlBuilder0.features(jexlFeatures0);
      jexlBuilder0.collectMode(14);
      assertTrue(jexlBuilder0.lexical());
}
 @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cancellable(true);
      Boolean boolean0 = jexlBuilder1.cancellable();
      assertEquals(1, jexlBuilder1.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cancellable(true);
      Boolean boolean0 = jexlBuilder1.cancellable();
      ;
}
 @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cancellable(true);
      Boolean boolean0 = jexlBuilder1.cancellable();
      assertEquals(0, jexlBuilder1.cache());
}
 @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cancellable(true);
      Boolean boolean0 = jexlBuilder1.cancellable();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlBuilder jexlBuilder1 = jexlBuilder0.cancellable(true);
      Boolean boolean0 = jexlBuilder1.cancellable();
      assertEquals(0, jexlBuilder1.collectMode());
}
 @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug(true);
      Boolean boolean0 = jexlBuilder0.debug();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug(true);
      Boolean boolean0 = jexlBuilder0.debug();
      ;
}
 @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug(true);
      Boolean boolean0 = jexlBuilder0.debug();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug(true);
      Boolean boolean0 = jexlBuilder0.debug();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.debug(true);
      Boolean boolean0 = jexlBuilder0.debug();
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.antish();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.antish();
      ;
}
 @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.antish();
      assertEquals(1, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.antish();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlSandbox jexlSandbox0 = new JexlSandbox();
      jexlBuilder0.sandbox(jexlSandbox0);
      jexlBuilder0.sandbox();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlSandbox jexlSandbox0 = new JexlSandbox();
      jexlBuilder0.sandbox(jexlSandbox0);
      jexlBuilder0.sandbox();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlSandbox jexlSandbox0 = new JexlSandbox();
      jexlBuilder0.sandbox(jexlSandbox0);
      jexlBuilder0.sandbox();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlSandbox jexlSandbox0 = new JexlSandbox();
      jexlBuilder0.sandbox(jexlSandbox0);
      jexlBuilder0.sandbox();
      ;
}
 @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.antish(false);
      boolean boolean0 = jexlBuilder0.antish();
      assertFalse(boolean0);
}
 @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.strict();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.strict();
      ;
}
 @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.strict();
      assertTrue(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.strict();
      ;
}
 @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade();
      ;
}
 @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade();
      assertEquals(1, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexicalShade();
      assertFalse(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      boolean boolean0 = jexlBuilder0.collectAll();
      ;
}
 @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.collectAll(false);
      boolean boolean0 = jexlBuilder0.collectAll();
      ;
}
 @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.silent();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.silent();
      ;
}
 @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.silent();
      assertFalse(jexlBuilder0.collectAll());
}
 @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.silent();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.safe();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.safe();
      ;
}
 @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.safe();
      ;
}
 @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.safe();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexical(true);
      boolean boolean0 = jexlBuilder0.lexical();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlEngine jexlEngine0 = jexlBuilder0.create();
      JexlUberspect jexlUberspect0 = jexlEngine0.getUberspect();
      jexlBuilder0.uberspect(jexlUberspect0);
      jexlBuilder0.uberspect();
      assertEquals(1, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlEngine jexlEngine0 = jexlBuilder0.create();
      JexlUberspect jexlUberspect0 = jexlEngine0.getUberspect();
      jexlBuilder0.uberspect(jexlUberspect0);
      jexlBuilder0.uberspect();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlEngine jexlEngine0 = jexlBuilder0.create();
      JexlUberspect jexlUberspect0 = jexlEngine0.getUberspect();
      jexlBuilder0.uberspect(jexlUberspect0);
      jexlBuilder0.uberspect();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlEngine jexlEngine0 = jexlBuilder0.create();
      JexlUberspect jexlUberspect0 = jexlEngine0.getUberspect();
      jexlBuilder0.uberspect(jexlUberspect0);
      jexlBuilder0.uberspect();
      assertEquals(jexlBuilder0, jexlBuilder0.stackOverflow());
}
 @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexical();
      ;
}
 @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexical();
      assertEquals(0, jexlBuilder0.cacheThreshold());
}
 @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexical();
      assertEquals(0, jexlBuilder0.collectMode());
}
 @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.lexical();
      assertEquals(0, jexlBuilder0.cache());
}
 @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      jexlBuilder0.safe(false);
      jexlBuilder0.options();
      assertFalse(jexlBuilder0.safe());
}
