 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException(true, 2282, 2282, 10, "_", 0, 0);
      String string0 = tokenMgrException0.getMessage();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException(true, 2282, 2282, 10, "_", 0, 0);
      int int0 = tokenMgrException0.getLine();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException(true, 0, (-1356), 0, "", 74, 0);
      int int0 = tokenMgrException0.getLine();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException((String) null, 1);
      int int0 = tokenMgrException0.getErrorCode();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException(false, 0, 0, 0, "0@<itq'0;LBUEco", 0, (-2394));
      int int0 = tokenMgrException0.getErrorCode();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException(true, 2282, 2282, 10, "_", 0, 0);
      int int0 = tokenMgrException0.getColumn();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException(true, (-1738), (-1), (-1738), "cY2P E4N$ %#", (-1), (-1738));
      int int0 = tokenMgrException0.getColumn();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException("*{_3;>!5", (-1));
      String string0 = tokenMgrException0.getAfter();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException(true, 0, 0, 0, ";x=B~L//\"f+10", 0, 0);
      String string0 = tokenMgrException0.getAfter();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      String string0 = TokenMgrException.addEscapes("");
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrException.addEscapes((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.TokenMgrException", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = TokenMgrException.addEscapes("2j/V.]qch~aFQOm&fgy");
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = TokenMgrException.addEscapes("FXyY'|k9H)ip#");
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = TokenMgrException.addEscapes("Lexical error at line 0, column 0.  Encountered: \"\" (0), after : null");
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException("", (-9));
      String string0 = tokenMgrException0.getMessage();
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException(true, 0, 0, 0, "", 0, 0);
      int int0 = tokenMgrException0.getColumn();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException(true, 0, 0, 0, "", 0, 0);
      String string0 = tokenMgrException0.getAfter();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException(true, 0, 0, 0, "", 0, 0);
      int int0 = tokenMgrException0.getErrorCode();
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TokenMgrException tokenMgrException0 = new TokenMgrException("", (-9));
      int int0 = tokenMgrException0.getLine();
      assertEquals(0, int0);
}
