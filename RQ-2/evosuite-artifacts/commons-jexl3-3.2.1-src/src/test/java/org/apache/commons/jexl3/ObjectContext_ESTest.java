/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 18:11:41 GMT 2022
 */

package org.apache.commons.jexl3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jexl3.JexlEngine;
import org.apache.commons.jexl3.ObjectContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectContext_ESTest extends ObjectContext_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ObjectContext<Object> objectContext0 = new ObjectContext<Object>((JexlEngine) null, "/o5RD[|:PO(uq");
      Object object0 = objectContext0.resolveNamespace("");
      assertNotNull(object0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer((-726));
      ObjectContext<Object> objectContext0 = new ObjectContext<Object>((JexlEngine) null, integer0);
      Object object0 = objectContext0.getObject();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ObjectContext<String> objectContext0 = new ObjectContext<String>((JexlEngine) null, "org.apache.commons.jexl3.ObjectContext");
      // Undeclared exception!
      try { 
        objectContext0.set("/o5RD[|:PO(uq", "/o5RD[|:PO(uq");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.ObjectContext", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer((-726));
      ObjectContext<Object> objectContext0 = new ObjectContext<Object>((JexlEngine) null, integer0);
      // Undeclared exception!
      try { 
        objectContext0.has("=#1");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.ObjectContext", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ObjectContext<Object> objectContext0 = new ObjectContext<Object>((JexlEngine) null, (Object) null);
      // Undeclared exception!
      try { 
        objectContext0.get("org.apache.commons.jexl3.parser.SimpleNode");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.ObjectContext", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ObjectContext<Object> objectContext0 = new ObjectContext<Object>((JexlEngine) null, (Object) null);
      Object object0 = objectContext0.resolveNamespace("");
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ObjectContext<String> objectContext0 = new ObjectContext<String>((JexlEngine) null, (String) null);
      Object object0 = objectContext0.resolveNamespace("_");
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ObjectContext<Object> objectContext0 = new ObjectContext<Object>((JexlEngine) null, (Object) null);
      Object object0 = objectContext0.resolveNamespace((String) null);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ObjectContext<Object> objectContext0 = new ObjectContext<Object>((JexlEngine) null, (Object) null);
      Object object0 = objectContext0.getObject();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ObjectContext<Object> objectContext0 = new ObjectContext<Object>((JexlEngine) null, (Object) null);
      JexlEngine jexlEngine0 = objectContext0.getJexl();
      ;
}
}
