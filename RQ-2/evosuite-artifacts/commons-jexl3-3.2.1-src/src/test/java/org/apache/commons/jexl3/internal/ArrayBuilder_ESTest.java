/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 17:58:15 GMT 2022
 */

package org.apache.commons.jexl3.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.apache.commons.jexl3.internal.ArrayBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArrayBuilder_ESTest extends ArrayBuilder_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(0);
      arrayBuilder0.added = 239;
      // Undeclared exception!
      try { 
        arrayBuilder0.add("h,Y)nEB");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // add() over size
         //
         verifyException("org.apache.commons.jexl3.internal.ArrayBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(55);
      arrayBuilder0.isNumber = false;
      Double double0 = new Double(55);
      arrayBuilder0.add(double0);
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<?> class0 = ArrayBuilder.unboxingClass((Class<?>) null);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(2330);
      arrayBuilder0.added = 2330;
      Class<String> class0 = String.class;
      Class<Integer> class1 = Integer.class;
      arrayBuilder0.commonClass = class1;
      arrayBuilder0.commonClass = class0;
      arrayBuilder0.create(false);
      arrayBuilder0.create(false);
      arrayBuilder0.create(false);
      arrayBuilder0.create(false);
      // Undeclared exception!
      arrayBuilder0.create(false);
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(1824);
      arrayBuilder0.add(class0);
      arrayBuilder0.added = (-2547);
      // Undeclared exception!
      try { 
        arrayBuilder0.create(false);
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(0);
      arrayBuilder0.added = 0;
      arrayBuilder0.added = 0;
      arrayBuilder0.added = 31;
      // Undeclared exception!
      try { 
        arrayBuilder0.create(true);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 31
         //
         verifyException("java.util.SubList", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(60);
      arrayBuilder0.added = (-3464);
      // Undeclared exception!
      try { 
        arrayBuilder0.create(true);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -3464
         //
         verifyException("java.util.ArrayList", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(0);
      Class<Float> class0 = Float.class;
      arrayBuilder0.commonClass = class0;
      arrayBuilder0.added = 2330;
      // Undeclared exception!
      try { 
        arrayBuilder0.create(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.jexl3.internal.ArrayBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(0);
      arrayBuilder0.added = (-2283);
      Float float0 = new Float((double) 0);
      // Undeclared exception!
      try { 
        arrayBuilder0.add(float0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2283
         //
         verifyException("org.apache.commons.jexl3.internal.ArrayBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = null;
      try {
        arrayBuilder0 = new ArrayBuilder((-2991));
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.ArrayBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(2339);
      Class<Double> class0 = Double.class;
      arrayBuilder0.commonClass = class0;
      arrayBuilder0.add((Object) null);
      Object object0 = arrayBuilder0.create(false);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(1162);
      Object object0 = arrayBuilder0.create(false);
      arrayBuilder0.add(object0);
      Class<?> class0 = ArrayBuilder.unboxingClass(arrayBuilder0.commonClass);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(1162);
      Object object0 = arrayBuilder0.create(false);
      arrayBuilder0.add(object0);
      Class<?> class0 = ArrayBuilder.unboxingClass(arrayBuilder0.commonClass);
      arrayBuilder0.add(class0);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(1162);
      Object object0 = arrayBuilder0.create(false);
      arrayBuilder0.add(object0);
      Class<?> class0 = ArrayBuilder.unboxingClass(arrayBuilder0.commonClass);
      arrayBuilder0.add(class0);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(2339);
      ArrayList arrayList0 = (ArrayList)arrayBuilder0.create(true);
      assertTrue(arrayList0.isEmpty());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(5);
      Class<Byte> class0 = Byte.TYPE;
      arrayBuilder0.commonClass = class0;
      arrayBuilder0.add(arrayBuilder0.commonClass);
      Object object0 = arrayBuilder0.create(false);
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(1488);
      Class<Integer> class0 = Integer.TYPE;
      arrayBuilder0.add(class0);
      arrayBuilder0.add(class0);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(2339);
      Class<Double> class0 = Double.class;
      arrayBuilder0.commonClass = class0;
      Float float0 = new Float((float) 2339);
      arrayBuilder0.add(float0);
      arrayBuilder0.add((Object) null);
      arrayBuilder0.add(float0);
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(2916);
      Class<Object> class0 = Object.class;
      arrayBuilder0.commonClass = class0;
      arrayBuilder0.add((Object) null);
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Class<?> class1 = ArrayBuilder.unboxingClass(class0);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArrayBuilder arrayBuilder0 = new ArrayBuilder(0);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        arrayBuilder0.add(integer0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // add() over size
         //
         verifyException("org.apache.commons.jexl3.internal.ArrayBuilder", e);
      }
  }
}
