/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 17:50:50 GMT 2022
 */

package org.apache.commons.jexl3.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jexl3.parser.NumberParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NumberParser_ESTest extends NumberParser_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberParser.parseInteger("0~cb");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
         //
         // For input string: \"~cb\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberParser.parseDouble("jH-e-snN");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Number number0 = NumberParser.parseDouble("4D");
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Number number0 = NumberParser.parseInteger("-6");
      assertEquals(1, number0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Number number0 = NumberParser.parseInteger("0");
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Number number0 = NumberParser.parseDouble("0");
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Number number0 = NumberParser.parseDouble("-6");
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      numberParser0.setNatural("0");
      boolean boolean0 = numberParser0.isInteger();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      Number number0 = numberParser0.getLiteralValue();
      assertNotNull(number0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      numberParser0.setNatural("0");
      Number number0 = numberParser0.getLiteralValue();
      assertEquals(1, number0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      numberParser0.setReal("6");
      Number number0 = numberParser0.getLiteralValue();
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      numberParser0.setNatural("6");
      Class<? extends Number> class0 = numberParser0.getLiteralClass();
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      // Undeclared exception!
      try { 
        numberParser0.setReal("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      // Undeclared exception!
      try { 
        numberParser0.setReal((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.NumberParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      // Undeclared exception!
      try { 
        numberParser0.setNatural("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      // Undeclared exception!
      try { 
        numberParser0.setNatural("Iw+o");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
         //
         // Illegal embedded sign character
         //
         verifyException("java.math.BigInteger", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      // Undeclared exception!
      try { 
        numberParser0.setNatural((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.NumberParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberParser.parseInteger("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberParser.parseInteger((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.NumberParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberParser.parseDouble((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.NumberParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      // Undeclared exception!
      try { 
        numberParser0.setReal("f");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      // Undeclared exception!
      try { 
        numberParser0.setReal("java.lang.Double@0000000002d");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberParser.parseDouble("MeF");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberParser.parseDouble("!qQB");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      numberParser0.setReal("NaN");
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberParser.parseInteger("+3@1T{ruKxYc8Bl");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
         //
         // For input string: \"+3@1T{ruKxYc8B\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberParser.parseInteger("Gh");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
         //
         // For input string: \"G\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Number number0 = NumberParser.parseInteger("0X88");
      assertEquals(1, number0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberParser.parseInteger("0.0b");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
         //
         // For input string: \".0b\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      numberParser0.setNatural("5L");
      String string0 = numberParser0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      numberParser0.setNatural("1H");
      String string0 = numberParser0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      numberParser0.setReal("6");
      String string0 = numberParser0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      numberParser0.setReal("0.0b");
      String string0 = numberParser0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      numberParser0.setNatural("0");
      String string0 = numberParser0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      numberParser0.setReal("#NaN");
      String string0 = numberParser0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      String string0 = numberParser0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Number number0 = NumberParser.parseInteger("0x0b");
      assertEquals(1, number0);
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberParser.parseDouble("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      boolean boolean0 = numberParser0.isInteger();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      NumberParser numberParser0 = new NumberParser();
      Class<? extends Number> class0 = numberParser0.getLiteralClass();
      ;
}
}
