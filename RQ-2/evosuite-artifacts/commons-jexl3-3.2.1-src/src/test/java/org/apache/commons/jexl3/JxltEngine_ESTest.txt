 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Engine engine0 = new Engine();
      TemplateEngine templateEngine0 = engine0.createJxltEngine(true, 0, 'P', 'P');
      JxltEngine.Template jxltEngine_Template0 = templateEngine0.createTemplate("'");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("'");
      Object[] objectArray0 = new Object[0];
      ObjectContext<String> objectContext0 = new ObjectContext<String>(engine0, "'");
      jxltEngine_Template0.evaluate((JexlContext) objectContext0, (Writer) mockPrintWriter0, objectArray0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine(true);
      JxltEngine.Template jxltEngine_Template0 = jxltEngine0.createTemplate("annotation", (String[]) null);
      ObjectContext<String> objectContext0 = new ObjectContext<String>(engine0, "H_Vx@*b ");
      JxltEngine.Template jxltEngine_Template1 = jxltEngine_Template0.prepare(objectContext0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine();
      String[] stringArray0 = new String[8];
      JxltEngine.Template jxltEngine_Template0 = jxltEngine0.createTemplate("Laa-t)+PUD", stringArray0);
      Set<List<String>> set0 = jxltEngine_Template0.getVariables();
      assertEquals(0, set0.size());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine(true);
      JxltEngine.Template jxltEngine_Template0 = jxltEngine0.createTemplate("annotation", (String[]) null);
      String[] stringArray0 = jxltEngine_Template0.getParameters();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine();
      JexlInfo jexlInfo0 = new JexlInfo();
      String[] stringArray0 = new String[9];
      JxltEngine.Template jxltEngine_Template0 = jxltEngine0.createTemplate(jexlInfo0, "rQK", stringArray0);
      // Undeclared exception!
      try { 
        jxltEngine_Template0.evaluate(engine0.EMPTY_CONTEXT, (Writer) null, (Object[]) stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Engine engine0 = new Engine();
      TemplateEngine templateEngine0 = engine0.createJxltEngine(true, 0, 'P', 'P');
      JxltEngine.Template jxltEngine_Template0 = templateEngine0.createTemplate("'");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("'");
      jxltEngine_Template0.evaluate(engine0.EMPTY_CONTEXT, (Writer) mockPrintWriter0);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine(false);
      JxltEngine.Template jxltEngine_Template0 = jxltEngine0.createTemplate("");
      String string0 = jxltEngine_Template0.asString();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine(true, 468, '&', '&');
      JexlInfo jexlInfo0 = engine0.createInfo();
      JxltEngine.Expression jxltEngine_Expression0 = jxltEngine0.createExpression(jexlInfo0, "GWgO_w@Z+~IWcz8q9");
      String string0 = jxltEngine_Expression0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine();
      JxltEngine.Expression jxltEngine_Expression0 = jxltEngine0.createExpression("$$");
      JxltEngine.Expression jxltEngine_Expression1 = jxltEngine_Expression0.prepare(engine0.EMPTY_CONTEXT);
      assertTrue(jxltEngine_Expression1.isImmediate());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine(true, 468, '&', '&');
      JexlInfo jexlInfo0 = engine0.createInfo();
      JxltEngine.Expression jxltEngine_Expression0 = jxltEngine0.createExpression(jexlInfo0, "GWgO_w@Z+~IWcz8q9");
      boolean boolean0 = jxltEngine_Expression0.isImmediate();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine();
      JexlInfo jexlInfo0 = engine0.createInfo("", 6, 2380);
      JxltEngine.Expression jxltEngine_Expression0 = jxltEngine0.createExpression(jexlInfo0, "");
      boolean boolean0 = jxltEngine_Expression0.isDeferred();
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine();
      JxltEngine.Expression jxltEngine_Expression0 = jxltEngine0.createExpression("$$");
      Set<List<String>> set0 = jxltEngine_Expression0.getVariables();
      assertEquals(0, set0.size());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Engine engine0 = new Engine(jexlBuilder0);
      JxltEngine jxltEngine0 = engine0.createJxltEngine();
      JxltEngine.Expression jxltEngine_Expression0 = jxltEngine0.createExpression("<null>.<?>(...)");
      JxltEngine.Expression jxltEngine_Expression1 = jxltEngine_Expression0.getSource();
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine(false);
      JxltEngine.Expression jxltEngine_Expression0 = jxltEngine0.createExpression("");
      Object object0 = jxltEngine_Expression0.evaluate(engine0.EMPTY_CONTEXT);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Engine engine0 = new Engine(jexlBuilder0);
      JxltEngine jxltEngine0 = engine0.createJxltEngine();
      JexlInfo jexlInfo0 = engine0.createInfo((String) null, 74, 74);
      JxltEngine.Expression jxltEngine_Expression0 = jxltEngine0.createExpression(jexlInfo0, "[TRACE] ");
      StringBuilder stringBuilder0 = new StringBuilder("org.apache.commons.jexl3.JxltEngine$Exception");
      StringBuilder stringBuilder1 = jxltEngine_Expression0.asString(stringBuilder0);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine();
      JexlInfo jexlInfo0 = engine0.createInfo("", 6, 2380);
      JxltEngine.Expression jxltEngine_Expression0 = jxltEngine0.createExpression(jexlInfo0, "");
      String string0 = jxltEngine_Expression0.asString();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Engine engine0 = new Engine();
      TemplateEngine templateEngine0 = engine0.createJxltEngine(false, 1, '\"', '\"');
      templateEngine0.clearCache();
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TemplateEngine templateEngine0 = new TemplateEngine((Engine) null, true, 733, 'N', 'M');
      JexlEngine jexlEngine0 = templateEngine0.getEngine();
      assertNotNull(jexlEngine0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine();
      JexlEngine jexlEngine0 = jxltEngine0.getEngine();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine();
      JexlInfo jexlInfo0 = engine0.createInfo();
      StringReader stringReader0 = new StringReader("CVvMCVf1@WEd8s{[T;");
      String[] stringArray0 = new String[6];
      JxltEngine.Template jxltEngine_Template0 = jxltEngine0.createTemplate(jexlInfo0, "CVvMCVf1@WEd8s{[T;", (Reader) stringReader0, stringArray0);
      assertNotNull(jxltEngine_Template0);
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine(false);
      JxltEngine.Template jxltEngine_Template0 = jxltEngine0.createTemplate((JexlInfo) null, ":Mg.zcJmql");
      assertNotNull(jxltEngine_Template0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine(true, 468, '&', '&');
      StringReader stringReader0 = new StringReader(";L94oZTwU");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 468);
      String[] stringArray0 = new String[3];
      JxltEngine.Template jxltEngine_Template0 = jxltEngine0.createTemplate(";L94oZTwU", (Reader) bufferedReader0, stringArray0);
      Map<String, Object> map0 = jxltEngine_Template0.getPragmas();
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TemplateEngine templateEngine0 = new TemplateEngine((Engine) null, true, (-596), 'H', 'T');
      JexlInfo jexlInfo0 = new JexlInfo("org.apache.commons.jexl3.JxltEngine$Exception", 1600, (-596));
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        templateEngine0.createTemplate(jexlInfo0, "org.apache.commons.jexl3.JxltEngine$Exception", stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.TemplateScript", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Engine engine0 = new Engine(jexlBuilder0);
      JxltEngine jxltEngine0 = engine0.createJxltEngine();
      StringReader stringReader0 = new StringReader("J5s/h@Sz.fqC5m^8L$");
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        jxltEngine0.createTemplate((JexlInfo) null, "", (Reader) stringReader0, stringArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // @1:18 ambiguous statement error in 'J5s/h@Sz.fqC5m^8L$'
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Engine engine0 = new Engine(jexlBuilder0);
      JxltEngine jxltEngine0 = engine0.createJxltEngine(true, (-1928), '', '');
      String[] stringArray0 = new String[1];
      JexlInfo jexlInfo0 = engine0.createInfo("", (-2292), 0);
      StringReader stringReader0 = new StringReader("^F0Yj`/%ha5<>}");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      // Undeclared exception!
      try { 
        jxltEngine0.createTemplate(jexlInfo0, "", (Reader) bufferedReader0, stringArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TemplateEngine templateEngine0 = new TemplateEngine((Engine) null, false, 0, ':', ':');
      JexlInfo jexlInfo0 = new JexlInfo();
      StringReader stringReader0 = new StringReader("");
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        templateEngine0.createTemplate(jexlInfo0, "^m'_of);CJm2K", (Reader) stringReader0, stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.TemplateScript", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Engine engine0 = new Engine();
      TemplateEngine templateEngine0 = engine0.createJxltEngine(false, 4550, 'k', 'B');
      JexlInfo jexlInfo0 = new JexlInfo("Z. 5,nFUw}^b\"", 4550, 4550);
      StringReader stringReader0 = new StringReader("-=");
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        templateEngine0.createTemplate(jexlInfo0, (String) null, (Reader) stringReader0, stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // null prefix
         //
         verifyException("org.apache.commons.jexl3.internal.TemplateScript", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Engine engine0 = new Engine();
      JexlInfo jexlInfo0 = engine0.createInfo();
      JxltEngine jxltEngine0 = engine0.createJxltEngine();
      // Undeclared exception!
      try { 
        jxltEngine0.createTemplate(jexlInfo0, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TemplateEngine templateEngine0 = new TemplateEngine((Engine) null, false, (-243), 'Y', 'Y');
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        templateEngine0.createTemplate("A-8P^J", stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.TemplateScript", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Engine engine0 = new Engine();
      TemplateEngine templateEngine0 = new TemplateEngine(engine0, false, (-3138), '9', 'Z');
      StringReader stringReader0 = new StringReader("@tI=p5YlPd<G/F_!");
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        templateEngine0.createTemplate("", (Reader) stringReader0, stringArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TemplateEngine templateEngine0 = new TemplateEngine((Engine) null, true, 104, '`', '`');
      String[] stringArray0 = new String[3];
      StringReader stringReader0 = new StringReader("r%GX");
      // Undeclared exception!
      try { 
        templateEngine0.createTemplate("r%GX", (Reader) stringReader0, stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.TemplateScript", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Engine engine0 = new Engine(jexlBuilder0);
      JxltEngine jxltEngine0 = engine0.createJxltEngine(false);
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        jxltEngine0.createTemplate("function", (Reader) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // null input
         //
         verifyException("org.apache.commons.jexl3.internal.TemplateScript", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      Engine engine0 = new Engine(jexlBuilder0);
      JxltEngine jxltEngine0 = engine0.createJxltEngine(true);
      // Undeclared exception!
      try { 
        jxltEngine0.createTemplate((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Engine engine0 = new Engine();
      TemplateEngine templateEngine0 = new TemplateEngine(engine0, true, 1904, '9', '@');
      // Undeclared exception!
      try { 
        templateEngine0.createExpression((JexlInfo) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.TemplateEngine", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Engine engine0 = new Engine();
      TemplateEngine templateEngine0 = engine0.createJxltEngine(true, (-2842), 'F', 'F');
      // Undeclared exception!
      try { 
        templateEngine0.createExpression((JexlInfo) null, "4gI");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal initial capacity: -2842
         //
         verifyException("java.util.HashMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine(true, 918, 'F', '4');
      // Undeclared exception!
      try { 
        jxltEngine0.createExpression((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.TemplateEngine", e);
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Engine engine0 = new Engine();
      TemplateEngine templateEngine0 = engine0.createJxltEngine(false, (-24), 'M', '{');
      // Undeclared exception!
      try { 
        templateEngine0.createExpression("0=xJV`j-co0ZpZRr'5");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal initial capacity: -24
         //
         verifyException("java.util.HashMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Engine engine0 = new Engine();
      JxltEngine jxltEngine0 = engine0.createJxltEngine();
      JexlInfo jexlInfo0 = new JexlInfo("z(${/", (-1), 1919);
      // Undeclared exception!
      try { 
        jxltEngine0.createTemplate(jexlInfo0, "z(${/");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // z(${/@1 exception error : malformed expression: z(${/
         //
         verifyException("org.apache.commons.jexl3.internal.TemplateEngine", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JexlInfo jexlInfo0 = new JexlInfo();
      JxltEngine.Exception jxltEngine_Exception0 = new JxltEngine.Exception(jexlInfo0, "", (Throwable) null);
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JexlBuilder jexlBuilder0 = new JexlBuilder();
      JexlEngine jexlEngine0 = jexlBuilder0.create();
      JxltEngine jxltEngine0 = jexlEngine0.createJxltEngine(true, 2309, ']', 'g');
      String[] stringArray0 = new String[0];
      StringReader stringReader0 = new StringReader("6k`a/");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 1340);
      // Undeclared exception!
      try { 
        jxltEngine0.createTemplate("", (Reader) bufferedReader0, stringArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
      }
  }
