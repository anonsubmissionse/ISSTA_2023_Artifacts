 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        BooleanGetExecutor.discover((Introspector) null, class0, "XQ%Wux8:PQ)-zD~Q2");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.introspection.PropertyGetExecutor", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Permissions permissions0 = Permissions.DEFAULT;
      Introspector introspector0 = new Introspector((Log) null, classLoader0, permissions0);
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        BooleanGetExecutor.discover(introspector0, class0, "</umA$");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.introspection.ClassMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Permissions permissions0 = new Permissions();
      Introspector introspector0 = new Introspector(jdk14Logger0, classLoader0, permissions0);
      Class<Object> class0 = Object.class;
      BooleanGetExecutor booleanGetExecutor0 = BooleanGetExecutor.discover(introspector0, class0, "");
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Permissions permissions0 = new Permissions();
      Introspector introspector0 = new Introspector(jdk14Logger0, classLoader0, permissions0);
      Class<Object> class0 = Object.class;
      BooleanGetExecutor booleanGetExecutor0 = BooleanGetExecutor.discover(introspector0, class0, "/");
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Permissions permissions0 = new Permissions();
      Introspector introspector0 = new Introspector(jdk14Logger0, classLoader0, permissions0);
      Class<Object> class0 = Object.class;
      BooleanGetExecutor booleanGetExecutor0 = BooleanGetExecutor.discover(introspector0, class0, (String) null);
      ;
}
