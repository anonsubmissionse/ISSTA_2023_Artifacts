 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      Class<Byte> class1 = Byte.class;
      boolean boolean0 = MethodKey.isInvocationConvertible(class0, class1, true);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Class<Double> class1 = Double.class;
      boolean boolean0 = MethodKey.isInvocationConvertible(class0, class1, true);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MethodKey methodKey0 = new MethodKey("", (Class<?>[]) null);
      String string0 = methodKey0.toString();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<?> class0 = MethodKey.primitiveClass((Class<?>) null);
      assertNotNull(class0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Void> class0 = Void.TYPE;
      Class<?> class1 = MethodKey.primitiveClass(class0);
      assertFalse(class1.isEnum());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      Class<?> class1 = MethodKey.primitiveClass(class0);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MethodKey methodKey0 = new MethodKey("", (Class<?>[]) null);
      Class<?>[] classArray0 = methodKey0.getParameters();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Class<Character>[] classArray0 = (Class<Character>[]) Array.newInstance(Class.class, 9);
      MethodKey methodKey0 = new MethodKey("org.apache.commons.jexl3.internal.introspection.MethodKey$Parameters", (Class<?>[]) classArray0);
      Method[] methodArray0 = new Method[0];
      Method method0 = methodKey0.getMostSpecificMethod(methodArray0);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MethodKey methodKey0 = new MethodKey("", (Class<?>[]) null);
      String string0 = methodKey0.getMethod();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Class<Void>[] classArray0 = (Class<Void>[]) Array.newInstance(Class.class, 4);
      MethodKey methodKey0 = new MethodKey("`>Q8Bta475(~", (Class<?>[]) classArray0);
      // Undeclared exception!
      try { 
        methodKey0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.introspection.MethodKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodKey.isInvocationConvertible((Class<?>) null, (Class<?>) null, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.introspection.MethodKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 8);
      MethodKey methodKey0 = new MethodKey("e#k&*ER", (Class<?>[]) classArray0);
      // Undeclared exception!
      try { 
        methodKey0.debugString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.introspection.MethodKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      MethodKey methodKey0 = null;
      try {
        methodKey0 = new MethodKey((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.introspection.MethodKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<Short>[] classArray0 = (Class<Short>[]) Array.newInstance(Class.class, 8);
      MethodKey methodKey0 = null;
      try {
        methodKey0 = new MethodKey((String) null, (Class<?>[]) classArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.introspection.MethodKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<Double> class0 = Double.class;
      Class<Integer> class1 = Integer.TYPE;
      boolean boolean0 = MethodKey.isStrictInvocationConvertible(class0, class1, true);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<Character> class0 = Character.class;
      Class<Character> class1 = Character.TYPE;
      boolean boolean0 = MethodKey.isStrictInvocationConvertible(class1, class0, false);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<Character> class0 = Character.class;
      Class<Character> class1 = Character.TYPE;
      boolean boolean0 = MethodKey.isInvocationConvertible(class1, class0, false);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Class<Double> class1 = Double.TYPE;
      boolean boolean0 = MethodKey.isInvocationConvertible(class0, class1, true);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Double> class0 = Double.class;
      boolean boolean0 = MethodKey.isStrictInvocationConvertible(class0, class0, false);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      boolean boolean0 = MethodKey.isStrictInvocationConvertible(class0, (Class<?>) null, false);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      boolean boolean0 = MethodKey.isStrictInvocationConvertible(class0, (Class<?>) null, false);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<Character>[] classArray0 = (Class<Character>[]) Array.newInstance(Class.class, 9);
      Class<Character> class0 = Character.TYPE;
      classArray0[4] = class0;
      MethodKey methodKey0 = new MethodKey("org.apache.commons.jexl3.internal.introspection.MethodKey$Parameters", (Class<?>[]) classArray0);
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      boolean boolean0 = MethodKey.isVarArgs((Method) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) ",d]}9{!M>";
      MethodKey methodKey0 = new MethodKey(",d]}9{!M>", objectArray0);
      String string0 = methodKey0.debugString();
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      MethodKey methodKey0 = new MethodKey("", objectArray0);
      String string0 = methodKey0.debugString();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      MethodKey methodKey0 = new MethodKey("M", objectArray0);
      String string0 = methodKey0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MethodKey methodKey0 = new MethodKey("#(", (Object[]) null);
      MethodKey methodKey1 = new MethodKey("$(", (Object[]) null);
      boolean boolean0 = methodKey0.equals(methodKey1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class<Boolean>[] classArray0 = (Class<Boolean>[]) Array.newInstance(Class.class, 8);
      MethodKey methodKey0 = new MethodKey(".v]2jq&^yg,88U8", (Class<?>[]) classArray0);
      boolean boolean0 = methodKey0.equals(methodKey0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      MethodKey methodKey0 = new MethodKey("", objectArray0);
      boolean boolean0 = methodKey0.equals("()");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Class<Method>[] classArray0 = (Class<Method>[]) Array.newInstance(Class.class, 0);
      MethodKey methodKey0 = new MethodKey("_SKri\"P61~", (Class<?>[]) classArray0);
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Object[] objectArray0 = new Object[10];
      MethodKey methodKey0 = new MethodKey("vax", objectArray0);
      Constructor<Long>[] constructorArray0 = (Constructor<Long>[]) Array.newInstance(Constructor.class, 26);
      // Undeclared exception!
      try { 
        methodKey0.getMostSpecificConstructor(constructorArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.introspection.MethodKey$2", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      MethodKey methodKey0 = new MethodKey("M", objectArray0);
      Class<?>[] classArray0 = methodKey0.getParameters();
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MethodKey methodKey0 = null;
      try {
        methodKey0 = new MethodKey((Constructor<?>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.introspection.MethodKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      MethodKey methodKey0 = new MethodKey("M", objectArray0);
      String string0 = methodKey0.getMethod();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MethodKey methodKey0 = null;
      try {
        methodKey0 = new MethodKey((Method) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.introspection.MethodKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Class<Character> class0 = Character.class;
      Class<Annotation> class1 = Annotation.class;
      boolean boolean0 = MethodKey.isInvocationConvertible(class0, class1, false);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Class<Character>[] classArray0 = (Class<Character>[]) Array.newInstance(Class.class, 9);
      MethodKey methodKey0 = new MethodKey("org.apache.commons.jexl3.internal.introspection.MethodKey$Parameters", (Class<?>[]) classArray0);
      methodKey0.hashCode();
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Class<Character>[] classArray0 = (Class<Character>[]) Array.newInstance(Class.class, 9);
      Class<Character> class0 = Character.class;
      // Undeclared exception!
      try { 
        MethodKey.isStrictInvocationConvertible(classArray0[0], class0, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.introspection.MethodKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      MethodKey methodKey0 = new MethodKey("M", objectArray0);
      Method[] methodArray0 = new Method[6];
      // Undeclared exception!
      try { 
        methodKey0.getMostSpecificMethod(methodArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.introspection.MethodKey$1", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      MethodKey methodKey0 = new MethodKey("", objectArray0);
      Constructor<Double>[] constructorArray0 = (Constructor<Double>[]) Array.newInstance(Constructor.class, 0);
      Constructor<?> constructor0 = methodKey0.getMostSpecificConstructor(constructorArray0);
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MethodKey.AmbiguousException methodKey_AmbiguousException0 = new MethodKey.AmbiguousException(false);
      boolean boolean0 = methodKey_AmbiguousException0.isSevere();
      assertTrue(boolean0);
}
