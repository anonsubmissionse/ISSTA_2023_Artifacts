 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Parser parser0 = new Parser("Oo>@0.7Irxb");
      parser0.loopCount = (-1718);
      // Undeclared exception!
      try { 
        parser0.LambdaLookahead();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Parser parser0 = new Parser("X");
      ASTVar aSTVar0 = new ASTVar(parser0, (-379));
      parser0.declareVariable(aSTVar0, parser0.jj_nt);
      parser0.declareVariable(aSTVar0, parser0.token);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Parser parser0 = new Parser("X");
      ASTVar aSTVar0 = new ASTVar(parser0, (-379));
      parser0.declareVariable(aSTVar0, parser0.jj_nt);
      parser0.declareVariable(aSTVar0, parser0.token);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = JexlParser.readSourceLine("", 0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = JexlParser.readSourceLine("", 0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Parser parser0 = new Parser("4IWP(,^xHH]QjzL~?r");
      parser0.getNextToken();
      parser0.Identifier(false);
      assertFalse(parser0.trace_enabled());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Parser parser0 = new Parser("aqGA");
      ASTBlock aSTBlock0 = new ASTBlock(parser0, 11);
      boolean boolean0 = aSTBlock0.hasSymbol(60);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      JexlLexicalNode jexlLexicalNode0 = new JexlLexicalNode((-395));
      int int0 = jexlLexicalNode0.getSymbolCount();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ASTForeachStatement aSTForeachStatement0 = new ASTForeachStatement(0);
      LexicalScope lexicalScope0 = aSTForeachStatement0.getLexicalScope();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("G0T7-f]aqGA>e");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringProvider0, (-477), (-477));
      ParserTokenManager parserTokenManager0 = new ParserTokenManager(simpleCharStream0);
      Parser parser0 = new Parser(parserTokenManager0);
      ASTJexlScript aSTJexlScript0 = new ASTJexlScript(parser0, 0);
      boolean boolean0 = aSTJexlScript0.declareSymbol(5);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Parser parser0 = new Parser("?s5m+rWvl");
      parser0.popFrame();
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Parser parser0 = new Parser("");
      ASTNullpNode aSTNullpNode0 = new ASTNullpNode(parser0, 1701);
      parser0.jjtreeOpenNodeScope(aSTNullpNode0);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Parser parser0 = new Parser("state");
      JexlFeatures jexlFeatures0 = new JexlFeatures();
      parser0.cleanup(jexlFeatures0);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = JexlParser.readSourceLine("", 46);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = JexlParser.readSourceLine("m&Gn", 1);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = JexlParser.readSourceLine("m&Gn", 1);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Parser parser0 = new Parser("Oo>@0.7Irxb");
      String[] stringArray0 = new String[9];
      Scope scope0 = new Scope((Scope) null, stringArray0);
      parser0.frame = scope0;
      boolean boolean0 = parser0.isVariable(stringArray0[5]);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Parser parser0 = new Parser("");
      boolean boolean0 = parser0.isVariable("x2TvHH<44o");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Parser parser0 = new Parser("");
      boolean boolean0 = parser0.isDeclaredNamespace(parser0.jj_nt, parser0.jj_nt);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":");
      StreamProvider streamProvider0 = new StreamProvider(stringReader0);
      Parser parser0 = new Parser(streamProvider0);
      JexlLexicalNode jexlLexicalNode0 = new JexlLexicalNode((-1577));
      parser0.pushUnit(jexlLexicalNode0);
      JexlLexicalNode jexlLexicalNode1 = (JexlLexicalNode)parser0.getUnit();
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Parser parser0 = new Parser("d^;YF`");
      parser0.DeclareVar();
      Scope scope0 = parser0.getFrame();
      assertEquals(0, scope0.getArgCount());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Parser parser0 = new Parser("7;<N0");
      JexlFeatures jexlFeatures0 = parser0.getFeatures();
      parser0.setFeatures(jexlFeatures0);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("jexl.namespace.");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringProvider0, 1255, 2387);
      ParserTokenManager parserTokenManager0 = new ParserTokenManager(simpleCharStream0);
      Parser parser0 = new Parser(parserTokenManager0);
      ASTVar aSTVar0 = new ASTVar(parser0, 864);
      String string0 = parser0.checkVariable(aSTVar0, (String) null);
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Parser parser0 = new Parser(":");
      ASTNamespaceIdentifier aSTNamespaceIdentifier0 = new ASTNamespaceIdentifier(11);
      String string0 = parser0.checkVariable(aSTNamespaceIdentifier0, ":");
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Parser parser0 = new Parser("aNtjRvmX");
      String string0 = parser0.checkVariable((ASTIdentifier) null, "");
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Parser parser0 = new Parser("aqGA");
      boolean boolean0 = parser0.allowVariable("xltO~%U/HCsJWa#Ab9");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Parser parser0 = new Parser("t");
      ASTVar aSTVar0 = new ASTVar((-1073741822));
      // Undeclared exception!
      try { 
        parser0.throwAmbiguousException(aSTVar0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        JexlParser.stringify((Iterable<String>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Parser parser0 = new Parser("ncTdcdjt_GuV[9eH\"");
      JexlLexicalNode jexlLexicalNode0 = new JexlLexicalNode(1660);
      // Undeclared exception!
      try { 
        parser0.jjtreeCloseNodeScope(jexlLexicalNode0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
         //
         // JexlLexicalNode : not supported yet.
         //
         verifyException("org.apache.commons.jexl3.parser.ParserVisitor", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        JexlParser.errorToken((Token[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Parser parser0 = new Parser("X");
      ASTVar aSTVar0 = new ASTVar(48);
      // Undeclared exception!
      try { 
        parser0.declareVariable(aSTVar0, (Token) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Parser parser0 = new Parser("Oo>@0.7Irxb");
      // Undeclared exception!
      try { 
        parser0.declarePragma((String) null, "Oo>@0.7Irxb");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Parser parser0 = new Parser("}|{B>=v1M8(>OzqvS");
      // Undeclared exception!
      try { 
        parser0.declareParameter(parser0.jj_nt);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Parser parser0 = new Parser("X");
      ASTVar aSTVar0 = new ASTVar(parser0, (-379));
      parser0.declareVariable(aSTVar0, parser0.jj_nt);
      // Undeclared exception!
      try { 
        parser0.checkVariable(aSTVar0, "X");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Inhal'?5U_");
      StreamProvider streamProvider0 = new StreamProvider(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(streamProvider0);
      ParserTokenManager parserTokenManager0 = new ParserTokenManager(simpleCharStream0, 1);
      Parser parser0 = new Parser(parserTokenManager0);
      // Undeclared exception!
      try { 
        parser0.Identifier(true);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Lexical error at line 1, column 11.  Encountered: <EOF> after : \"\\'?5U_\"
         //
         verifyException("org.apache.commons.jexl3.parser.ParserTokenManager", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Parser parser0 = new Parser("N.FbsoTakSn=");
      parser0.Identifier(true);
      try { 
        parser0.Identifier(true);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: .
         //
         verifyException("org.apache.commons.jexl3.parser.Parser", e);
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Parser parser0 = new Parser("1G3%%Th9K7_4.0)");
      parser0.token = null;
      // Undeclared exception!
      try { 
        parser0.Identifier(false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Parser parser0 = new Parser("org.apache.commons.jexl3.internal.LexicalScope");
      ASTSetAddNode aSTSetAddNode0 = new ASTSetAddNode(parser0, 308);
      // Undeclared exception!
      try { 
        parser0.jjtreeCloseNodeScope(aSTSetAddNode0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.SimpleNode", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("malformed expression: ");
      Parser parser0 = new Parser(stringProvider0);
      // Undeclared exception!
      try { 
        parser0.JexlScript((Scope) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Token[] tokenArray0 = new Token[3];
      Parser parser0 = new Parser("m&Gn");
      parser0.InclusiveOrExpression();
      Token token0 = parser0.jj_nt;
      tokenArray0[2] = token0;
      Token token1 = JexlParser.errorToken(tokenArray0);
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Parser parser0 = new Parser("vzJ[6\"vHjz@FI>j");
      Token[] tokenArray0 = new Token[3];
      tokenArray0[0] = parser0.token;
      Token token0 = JexlParser.errorToken(tokenArray0);
      assertEquals(tokenArray0, token0);
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Token[] tokenArray0 = new Token[3];
      Parser parser0 = new Parser("m&Gn");
      tokenArray0[2] = parser0.jj_nt;
      Token token0 = JexlParser.errorToken(tokenArray0);
      ;
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Parser parser0 = new Parser("1G3%%Th9K7_4.0)");
      Class<JexlException.Assignment> class0 = JexlException.Assignment.class;
      parser0.token = null;
      // Undeclared exception!
      try { 
        parser0.throwParsingException(class0, (Token) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // ?: parsing error in 'unrecoverable state'
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Parser parser0 = new Parser("1G3%%Th9K7_4.0)");
      Class<JexlException.Assignment> class0 = JexlException.Assignment.class;
      // Undeclared exception!
      try { 
        parser0.throwParsingException(class0, (Token) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Parser parser0 = new Parser("X");
      Class<JexlException.Assignment> class0 = JexlException.Assignment.class;
      // Undeclared exception!
      try { 
        parser0.throwParsingException(class0, parser0.jj_nt);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Parser parser0 = new Parser("vzJ[6\"vHjz@FI>j");
      parser0.token = null;
      // Undeclared exception!
      try { 
        parser0.throwFeatureException(1049, (Token) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // ?: parsing error in 'unsupported feature'
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.apache.commons.jexl3.parser.ASTForeachStatement");
      StreamProvider streamProvider0 = new StreamProvider(stringReader0);
      Parser parser0 = new Parser(streamProvider0);
      // Undeclared exception!
      try { 
        parser0.throwFeatureException((-2922), (Token) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Parser parser0 = new Parser("vzJ[6\"vHjz@FI>j");
      // Undeclared exception!
      try { 
        parser0.throwFeatureException(1049, parser0.jj_nt);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Parser parser0 = new Parser("1==Q+O;7fOl%");
      // Undeclared exception!
      try { 
        parser0.throwFeatureException((-350), (JexlInfo) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // ?: unsupported feature error in ''
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Parser parser0 = new Parser("jexl.namespace.");
      JexlInfo jexlInfo0 = new JexlInfo("jexl.namespace.", 1224, 0);
      JexlFeatures jexlFeatures0 = new JexlFeatures();
      Predicate<String> predicate0 = jexlFeatures0.TEST_STR_FALSE.negate();
      jexlFeatures0.namespaceTest(predicate0);
      ASTJexlScript aSTJexlScript0 = parser0.parse(jexlInfo0, jexlFeatures0, "xl.name", (Scope) null);
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Parser parser0 = new Parser("Ov=6");
      // Undeclared exception!
      try { 
        parser0.isDeclaredNamespace((Token) null, (Token) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Parser parser0 = new Parser("jexl.namespace.");
      parser0.declarePragma("jexl.namespace.", "jexl.namespace.");
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Parser parser0 = new Parser("jexl.namespace.J$6f");
      ASTSetAndNode aSTSetAndNode0 = new ASTSetAndNode((byte)110);
      parser0.declarePragma("jexl.namespace.J$6f", aSTSetAndNode0);
      parser0.ConditionalExpression();
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Parser parser0 = new Parser("Ji$8?I64f");
      Integer integer0 = new Integer((-1726));
      parser0.declarePragma("Ji$8?I64f", integer0);
      parser0.declarePragma("Ji$8?I64f", "Ji$8?I64f");
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Parser parser0 = new Parser("X");
      ASTVar aSTVar0 = new ASTVar(parser0, (-379));
      parser0.declareVariable(aSTVar0, parser0.jj_nt);
      parser0.pushFrame();
      parser0.DeclareVar();
      assertFalse(parser0.trace_enabled());
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Parser parser0 = new Parser("X");
      ASTVar aSTVar0 = new ASTVar(parser0, (-379));
      parser0.pushFrame();
      parser0.declareVariable(aSTVar0, parser0.jj_nt);
      ;
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Parser parser0 = new Parser("X");
      ASTVar aSTVar0 = new ASTVar(parser0, (-379));
      parser0.pushFrame();
      parser0.declareVariable(aSTVar0, parser0.jj_nt);
      ;
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Parser parser0 = new Parser("X");
      JexlLexicalNode jexlLexicalNode0 = new JexlLexicalNode((-1703));
      parser0.pushUnit(jexlLexicalNode0);
      ASTVar aSTVar0 = new ASTVar(parser0, (-379));
      parser0.declareVariable(aSTVar0, parser0.jj_nt);
      parser0.InclusiveOrExpression();
      ;
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Parser parser0 = new Parser("X");
      ASTVar aSTVar0 = new ASTVar((-1703));
      parser0.declareVariable(aSTVar0, parser0.jj_nt);
      parser0.pushFrame();
      parser0.InclusiveOrExpression();
      assertFalse(parser0.trace_enabled());
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Parser parser0 = new Parser("Oo>@0.7Irxb");
      String[] stringArray0 = new String[9];
      Scope scope0 = new Scope((Scope) null, stringArray0);
      parser0.frame = scope0;
      parser0.MultiplicativeExpression();
      ;
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Parser parser0 = new Parser("s9UYhY");
      ASTBlock aSTBlock0 = new ASTBlock(0);
      parser0.popUnit(aSTBlock0);
      ;
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Parser parser0 = new Parser("8G`E>rHxN#XBSvQq\"");
      ASTBlock aSTBlock0 = new ASTBlock(1369);
      parser0.pushUnit(aSTBlock0);
      try { 
        parser0.ForeachStatement();
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: 8
         //
         verifyException("org.apache.commons.jexl3.parser.Parser", e);
      }
  }
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Parser parser0 = new Parser("Oo>@0.7Irxb");
      String[] stringArray0 = new String[9];
      Scope scope0 = new Scope((Scope) null, stringArray0);
      parser0.frame = scope0;
      parser0.pushFrame();
      ASTJexlLambda aSTJexlLambda0 = new ASTJexlLambda(0);
      parser0.jjtreeCloseNodeScope(aSTJexlLambda0);
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Parser parser0 = new Parser("Ji$8?C'I64f");
      try { 
        parser0.Lambda();
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Parse error at line 1, column 5.  Encountered: ?
         //
         verifyException("org.apache.commons.jexl3.parser.Parser", e);
      }
  }
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String string0 = JexlParser.readSourceLine("Oo>@0.7Irxb", (-1726));
      ;
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("bv?\"4$;!-");
      Parser parser0 = new Parser(stringProvider0);
      JexlInfo jexlInfo0 = new JexlInfo();
      // Undeclared exception!
      try { 
        parser0.throwFeatureException((-309), jexlInfo0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // <evosuite>.<evosuite>:-1 unsupported feature error in ''
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      priorityQueue0.add("vzJ[6\"vHjz@4I>j");
      priorityQueue0.add("vzJ[6\"vHjz@4I>j");
      String string0 = JexlParser.stringify(priorityQueue0);
      ;
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      String string0 = JexlParser.stringify(priorityQueue0);
      ;
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Parser parser0 = new Parser("");
      JexlParser.LexicalUnit jexlParser_LexicalUnit0 = parser0.getUnit();
      assertNotNull(jexlParser_LexicalUnit0);
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Parser parser0 = new Parser("7;<N0");
      parser0.allowRegisters(true);
      JexlFeatures jexlFeatures0 = parser0.getFeatures();
      ;
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Parser parser0 = new Parser("unrecoverable state");
      JexlInfo jexlInfo0 = new JexlInfo("recoverable stat", 3381, 2400);
      JexlFeatures jexlFeatures0 = new JexlFeatures();
      // Undeclared exception!
      try { 
        parser0.parse(jexlInfo0, jexlFeatures0, "recoverable stat", (Scope) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // @1:13 ambiguous statement error in 'recoverable stat'
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("maformed exp=essYon:");
      Parser parser0 = new Parser(stringProvider0);
      Scope scope0 = parser0.getFrame();
      assertNotNull(scope0);
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("maformed exp=essYon:");
      Parser parser0 = new Parser(stringProvider0);
      // Undeclared exception!
      try { 
        parser0.JexlScript((Scope) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JexlParser", e);
      }
  }
