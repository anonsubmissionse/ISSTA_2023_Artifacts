/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 18:11:29 GMT 2022
 */

package org.apache.commons.jexl3.internal.introspection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jexl3.internal.introspection.Introspector;
import org.apache.commons.jexl3.internal.introspection.MapGetExecutor;
import org.apache.commons.jexl3.internal.introspection.Permissions;
import org.apache.commons.logging.Log;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MapGetExecutor_ESTest extends MapGetExecutor_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Permissions permissions0 = Permissions.DEFAULT;
      Introspector introspector0 = new Introspector((Log) null, classLoader0, permissions0);
      // Undeclared exception!
      try { 
        MapGetExecutor.discover(introspector0, (Class<?>) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      MapGetExecutor mapGetExecutor0 = MapGetExecutor.discover((Introspector) null, class0, class0);
      ;
}
}
