/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 18:23:30 GMT 2022
 */

package org.apache.commons.jexl3.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.apache.commons.jexl3.parser.ASTReferenceExpression;
import org.apache.commons.jexl3.parser.FeatureController;
import org.apache.commons.jexl3.parser.OperatorController;
import org.apache.commons.jexl3.parser.Parser;
import org.apache.commons.jexl3.parser.ParserVisitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ASTReferenceExpression_ESTest extends ASTReferenceExpression_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Parser parser0 = new Parser("");
      ASTReferenceExpression aSTReferenceExpression0 = new ASTReferenceExpression(parser0, 47);
      FeatureController featureController0 = parser0.featureController;
      Object object0 = aSTReferenceExpression0.jjtAccept(featureController0, (Object) null);
      assertNotNull(object0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Parser parser0 = new Parser("W");
      ASTReferenceExpression aSTReferenceExpression0 = new ASTReferenceExpression(parser0, 76);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      // Undeclared exception!
      try { 
        aSTReferenceExpression0.jjtAccept((ParserVisitor) null, sequenceInputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.ASTReferenceExpression", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Parser parser0 = new Parser("");
      ASTReferenceExpression aSTReferenceExpression0 = new ASTReferenceExpression(parser0, 47);
      FeatureController featureController0 = parser0.featureController;
      Object object0 = aSTReferenceExpression0.jjtAccept(featureController0, "");
      assertNotNull(object0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ASTReferenceExpression aSTReferenceExpression0 = new ASTReferenceExpression((-1));
      OperatorController operatorController0 = OperatorController.INSTANCE;
      Boolean boolean0 = new Boolean("\"^\"");
      boolean boolean1 = operatorController0.control(aSTReferenceExpression0, boolean0);
      assertTrue(boolean1);
}
}
