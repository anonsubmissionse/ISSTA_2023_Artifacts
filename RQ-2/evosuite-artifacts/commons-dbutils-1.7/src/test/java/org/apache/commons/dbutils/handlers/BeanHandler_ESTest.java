/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 15:05:58 GMT 2022
 */

package org.apache.commons.dbutils.handlers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import org.apache.commons.dbutils.BasicRowProcessor;
import org.apache.commons.dbutils.handlers.BeanHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BeanHandler_ESTest extends BeanHandler_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<String> class0 = String.class;
      BeanHandler<String> beanHandler0 = new BeanHandler<String>(class0);
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(true).when(resultSet0).next();
      String string0 = beanHandler0.handle(resultSet0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<String> class0 = String.class;
      BasicRowProcessor basicRowProcessor0 = new BasicRowProcessor();
      BeanHandler<Object> beanHandler0 = new BeanHandler<Object>(class0, basicRowProcessor0);
      // Undeclared exception!
      try { 
        beanHandler0.handle((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.dbutils.handlers.BeanHandler", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      BeanHandler<Object> beanHandler0 = new BeanHandler<Object>(class0);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(resultSet0).next();
      try { 
        beanHandler0.handle(resultSet0);
        fail("Expecting exception: SQLException");
      } catch(SQLException e) {
         //
         // Cannot create java.lang.Integer: java.lang.Integer
         //
         verifyException("org.apache.commons.dbutils.BeanProcessor", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      BeanHandler<Object> beanHandler0 = new BeanHandler<Object>(class0);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet0).next();
      Object object0 = beanHandler0.handle(resultSet0);
      ;
}
}
