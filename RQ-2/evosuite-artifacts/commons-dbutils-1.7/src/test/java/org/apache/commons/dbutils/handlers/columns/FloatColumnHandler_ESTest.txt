 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FloatColumnHandler floatColumnHandler0 = new FloatColumnHandler();
      // Undeclared exception!
      try { 
        floatColumnHandler0.match((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.dbutils.handlers.columns.FloatColumnHandler", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FloatColumnHandler floatColumnHandler0 = new FloatColumnHandler();
      // Undeclared exception!
      try { 
        floatColumnHandler0.apply((ResultSet) null, 4331);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.dbutils.handlers.columns.FloatColumnHandler", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FloatColumnHandler floatColumnHandler0 = new FloatColumnHandler();
      Class<Integer> class0 = Integer.class;
      boolean boolean0 = floatColumnHandler0.match(class0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FloatColumnHandler floatColumnHandler0 = new FloatColumnHandler();
      Class<Float> class0 = Float.class;
      boolean boolean0 = floatColumnHandler0.match(class0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FloatColumnHandler floatColumnHandler0 = new FloatColumnHandler();
      Class<Float> class0 = Float.TYPE;
      boolean boolean0 = floatColumnHandler0.match(class0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FloatColumnHandler floatColumnHandler0 = new FloatColumnHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(0.0F).when(resultSet0).getFloat(anyInt());
      Object object0 = floatColumnHandler0.apply(resultSet0, (-5500));
      ;
}
