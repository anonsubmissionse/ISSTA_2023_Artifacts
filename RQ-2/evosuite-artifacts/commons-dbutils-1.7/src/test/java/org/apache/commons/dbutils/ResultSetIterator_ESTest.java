/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 15:05:49 GMT 2022
 */

package org.apache.commons.dbutils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.HashMap;
import javax.sql.rowset.RowSetMetaDataImpl;
import org.apache.commons.dbutils.BasicRowProcessor;
import org.apache.commons.dbutils.BeanProcessor;
import org.apache.commons.dbutils.ResultSetIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultSetIterator_ESTest extends ResultSetIterator_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(471).when(resultSetMetaData0).getColumnCount();
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0, rowSetMetaDataImpl0).when(resultSet0).getMetaData();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(resultSet0).getObject(anyInt());
      doReturn(false, false).when(resultSet0).next();
      ResultSetIterator resultSetIterator0 = new ResultSetIterator(resultSet0);
      Object[] objectArray0 = resultSetIterator0.next();
      Object[] objectArray1 = resultSetIterator0.next();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BasicRowProcessor basicRowProcessor0 = new BasicRowProcessor();
      ResultSetIterator resultSetIterator0 = new ResultSetIterator((ResultSet) null, basicRowProcessor0);
      MockThrowable mockThrowable0 = new MockThrowable();
      SQLException sQLException0 = new SQLException(mockThrowable0);
      // Undeclared exception!
      try { 
        resultSetIterator0.rethrow(sQLException0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable
         //
         verifyException("org.apache.commons.dbutils.ResultSetIterator", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ResultSetIterator resultSetIterator0 = new ResultSetIterator((ResultSet) null);
      // Undeclared exception!
      try { 
        resultSetIterator0.remove();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.dbutils.ResultSetIterator", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(5551).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(resultSet0).getObject(anyInt());
      doReturn(true).when(resultSet0).isLast();
      doReturn(false, false).when(resultSet0).next();
      ResultSetIterator resultSetIterator0 = new ResultSetIterator(resultSet0);
      resultSetIterator0.next();
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSetIterator.iterable(resultSet1);
      resultSetIterator0.hasNext();
      // Undeclared exception!
      try { 
        resultSetIterator0.next();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.dbutils.BasicRowProcessor", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-1749)).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      BasicRowProcessor basicRowProcessor0 = new BasicRowProcessor();
      ResultSetIterator resultSetIterator0 = new ResultSetIterator(resultSet0, basicRowProcessor0);
      // Undeclared exception!
      try { 
        resultSetIterator0.next();
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.dbutils.BasicRowProcessor", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      BeanProcessor beanProcessor0 = new BeanProcessor(hashMap0);
      BasicRowProcessor basicRowProcessor0 = new BasicRowProcessor(beanProcessor0);
      ResultSetIterator resultSetIterator0 = new ResultSetIterator((ResultSet) null, basicRowProcessor0);
      // Undeclared exception!
      try { 
        resultSetIterator0.hasNext();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.dbutils.ResultSetIterator", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(resultSet0).isLast();
      BasicRowProcessor basicRowProcessor0 = new BasicRowProcessor();
      ResultSetIterator resultSetIterator0 = new ResultSetIterator(resultSet0, basicRowProcessor0);
      boolean boolean0 = resultSetIterator0.hasNext();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(resultSet0).isLast();
      BasicRowProcessor basicRowProcessor0 = new BasicRowProcessor();
      ResultSetIterator resultSetIterator0 = new ResultSetIterator(resultSet0, basicRowProcessor0);
      boolean boolean0 = resultSetIterator0.hasNext();
      boolean boolean1 = resultSetIterator0.hasNext();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSetIterator resultSetIterator0 = new ResultSetIterator(resultSet0);
      // Undeclared exception!
      try { 
        resultSetIterator0.rethrow((SQLException) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.dbutils.ResultSetIterator", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSetIterator resultSetIterator0 = new ResultSetIterator(resultSet0);
      resultSetIterator0.remove();
  }
}
