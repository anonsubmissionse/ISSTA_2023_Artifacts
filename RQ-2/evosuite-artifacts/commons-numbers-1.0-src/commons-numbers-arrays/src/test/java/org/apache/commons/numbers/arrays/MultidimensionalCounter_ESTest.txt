 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-2607);
      intArray0[1] = 1;
      // Undeclared exception!
      try { 
        MultidimensionalCounter.of(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Not positive total size: -2607
         //
         verifyException("org.apache.commons.numbers.arrays.MultidimensionalCounter", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 1526;
      intArray0[1] = 1791;
      intArray0[2] = 1;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      int[] intArray1 = new int[3];
      intArray1[1] = 1791;
      // Undeclared exception!
      try { 
        multidimensionalCounter0.toUni(intArray1);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of bounds [0, 1790]: 1791
         //
         verifyException("org.apache.commons.numbers.arrays.MultidimensionalCounter", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-2097);
      intArray0[1] = 1530;
      intArray0[2] = 967;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      int[] intArray1 = multidimensionalCounter0.toMulti(1530);
      // Undeclared exception!
      try { 
        multidimensionalCounter0.toUni(intArray1);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of bounds [0, -2098]: 0
         //
         verifyException("org.apache.commons.numbers.arrays.MultidimensionalCounter", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-2118);
      intArray0[1] = 1535;
      intArray0[2] = 967;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      int[] intArray1 = new int[0];
      // Undeclared exception!
      try { 
        multidimensionalCounter0.toUni(intArray1);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Wrong number of arguments: 0(expected: 3)
         //
         verifyException("org.apache.commons.numbers.arrays.MultidimensionalCounter", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 700;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      // Undeclared exception!
      try { 
        multidimensionalCounter0.toMulti(1830);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of bounds [0, 699]: 1830
         //
         verifyException("org.apache.commons.numbers.arrays.MultidimensionalCounter", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 3579;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      int[] intArray1 = multidimensionalCounter0.toMulti(0);
      int int0 = multidimensionalCounter0.toUni(intArray1);
      assertEquals(1, multidimensionalCounter0.getSize());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 3579;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      int[] intArray1 = multidimensionalCounter0.toMulti(0);
      int int0 = multidimensionalCounter0.toUni(intArray1);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 3579;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      int[] intArray1 = multidimensionalCounter0.toMulti(0);
      int int0 = multidimensionalCounter0.toUni(intArray1);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-2118);
      intArray0[1] = 1535;
      intArray0[2] = 967;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      // Undeclared exception!
      try { 
        multidimensionalCounter0.toUni((int[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.arrays.MultidimensionalCounter", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try { 
        MultidimensionalCounter.of((int[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.arrays.MultidimensionalCounter", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        MultidimensionalCounter.of(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.numbers.arrays.MultidimensionalCounter", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = (-2413);
      intArray0[1] = 926;
      intArray0[2] = 926;
      intArray0[3] = 926;
      intArray0[4] = 926;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      // Undeclared exception!
      try { 
        multidimensionalCounter0.toUni(intArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of bounds [0, -2414]: -2413
         //
         verifyException("org.apache.commons.numbers.arrays.MultidimensionalCounter", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1539;
      intArray0[1] = 2864;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      int[] intArray1 = multidimensionalCounter0.toMulti(1484345);
      int int0 = multidimensionalCounter0.toUni(intArray1);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1539;
      intArray0[1] = 2864;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      int[] intArray1 = multidimensionalCounter0.toMulti(1484345);
      int int0 = multidimensionalCounter0.toUni(intArray1);
      assertEquals(1, multidimensionalCounter0.getSize());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1539;
      intArray0[1] = 2864;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      int[] intArray1 = multidimensionalCounter0.toMulti(1484345);
      int int0 = multidimensionalCounter0.toUni(intArray1);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 4930;
      int[] intArray1 = new int[10];
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      // Undeclared exception!
      try { 
        multidimensionalCounter0.toUni(intArray1);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Wrong number of arguments: 10(expected: 1)
         //
         verifyException("org.apache.commons.numbers.arrays.MultidimensionalCounter", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 705;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      // Undeclared exception!
      try { 
        multidimensionalCounter0.toMulti(705);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of bounds [0, 704]: 705
         //
         verifyException("org.apache.commons.numbers.arrays.MultidimensionalCounter", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        MultidimensionalCounter.of(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Not positive index size: 0
         //
         verifyException("org.apache.commons.numbers.arrays.MultidimensionalCounter", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 664;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      multidimensionalCounter0.toString();
      assertEquals(1, multidimensionalCounter0.getSize());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 4930;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      int int0 = multidimensionalCounter0.getSize();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 664;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      // Undeclared exception!
      try { 
        multidimensionalCounter0.toMulti((-2513));
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of bounds [0, 663]: -2513
         //
         verifyException("org.apache.commons.numbers.arrays.MultidimensionalCounter", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 664;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      multidimensionalCounter0.getSizes();
      assertEquals(1, multidimensionalCounter0.getSize());
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 705;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      int int0 = multidimensionalCounter0.getDimension();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 705;
      MultidimensionalCounter multidimensionalCounter0 = MultidimensionalCounter.of(intArray0);
      int int0 = multidimensionalCounter0.getDimension();
      assertEquals(1, multidimensionalCounter0.getSize());
}
