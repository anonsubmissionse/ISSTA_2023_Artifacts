/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 20:29:07 GMT 2022
 */

package org.apache.commons.numbers.rootfinder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.DoubleUnaryOperator;
import org.apache.commons.numbers.rootfinder.BrentSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BrentSolver_ESTest extends BrentSolver_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(1.0, 0.0, 0.0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0);
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0);
      DoubleUnaryOperator doubleUnaryOperator1 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator1, (-384.57131934), 1171.979, 1171.979);
      brentSolver0.findRoot(doubleUnaryOperator1, 0.0, 0.0, 0.0);
      doubleUnaryOperator1.andThen(doubleUnaryOperator0);
      DoubleUnaryOperator.identity();
      doubleUnaryOperator1.andThen(doubleUnaryOperator0);
      brentSolver0.findRoot(doubleUnaryOperator1, (-216.8291), 0.0);
      brentSolver0.findRoot(doubleUnaryOperator1, 0.0, 0.0);
      brentSolver0.findRoot(doubleUnaryOperator0, (-515.0), 1.0);
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(0.0, 0.0, 0.0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0, 0.0);
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0, 0.0);
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0, 0.0);
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0);
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0, 0.0);
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0, 0.0);
      brentSolver0.findRoot(doubleUnaryOperator0, (-1481.2421678), 59.5987556549);
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver((-3574.51171), (-1531.6), (-1531.6));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      DoubleUnaryOperator doubleUnaryOperator1 = DoubleUnaryOperator.identity();
      doubleUnaryOperator0.andThen(doubleUnaryOperator1);
      brentSolver0.findRoot(doubleUnaryOperator0, (-3574.51171), (-3574.51171), 525.0882279019);
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(0.0, 0.0, (-4090.6382));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      DoubleUnaryOperator doubleUnaryOperator1 = DoubleUnaryOperator.identity();
      DoubleUnaryOperator doubleUnaryOperator2 = DoubleUnaryOperator.identity();
      doubleUnaryOperator0.andThen(doubleUnaryOperator2);
      DoubleUnaryOperator.identity();
      doubleUnaryOperator0.andThen(doubleUnaryOperator1);
      doubleUnaryOperator2.applyAsDouble(0.0);
      double double0 = 981.4338256938;
      doubleUnaryOperator1.andThen(doubleUnaryOperator0);
      brentSolver0.findRoot(doubleUnaryOperator0, (-2354.67489809), 981.4338256938);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, 0.0, (-4090.6382), 0.0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // -4,090.638 is out of range [0, 0]
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(1.0, 1.0, 0.0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 1.0, 1.5);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, 3789.13, 3789.13);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bracketing: f(3,789.13)=3,789.13, f(3,789.13)=3,789.13
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      double double0 = Double.NaN;
      BrentSolver brentSolver0 = new BrentSolver(Double.NaN, -0.0, -0.0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double double1 = (-1778.4936927);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, Double.NaN, (-1778.4936927));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bracketing: f(\uFFFD)=\uFFFD, f(-1,778.494)=-1,778.494
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(318.747629049333, 318.747629049333, 318.747629049333);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, (-1.0), (-1.0), 2042.64907820482);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, (-199.0), 2642.8937374, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 2,642.894 is out of range [-199, -1]
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      double double0 = (-1.033796486010367);
      BrentSolver brentSolver0 = new BrentSolver(Double.NaN, Double.NaN, (-1.033796486010367));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      DoubleUnaryOperator doubleUnaryOperator1 = DoubleUnaryOperator.identity();
      doubleUnaryOperator0.andThen(doubleUnaryOperator1);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, (-1.033796486010367), Double.NaN, Double.NaN);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bracketing: f(-1.034)=-1.034, f(\uFFFD)=\uFFFD
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(1327.63839, (-1.0), (-1.0));
      // Undeclared exception!
      try { 
        brentSolver0.findRoot((DoubleUnaryOperator) null, (-1.0), 1327.63839);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      double double0 = (-1.0);
      BrentSolver brentSolver0 = new BrentSolver((-1.0), (-1.0), (-1842.0341608855044));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double double1 = (-241.7552364);
      brentSolver0.findRoot(doubleUnaryOperator0, (-1391.09798356), 1691.0);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, (-1391.09798356), 0.0, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 0 is out of range [-1,391.098, -1]
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = (-465.68162571894);
      BrentSolver brentSolver0 = new BrentSolver((-465.68162571894), (-465.68162571894), (-465.68162571894));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      DoubleUnaryOperator doubleUnaryOperator1 = DoubleUnaryOperator.identity();
      doubleUnaryOperator1.andThen(doubleUnaryOperator0);
      doubleUnaryOperator0.compose(doubleUnaryOperator1);
      doubleUnaryOperator0.andThen(doubleUnaryOperator1);
      DoubleUnaryOperator doubleUnaryOperator2 = DoubleUnaryOperator.identity();
      DoubleUnaryOperator.identity();
      doubleUnaryOperator2.andThen(doubleUnaryOperator0);
      doubleUnaryOperator0.andThen(doubleUnaryOperator2);
      double double1 = 1.5;
      brentSolver0.findRoot(doubleUnaryOperator0, (-465.68162571894), 1.5);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator2, 1.5, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 1.5 > 0
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(0.0, (-1.0), 0.0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, (-1.0), 1.5, 1.5);
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0);
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(0.0, 0.0, (-16.5679616593));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bracketing: f(0)=0, f(0)=0
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(1.0, 2237.410260603, 1.0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, (-1.0), 1.0, 1430.7);
      brentSolver0.findRoot(doubleUnaryOperator0, (-4165.063), 2237.410260603);
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(0.0, 0.0, (-64.614584609156));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, (-64.614584609156), 2.0);
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = (-3187.0);
      BrentSolver brentSolver0 = new BrentSolver((-3187.0), (-3187.0), (-3143.24316293));
      DoubleUnaryOperator doubleUnaryOperator0 = null;
      double double1 = 0.5;
      // Undeclared exception!
      try { 
        brentSolver0.findRoot((DoubleUnaryOperator) null, 0.5, 0.5, 0.5);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(0.0, 0.0, 0.0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0, 0.0);
      DoubleUnaryOperator doubleUnaryOperator1 = DoubleUnaryOperator.identity();
      doubleUnaryOperator1.applyAsDouble(0.0);
      DoubleUnaryOperator doubleUnaryOperator2 = doubleUnaryOperator1.andThen(doubleUnaryOperator0);
      DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0, 0.0);
      brentSolver0.findRoot(doubleUnaryOperator1, (-1.0), 0.0);
      DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, (-2794.042059839574), (-1580.5), 0.0);
      doubleUnaryOperator2.andThen(doubleUnaryOperator1);
      DoubleUnaryOperator doubleUnaryOperator3 = doubleUnaryOperator2.andThen(doubleUnaryOperator0);
      doubleUnaryOperator1.applyAsDouble(2677.8142);
      doubleUnaryOperator2.andThen(doubleUnaryOperator3);
      brentSolver0.findRoot(doubleUnaryOperator0, (-1480.358868), 0.0, 0.0);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator2, 0.0, (-843.8));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 0 > -843.8
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(546.8169, 546.8169, 1.5);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double double0 = 0.5;
      brentSolver0.findRoot(doubleUnaryOperator0, 1.0, 546.8169);
      brentSolver0.findRoot(doubleUnaryOperator0, 0.5, 0.5, 1.0);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, 546.8169, 1.5);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 546.817 > 1.5
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver((-2814.63022153), 629.38881, (-2814.63022153));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, (-2814.63022153), 629.38881);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, 629.38881, 0.03132828608269356, 3184.25003);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 0.031 is out of range [629.389, 3,184.25]
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(1.5, 1031.018894, 1031.018894);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, (-2994.147122364809), 1031.018894, (-2972.51887588888));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 1,031.019 is out of range [-2,994.147, -2,972.519]
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(666.9030038471432, 1107.3571236008, 1107.3571236008);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, 666.9030038471432, 1107.3571236008);
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(0.0, 0.0, 0.5);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, 0.5, 0.0, 0.5);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 0 is out of range [0.5, 0.5]
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = (-4188.71514527);
      BrentSolver brentSolver0 = new BrentSolver((-4188.71514527), 0.0, 0.0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double double1 = 0.0;
      brentSolver0.findRoot(doubleUnaryOperator0, (-4188.71514527), 0.0);
      double double2 = 0.5;
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.5);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, 0.0, (-4188.71514527));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 0 > -4,188.715
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(1.0, 1.0, -0.0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 1.0);
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver((-3498.8339), (-3498.8339), (-3498.8339));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, (-3498.8339), (-3498.8339), (-3498.8339));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bracketing: f(-3,498.834)=-3,498.834, f(-3,498.834)=-3,498.834
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double double0 = 1203.54617238881;
      BrentSolver brentSolver0 = new BrentSolver(0.0, 0.0, 1203.54617238881);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double double1 = 2.0;
      double double2 = 0.0;
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, 2.0, 371.45, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 2 > 0
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double double0 = 895.1;
      double double1 = (-1.0);
      BrentSolver brentSolver0 = new BrentSolver(895.1, (-1.0), 895.1);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double double2 = 0.0;
      DoubleUnaryOperator doubleUnaryOperator1 = DoubleUnaryOperator.identity();
      DoubleUnaryOperator doubleUnaryOperator2 = doubleUnaryOperator0.compose(doubleUnaryOperator1);
      DoubleUnaryOperator doubleUnaryOperator3 = DoubleUnaryOperator.identity();
      double double3 = 349.78202145;
      doubleUnaryOperator0.compose(doubleUnaryOperator2);
      doubleUnaryOperator3.andThen(doubleUnaryOperator2);
      doubleUnaryOperator0.applyAsDouble(4184.875451303007);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator3, 349.78202145, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 349.782 > 0
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(1510.43, 1510.43, 1510.43);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, 1510.43, 340.63406484265715);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 1,510.43 > 340.634
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DoubleUnaryOperator.identity();
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(Double.NaN, 0.5, (-1044.7));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      // Undeclared exception!
      brentSolver0.findRoot(doubleUnaryOperator0, (-1044.7), (-321.4431757), 3279.8484567);
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(0.0, 0.0, 0.0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 286.5680969604778);
      DoubleUnaryOperator doubleUnaryOperator1 = DoubleUnaryOperator.identity();
      doubleUnaryOperator0.compose(doubleUnaryOperator1);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, 363.8750659905685, (-3419.696), 1556.55031934);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // -3,419.696 is out of range [363.875, 1,556.55]
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver((-805.4154532399315), (-1868.045418762538), (-805.4154532399315));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      DoubleUnaryOperator doubleUnaryOperator1 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, (-1468.90386804), 2200.6139864038, 3121.22071554);
      doubleUnaryOperator0.andThen(doubleUnaryOperator1);
      brentSolver0.findRoot(doubleUnaryOperator0, (-805.4154532399315), 3121.22071554);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, (-1868.045418762538), (-4225.420387427377), 3121.22071554);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // -4,225.42 is out of range [-1,868.045, 3,121.221]
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double double0 = (-2034.2980193);
      BrentSolver brentSolver0 = new BrentSolver((-2034.2980193), (-2034.2980193), (-356.9587451587566));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double double1 = 2368.545009529;
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, 2368.545009529, (-2034.2980193), 0.47);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 2,368.545 > 0.47
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(1.0, 0.0, 0.0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0);
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0);
      DoubleUnaryOperator doubleUnaryOperator1 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator1, 0.0, 0.0, 0.0);
      doubleUnaryOperator1.andThen(doubleUnaryOperator0);
      DoubleUnaryOperator doubleUnaryOperator2 = DoubleUnaryOperator.identity();
      doubleUnaryOperator1.andThen(doubleUnaryOperator0);
      brentSolver0.findRoot(doubleUnaryOperator1, (-216.8291), 0.0);
      brentSolver0.findRoot(doubleUnaryOperator1, 0.0, 0.0);
      brentSolver0.findRoot(doubleUnaryOperator0, (-515.0), 1.0);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator2, (-1049.61086266), Double.NaN);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bracketing: f(-1,049.611)=-1,049.611, f(\uFFFD)=\uFFFD
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(0.0, 0.0, 0.0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      brentSolver0.findRoot(doubleUnaryOperator0, 0.0, 0.0);
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double double0 = 3459.201;
      double double1 = (-3660.5786122);
      BrentSolver brentSolver0 = new BrentSolver(3459.201, (-3660.5786122), (-3660.5786122));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double double2 = 1239.4849958;
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator0, 1239.4849958, 3459.201, 3459.201);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bracketing: f(1,239.485)=1,239.485, f(3,459.201)=3,459.201
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double double0 = (-1.0);
      BrentSolver brentSolver0 = new BrentSolver((-1.0), (-1.0), (-1842.0341608855044));
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      doubleUnaryOperator0.applyAsDouble((-1.0));
      brentSolver0.findRoot(doubleUnaryOperator0, (-1981.33961), 820.473676446641);
      DoubleUnaryOperator doubleUnaryOperator1 = DoubleUnaryOperator.identity();
      double double1 = (-241.7552364);
      brentSolver0.findRoot(doubleUnaryOperator1, (-1391.09798356), 1691.0);
      double double2 = (-1.0);
      // Undeclared exception!
      try { 
        brentSolver0.findRoot(doubleUnaryOperator1, (-1391.09798356), 0.0, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 0 is out of range [-1,391.098, -1]
         //
         verifyException("org.apache.commons.numbers.rootfinder.BrentSolver", e);
      }
  }
}
