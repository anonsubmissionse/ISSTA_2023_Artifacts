/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 20:03:24 GMT 2022
 */

package org.apache.commons.numbers.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.numbers.core.Norm;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Norm_ESTest extends Norm_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Norm norm0 = Norm.LINF;
      double double0 = norm0.of((-2783.543), 1082.7, 1.0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Norm norm0 = Norm.LINF;
      double double0 = norm0.of(0.0, 685.708);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Norm norm0 = Norm.EUCLIDEAN;
      double[] doubleArray0 = new double[7];
      doubleArray0[6] = 2.409919865102884E-181;
      double double0 = norm0.of(doubleArray0);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Norm norm0 = Norm.EUCLIDEAN;
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1.4916681462400413E-154;
      double double0 = norm0.of(doubleArray0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Norm norm0 = Norm.EUCLIDEAN;
      double[] doubleArray0 = new double[8];
      doubleArray0[3] = 5.8683011947898095E180;
      doubleArray0[4] = 4.149515568880993E180;
      doubleArray0[7] = 4.149515568880993E180;
      double double0 = norm0.of(doubleArray0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Norm norm0 = Norm.L2;
      double[] doubleArray0 = new double[4];
      doubleArray0[3] = 2.0458691299350887E149;
      double double0 = norm0.of(doubleArray0);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Norm norm0 = Norm.L2;
      double double0 = norm0.of(0.0, 0.0, 7.888609052210118E-31);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Norm norm0 = Norm.L2;
      double double0 = norm0.of(1636.9, 990.44445828, 2.0458691299350887E149);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Norm norm0 = Norm.L2;
      double double0 = norm0.of(0.0, 395.545233680463, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Norm norm0 = Norm.EUCLIDEAN;
      double double0 = norm0.of(4.149515568880993E180, 1.9999999999999998, 3287.13644335277);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Norm norm0 = Norm.L2;
      double double0 = norm0.of(990.44445828, Double.NaN, 1.0);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Norm norm0 = Norm.EUCLIDEAN;
      double double0 = norm0.of((-1.0), (-1.0), (-1.0));
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Norm norm0 = Norm.L2;
      double double0 = norm0.of(7.888609052210118E-31, 7.888609052210118E-31);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Norm norm0 = Norm.EUCLIDEAN;
      double double0 = norm0.of(2.0458691299350887E149, 2.0458691299350887E149);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Norm norm0 = Norm.EUCLIDEAN;
      double double0 = norm0.of(4.149515568880993E180, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Norm norm0 = Norm.L2;
      double double0 = norm0.of(Double.NaN, 219.2747475337577);
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Norm norm0 = Norm.EUCLIDEAN;
      double double0 = norm0.of(Double.POSITIVE_INFINITY, (-808.0));
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Norm norm0 = Norm.L2;
      double double0 = norm0.of((-3071.4748273484), 1.0);
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Norm norm0 = Norm.L2;
      double double0 = norm0.of((-109.32522649696797), 1.15292150461029555E18);
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Norm norm0 = Norm.MANHATTAN;
      double double0 = norm0.of(2.409919865102884E-181, 0.0, (-3053.75958545403));
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Norm[] normArray0 = Norm.values();
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Norm norm0 = Norm.valueOf("MANHATTAN");
      double double0 = norm0.of((-1678.082254), (-540.3659090353848));
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Norm norm0 = Norm.L1;
      // Undeclared exception!
      try { 
        norm0.of((double[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.core.Norm", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Norm norm0 = Norm.MANHATTAN;
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        norm0.of(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Empty array
         //
         verifyException("org.apache.commons.numbers.core.Norm", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Norm norm0 = Norm.LINF;
      double[] doubleArray0 = new double[14];
      double double0 = norm0.of(doubleArray0);
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Norm norm0 = Norm.EUCLIDEAN;
      double[] doubleArray0 = new double[9];
      doubleArray0[7] = Double.NaN;
      double double0 = norm0.of(doubleArray0);
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Norm norm0 = Norm.EUCLIDEAN;
      double[] doubleArray0 = new double[6];
      doubleArray0[2] = Double.POSITIVE_INFINITY;
      double double0 = norm0.of(doubleArray0);
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Norm norm0 = Norm.EUCLIDEAN;
      double double0 = norm0.of(Double.NaN, Double.POSITIVE_INFINITY, Double.NaN);
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Norm norm0 = Norm.L2;
      double double0 = norm0.of(0.0, 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Norm norm0 = Norm.L2;
      double double0 = norm0.of(0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Norm norm0 = Norm.L2;
      double double0 = norm0.of(4.149515568880993E180, 4.149515568880993E180);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Norm norm0 = Norm.EUCLIDEAN;
      double double0 = norm0.of(Double.POSITIVE_INFINITY, Double.NaN);
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Norm norm0 = Norm.L1;
      double[] doubleArray0 = new double[10];
      double double0 = norm0.of(doubleArray0);
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Norm norm0 = Norm.EUCLIDEAN;
      double double0 = norm0.of(0.0, 0.72577);
      ;
}
}
