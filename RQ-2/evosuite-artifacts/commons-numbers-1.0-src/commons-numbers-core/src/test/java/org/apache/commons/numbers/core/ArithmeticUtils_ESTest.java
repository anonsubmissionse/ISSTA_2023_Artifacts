/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 20:03:44 GMT 2022
 */

package org.apache.commons.numbers.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.apache.commons.numbers.core.ArithmeticUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArithmeticUtils_ESTest extends ArithmeticUtils_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      long long0 = ArithmeticUtils.divideUnsigned((-820L), (-820L));
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      long long0 = ArithmeticUtils.divideUnsigned(0L, (-849L));
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      long long0 = ArithmeticUtils.divideUnsigned((-3453L), 1652L);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      long long0 = ArithmeticUtils.divideUnsigned((long) (-2744), (long) 1);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int int0 = ArithmeticUtils.divideUnsigned((-972), (-3337));
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int int0 = ArithmeticUtils.divideUnsigned(0, (-4253));
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int int0 = ArithmeticUtils.divideUnsigned((-1556), 4);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      int int0 = ArithmeticUtils.divideUnsigned(0, 63);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      long long0 = ArithmeticUtils.remainderUnsigned(0L, (-3570L));
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      long long0 = ArithmeticUtils.remainderUnsigned((-2747L), 1L);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      long long0 = ArithmeticUtils.remainderUnsigned((long) (-972), (long) 1);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long long0 = ArithmeticUtils.remainderUnsigned(0L, 1154L);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = ArithmeticUtils.remainderUnsigned((-1), (-1));
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = ArithmeticUtils.remainderUnsigned(0, (-1));
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = ArithmeticUtils.remainderUnsigned((-2421), 1);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = ArithmeticUtils.isPowerOfTwo(0L);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0L);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0L);
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0L);
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0L);
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0L);
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0L);
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0L);
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0L);
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.pow(1777L, 63);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // long overflow
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.pow(1369, 31);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // integer overflow
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      long long0 = ArithmeticUtils.remainderUnsigned((long) (-1), (long) (-1));
      ;
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger0, bigInteger1);
      ;
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      ;
}
 @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      ;
}
 @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      ;
}
 @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2891);
      ;
}
 @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2891);
      ;
}
 @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2891);
      ;
}
 @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2891);
      ;
}
 @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2891);
      ;
}
 @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2891);
      ;
}
 @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2891);
      ;
}
 @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      ;
}
 @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      ;
}
 @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      ;
}
 @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      ;
}
 @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      ;
}
 @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      ;
}
 @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      ;
}
 @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      ;
}
 @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = bigInteger0.nextProbablePrime();
      BigInteger bigInteger2 = ArithmeticUtils.pow(bigInteger1, 63);
      ;
}
 @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      long long0 = ArithmeticUtils.gcd(0L, 0L);
      ;
}
 @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.remainderUnsigned((-1L), 0L);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.remainderUnsigned(0, 0);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.pow((BigInteger) null, (BigInteger) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.pow((BigInteger) null, 1L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.pow((BigInteger) null, 1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)121;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)121;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)121;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)121;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)121;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.pow(816, 18);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // integer overflow
         //
         verifyException("java.lang.Math", e);
      }
  }
 @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.lcm((-678L), (-9223372036854775808L));
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // long overflow
         //
         verifyException("java.lang.Math", e);
      }
  }
 @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.lcm(1073741435, (-121));
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // integer overflow
         //
         verifyException("java.lang.Math", e);
      }
  }
 @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.divideUnsigned(0L, 0L);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.divideUnsigned(31, 0);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      long long0 = ArithmeticUtils.gcd((long) (-18), (-437L));
      ;
}
 @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      long long0 = ArithmeticUtils.gcd(1L, 2L);
      ;
}
 @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.gcd(0, Integer.MIN_VALUE);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // overflow: gcd(0, -2,147,483,648) is 2^31
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      long long0 = ArithmeticUtils.divideUnsigned((-1L), (long) (-3662));
      ;
}
 @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      long long0 = ArithmeticUtils.divideUnsigned((long) 716, (-1L));
      ;
}
 @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      long long0 = ArithmeticUtils.divideUnsigned(1L, 1L);
      ;
}
 @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      long long0 = ArithmeticUtils.divideUnsigned((-267L), 1L);
      ;
}
 @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      long long0 = ArithmeticUtils.divideUnsigned((-3564L), (-548L));
      ;
}
 @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      int int0 = ArithmeticUtils.divideUnsigned((-221), (-1));
      ;
}
 @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      int int0 = ArithmeticUtils.divideUnsigned((-8), (-8));
      ;
}
 @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      int int0 = ArithmeticUtils.divideUnsigned((-1), 1341);
      ;
}
 @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      int int0 = ArithmeticUtils.divideUnsigned(Integer.MIN_VALUE, 2147480927);
      ;
}
 @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      int int0 = ArithmeticUtils.divideUnsigned((-8), 1);
      ;
}
 @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      int int0 = ArithmeticUtils.divideUnsigned(1, 605);
      ;
}
 @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      int int0 = ArithmeticUtils.divideUnsigned(605, (-1));
      ;
}
 @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      long long0 = ArithmeticUtils.remainderUnsigned((-1242L), (-2484L));
      ;
}
 @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      long long0 = ArithmeticUtils.remainderUnsigned((long) 1, (-1603L));
      ;
}
 @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      long long0 = ArithmeticUtils.remainderUnsigned((-1L), (long) 1242);
      ;
}
 @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      long long0 = ArithmeticUtils.remainderUnsigned((long) (-972), 74L);
      ;
}
 @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      long long0 = ArithmeticUtils.remainderUnsigned((long) 605, 4551L);
      ;
}
 @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      long long0 = ArithmeticUtils.remainderUnsigned((-1605L), (-8L));
      ;
}
 @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      int int0 = ArithmeticUtils.remainderUnsigned(Integer.MIN_VALUE, (-108));
      ;
}
 @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      int int0 = ArithmeticUtils.remainderUnsigned(1, (-1));
      ;
}
 @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      int int0 = ArithmeticUtils.remainderUnsigned((-5700), 1);
      ;
}
 @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      int int0 = ArithmeticUtils.remainderUnsigned((-108), 2147483635);
      ;
}
 @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      int int0 = ArithmeticUtils.remainderUnsigned(1, 1);
      ;
}
 @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      int int0 = ArithmeticUtils.remainderUnsigned((-972), 1369);
      ;
}
 @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      int int0 = ArithmeticUtils.remainderUnsigned((-112), (-1987));
      ;
}
 @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      boolean boolean0 = ArithmeticUtils.isPowerOfTwo(256L);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      boolean boolean0 = ArithmeticUtils.isPowerOfTwo(2753355L);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      boolean boolean0 = ArithmeticUtils.isPowerOfTwo((-3580L));
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, bigInteger0);
      ;
}
 @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-92);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-92);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-92);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-92);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-92);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 397L);
      ;
}
 @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      ;
}
 @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      ;
}
 @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      ;
}
 @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      ;
}
 @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2139127680);
      ;
}
 @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2139127680);
      ;
}
 @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2139127680);
      ;
}
 @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2139127680);
      ;
}
 @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2139127680);
      ;
}
 @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2139127680);
      ;
}
 @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2139127680);
      ;
}
 @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2139127680);
      ;
}
 @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = ArithmeticUtils.pow(bigInteger0, 2139127680);
      ;
}
 @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.pow(18L, 31);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // long overflow
         //
         verifyException("java.lang.Math", e);
      }
  }
 @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      long long0 = ArithmeticUtils.pow((-16L), 0);
      ;
}
 @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.pow((long) 2549, 2549);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // long overflow
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      long long0 = ArithmeticUtils.pow((long) (-1), 3202809);
      ;
}
 @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      long long0 = ArithmeticUtils.pow((long) (-1), 0);
      ;
}
 @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      long long0 = ArithmeticUtils.pow(1L, 294);
      ;
}
 @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      long long0 = ArithmeticUtils.pow(0L, 187);
      ;
}
 @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      long long0 = ArithmeticUtils.pow(0L, 0);
      ;
}
 @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.pow(0L, (-4830));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // negative exponent ({-4830})
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      int int0 = ArithmeticUtils.pow(947, 2);
      ;
}
 @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.pow(963, 2889);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // integer overflow
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      int int0 = ArithmeticUtils.pow((-1), 1039);
      ;
}
 @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      int int0 = ArithmeticUtils.pow((-8), 1);
      ;
}
 @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      int int0 = ArithmeticUtils.pow(1, 1);
      ;
}
 @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      int int0 = ArithmeticUtils.pow(0, 482);
      ;
}
 @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      int int0 = ArithmeticUtils.pow((-1), 1288);
      ;
}
 @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.pow((-544), (-1));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // negative exponent ({-1})
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      int int0 = ArithmeticUtils.pow(0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.lcm((-9223372036854775808L), 1L);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // overflow: lcm(-9,223,372,036,854,775,808, 1) is 2^63
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      long long0 = ArithmeticUtils.lcm(2L, 0L);
      ;
}
 @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      long long0 = ArithmeticUtils.lcm(0L, (-1948L));
      ;
}
 @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      int int0 = ArithmeticUtils.lcm((-1302), 4006);
      ;
}
 @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      int int0 = ArithmeticUtils.lcm(Integer.MIN_VALUE, 0);
      ;
}
 @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      int int0 = ArithmeticUtils.lcm(0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.lcm((-9223372036854775808L), (-9223372036854775808L));
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // overflow: gcd(-9,223,372,036,854,775,808, -9,223,372,036,854,775,808) is 2^63
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      long long0 = ArithmeticUtils.lcm((long) 4006, (-1505L));
      ;
}
 @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      long long0 = ArithmeticUtils.gcd((-3580L), (-3580L));
      ;
}
 @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.gcd((long) 0, (-9223372036854775808L));
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // overflow: gcd(0, -9,223,372,036,854,775,808) is 2^63
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      long long0 = ArithmeticUtils.gcd(0L, (-657L));
      ;
}
 @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.lcm(Integer.MIN_VALUE, Integer.MIN_VALUE);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // overflow: gcd(-2,147,483,648, -2,147,483,648) is 2^31
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      int int0 = ArithmeticUtils.gcd(0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      int int0 = ArithmeticUtils.gcd(1767, 710);
      ;
}
 @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      int int0 = ArithmeticUtils.gcd((-2147483646), 0);
      ;
}
 @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArithmeticUtils.gcd((-9223372036854775808L), (long) 0);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // overflow: gcd(-9,223,372,036,854,775,808, 0) is 2^63
         //
         verifyException("org.apache.commons.numbers.core.ArithmeticUtils", e);
      }
  }
}
