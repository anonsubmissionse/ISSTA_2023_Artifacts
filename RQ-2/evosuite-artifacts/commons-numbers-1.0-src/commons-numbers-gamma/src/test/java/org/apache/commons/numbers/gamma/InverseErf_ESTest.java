/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 20:18:36 GMT 2022
 */

package org.apache.commons.numbers.gamma;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.numbers.gamma.InverseErf;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InverseErf_ESTest extends InverseErf_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double double0 = InverseErf.value(2.0972767875968562E-17);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      double double0 = InverseErf.value((-1.0));
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      double double0 = InverseErf.value(Double.POSITIVE_INFINITY);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      double double0 = InverseErf.value(0.99909);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      double double0 = InverseErf.value(0.0);
      ;
}
}
