/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 06 14:31:30 GMT 2022
 */

package org.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.StringReader;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Locale;
import java.util.Map;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.json.CDL;
import org.json.JSONArray;
import org.json.JSONObject;
import org.json.JSONTokener;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CDL_ESTest extends CDL_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("java.lang.String@0000000002\njava.lang.String@0000000013\n");
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("java.lang.String@0000000002\njava.lang.String@0000000013\n");
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("java.lang.String@0000000002\njava.lang.String@0000000013\n");
      JSONArray jSONArray0 = CDL.toJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("java.lang.String@0000000002\njava.lang.String@0000000013\n");
      JSONArray jSONArray0 = CDL.toJSONArray(jSONTokener0);
      assertFalse(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("java.lang.String@0000000002\njava.lang.String@0000000013\n");
      JSONArray jSONArray0 = CDL.toJSONArray(jSONTokener0);
      assertEquals(0, jSONArray0.length());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("java.lang.String@0000000002\njava.lang.String@0000000013\n");
      JSONArray jSONArray0 = CDL.toJSONArray(jSONTokener0);
      assertNotNull(jSONArray0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertFalse(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertFalse(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertEquals(0, jSONArray0.length());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertNotNull(jSONArray0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, "?^P4Wr9L+");
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, "?^P4Wr9L+");
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, "?^P4Wr9L+");
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, "?^P4Wr9L+");
      assertTrue(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, "?^P4Wr9L+");
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, "?^P4Wr9L+");
      assertEquals(0, jSONArray0.length());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, "?^P4Wr9L+");
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, "?^P4Wr9L+");
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?^P4Wr9L+");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, "?^P4Wr9L+");
      assertEquals(jSONArray0, jSONArray1);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSONArray jSONArray0 = CDL.toJSONArray("java.lang.String@0000000020\njava.lang.String@0000000011\n");
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONArray jSONArray0 = CDL.toJSONArray("java.lang.String@0000000020\njava.lang.String@0000000011\n");
      assertEquals(0, jSONArray0.length());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONArray jSONArray0 = CDL.toJSONArray("java.lang.String@0000000020\njava.lang.String@0000000011\n");
      assertNotNull(jSONArray0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("?`UmzKh}Me%Q:");
      ;
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("?`UmzKh}Me%Q:");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("?`UmzKh}Me%Q:");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      ;
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("?`UmzKh}Me%Q:");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("?`UmzKh}Me%Q:");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      assertTrue(arrayDeque0.isEmpty());
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("?`UmzKh}Me%Q:");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("?`UmzKh}Me%Q:");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("?`UmzKh}Me%Q:");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      assertFalse(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("?`UmzKh}Me%Q:");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("?`UmzKh}Me%Q:");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      assertTrue(jSONObject0.isEmpty());
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("?`UmzKh}Me%Q:");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("?`UmzKh}Me%Q:");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("?`UmzKh}Me%Q:");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      ;
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      ;
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      HashMap<Locale.Category, Locale.Category> hashMap0 = new HashMap<Locale.Category, Locale.Category>();
      assertTrue(hashMap0.isEmpty());
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      HashMap<Locale.Category, Locale.Category> hashMap0 = new HashMap<Locale.Category, Locale.Category>();
      assertEquals(0, hashMap0.size());
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      HashMap<Locale.Category, Locale.Category> hashMap0 = new HashMap<Locale.Category, Locale.Category>();
      assertEquals(jSONArray0, hashMap0);
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      HashMap<Locale.Category, Locale.Category> hashMap0 = new HashMap<Locale.Category, Locale.Category>();
      JSONArray jSONArray1 = jSONArray0.put((Map<?, ?>) hashMap0);
      ;
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      HashMap<Locale.Category, Locale.Category> hashMap0 = new HashMap<Locale.Category, Locale.Category>();
      JSONArray jSONArray1 = jSONArray0.put((Map<?, ?>) hashMap0);
      ;
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      HashMap<Locale.Category, Locale.Category> hashMap0 = new HashMap<Locale.Category, Locale.Category>();
      JSONArray jSONArray1 = jSONArray0.put((Map<?, ?>) hashMap0);
      ;
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      HashMap<Locale.Category, Locale.Category> hashMap0 = new HashMap<Locale.Category, Locale.Category>();
      JSONArray jSONArray1 = jSONArray0.put((Map<?, ?>) hashMap0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      HashMap<Locale.Category, Locale.Category> hashMap0 = new HashMap<Locale.Category, Locale.Category>();
      JSONArray jSONArray1 = jSONArray0.put((Map<?, ?>) hashMap0);
      assertEquals(0, jSONArray0.length());
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      HashMap<Locale.Category, Locale.Category> hashMap0 = new HashMap<Locale.Category, Locale.Category>();
      JSONArray jSONArray1 = jSONArray0.put((Map<?, ?>) hashMap0);
      assertTrue(hashMap0.isEmpty());
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      HashMap<Locale.Category, Locale.Category> hashMap0 = new HashMap<Locale.Category, Locale.Category>();
      JSONArray jSONArray1 = jSONArray0.put((Map<?, ?>) hashMap0);
      assertEquals(1, hashMap0.size());
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      HashMap<Locale.Category, Locale.Category> hashMap0 = new HashMap<Locale.Category, Locale.Category>();
      JSONArray jSONArray1 = jSONArray0.put((Map<?, ?>) hashMap0);
      assertEquals(1, jSONArray1.length());
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      HashMap<Locale.Category, Locale.Category> hashMap0 = new HashMap<Locale.Category, Locale.Category>();
      JSONArray jSONArray1 = jSONArray0.put((Map<?, ?>) hashMap0);
      assertTrue(jSONArray1.isEmpty());
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      HashMap<Locale.Category, Locale.Category> hashMap0 = new HashMap<Locale.Category, Locale.Category>();
      JSONArray jSONArray1 = jSONArray0.put((Map<?, ?>) hashMap0);
      ;
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      ;
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      ;
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("`0O!w_zBb");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      // Undeclared exception!
      try { 
        CDL.toString((JSONArray) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.json.CDL", e);
      }
  }
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("'.");
      ;
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("'.");
      ;
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      // Undeclared exception!
      try { 
        CDL.toJSONArray((JSONTokener) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.json.CDL", e);
      }
  }
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1228), (byte)84);
      ;
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1228), (byte)84);
      ;
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1228), (byte)84);
      ;
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1228), (byte)84);
      ;
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1228), (byte)84);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1228), (byte)84);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1228), (byte)84);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1228), (byte)84);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1228), (byte)84);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ;
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ;
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ;
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ;
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ;
}
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ;
}
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      ;
}
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      ;
}
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      ;
}
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      assertNotNull(stack0.toString());
}
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      ;
}
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      ;
}
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      ;
}
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      ;
}
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      ;
}
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      ;
}
 @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      ;
}
 @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      assertNotNull(stack0.toString());
}
 @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      ;
}
 @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      ;
}
 @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      ;
}
 @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      ;
}
 @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      ;
}
 @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      assertNotNull(stack0.toString());
}
 @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1685);
      ;
}
 @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1685);
      ;
}
 @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1685);
      JSONTokener jSONTokener0 = new JSONTokener(pipedInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1685);
      JSONTokener jSONTokener0 = new JSONTokener(pipedInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(stack0);
      arrayDeque0.push("<y8)y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1685);
      JSONTokener jSONTokener0 = new JSONTokener(pipedInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection<?>) null);
      ;
}
 @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection<?>) null);
      ;
}
 @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection<?>) null);
      ;
}
 @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection<?>) null);
      JSONArray jSONArray1 = jSONArray0.put((-1201.610880411483));
      ;
}
 @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection<?>) null);
      JSONArray jSONArray1 = jSONArray0.put((-1201.610880411483));
      ;
}
 @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection<?>) null);
      JSONArray jSONArray1 = jSONArray0.put((-1201.610880411483));
      ;
}
 @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection<?>) null);
      JSONArray jSONArray1 = jSONArray0.put((-1201.610880411483));
      ;
}
 @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection<?>) null);
      JSONArray jSONArray1 = jSONArray0.put((-1201.610880411483));
      ;
}
 @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection<?>) null);
      JSONArray jSONArray1 = jSONArray0.put((-1201.610880411483));
      ;
}
 @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray((Collection<?>) null);
      JSONArray jSONArray1 = jSONArray0.put((-1201.610880411483));
      ;
}
 @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      ;
}
 @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      ;
}
 @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      ;
}
 @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(0);
      ;
}
 @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(0);
      ;
}
 @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(0);
      ;
}
 @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(0);
      ;
}
 @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(0);
      ;
}
 @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(0);
      ;
}
 @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(0);
      ;
}
 @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      // Undeclared exception!
      try { 
        CDL.toJSONArray((JSONArray) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      // Undeclared exception!
      try { 
        CDL.toJSONArray((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      // Undeclared exception!
      try { 
        CDL.rowToString((JSONArray) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.json.CDL", e);
      }
  }
 @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      ;
}
 @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      ;
}
 @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      ;
}
 @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONTokener jSONTokener0 = new JSONTokener("?&s&#:TkzMf{");
      ;
}
 @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONTokener jSONTokener0 = new JSONTokener("?&s&#:TkzMf{");
      ;
}
 @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONTokener jSONTokener0 = new JSONTokener("?&s&#:TkzMf{");
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONTokener jSONTokener0 = new JSONTokener("?&s&#:TkzMf{");
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONTokener jSONTokener0 = new JSONTokener("?&s&#:TkzMf{");
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONTokener jSONTokener0 = new JSONTokener("?&s&#:TkzMf{");
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONTokener jSONTokener0 = new JSONTokener("?&s&#:TkzMf{");
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONTokener jSONTokener0 = new JSONTokener("?&s&#:TkzMf{");
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONTokener jSONTokener0 = new JSONTokener("?&s&#:TkzMf{");
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      // Undeclared exception!
      try { 
        CDL.rowToJSONObject((JSONArray) null, (JSONTokener) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.json.CDL", e);
      }
  }
 @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      // Undeclared exception!
      try { 
        CDL.rowToJSONArray((JSONTokener) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.json.CDL", e);
      }
  }
 @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-867), (byte)44);
      ;
}
 @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-867), (byte)44);
      ;
}
 @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-867), (byte)44);
      ;
}
 @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-867), (byte)44);
      ;
}
 @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-867), (byte)44);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-867), (byte)44);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-867), (byte)44);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-867), (byte)44);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-867), (byte)44);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      assertTrue(arrayDeque0.isEmpty());
}
 @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      ;
}
 @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      ;
}
 @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertEquals(0, jSONArray0.length());
}
 @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertNotNull(jSONArray0);
}
 @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertFalse(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      HashSet<Locale.Category> hashSet0 = new HashSet<Locale.Category>();
      ;
}
 @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      HashSet<Locale.Category> hashSet0 = new HashSet<Locale.Category>();
      ;
}
 @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      HashSet<Locale.Category> hashSet0 = new HashSet<Locale.Category>();
      ;
}
 @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      HashSet<Locale.Category> hashSet0 = new HashSet<Locale.Category>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) hashSet0);
      ;
}
 @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      HashSet<Locale.Category> hashSet0 = new HashSet<Locale.Category>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) hashSet0);
      ;
}
 @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      HashSet<Locale.Category> hashSet0 = new HashSet<Locale.Category>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) hashSet0);
      ;
}
 @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      HashSet<Locale.Category> hashSet0 = new HashSet<Locale.Category>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) hashSet0);
      ;
}
 @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      HashSet<Locale.Category> hashSet0 = new HashSet<Locale.Category>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) hashSet0);
      ;
}
 @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      HashSet<Locale.Category> hashSet0 = new HashSet<Locale.Category>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) hashSet0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, (JSONTokener) null);
      assertEquals(0, hashSet0.size());
}
 @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      HashSet<Locale.Category> hashSet0 = new HashSet<Locale.Category>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) hashSet0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, (JSONTokener) null);
      assertTrue(hashSet0.isEmpty());
}
 @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      HashSet<Locale.Category> hashSet0 = new HashSet<Locale.Category>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) hashSet0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, (JSONTokener) null);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      HashSet<Locale.Category> hashSet0 = new HashSet<Locale.Category>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) hashSet0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, (JSONTokener) null);
      ;
}
 @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      HashSet<Locale.Category> hashSet0 = new HashSet<Locale.Category>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) hashSet0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, (JSONTokener) null);
      ;
}
 @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      JSONArray jSONArray0 = CDL.toJSONArray((JSONArray) null, (JSONTokener) null);
      ;
}
 @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      ;
}
 @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      ;
}
 @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      ;
}
 @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      String string0 = CDL.rowToString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      String string0 = CDL.rowToString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      String string0 = CDL.rowToString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      String string0 = CDL.rowToString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      String string0 = CDL.rowToString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      String string0 = CDL.rowToString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      String string0 = CDL.rowToString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray(0);
      JSONArray jSONArray1 = jSONArray0.put(0, (Object) null);
      String string0 = CDL.rowToString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      ;
}
 @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      ;
}
 @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      ;
}
 @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      ;
}
 @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      ;
}
 @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      ;
}
 @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      ;
}
 @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      ;
}
 @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      ;
}
 @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      ;
}
 @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      String string0 = CDL.rowToString(jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      String string0 = CDL.rowToString(jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      String string0 = CDL.rowToString(jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      String string0 = CDL.rowToString(jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      String string0 = CDL.rowToString(jSONArray0);
      JSONTokener jSONTokener0 = new JSONTokener(string0);
      ;
}
 @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      String string0 = CDL.rowToString(jSONArray0);
      JSONTokener jSONTokener0 = new JSONTokener(string0);
      ;
}
 @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      String string0 = CDL.rowToString(jSONArray0);
      JSONTokener jSONTokener0 = new JSONTokener(string0);
      ;
}
 @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = jSONArray0.put(1955, (-362.26F));
      String string0 = CDL.rowToString(jSONArray0);
      JSONTokener jSONTokener0 = new JSONTokener(string0);
      ;
}
 @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      ;
}
 @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      ;
}
 @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      ;
}
 @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONTokener jSONTokener0 = new JSONTokener("");
      ;
}
 @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONTokener jSONTokener0 = new JSONTokener("");
      ;
}
 @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONTokener jSONTokener0 = new JSONTokener("");
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONTokener jSONTokener0 = new JSONTokener("");
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONTokener jSONTokener0 = new JSONTokener("");
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      assertTrue(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONTokener jSONTokener0 = new JSONTokener("");
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener0);
      assertNotNull(jSONObject0);
}
 @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("java.lang.String@0000000002,java.lang.String@0000000003,java.lang.String@0000000002\n");
      ;
}
 @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("java.lang.String@0000000002,java.lang.String@0000000003,java.lang.String@0000000002\n");
      ;
}
 @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("java.lang.String@0000000002,java.lang.String@0000000003,java.lang.String@0000000002\n");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("java.lang.String@0000000002,java.lang.String@0000000003,java.lang.String@0000000002\n");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertEquals(0, jSONArray0.length());
}
 @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("java.lang.String@0000000002,java.lang.String@0000000003,java.lang.String@0000000002\n");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("java.lang.String@0000000002,java.lang.String@0000000003,java.lang.String@0000000002\n");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertNotNull(jSONArray0);
}
 @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      ;
}
 @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      ;
}
 @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      ;
}
 @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      ;
}
 @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      JSONTokener jSONTokener0 = new JSONTokener(bufferedInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      JSONTokener jSONTokener0 = new JSONTokener(bufferedInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      JSONTokener jSONTokener0 = new JSONTokener(bufferedInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      JSONTokener jSONTokener0 = new JSONTokener(bufferedInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-84);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)98);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      JSONTokener jSONTokener0 = new JSONTokener(bufferedInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("\n");
      ;
}
 @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("\n");
      ;
}
 @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("\n");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertTrue(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("\n");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertNotNull(jSONArray0);
}
 @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      ;
}
 @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      ;
}
 @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertTrue(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertEquals(0, jSONArray0.length());
}
 @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertNotNull(jSONArray0);
}
 @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      JSONArray jSONArray1 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      ;
}
 @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      ;
}
 @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      ;
}
 @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertEquals(1, arrayDeque0.size());
}
 @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertTrue(arrayDeque0.isEmpty());
}
 @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertEquals(0, jSONArray0.length());
}
 @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertTrue(jSONArray1.isEmpty());
}
 @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      ;
}
 @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      ;
}
 @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      ;
}
 @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      ;
}
 @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      ;
}
 @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      ;
}
 @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      ;
}
 @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      ;
}
 @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      ;
}
 @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      assertEquals(0, arrayDeque0.size());
}
 @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      assertTrue(arrayDeque0.isEmpty());
}
 @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      assertEquals(0, jSONArray0.length());
}
 @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      assertFalse(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      assertTrue(jSONArray1.isEmpty());
}
 @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      ;
}
 @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      ;
}
 @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      assertTrue(jSONArray2.isEmpty());
}
 @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      ;
}
 @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      ;
}
 @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      assertEquals(jSONArray1, jSONArray2);
}
 @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      assertTrue(arrayDeque0.isEmpty());
}
 @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      assertTrue(jSONArray1.isEmpty());
}
 @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      JSONArray jSONArray2 = jSONArray1.put(2145.4F);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      ;
}
 @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      ;
}
 @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      ;
}
 @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      ;
}
 @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      ;
}
 @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      ;
}
 @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      ;
}
 @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      ;
}
 @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      assertNotNull(stack0.toString());
}
 @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      ;
}
 @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      ;
}
 @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      ;
}
 @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      ;
}
 @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      ;
}
 @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      assertTrue(stack0.isEmpty());
}
 @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      assertTrue(stack0.empty());
}
 @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      JSONArray jSONArray0 = new JSONArray((Collection<?>) stack0);
      String string0 = CDL.toString(jSONArray0, jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      String string0 = CDL.toString((JSONArray) null, (JSONArray) null);
      ;
}
 @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      ;
}
 @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      ;
}
 @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertEquals(0, arrayDeque0.size());
}
 @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertTrue(arrayDeque0.isEmpty());
}
 @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertFalse(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertEquals(1, jSONArray1.length());
}
 @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertTrue(jSONArray1.isEmpty());
}
 @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertEquals(jSONArray0, jSONArray1);
}
 @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray1);
      assertTrue(arrayDeque0.isEmpty());
}
 @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray1);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray1);
      assertTrue(jSONArray1.isEmpty());
}
 @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("sE\"<y");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("sE\"<y");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      String string0 = CDL.toString(jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      String string0 = CDL.toString(jSONArray0);
      assertTrue(arrayDeque0.isEmpty());
}
 @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      String string0 = CDL.toString(jSONArray0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      String string0 = CDL.toString(jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      String string0 = CDL.toString(jSONArray0);
      ;
}
 @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ;
}
 @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      ;
}
 @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      ;
}
 @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      ;
}
 @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      ;
}
 @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      ;
}
 @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      ;
}
 @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      ;
}
 @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      ;
}
 @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      ;
}
 @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertEquals(0, arrayDeque0.size());
}
 @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertTrue(arrayDeque0.isEmpty());
}
 @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertEquals(0, jSONArray0.length());
}
 @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertFalse(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertTrue(jSONArray1.isEmpty());
}
 @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      assertEquals(jSONArray0, jSONArray1);
}
 @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      assertTrue(arrayDeque0.isEmpty());
}
 @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      assertFalse(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      assertTrue(jSONArray1.isEmpty());
}
 @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      arrayDeque0.push("sE\"<y");
      boolean boolean0 = arrayDeque0.add("Unable to write JSONObject value for key: ");
      JSONArray jSONArray0 = new JSONArray((Iterable<?>) arrayDeque0);
      StringReader stringReader0 = new StringReader("Unable to write JSONObject value for key: ");
      JSONTokener jSONTokener0 = new JSONTokener(stringReader0);
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, jSONTokener0);
      String string0 = CDL.toString(jSONArray0, jSONArray1);
      ;
}
 @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      ;
}
 @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      ;
}
 @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertFalse(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertEquals(0, jSONArray0.length());
}
 @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(1, byteArrayInputStream0.available());
}
 @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
}
 @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      assertTrue(jSONTokener1.end());
}
 @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      assertEquals(jSONArray0, jSONTokener1);
}
 @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      ;
}
 @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      ;
}
 @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      ;
}
 @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      ;
}
 @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      assertTrue(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      ;
}
 @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      ;
}
 @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      assertTrue(jSONTokener1.end());
}
 @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      ;
}
 @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      assertTrue(jSONObject0.isEmpty());
}
 @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      assertNotNull(jSONObject0);
}
 @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      ;
}
 @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("~0");
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener1 = new JSONTokener(byteArrayInputStream0);
      JSONObject jSONObject0 = CDL.rowToJSONObject(jSONArray0, jSONTokener1);
      ;
}
 @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertEquals(0, jSONArray0.length());
}
 @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertTrue(jSONArray0.isEmpty());
}
 @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      assertNotNull(jSONArray0);
}
 @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)85;
      byteArray0[4] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONTokener jSONTokener0 = new JSONTokener(byteArrayInputStream0);
      JSONArray jSONArray0 = CDL.rowToJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      JSONArray jSONArray0 = CDL.toJSONArray("java.lang.String@0000000002\n");
      assertNotNull(jSONArray0);
}
 @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("\n");
      ;
}
 @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("\n");
      ;
}
 @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("\n");
      JSONArray jSONArray0 = CDL.toJSONArray(jSONTokener0);
      assertFalse(jSONTokener0.end());
}
 @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("\n");
      JSONArray jSONArray0 = CDL.toJSONArray(jSONTokener0);
      assertNotNull(jSONArray0);
}
 @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      try { 
        CDL.toJSONArray("' and insn^ad s'aw '");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Bad character 'a' (97). at 17 [character 18 line 1]
         //
         verifyException("org.json.JSONTokener", e);
      }
  }
 @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("' and instead saw '");
      ;
}
 @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("' and instead saw '");
      ;
}
 @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("' and instead saw '");
      JSONArray jSONArray0 = CDL.toJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      JSONTokener jSONTokener0 = new JSONTokener("' and instead saw '");
      JSONArray jSONArray0 = CDL.toJSONArray(jSONTokener0);
      ;
}
 @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      try { 
        CDL.toJSONArray("\"3Mwzuy0YyrO~<` K~A");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Missing close quote '\"'. at 19 [character 20 line 1]
         //
         verifyException("org.json.JSONTokener", e);
      }
  }
 @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      CDL cDL0 = new CDL();
  }
 @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      JSONArray jSONArray0 = new JSONArray();
      JSONArray jSONArray1 = CDL.toJSONArray(jSONArray0, "o");
      ;
}
}
