/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 06 14:33:28 GMT 2022
 */

package org.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.json.JSONException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONException_ESTest extends JSONException_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JSONException jSONException0 = null;
      try {
        jSONException0 = new JSONException((Throwable) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.json.JSONException", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JSONException jSONException0 = new JSONException((String) null);
      JSONException jSONException1 = new JSONException(jSONException0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JSONException jSONException0 = new JSONException((String) null);
      MockThrowable mockThrowable0 = new MockThrowable("", jSONException0);
      JSONException jSONException1 = new JSONException((String) null, mockThrowable0);
      ;
}
}
