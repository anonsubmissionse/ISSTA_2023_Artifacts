 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      long[] longArray0 = new long[0];
      List<Long> list0 = ArrayUtil.longAsList(longArray0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("KCvIl:4gfC}Qv9z");
      Class<String> class0 = String.class;
      String[] stringArray0 = ArrayUtil.toArray((List<String>) linkedList0, class0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Double[] doubleArray0 = new Double[0];
      MockRandom mockRandom0 = new MockRandom(0L);
      Double[] doubleArray1 = ArrayUtil.shuffle(doubleArray0, (Random) mockRandom0);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String[] stringArray1 = ArrayUtil.shuffle(stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object[] objectArray0 = ArrayUtil.newArray(class0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Double[] doubleArray0 = new Double[1];
      List<Double> list0 = ArrayUtil.asList((Double) null, doubleArray0);
      Class<Double> class0 = Double.TYPE;
      // Undeclared exception!
      try { 
        ArrayUtil.toArray((List<Double>) list0, (Class<Double>) class0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to [Ljava.lang.Object;
         //
         verifyException("org.springside.modules.utils.collection.ArrayUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        ArrayUtil.shuffle(objectArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(Integer.MIN_VALUE);
      Object[] objectArray0 = new Object[3];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        ArrayUtil.shuffle(objectArray0, (Random) mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArrayUtil.shuffle((String[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.collection.ArrayUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArrayUtil.newArray((Class<Integer>) null, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Integer> class0 = Integer.TYPE;
      // Undeclared exception!
      try { 
        ArrayUtil.newArray((Class<Integer>) class0, 0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to [Ljava.lang.Object;
         //
         verifyException("org.springside.modules.utils.collection.ArrayUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArrayUtil.intAsList((int[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.primitives.Ints", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArrayUtil.doubleAsList((double[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.primitives.Doubles", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Long long0 = new Long(2537L);
      // Undeclared exception!
      try { 
        ArrayUtil.concat((Long[]) null, long0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double[] doubleArray0 = new Double[3];
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        ArrayUtil.concat((Object[]) doubleArray0, (Object) integer0);
        fail("Expecting exception: ArrayStoreException");
      } catch(ArrayStoreException e) {
         //
         // java.lang.Integer
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArrayUtil.concat((Object) "U'f6^W?OqNN", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Double[] doubleArray0 = new Double[1];
      List<Double> list0 = ArrayUtil.asList(doubleArray0);
      // Undeclared exception!
      try { 
        ArrayUtil.concat((Object) list0, (Object[]) doubleArray0);
        fail("Expecting exception: ArrayStoreException");
      } catch(ArrayStoreException e) {
         //
         // java.util.Arrays$ArrayList
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Long long0 = new Long(0L);
      // Undeclared exception!
      try { 
        ArrayUtil.asList(long0, (Long[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String[] stringArray1 = ArrayUtil.concat(stringArray0, "U(am{ZjJ~1.sy+Aob");
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer[] integerArray0 = new Integer[1];
      Integer[] integerArray1 = ArrayUtil.shuffle(integerArray0, (Random) null);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Class<Double> class0 = Double.class;
      Double[] doubleArray0 = ArrayUtil.newArray(class0, 2678);
      List<Object> list0 = ArrayUtil.asList((Object) "^TT/vDR@a", (Object[]) doubleArray0);
      Class<Object> class1 = Object.class;
      // Undeclared exception!
      ArrayUtil.toArray(list0, class1);
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Class<Object> class0 = Object.class;
      Object[] objectArray0 = ArrayUtil.toArray((List<Object>) linkedList0, class0);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArrayUtil arrayUtil0 = new ArrayUtil();
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[19];
      List<Double> list0 = ArrayUtil.doubleAsList(doubleArray0);
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[2];
      List<Integer> list0 = ArrayUtil.intAsList(intArray0);
      assertEquals(0, list0.size());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Double double0 = new Double((-382.95281628811085));
      Double[] doubleArray0 = new Double[3];
      Double[] doubleArray1 = ArrayUtil.concat(double0, doubleArray0);
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArrayUtil.longAsList((long[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.primitives.Longs", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class<String> class0 = String.class;
      String[] stringArray0 = ArrayUtil.newArray(class0, 212);
      Object[] objectArray0 = ArrayUtil.shuffle((Object[]) stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArrayUtil.asList((String[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }
