 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.decrement();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[0];
      longAdder0.cells = striped64_CellArray0;
      longAdder0.increment();
      long long0 = longAdder0.sumThenReset();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.decrement();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[0];
      longAdder0.cells = striped64_CellArray0;
      longAdder0.increment();
      long long0 = longAdder0.sumThenReset();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      int[] intArray0 = new int[1];
      longAdder0.retryUpdate(1945L, intArray0, true);
      longAdder0.increment();
      int int0 = longAdder0.intValue();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.decrement();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.decrement();
      long long0 = longAdder0.sumThenReset();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.base = 1L;
      long long0 = longAdder0.sum();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.base = 1L;
      long long0 = longAdder0.sum();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.add((-4161L));
      long long0 = longAdder0.longValue();
      assertEquals(0, longAdder0.intValue());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.add((-4161L));
      long long0 = longAdder0.longValue();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      int[] intArray0 = new int[1];
      longAdder0.retryUpdate(1945L, intArray0, true);
      int int0 = longAdder0.intValue();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      int[] intArray0 = new int[1];
      longAdder0.retryUpdate(1945L, intArray0, true);
      int int0 = longAdder0.intValue();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[1];
      Striped64.Cell striped64_Cell0 = new Striped64.Cell((-2527L));
      striped64_CellArray0[0] = striped64_Cell0;
      longAdder0.cells = striped64_CellArray0;
      int int0 = longAdder0.intValue();
      assertEquals(0, longAdder0.shortValue());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[1];
      Striped64.Cell striped64_Cell0 = new Striped64.Cell((-2527L));
      striped64_CellArray0[0] = striped64_Cell0;
      longAdder0.cells = striped64_CellArray0;
      int int0 = longAdder0.intValue();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      long long0 = longAdder0.fn(0L, 0L);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      long long0 = longAdder0.fn(1674L, 1674L);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      long long0 = longAdder0.fn((-4), (-4));
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.add(1L);
      float float0 = longAdder0.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.add(1L);
      float float0 = longAdder0.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[1];
      Striped64.Cell striped64_Cell0 = new Striped64.Cell((-2527L));
      striped64_CellArray0[0] = striped64_Cell0;
      longAdder0.cells = striped64_CellArray0;
      float float0 = longAdder0.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[1];
      Striped64.Cell striped64_Cell0 = new Striped64.Cell((-2527L));
      striped64_CellArray0[0] = striped64_Cell0;
      longAdder0.cells = striped64_CellArray0;
      float float0 = longAdder0.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.base = 3149L;
      double double0 = longAdder0.doubleValue();
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.base = 3149L;
      double double0 = longAdder0.doubleValue();
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[1];
      longAdder0.casBusy();
      longAdder0.cells = striped64_CellArray0;
      // Undeclared exception!
      longAdder0.increment();
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[1];
      longAdder0.busy = (-466);
      longAdder0.cells = striped64_CellArray0;
      // Undeclared exception!
      longAdder0.decrement();
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[10];
      longAdder0.busy = 2919;
      longAdder0.cells = striped64_CellArray0;
      // Undeclared exception!
      longAdder0.add(2919);
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[1];
      Striped64.Cell striped64_Cell0 = new Striped64.Cell((-2527L));
      striped64_CellArray0[0] = striped64_Cell0;
      longAdder0.cells = striped64_CellArray0;
      long long0 = longAdder0.sum();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[1];
      longAdder0.cells = striped64_CellArray0;
      long long0 = longAdder0.sum();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[0];
      longAdder0.cells = striped64_CellArray0;
      longAdder0.increment();
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[0];
      longAdder0.cells = striped64_CellArray0;
      longAdder0.increment();
      long long0 = longAdder0.sumThenReset();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[0];
      longAdder0.cells = striped64_CellArray0;
      longAdder0.increment();
      long long0 = longAdder0.longValue();
      assertEquals(0, longAdder0.intValue());
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[0];
      longAdder0.cells = striped64_CellArray0;
      longAdder0.increment();
      long long0 = longAdder0.longValue();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[0];
      longAdder0.cells = striped64_CellArray0;
      long long0 = longAdder0.longValue();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[0];
      longAdder0.cells = striped64_CellArray0;
      longAdder0.increment();
      longAdder0.add((-4));
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[0];
      longAdder0.cells = striped64_CellArray0;
      longAdder0.add(0L);
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      float float0 = longAdder0.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      int int0 = longAdder0.intValue();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      String string0 = longAdder0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.reset();
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.decrement();
      double double0 = longAdder0.doubleValue();
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.decrement();
      double double0 = longAdder0.doubleValue();
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      double double0 = longAdder0.doubleValue();
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      int[] intArray0 = new int[9];
      longAdder0.busy = 2919;
      longAdder0.retryUpdate(2919, intArray0, false);
      ;
}
