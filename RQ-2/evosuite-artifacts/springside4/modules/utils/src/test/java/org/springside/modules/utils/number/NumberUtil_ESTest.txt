 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtil.toInt32(9223372036854775801L);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Int 9223372036854775801 out of range
         //
         verifyException("org.springside.modules.utils.number.NumberUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Long long0 = new Long(963L);
      String string0 = NumberUtil.toString(long0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Long long0 = NumberUtil.toLongObject("10.10", (Long) null);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Long long0 = new Long((-2097L));
      Long long1 = NumberUtil.toLongObject((String) null, long0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Long long0 = NumberUtil.toLongObject("0");
      Long long1 = NumberUtil.toLongObject("", long0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Long long0 = NumberUtil.toLongObject("16");
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Long long0 = NumberUtil.toLongObject("-1");
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)1;
      long long0 = NumberUtil.toLong(byteArray0);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-14);
      long long0 = NumberUtil.toLong(byteArray0);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      long long0 = NumberUtil.toLong(",ZlaE&=aK8wd,|", 0L);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      long long0 = NumberUtil.toLong("", (long) 101);
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long long0 = NumberUtil.toLong("963");
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long long0 = NumberUtil.toLong("-4824");
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = NumberUtil.toIntObject("#", (Integer) null);
      assertNotNull(integer0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = NumberUtil.toIntObject("fF/lG6h", integer0);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer(2602);
      Integer integer1 = NumberUtil.toIntObject("", integer0);
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = NumberUtil.toIntObject("0");
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = NumberUtil.toIntObject("375");
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = NumberUtil.toIntObject("-18");
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = NumberUtil.toInt32(3013L);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = NumberUtil.toInt32((-2558L));
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      int int0 = NumberUtil.toInt(byteArray0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)57;
      int int0 = NumberUtil.toInt(byteArray0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      int int0 = NumberUtil.toInt(byteArray0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = NumberUtil.toInt("", 2444);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = NumberUtil.toInt("-1", (-1));
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = NumberUtil.toInt("1");
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = NumberUtil.toInt("-1");
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Double double0 = NumberUtil.toDoubleObject("c'?EX", (Double) null);
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Double double0 = NumberUtil.toDoubleObject("0.0", (Double) null);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Double double0 = Double.valueOf(0.0);
      Double double1 = NumberUtil.toDoubleObject("-1", double0);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Double double0 = new Double(Double.NaN);
      Double double1 = NumberUtil.toDoubleObject("0X", double0);
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Double double0 = NumberUtil.toDoubleObject("NaN");
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Double double0 = NumberUtil.toDoubleObject("0");
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Double double0 = NumberUtil.toDoubleObject("-821");
      Double double1 = NumberUtil.toDoubleObject("3508.52", double0);
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = NumberUtil.toBytes((double) 0L);
      double double0 = NumberUtil.toDouble(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = NumberUtil.toBytes(943.6282657801108);
      double double0 = NumberUtil.toDouble(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-83);
      double double0 = NumberUtil.toDouble(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double double0 = NumberUtil.toDouble("", 163.7503210956698);
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      double double0 = NumberUtil.toDouble("", (-1.0));
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      double double0 = NumberUtil.toDouble("773");
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double double0 = NumberUtil.toDouble("-2570.03");
      ;
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      boolean boolean0 = NumberUtil.isNumber("#");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Long long0 = new Long(0L);
      Long long1 = NumberUtil.hexToLongObject("", long0);
      ;
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Long long0 = new Long(1594L);
      Long long1 = NumberUtil.hexToLongObject("", long0);
      ;
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Long long0 = NumberUtil.hexToLongObject("7");
      ;
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Long long0 = NumberUtil.hexToLongObject("-1");
      ;
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Integer integer0 = NumberUtil.hexToIntObject("", (Integer) null);
      ;
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Integer integer0 = new Integer((-1111));
      Integer integer1 = NumberUtil.hexToIntObject("", integer0);
      ;
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Integer integer0 = new Integer(491);
      Integer integer1 = NumberUtil.hexToIntObject("qi&/o\"SZ{KvEZP}", integer0);
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Integer integer0 = NumberUtil.hexToIntObject("0");
      ;
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Integer integer0 = NumberUtil.hexToIntObject("375");
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Integer integer0 = NumberUtil.hexToIntObject("-821");
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtil.toString((Integer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.number.NumberUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtil.toString((Double) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.number.NumberUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtil.toLong((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.primitives.Longs", e);
      }
  }
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtil.toInt((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.primitives.Ints", e);
      }
  }
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        NumberUtil.toDouble(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // array too small: 6 < 8
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtil.isHexNumber((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Long long0 = NumberUtil.hexToLongObject("0X", (Long) null);
      ;
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Long long0 = new Long((-5228L));
      Long long1 = NumberUtil.hexToLongObject("", long0);
      ;
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Integer integer0 = new Integer(1347);
      Integer integer1 = NumberUtil.hexToIntObject("", integer0);
      ;
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = NumberUtil.hexToIntObject("org.apache.commons.lang3.math.NumberUtils", integer0);
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Double double0 = new Double(1.0);
      Double double1 = NumberUtil.toDoubleObject("X}%^}S|RP[PR:z0~1%", double0);
      ;
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Double double0 = new Double(4110.31);
      Double double1 = NumberUtil.toDoubleObject("", double0);
      ;
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Long long0 = new Long(2366L);
      Long long1 = NumberUtil.toLongObject("8\"AAw", long0);
      ;
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      Integer integer1 = NumberUtil.toIntObject("org.springside.modules.utils.number.NumberUtil", integer0);
      ;
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = NumberUtil.toBytes(0L);
      long long0 = NumberUtil.toLong(byteArray0);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        NumberUtil.toLong(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // array too small: 5 < 8
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      int int0 = NumberUtil.toInt32(0L);
      ;
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtil.toInt32((-9223372036854775808L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Int -9223372036854775808 out of range
         //
         verifyException("org.springside.modules.utils.number.NumberUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Long long0 = NumberUtil.hexToLongObject("0");
      ;
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Integer integer0 = NumberUtil.hexToIntObject("8C)10P5Peb$sz,R%FF:");
      ;
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Double double0 = NumberUtil.toDoubleObject("");
      assertNotNull(double0);
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Long long0 = NumberUtil.toLongObject("8C)10P5Peb$sz,R%FF:");
      assertNotNull(long0);
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      boolean boolean0 = NumberUtil.isHexNumber("#WCyb(zhQZaOrD");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      boolean boolean0 = NumberUtil.isHexNumber("0XE*C.QNJC/zTr3i*>");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      boolean boolean0 = NumberUtil.isHexNumber("0x");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      boolean boolean0 = NumberUtil.isHexNumber("-,nZ]}qBG7C8c(I@1K");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Integer integer0 = Integer.valueOf(282);
      String string0 = NumberUtil.toString(integer0);
      ;
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      NumberUtil numberUtil0 = new NumberUtil();
  }
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      String string0 = NumberUtil.to2DigitString(0);
      ;
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Double double0 = NumberUtil.toDoubleObject("99.0");
      ;
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Double double0 = new Double(0);
      String string0 = NumberUtil.toString(double0);
      ;
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Integer integer0 = NumberUtil.toIntObject("m@F~BbS*'~p'_");
      ;
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Long long0 = NumberUtil.hexToLongObject("");
      ;
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      boolean boolean0 = NumberUtil.isNumber("282");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      int int0 = NumberUtil.toInt("", 0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtil.toDouble((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.primitives.Longs", e);
      }
  }
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtil.toString((Long) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.number.NumberUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      long long0 = NumberUtil.toLong("", (-1161L));
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      double double0 = NumberUtil.toDouble("0");
      ;
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        NumberUtil.toInt(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // array too small: 2 < 4
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      String string0 = NumberUtil.toString(0L);
      ;
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      double double0 = NumberUtil.toDouble((String) null, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      String string0 = NumberUtil.toString(0.0);
      ;
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      byte[] byteArray0 = NumberUtil.toBytes(14);
      ;
}
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      String string0 = NumberUtil.toString(10);
      ;
}
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      long long0 = NumberUtil.toLong("0.0");
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      int int0 = NumberUtil.toInt("");
      assertEquals(0, int0);
}
