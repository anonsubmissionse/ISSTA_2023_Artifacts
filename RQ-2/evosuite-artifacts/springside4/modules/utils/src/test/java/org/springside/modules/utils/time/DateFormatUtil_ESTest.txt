 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      System.setCurrentTimeMillis((-152668800000L));
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(9223372036854775763L);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      System.setCurrentTimeMillis(60052L);
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(23L);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(1392405681320L);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      System.setCurrentTimeMillis(676L);
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow((-324L));
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = DateFormatUtil.formatDurationOnSecond(1L);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockDate mockDate0 = new MockDate(378, 378, (-663), 378, 80);
      String string0 = DateFormatUtil.formatDate("", (Date) mockDate0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String string0 = DateFormatUtil.formatDate("1\u5206\u949F\u524D", 60052L);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      try { 
        DateFormatUtil.pareDate("yyyy-MM-dd'T'HH:mm:ssZZ", "yyyy-MM-dd");
        fail("Expecting exception: ParseException");
      } catch(ParseException e) {
         //
         // Unparseable date: yyyy-MM-dd
         //
         verifyException("org.apache.commons.lang3.time.FastDateParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.pareDate("M=zh", "2562047788015java.lang.StringBuilder@000000000612java.lang.StringBuilder@000000000755");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
         //
         // For input string: \"2562047788015\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.pareDate("yyy-MM-dd'T'HHmm:ss.SSSZZ", (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.time.FastDateParser$NumberStrategy", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.pareDate((String) null, "-f*SQ*1{1L=M");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // pattern must not be null
         //
         verifyException("org.apache.commons.lang3.time.FormatCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.pareDate("00java.lang.StringBuilder@000000000600java.lang.StringBuilder@000000000700", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern component: j
         //
         verifyException("org.apache.commons.lang3.time.FastDatePrinter", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatFriendlyTimeSpanByNow((Date) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.time.DateFormatUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "z+mJ-::e!UTSL}1LE ");
      System.setCurrentTimeMillis((-9223372036854773995L));
      // Undeclared exception!
      try { 
        DateFormatUtil.formatFriendlyTimeSpanByNow(date0);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // Calendar value too large for accurate calculations
         //
         verifyException("org.apache.commons.lang3.time.DateUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClockUtil.useDummyClock(9223372036854775807L);
      // Undeclared exception!
      try { 
        DateFormatUtil.formatFriendlyTimeSpanByNow((long) 60);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // Calendar value too large for accurate calculations
         //
         verifyException("org.apache.commons.lang3.time.DateUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDurationOnSecond((Date) null, (Date) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.time.DateFormatUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate(749, 62, (-1), (-2182), 62, Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDurationOnSecond((Date) mockDate1, (Date) mockDate0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDuration((Date) null, (Date) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.time.DateFormatUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate(749, 62, (-1), (-2182), 62, Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDuration((Date) mockDate1, (Date) mockDate0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDuration((-674L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDate("1969-12-31", (Date) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "");
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDate((String) null, date0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // pattern must not be null
         //
         verifyException("org.apache.commons.lang3.time.FormatCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDate("org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral", (Date) mockDate0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern component: o
         //
         verifyException("org.apache.commons.lang3.time.FastDatePrinter", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDate((String) null, 224L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // pattern must not be null
         //
         verifyException("org.apache.commons.lang3.time.FormatCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDate("Sun Aug 17 07:12:55 GMT 292278994", 0L);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern component: n
         //
         verifyException("org.apache.commons.lang3.time.FastDatePrinter", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      System.setCurrentTimeMillis(1801L);
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(1801L);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      System.setCurrentTimeMillis(60000L);
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(0L);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow((-1792L));
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(9223372036854775807L);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DateFormatUtil dateFormatUtil0 = new DateFormatUtil();
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockDate mockDate0 = new MockDate(363, 363, 363, 363, (-1149), (-1149));
      String string0 = DateFormatUtil.formatDurationOnSecond((Date) mockDate0, (Date) mockDate0);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = DateFormatUtil.formatDuration(363L);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "z+mJ-::e!UTSL}1LE ");
      String string0 = DateFormatUtil.formatDuration(date0, date0);
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDurationOnSecond((-3289L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = DateFormatUtil.formatDate("", (-1792L));
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "z+mJ-::e!UTSL}1LE ");
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(date0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockDate mockDate0 = new MockDate(363, 363, 363, 363, (-1149), (-1149));
      String string0 = DateFormatUtil.formatDate("1969-12-31", (Date) mockDate0);
      assertNotNull(string0);
}
