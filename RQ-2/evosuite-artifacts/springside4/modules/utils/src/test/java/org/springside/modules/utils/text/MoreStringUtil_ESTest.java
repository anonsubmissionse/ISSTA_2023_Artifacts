/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 07 03:47:32 GMT 2022
 */

package org.springside.modules.utils.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springside.modules.utils.text.MoreStringUtil;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MoreStringUtil_ESTest extends MoreStringUtil_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = MoreStringUtil.removeEnd("wpzyb76GBoZOVVc", '.');
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3326);
      boolean boolean0 = MoreStringUtil.startWith(charBuffer0, 'h');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = MoreStringUtil.replaceLast("wpzyb76GBoZOVVc", 'w', 'u');
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = MoreStringUtil.replaceFirst("org.springside.modules.utils.text.MoreStringUtil", 'x', '6');
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      List<String> list0 = MoreStringUtil.split("...", '.', 0);
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = MoreStringUtil.replaceLast("", 'w', 'u');
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String string0 = MoreStringUtil.removeEnd((String) null, 'R');
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String string0 = MoreStringUtil.removeEnd("", 'Q');
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(55296);
      // Undeclared exception!
      MoreStringUtil.utf8EncodedLength(charBuffer0);
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(833);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      char[] charArray0 = new char[6];
      charBuffer0.get(charArray0);
      // Undeclared exception!
      try { 
        MoreStringUtil.utf8EncodedLength(charBuffer1);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreStringUtil.split("_O}Io14?3a@@hq", 'I', (-1694));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1694
         //
         verifyException("java.util.ArrayList", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[5] = 'd';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = MoreStringUtil.endWith(charBuffer0, 'd');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = MoreStringUtil.endWith("wpzyb76GBoZOVVc", 'w');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = MoreStringUtil.utf8EncodedLength("");
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = MoreStringUtil.utf8EncodedLength("wEBBBOYNc");
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = MoreStringUtil.removeEnd("_O}Io14?3a@@hqI", 'I');
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = MoreStringUtil.endWith("", '.');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = MoreStringUtil.startWith("wEBBBOYNc", '.');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = MoreStringUtil.startWith("", '.');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = MoreStringUtil.startWith("wEBBBOYNc", 'w');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = MoreStringUtil.replaceLast((String) null, '&', '&');
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = MoreStringUtil.replaceFirst((String) null, 'E', '&');
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = MoreStringUtil.replaceFirst("", '.', 'w');
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      List<String> list0 = MoreStringUtil.split("4W,m|;E", 'E', '&');
      assertEquals(0, list0.size());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      List<String> list0 = MoreStringUtil.split("4W,m|;E", 'E', '&');
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      List<String> list0 = MoreStringUtil.split("", '.', 'w');
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      List<String> list0 = MoreStringUtil.split((String) null, '&', 'E');
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      List<String> list0 = MoreStringUtil.split("wEBBBOYNc", 'w', 'w');
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      List<String> list0 = MoreStringUtil.split("wEBBBOYNc", 'w', 'w');
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      List<String> list0 = MoreStringUtil.split("wEBBBOYNc", 'w', 'w');
      assertEquals(0, list0.size());
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MoreStringUtil moreStringUtil0 = new MoreStringUtil();
  }
}
