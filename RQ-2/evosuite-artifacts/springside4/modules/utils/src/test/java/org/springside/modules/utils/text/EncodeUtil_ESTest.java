/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 07 04:06:03 GMT 2022
 */

package org.springside.modules.utils.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springside.modules.utils.text.EncodeUtil;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EncodeUtil_ESTest extends EncodeUtil_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = EncodeUtil.encodeHex(byteArray0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      CharBuffer.allocate(100000000);
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'B';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer1.duplicate();
      charBuffer0.append('B');
      charBuffer0.chars();
      // Undeclared exception!
      try { 
        EncodeUtil.decodeBase64UrlSafe(charBuffer1);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3655);
      // Undeclared exception!
      try { 
        EncodeUtil.decodeBase64UrlSafe(charBuffer0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Unrecognized character: 0x0
         //
         verifyException("com.google.common.io.BaseEncoding", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      // Undeclared exception!
      CharBuffer.allocate(100000000);
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-77);
      EncodeUtil.encodeBase64(byteArray0);
      EncodeUtil.encodeHex(byteArray0);
      EncodeUtil.encodeBase64UrlSafe(byteArray0);
      EncodeUtil.encodeBase64(byteArray0);
      EncodeUtil.decodeHex("041D1A00B3");
      EncodeUtil.encodeBase64(byteArray0);
      EncodeUtil encodeUtil0 = new EncodeUtil();
      CharSequence charSequence0 = null;
      // Undeclared exception!
      try { 
        EncodeUtil.decodeBase64((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.CharMatcher", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = EncodeUtil.encodeBase64UrlSafe(byteArray0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = EncodeUtil.encodeBase64UrlSafe(byteArray0);
      byte[] byteArray1 = new byte[0];
      EncodeUtil.encodeBase64UrlSafe(byteArray1);
      byte[] byteArray2 = EncodeUtil.decodeHex("");
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      EncodeUtil.encodeBase64(byteArray0);
      EncodeUtil encodeUtil0 = new EncodeUtil();
      EncodeUtil.decodeBase64UrlSafe("");
      byte[] byteArray1 = EncodeUtil.decodeBase64("");
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-4);
      EncodeUtil.encodeBase64(byteArray0);
      byte[] byteArray1 = EncodeUtil.decodeBase64("/A==");
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncodeUtil.encodeHex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.io.BaseEncoding", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(810);
      // Undeclared exception!
      try { 
        EncodeUtil.decodeBase64(charBuffer0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Unrecognized character: 0x0
         //
         verifyException("com.google.common.io.BaseEncoding", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncodeUtil.decodeBase64UrlSafe((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.CharMatcher", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)21;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-2);
      byteArray0[7] = (byte) (-93);
      EncodeUtil.encodeBase64(byteArray0);
      // Undeclared exception!
      try { 
        EncodeUtil.decodeHex("CiYVAAL//qM=");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Unrecognized character: i
         //
         verifyException("com.google.common.io.BaseEncoding", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        EncodeUtil.encodeBase64((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.io.BaseEncoding", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharSequence charSequence0 = null;
      // Undeclared exception!
      try { 
        EncodeUtil.decodeHex((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.CharMatcher$None", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EncodeUtil encodeUtil0 = new EncodeUtil();
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncodeUtil.decodeBase64((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.CharMatcher", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncodeUtil.encodeBase64((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.io.BaseEncoding", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)87;
      EncodeUtil.encodeHex(byteArray0);
      byte[] byteArray1 = EncodeUtil.decodeBase64UrlSafe("57");
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncodeUtil.encodeBase64UrlSafe((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.io.BaseEncoding", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(10000);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 10000, 10000);
      char[] charArray0 = new char[3];
      charArray0[0] = 'X';
      charArray0[1] = '[';
      charArray0[2] = '!';
      charBuffer0.put(charArray0, 0, 1);
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) charBuffer1);
      // Undeclared exception!
      try { 
        EncodeUtil.decodeHex(charBuffer2);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
