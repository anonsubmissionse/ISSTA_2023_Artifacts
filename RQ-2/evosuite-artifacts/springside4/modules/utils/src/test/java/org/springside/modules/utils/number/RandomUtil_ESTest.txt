 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RandomUtil.nextInt(3809, 3809);
      // Undeclared exception!
      RandomUtil.randomLetterRandomLength(55296, 56191);
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int int0 = 0;
      RandomUtil.randomAsciiRandomLength(0, 0);
      RandomUtil.nextDouble((double) 0);
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.nextInt(random0);
      // Undeclared exception!
      RandomUtil.randomStringRandomLength(0, 1297702057);
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Random random0 = null;
      int int0 = 3;
      // Undeclared exception!
      try { 
        RandomUtil.randomAsciiRandomLength((Random) null, 3, 3);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.nextDouble((Random) secureRandom0);
      RandomUtil.nextLong();
      RandomUtil.nextInt((Random) secureRandom0);
      RandomUtil.nextInt();
      RandomUtil.nextLong();
      RandomUtil.nextLong((Random) secureRandom0, 2711823761200807602L);
      RandomUtil.nextLong(2711823761200807602L, 2711823761200807602L);
      RandomUtil randomUtil0 = new RandomUtil();
      // Undeclared exception!
      RandomUtil.randomStringFixLength((Random) secureRandom0, 563521819);
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomUtil.randomLetterFixLength((Random) null, (-2112));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -2112 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RandomUtil.secureRandom();
      RandomUtil.nextLong(967L);
      int int0 = 329;
      RandomUtil.randomAsciiFixLength(329);
      RandomUtil randomUtil0 = new RandomUtil();
      RandomUtil.nextLong();
      // Undeclared exception!
      try { 
        RandomUtil.nextDouble((Random) null, (double) 522L, (double) 967L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.number.RandomUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RandomUtil.nextDouble(1.0);
      RandomUtil.nextLong(0L);
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints();
      RandomUtil.nextLong((Random) mockRandom0);
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.randomLetterFixLength(random0, 3256);
      // Undeclared exception!
      try { 
        RandomUtil.nextInt((-262));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // bound must be positive
         //
         verifyException("java.util.concurrent.ThreadLocalRandom", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      // Undeclared exception!
      RandomUtil.randomStringRandomLength(1034, 56192);
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      int int0 = 56319;
      // Undeclared exception!
      RandomUtil.randomAsciiRandomLength((Random) secureRandom0, 56319, 56319);
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      int int0 = 55296;
      RandomUtil.nextInt(55296);
      RandomUtil.nextLong();
      RandomUtil.nextLong(random0, 1311L);
      RandomUtil.nextLong(random0);
      Random random1 = null;
      // Undeclared exception!
      try { 
        RandomUtil.randomLetterRandomLength((Random) null, 55296, 55296);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.nextDouble(random0);
      int int0 = 55296;
      // Undeclared exception!
      RandomUtil.randomStringFixLength(55296);
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 1435;
      int int1 = 1860;
      RandomUtil.randomAsciiFixLength(1860);
      RandomUtil.threadLocalRandom();
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.nextLong((Random) secureRandom0, (long) 1860, (long) 1860);
      RandomUtil.nextLong();
      // Undeclared exception!
      try { 
        RandomUtil.nextLong((Random) null, (long) 1860);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.number.RandomUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RandomUtil.nextInt();
      MockRandom mockRandom0 = new MockRandom();
      RandomUtil.nextInt((Random) mockRandom0, 2117569878);
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.nextLong(random0, 196L);
      // Undeclared exception!
      RandomUtil.randomLetterRandomLength(random0, 659, 2146996137);
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RandomUtil.randomLetterFixLength(0);
      // Undeclared exception!
      try { 
        RandomUtil.nextDouble(3104.1188297073, (-847.08926));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.nextDouble(random0);
      int int0 = 55296;
      // Undeclared exception!
      RandomUtil.randomStringRandomLength(random0, 55296, 55296);
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomUtil.randomStringFixLength((Random) null, 1146);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RandomUtil.nextLong(1649L);
      RandomUtil.randomStringRandomLength(2, 2);
      // Undeclared exception!
      try { 
        RandomUtil.randomAsciiFixLength((Random) null, 1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.nextInt(random0);
      // Undeclared exception!
      RandomUtil.randomAsciiFixLength(1715279914);
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.nextInt(random0);
      // Undeclared exception!
      RandomUtil.randomLetterFixLength(710991742);
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RandomUtil.nextLong();
      MockRandom mockRandom0 = new MockRandom((-1L));
      RandomUtil.nextInt((Random) mockRandom0);
      mockRandom0.longs();
      RandomUtil.nextInt((Random) mockRandom0, 55296, 55296);
      RandomUtil.nextDouble((double) 0, (double) 0);
      // Undeclared exception!
      RandomUtil.randomAsciiRandomLength(2002, 55296);
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.nextLong(random0, 0L);
      RandomUtil.nextLong(0L, 0L);
      // Undeclared exception!
      try { 
        RandomUtil.nextLong((Random) null, 0L, 4404L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.number.RandomUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 128;
      RandomUtil.randomStringRandomLength(128, 128);
      // Undeclared exception!
      RandomUtil.randomLetterFixLength(56191);
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.nextLong(random0, 0L);
      RandomUtil.nextLong(0L, 0L);
      RandomUtil.nextLong(random0, 0L, 4404L);
      RandomUtil.nextInt();
      // Undeclared exception!
      RandomUtil.randomAsciiRandomLength(1870379656, 1870379656);
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.randomLetterRandomLength(519, 519);
      RandomUtil.nextLong();
      RandomUtil.nextLong((Random) secureRandom0, (long) 519, (long) 519);
      RandomUtil.nextLong();
      RandomUtil.randomStringFixLength((Random) secureRandom0, 519);
      // Undeclared exception!
      try { 
        RandomUtil.nextDouble((Random) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.number.RandomUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RandomUtil.nextLong(1649L);
      RandomUtil.nextDouble();
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints();
      mockRandom0.nextInt();
      mockRandom0.nextLong();
      RandomUtil.nextLong((Random) mockRandom0, 1361L, 1361L);
      RandomUtil.nextLong((Random) mockRandom0);
      // Undeclared exception!
      RandomUtil.randomLetterRandomLength((Random) mockRandom0, 127, 2809);
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      RandomUtil.randomStringFixLength(2140253063);
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RandomUtil randomUtil0 = new RandomUtil();
      MockRandom mockRandom0 = new MockRandom((-1L));
      // Undeclared exception!
      RandomUtil.randomLetterFixLength((Random) mockRandom0, 2146274479);
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.randomAsciiFixLength(random0, 0);
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        RandomUtil.randomAsciiFixLength(random0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Random random0 = null;
      int int0 = 1435;
      int int1 = 1860;
      // Undeclared exception!
      try { 
        RandomUtil.randomStringRandomLength((Random) null, 1435, 1860);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.number.RandomUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      mockRandom0.ints(0L);
      mockRandom0.longs(772L);
      mockRandom0.nextBoolean();
      RandomUtil.nextDouble((Random) mockRandom0);
      RandomUtil.nextInt((Random) mockRandom0);
      RandomUtil.nextDouble((Random) mockRandom0, (double) 0L);
      // Undeclared exception!
      try { 
        RandomUtil.nextLong((long) 1, (-2595L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.nextInt(random0);
      // Undeclared exception!
      RandomUtil.randomLetterRandomLength(1320257437, 1320257437);
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.nextDouble(random0);
      RandomUtil.threadLocalRandom();
      RandomUtil.randomAsciiRandomLength(random0, 5, 5);
      RandomUtil.nextLong();
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      // Undeclared exception!
      try { 
        RandomUtil.nextDouble((Random) secureRandom0, 1.5225382634107136E308, (double) 6263472997288439031L);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RandomUtil.randomAsciiRandomLength(0, 0);
      RandomUtil.nextLong();
      RandomUtil.nextInt();
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[0];
      mockRandom0.nextBytes(byteArray0);
      // Undeclared exception!
      try { 
        RandomUtil.nextInt((Random) mockRandom0, 0);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Random random0 = null;
      int int0 = 4185;
      // Undeclared exception!
      try { 
        RandomUtil.randomLetterFixLength((Random) null, 4185);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.nextLong(random0, 2903L, 2903L);
      RandomUtil randomUtil0 = new RandomUtil();
      RandomUtil.nextLong(random0, 894L);
      RandomUtil.secureRandom();
      RandomUtil.nextDouble(random0, (double) 2903L);
      int int0 = 4956;
      RandomUtil.randomAsciiFixLength(4956);
      // Undeclared exception!
      RandomUtil.randomLetterFixLength(random0, 4956);
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RandomUtil.nextLong(0L, 160L);
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.randomStringRandomLength((Random) secureRandom0, 329, 329);
      RandomUtil.nextInt(1328);
      // Undeclared exception!
      try { 
        RandomUtil.randomAsciiRandomLength(1, 0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RandomUtil randomUtil0 = new RandomUtil();
      RandomUtil.nextDouble((Random) null, 0.0);
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.nextLong((Random) secureRandom0, 453L, 453L);
      RandomUtil.randomLetterRandomLength(0, 32);
      RandomUtil.nextLong((Random) secureRandom0, (long) 0, (long) 0);
      RandomUtil.randomAsciiFixLength(32);
      RandomUtil.randomLetterFixLength((Random) secureRandom0, 0);
      // Undeclared exception!
      try { 
        RandomUtil.nextInt((Random) null, 32);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.number.RandomUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomUtil.nextLong((Random) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.number.RandomUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RandomUtil.nextDouble();
      Random random0 = null;
      // Undeclared exception!
      try { 
        RandomUtil.nextInt((Random) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.number.RandomUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomUtil.nextDouble((-819.321022352));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      int int0 = (-1034);
      // Undeclared exception!
      try { 
        RandomUtil.nextInt((Random) secureRandom0, 775, (-1034));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      int int0 = 1105;
      // Undeclared exception!
      try { 
        RandomUtil.randomLetterRandomLength((Random) secureRandom0, 1105, 0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RandomUtil.threadLocalRandom();
      // Undeclared exception!
      try { 
        RandomUtil.nextLong((-1L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = 0;
      RandomUtil.randomStringFixLength(0);
      RandomUtil.nextInt(0, 0);
      Random random0 = RandomUtil.threadLocalRandom();
      int int1 = 2593;
      RandomUtil.randomAsciiRandomLength(random0, 1, 2593);
      int int2 = (-3988);
      // Undeclared exception!
      try { 
        RandomUtil.randomAsciiFixLength((-3988));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -3988 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.randomAsciiRandomLength((Random) secureRandom0, 0, 0);
      RandomUtil.nextInt((Random) secureRandom0, 0, 0);
      RandomUtil.nextInt((Random) secureRandom0);
      RandomUtil.randomStringFixLength((Random) secureRandom0, 0);
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RandomUtil.nextInt(0, 0);
      MockRandom mockRandom0 = new MockRandom(0);
      RandomUtil.randomStringFixLength((Random) mockRandom0, 0);
  }
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = (-252);
      // Undeclared exception!
      try { 
        RandomUtil.nextInt((-252), (-252));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // min (-252) must be >= 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RandomUtil.nextInt();
      RandomUtil.nextDouble((double) 1204794308, (double) 1204794308);
      int int0 = (-590);
      // Undeclared exception!
      try { 
        RandomUtil.randomStringRandomLength(1204794308, (-590));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RandomUtil.nextLong(2697L, 2697L);
      MockRandom mockRandom0 = new MockRandom((-1975L));
      // Undeclared exception!
      try { 
        RandomUtil.nextLong((Random) mockRandom0, (-320L), (-3395L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RandomUtil.nextDouble(0.0);
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)53;
      mockRandom0.nextBytes(byteArray0);
      int int0 = (-404);
      // Undeclared exception!
      try { 
        RandomUtil.randomStringRandomLength((Random) mockRandom0, (-404), (-404));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // min (-404) must be >= 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte) (-1);
      mockRandom0.setSeed((-219L));
      byteArray0[2] = (byte) (-118);
      byteArray0[3] = (byte)104;
      byte byte0 = (byte) (-102);
      byteArray0[4] = (byte) (-102);
      mockRandom0.nextBytes(byteArray0);
      // Undeclared exception!
      try { 
        RandomUtil.randomStringFixLength((Random) mockRandom0, (-1720));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1720 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = 0;
      int int1 = (-1666);
      // Undeclared exception!
      try { 
        RandomUtil.randomLetterRandomLength(0, (-1666));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int int0 = 2607;
      RandomUtil.nextInt(2607, 2607);
      Random random0 = null;
      // Undeclared exception!
      try { 
        RandomUtil.nextDouble((Random) null, (double) 2607);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.number.RandomUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      int int0 = (-1);
      // Undeclared exception!
      try { 
        RandomUtil.randomStringFixLength((-1));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RandomUtil.randomStringFixLength(2445);
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.nextInt(random0, 2445, 2445);
      RandomUtil.nextDouble();
      RandomUtil.nextLong(random0);
      org.evosuite.runtime.Random.setNextRandom(2445);
      RandomUtil.randomLetterRandomLength(random0, 33, 33);
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.nextLong((Random) secureRandom0, 1L, 1088193035458566341L);
      RandomUtil.nextDouble(random0);
  }
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RandomUtil.randomStringFixLength(1918);
  }
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RandomUtil.randomLetterRandomLength(0, 0);
  }
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.randomStringRandomLength((Random) secureRandom0, 0, 0);
      RandomUtil.nextDouble((Random) secureRandom0, (double) 0, 0.0);
      RandomUtil.threadLocalRandom();
  }
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RandomUtil.nextInt(1473, 1473);
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.nextLong((Random) secureRandom0, 1L, (long) 1473);
      RandomUtil.randomLetterFixLength((Random) secureRandom0, 1);
      RandomUtil.randomStringRandomLength(1473, 1473);
      RandomUtil.randomLetterFixLength(1);
      RandomUtil.nextDouble((Random) secureRandom0, (double) 1473);
      RandomUtil.nextDouble(399.08084382068);
  }
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RandomUtil.nextLong();
      RandomUtil.nextLong(3442719305266370418L, 3442719305266370418L);
      RandomUtil.nextInt(127, 127);
      Random random0 = RandomUtil.threadLocalRandom();
      // Undeclared exception!
      try { 
        RandomUtil.nextDouble(random0, (-3430.68));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.nextInt((Random) secureRandom0);
      RandomUtil.nextDouble();
      RandomUtil.nextLong();
      // Undeclared exception!
      try { 
        RandomUtil.nextInt((Random) secureRandom0, (-1225));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // bound must be positive
         //
         verifyException("java.util.Random", e);
      }
  }
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomUtil.randomLetterFixLength((-1));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -1 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RandomUtil.randomLetterFixLength(4626);
      RandomUtil.nextInt();
      // Undeclared exception!
      RandomUtil.randomAsciiFixLength(4626);
  }
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RandomUtil.nextInt();
      RandomUtil.threadLocalRandom();
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomUtil.randomAsciiRandomLength((Random) mockRandom0, 1680996266, 1680996266);
  }
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      RandomUtil.randomLetterRandomLength((Random) mockRandom0, 0, 0);
  }
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      // Undeclared exception!
      try { 
        RandomUtil.randomStringFixLength((-750));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Requested random string length -750 is less than 0.
         //
         verifyException("org.apache.commons.lang3.RandomStringUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.nextDouble((Random) secureRandom0, 0.0);
  }
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int int0 = 566;
      RandomUtil.randomAsciiRandomLength(566, 566);
      RandomUtil.secureRandom();
      int int1 = 0;
      // Undeclared exception!
      try { 
        RandomUtil.nextInt((Random) null, 0, 2768);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.number.RandomUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.nextLong(967L);
      RandomUtil.randomAsciiFixLength(329);
      RandomUtil randomUtil0 = new RandomUtil();
      RandomUtil.nextLong();
      RandomUtil.nextDouble((Random) secureRandom0, (double) 463L, 921.179631);
      RandomUtil.randomLetterFixLength(329);
      RandomUtil.nextInt((Random) secureRandom0, 329);
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.randomStringFixLength(random0, 128);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextBoolean();
      RandomUtil.randomAsciiRandomLength((Random) mockRandom0, 128, 329);
      RandomUtil.nextInt((Random) secureRandom0, 128);
      RandomUtil.nextInt((Random) mockRandom0);
      RandomUtil.randomAsciiFixLength(329);
      // Undeclared exception!
      try { 
        RandomUtil.randomAsciiRandomLength((Random) mockRandom0, 3056, 329);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      RandomUtil.randomAsciiRandomLength(1, 1);
      RandomUtil.nextInt(1);
  }
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RandomUtil.randomAsciiFixLength(0);
  }
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RandomUtil.nextInt(668);
  }
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      RandomUtil.nextInt();
      RandomUtil.nextDouble();
  }
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      RandomUtil randomUtil0 = new RandomUtil();
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      RandomUtil.randomStringFixLength((Random) mockRandom0, 2363);
  }
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      RandomUtil.nextInt(127, 127);
      RandomUtil.nextDouble((double) 127);
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.nextDouble(random0);
  }
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      // Undeclared exception!
      RandomUtil.randomAsciiFixLength((Random) secureRandom0, 55280);
  }
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      // Undeclared exception!
      try { 
        RandomUtil.nextLong(random0, (-1L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      RandomUtil.randomStringRandomLength(0, 0);
      RandomUtil.nextLong((long) 0, (long) 0);
  }
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.nextDouble((Random) secureRandom0);
      // Undeclared exception!
      try { 
        RandomUtil.nextDouble(1.5117351229002655E308, (-3496.0));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      RandomUtil.secureRandom();
      RandomUtil.nextInt();
  }
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      int int0 = 1047;
      RandomUtil.randomStringRandomLength((Random) secureRandom0, 1047, 1047);
      RandomUtil.nextLong();
      RandomUtil.randomLetterFixLength(1047);
      RandomUtil.nextLong(7938411704637062081L);
      RandomUtil.randomAsciiFixLength((Random) secureRandom0, 1047);
      RandomUtil.nextDouble();
      RandomUtil.nextDouble((Random) secureRandom0, 1307.656);
      int int1 = 1;
      RandomUtil.randomLetterRandomLength(1, 1047);
      RandomUtil.nextLong();
      long long0 = (-61L);
      // Undeclared exception!
      try { 
        RandomUtil.nextLong((Random) secureRandom0, (-61L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Random random0 = RandomUtil.threadLocalRandom();
      int int0 = 55296;
      RandomUtil.nextLong();
      RandomUtil.nextLong(random0, 1311L);
      RandomUtil.nextLong(random0);
      // Undeclared exception!
      RandomUtil.randomLetterRandomLength(random0, 55296, 55296);
  }
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      int int0 = 566;
      RandomUtil.randomAsciiRandomLength(566, 566);
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      int int1 = 0;
      RandomUtil.randomAsciiFixLength(0);
      RandomUtil.randomStringFixLength(0);
      int int2 = (-11);
      // Undeclared exception!
      try { 
        RandomUtil.nextDouble((Random) secureRandom0, (double) 566, (-1244.133967191));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.randomAsciiFixLength(329);
      RandomUtil randomUtil0 = new RandomUtil();
      RandomUtil.nextDouble((double) 329, (double) 329);
      RandomUtil.nextDouble((Random) secureRandom0, (double) 329);
      RandomUtil.nextLong();
      RandomUtil.nextDouble();
      RandomUtil.nextInt((Random) secureRandom0, 329);
      Random random0 = RandomUtil.threadLocalRandom();
      RandomUtil.randomStringFixLength(random0, 265);
      MockRandom mockRandom0 = new MockRandom();
      RandomUtil.randomAsciiRandomLength((Random) mockRandom0, 265, 329);
      RandomUtil.nextInt((Random) secureRandom0, 265);
      RandomUtil.nextInt((Random) mockRandom0);
      RandomUtil.nextInt(13);
      RandomUtil.secureRandom();
      // Undeclared exception!
      try { 
        RandomUtil.randomAsciiRandomLength((Random) mockRandom0, 3056, 329);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      int int0 = 2594;
      RandomUtil.secureRandom();
      RandomUtil.secureRandom();
      RandomUtil.nextDouble(1.870911608E9);
      RandomUtil.nextDouble();
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.setSeed(2594);
      mockRandom0.doubles();
      mockRandom0.nextDouble();
      // Undeclared exception!
      RandomUtil.randomLetterFixLength((Random) mockRandom0, 2594);
  }
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      SecureRandom secureRandom0 = RandomUtil.secureRandom();
      RandomUtil.nextDouble((Random) secureRandom0);
      RandomUtil.nextLong();
      RandomUtil.nextInt((Random) secureRandom0);
      RandomUtil.nextInt();
      RandomUtil.nextLong((long) 1223453543, (long) 1223453543);
      RandomUtil randomUtil0 = new RandomUtil();
      RandomUtil.nextDouble();
      RandomUtil.nextLong((Random) secureRandom0, (long) 886108941, 8973564732577560054L);
      // Undeclared exception!
      try { 
        RandomUtil.randomStringRandomLength(1223453543, 886108941);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      RandomUtil.nextLong();
      MockRandom mockRandom0 = new MockRandom(4531295166176539277L);
      mockRandom0.longs();
      RandomUtil.nextInt((Random) mockRandom0, 55296, 55296);
      // Undeclared exception!
      RandomUtil.randomAsciiRandomLength(2002, 55296);
  }
