 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Double[] doubleArray0 = new Double[0];
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.setSampleRate(0);
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Double[] doubleArray0 = new Double[2];
      Double double0 = new Double(75.9264);
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.update(0L);
      histogram0.update(1704L);
      histogram0.update((-1L));
      histogram0.update(1704L);
      HistogramMetric histogramMetric0 = histogram0.calculateMetric();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Double[] doubleArray0 = new Double[2];
      Double double0 = new Double(75.9264);
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.update(0L);
      histogram0.update(1704L);
      histogram0.update((-1L));
      histogram0.update(1704L);
      HistogramMetric histogramMetric0 = histogram0.calculateMetric();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Double[] doubleArray0 = new Double[2];
      Double double0 = new Double(75.9264);
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.update(0L);
      histogram0.update(1704L);
      histogram0.update((-1L));
      histogram0.update(1704L);
      HistogramMetric histogramMetric0 = histogram0.calculateMetric();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Double[] doubleArray0 = new Double[2];
      Double double0 = new Double(75.0);
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.update(0L);
      histogram0.update(0L);
      histogram0.update(0L);
      HistogramMetric histogramMetric0 = histogram0.calculateMetric();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Double[] doubleArray0 = new Double[5];
      Double double0 = new Double(25.0);
      doubleArray0[0] = double0;
      doubleArray0[1] = doubleArray0[0];
      doubleArray0[2] = doubleArray0[1];
      doubleArray0[3] = doubleArray0[0];
      doubleArray0[4] = double0;
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.update(0L);
      histogram0.update(0L);
      histogram0.update(0L);
      HistogramMetric histogramMetric0 = histogram0.calculateMetric();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Double[] doubleArray0 = new Double[8];
      Double double0 = new Double((-1.0));
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      doubleArray0[2] = double0;
      doubleArray0[3] = double0;
      doubleArray0[4] = doubleArray0[2];
      doubleArray0[5] = doubleArray0[1];
      doubleArray0[6] = double0;
      doubleArray0[7] = doubleArray0[4];
      Histogram histogram0 = new Histogram(integer0, doubleArray0);
      // Undeclared exception!
      try { 
        histogram0.update((-1669L));
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.springside.modules.metrics.metric.Histogram", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Double[] doubleArray0 = new Double[7];
      Double double0 = new Double(0.0);
      doubleArray0[0] = double0;
      doubleArray0[1] = doubleArray0[0];
      doubleArray0[2] = double0;
      doubleArray0[3] = doubleArray0[2];
      doubleArray0[4] = double0;
      doubleArray0[5] = double0;
      doubleArray0[6] = doubleArray0[5];
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.setPcts((Double[]) null);
      // Undeclared exception!
      try { 
        histogram0.reset();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.metrics.metric.Histogram", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Histogram histogram0 = null;
      try {
        histogram0 = new Histogram((Double[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.metrics.metric.Histogram", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Histogram histogram0 = null;
      try {
        histogram0 = new Histogram((Integer) null, (Double[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.metrics.metric.Histogram", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double[] doubleArray0 = new Double[7];
      Double double0 = new Double(0.0);
      doubleArray0[0] = double0;
      doubleArray0[1] = doubleArray0[0];
      doubleArray0[2] = doubleArray0[1];
      doubleArray0[3] = doubleArray0[2];
      doubleArray0[4] = double0;
      doubleArray0[5] = double0;
      doubleArray0[6] = doubleArray0[0];
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.reset();
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double[] doubleArray0 = new Double[8];
      Double double0 = new Double(346.0427139301808);
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      doubleArray0[2] = double0;
      doubleArray0[3] = doubleArray0[2];
      doubleArray0[4] = doubleArray0[1];
      doubleArray0[5] = doubleArray0[0];
      doubleArray0[6] = doubleArray0[1];
      doubleArray0[7] = doubleArray0[0];
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.setSampleRate((-2343));
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Double[] doubleArray0 = new Double[8];
      Double double0 = new Double(346.0427139301808);
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      doubleArray0[2] = double0;
      doubleArray0[3] = doubleArray0[2];
      doubleArray0[4] = doubleArray0[1];
      doubleArray0[5] = doubleArray0[0];
      Double double1 = new Double(22.87921056590264);
      doubleArray0[6] = double1;
      doubleArray0[7] = doubleArray0[0];
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.update((-2343));
      HistogramMetric histogramMetric0 = histogram0.calculateMetric();
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Double[] doubleArray0 = new Double[8];
      Double double0 = new Double(346.0427139301808);
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      doubleArray0[2] = double0;
      doubleArray0[3] = doubleArray0[2];
      doubleArray0[4] = doubleArray0[1];
      doubleArray0[5] = doubleArray0[0];
      Double double1 = new Double(22.87921056590264);
      doubleArray0[6] = double1;
      doubleArray0[7] = doubleArray0[0];
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.update((-2343));
      HistogramMetric histogramMetric0 = histogram0.calculateMetric();
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double[] doubleArray0 = new Double[8];
      Double double0 = new Double(346.0427139301808);
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      doubleArray0[2] = double0;
      doubleArray0[3] = doubleArray0[2];
      doubleArray0[4] = doubleArray0[1];
      doubleArray0[5] = doubleArray0[0];
      Double double1 = new Double(22.87921056590264);
      doubleArray0[6] = double1;
      doubleArray0[7] = doubleArray0[0];
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.update((-2343));
      HistogramMetric histogramMetric0 = histogram0.calculateMetric();
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Double[] doubleArray0 = new Double[0];
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.update(1604L);
      histogram0.update(4394L);
      HistogramMetric histogramMetric0 = histogram0.calculateMetric();
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Double[] doubleArray0 = new Double[0];
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.update(1604L);
      histogram0.update(0L);
      HistogramMetric histogramMetric0 = histogram0.calculateMetric();
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Double[] doubleArray0 = new Double[1];
      Double double0 = new Double((-22.150011022224938));
      doubleArray0[0] = double0;
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.setPcts((Double[]) null);
      histogram0.update(0L);
      HistogramMetric histogramMetric0 = histogram0.calculateMetric();
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Double[] doubleArray0 = new Double[1];
      Double double0 = new Double((-22.150011022224938));
      doubleArray0[0] = double0;
      Histogram histogram0 = new Histogram(doubleArray0);
      HistogramMetric histogramMetric0 = histogram0.calculateMetric();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      Double[] doubleArray0 = new Double[0];
      Histogram histogram0 = new Histogram(integer0, doubleArray0);
      histogram0.update((-1));
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Double[] doubleArray0 = new Double[0];
      Histogram histogram0 = new Histogram(doubleArray0);
      histogram0.setSampleRate(1366);
      histogram0.update(2423L);
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Double[] doubleArray0 = new Double[0];
      Histogram histogram0 = new Histogram(doubleArray0);
      Double[] doubleArray1 = new Double[5];
      histogram0.setPcts(doubleArray1);
      // Undeclared exception!
      try { 
        histogram0.calculateMetric();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Double[] doubleArray0 = new Double[8];
      Double double0 = new Double(346.0427139301808);
      doubleArray0[0] = double0;
      doubleArray0[1] = double0;
      doubleArray0[2] = double0;
      doubleArray0[3] = doubleArray0[2];
      doubleArray0[4] = doubleArray0[1];
      doubleArray0[5] = doubleArray0[0];
      doubleArray0[6] = doubleArray0[3];
      doubleArray0[7] = doubleArray0[0];
      Histogram histogram0 = new Histogram(doubleArray0);
      String string0 = histogram0.toString();
      ;
}
