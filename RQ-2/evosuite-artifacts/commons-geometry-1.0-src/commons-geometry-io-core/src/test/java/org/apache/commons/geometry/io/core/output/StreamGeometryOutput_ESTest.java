/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 01:43:32 GMT 2022
 */

package org.apache.commons.geometry.io.core.output;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.nio.charset.Charset;
import org.apache.commons.geometry.io.core.output.StreamGeometryOutput;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StreamGeometryOutput_ESTest extends StreamGeometryOutput_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StreamGeometryOutput streamGeometryOutput0 = new StreamGeometryOutput((OutputStream) null);
      OutputStream outputStream0 = streamGeometryOutput0.getOutputStream();
      assertNotNull(outputStream0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      Charset charset0 = Charset.defaultCharset();
      StreamGeometryOutput streamGeometryOutput0 = new StreamGeometryOutput(dataOutputStream0, "I", charset0);
      assertNotNull(streamGeometryOutput0.getFileName());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      StreamGeometryOutput streamGeometryOutput0 = new StreamGeometryOutput(byteArrayOutputStream0, "org.apache.commons.geometry.core.partitioning.test.TestTransform2D");
      assertNotNull(streamGeometryOutput0.getFileName());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      StreamGeometryOutput streamGeometryOutput0 = new StreamGeometryOutput(bufferedOutputStream0);
      OutputStream outputStream0 = streamGeometryOutput0.getOutputStream();
      ;
}
}
