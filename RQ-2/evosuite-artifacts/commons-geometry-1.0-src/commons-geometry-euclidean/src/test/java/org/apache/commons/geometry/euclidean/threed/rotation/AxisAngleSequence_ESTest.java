/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 01:24:22 GMT 2022
 */

package org.apache.commons.geometry.euclidean.threed.rotation;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.geometry.euclidean.threed.rotation.AxisAngleSequence;
import org.apache.commons.geometry.euclidean.threed.rotation.AxisReferenceFrame;
import org.apache.commons.geometry.euclidean.threed.rotation.AxisSequence;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AxisAngleSequence_ESTest extends AxisAngleSequence_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, (-1.0));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, (-1.0));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, (-1.0));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, (-1.0));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, (-1.0));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, (-3708.66069709), (-630.2527661090433));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, (-3708.66069709), (-630.2527661090433));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, (-3708.66069709), (-630.2527661090433));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, (-3708.66069709), (-630.2527661090433));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, (-2370.35210049), (-2370.35210049), (-2370.35210049));
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, (-3297.2438353207704), (-2370.35210049), 0.0);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, (-2370.35210049), (-2370.35210049), (-2370.35210049));
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, (-3297.2438353207704), (-2370.35210049), 0.0);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, (-2370.35210049), (-2370.35210049), (-2370.35210049));
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, (-3297.2438353207704), (-2370.35210049), 0.0);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, (-2370.35210049), (-2370.35210049), (-2370.35210049));
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, (-3297.2438353207704), (-2370.35210049), 0.0);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZXZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, (-75.5455867857), (-75.5455867857), 873.562148);
      axisAngleSequence0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZXZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, (-75.5455867857), (-75.5455867857), 873.562148);
      axisAngleSequence0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZXZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, (-75.5455867857), (-75.5455867857), 873.562148);
      axisAngleSequence0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.ABSOLUTE;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, (AxisSequence) null, 0.0, 0.0, (-1274.124715872));
      axisAngleSequence0.getAxisSequence();
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.ABSOLUTE;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, (AxisSequence) null, 0.0, 0.0, (-1274.124715872));
      axisAngleSequence0.getAxisSequence();
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.ABSOLUTE;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, (AxisSequence) null, 0.0, 0.0, (-1274.124715872));
      axisAngleSequence0.getAxisSequence();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 18.98403688685494);
      double double0 = axisAngleSequence0.getAngle3();
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 18.98403688685494);
      double double0 = axisAngleSequence0.getAngle3();
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 18.98403688685494);
      double double0 = axisAngleSequence0.getAngle3();
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, (-2370.35210049), (-2370.35210049), (-2370.35210049));
      double double0 = axisAngleSequence0.getAngle3();
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, (-2370.35210049), (-2370.35210049), (-2370.35210049));
      double double0 = axisAngleSequence0.getAngle3();
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, (-2370.35210049), (-2370.35210049), (-2370.35210049));
      double double0 = axisAngleSequence0.getAngle3();
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      double double0 = axisAngleSequence0.getAngle2();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      double double0 = axisAngleSequence0.getAngle2();
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      double double0 = axisAngleSequence0.getAngle2();
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, (-2370.35210049), (-2370.35210049), (-2370.35210049));
      double double0 = axisAngleSequence0.getAngle2();
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, (-2370.35210049), (-2370.35210049), (-2370.35210049));
      double double0 = axisAngleSequence0.getAngle2();
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, (-2370.35210049), (-2370.35210049), (-2370.35210049));
      double double0 = axisAngleSequence0.getAngle2();
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.YZX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 0.0, (-355.69266459));
      double double0 = axisAngleSequence0.getAngle1();
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.YZX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 0.0, (-355.69266459));
      double double0 = axisAngleSequence0.getAngle1();
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.YZX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 0.0, (-355.69266459));
      double double0 = axisAngleSequence0.getAngle1();
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, (-1.0), 0.0, 0.0);
      double double0 = axisAngleSequence0.getAngle1();
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, (-1.0), 0.0, 0.0);
      double double0 = axisAngleSequence0.getAngle1();
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, (-1.0), 0.0, 0.0);
      double double0 = axisAngleSequence0.getAngle1();
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.YZX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 0.0, (-355.69266459));
      double[] doubleArray0 = axisAngleSequence0.getAngles();
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.YXZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 0.669420296700669, 0.669420296700669, 0.669420296700669);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createAbsolute(axisSequence0, 0.669420296700669, 0.669420296700669, 0.669420296700669);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.YXZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 0.669420296700669, 0.669420296700669, 0.669420296700669);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createAbsolute(axisSequence0, 0.669420296700669, 0.669420296700669, 0.669420296700669);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.YXZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 0.669420296700669, 0.669420296700669, 0.669420296700669);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createAbsolute(axisSequence0, 0.669420296700669, 0.669420296700669, 0.669420296700669);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.YXZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 0.669420296700669, 0.669420296700669, 0.669420296700669);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createAbsolute(axisSequence0, 0.669420296700669, 0.669420296700669, 0.669420296700669);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZYZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 0.0, 30.999569463535085);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 30.999569463535085, 0.0);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZYZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 0.0, 30.999569463535085);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 30.999569463535085, 0.0);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZYZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 0.0, 30.999569463535085);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 30.999569463535085, 0.0);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZYZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 0.0, 30.999569463535085);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 30.999569463535085, 0.0);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZYZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 0.0, 30.999569463535085);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createAbsolute(axisSequence0, 0.0, 30.999569463535085, 0.0);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.YXY;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 3724.8907308851994, 3724.8907308851994, 3724.8907308851994);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createAbsolute(axisSequence0, 2047.03, 3724.8907308851994, 2047.03);
      boolean boolean0 = axisAngleSequence1.equals(axisAngleSequence0);
      ;
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.YXY;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 3724.8907308851994, 3724.8907308851994, 3724.8907308851994);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createAbsolute(axisSequence0, 2047.03, 3724.8907308851994, 2047.03);
      boolean boolean0 = axisAngleSequence1.equals(axisAngleSequence0);
      ;
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.YXY;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 3724.8907308851994, 3724.8907308851994, 3724.8907308851994);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createAbsolute(axisSequence0, 2047.03, 3724.8907308851994, 2047.03);
      boolean boolean0 = axisAngleSequence1.equals(axisAngleSequence0);
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.YXY;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, 3724.8907308851994, 3724.8907308851994, 3724.8907308851994);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createAbsolute(axisSequence0, 2047.03, 3724.8907308851994, 2047.03);
      boolean boolean0 = axisAngleSequence1.equals(axisAngleSequence0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZXZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 1868.8494268904872, 0.0);
      AxisSequence axisSequence1 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence1, (-1321.0687862), 0.0, 1868.8494268904872);
      boolean boolean0 = axisAngleSequence1.equals(axisAngleSequence0);
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZXZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 1868.8494268904872, 0.0);
      AxisSequence axisSequence1 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence1, (-1321.0687862), 0.0, 1868.8494268904872);
      boolean boolean0 = axisAngleSequence1.equals(axisAngleSequence0);
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZXZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 1868.8494268904872, 0.0);
      AxisSequence axisSequence1 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence1, (-1321.0687862), 0.0, 1868.8494268904872);
      boolean boolean0 = axisAngleSequence1.equals(axisAngleSequence0);
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZXZ;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 1868.8494268904872, 0.0);
      AxisSequence axisSequence1 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence1, (-1321.0687862), 0.0, 1868.8494268904872);
      boolean boolean0 = axisAngleSequence1.equals(axisAngleSequence0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, (-1.0), (-1.0), (-1.0));
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, (-1.0), (-1.0), (-1.0));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, (-1.0), (-1.0), (-1.0));
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, (-1.0), (-1.0), (-1.0));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, (-1.0), (-1.0), (-1.0));
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, (-1.0), (-1.0), (-1.0));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, (-1.0), (-1.0), (-1.0));
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, (-1.0), (-1.0), (-1.0));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, (-1.0), (-1.0), (-1.0));
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, (-1.0), (-1.0), (-1.0));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, (-1.0), (-1.0), (-1.0));
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, (-1.0), (-1.0), (-1.0));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.ZYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createAbsolute(axisSequence0, (-1.0), (-1.0), (-1.0));
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, (-1.0), (-1.0), (-1.0));
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      boolean boolean0 = axisAngleSequence0.equals(axisSequence0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      boolean boolean0 = axisAngleSequence0.equals(axisSequence0);
      ;
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      boolean boolean0 = axisAngleSequence0.equals(axisSequence0);
      ;
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      boolean boolean0 = axisAngleSequence0.equals(axisSequence0);
      ;
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, 3722.08254859086, 3722.08254859086, 3722.08254859086);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, 3722.08254859086, 3722.08254859086, 3722.08254859086);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence0);
      ;
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, 3722.08254859086, 3722.08254859086, 3722.08254859086);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence0);
      ;
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, 3722.08254859086, 3722.08254859086, 3722.08254859086);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence0);
      ;
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 18.98403688685494);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 18.98403688685494);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 18.98403688685494);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 18.98403688685494);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      AxisAngleSequence axisAngleSequence1 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 18.98403688685494);
      boolean boolean0 = axisAngleSequence0.equals(axisAngleSequence1);
      ;
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, 3722.08254859086, 3722.08254859086, 3722.08254859086);
      axisAngleSequence0.getAxisSequence();
      ;
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, 3722.08254859086, 3722.08254859086, 3722.08254859086);
      axisAngleSequence0.getAxisSequence();
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, 3722.08254859086, 3722.08254859086, 3722.08254859086);
      axisAngleSequence0.getAxisSequence();
      ;
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      axisAngleSequence0.getReferenceFrame();
      ;
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      axisAngleSequence0.getReferenceFrame();
      ;
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      axisAngleSequence0.getReferenceFrame();
      ;
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      String string0 = axisAngleSequence0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      double double0 = axisAngleSequence0.getAngle3();
      ;
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      double double0 = axisAngleSequence0.getAngle3();
      ;
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XYX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 0.0, 0.0, 0.0);
      double double0 = axisAngleSequence0.getAngle3();
      ;
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, 3722.08254859086, 3722.08254859086, 3722.08254859086);
      double double0 = axisAngleSequence0.getAngle2();
      ;
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, 3722.08254859086, 3722.08254859086, 3722.08254859086);
      double double0 = axisAngleSequence0.getAngle2();
      ;
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, 3722.08254859086, 3722.08254859086, 3722.08254859086);
      double double0 = axisAngleSequence0.getAngle2();
      ;
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, 3722.08254859086, 3722.08254859086, 3722.08254859086);
      double double0 = axisAngleSequence0.getAngle1();
      ;
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, 3722.08254859086, 3722.08254859086, 3722.08254859086);
      double double0 = axisAngleSequence0.getAngle1();
      ;
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      AxisReferenceFrame axisReferenceFrame0 = AxisReferenceFrame.RELATIVE;
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = new AxisAngleSequence(axisReferenceFrame0, axisSequence0, 3722.08254859086, 3722.08254859086, 3722.08254859086);
      double double0 = axisAngleSequence0.getAngle1();
      ;
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 4620.9324845592, 2047.03, (-390.06392423703));
      ;
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 4620.9324845592, 2047.03, (-390.06392423703));
      ;
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.XZX;
      AxisAngleSequence axisAngleSequence0 = AxisAngleSequence.createRelative(axisSequence0, 4620.9324845592, 2047.03, (-390.06392423703));
      ;
}
}
