/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 01:29:29 GMT 2022
 */

package org.apache.commons.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.TreeSet;
import org.apache.commons.geometry.euclidean.threed.EmbeddedAreaPlaneConvexSubset;
import org.apache.commons.geometry.euclidean.threed.EmbeddedTreePlaneSubset;
import org.apache.commons.geometry.euclidean.threed.EmbeddingPlane;
import org.apache.commons.geometry.euclidean.threed.Plane;
import org.apache.commons.geometry.euclidean.threed.SimpleTriangle3D;
import org.apache.commons.geometry.euclidean.threed.Vector3D;
import org.apache.commons.geometry.euclidean.threed.line.Line3D;
import org.apache.commons.geometry.euclidean.threed.line.LineConvexSubset3D;
import org.apache.commons.geometry.euclidean.twod.ConvexArea;
import org.apache.commons.geometry.euclidean.twod.Line;
import org.apache.commons.numbers.core.Precision;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractPlaneSubset_ESTest extends AbstractPlaneSubset_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EmbeddedTreePlaneSubset embeddedTreePlaneSubset0 = new EmbeddedTreePlaneSubset((EmbeddingPlane) null, false);
      Plane plane0 = embeddedTreePlaneSubset0.getHyperplane();
      assertNotNull(plane0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Vector3D.Unit vector3D_Unit0 = Vector3D.Unit.from((-2514.785571042), 2533.1777845, (-1608.18));
      EmbeddingPlane embeddingPlane0 = new EmbeddingPlane(vector3D_Unit0, vector3D_Unit0, vector3D_Unit0, 0.0, (Precision.DoubleEquivalence) null);
      TreeSet<Line> treeSet0 = new TreeSet<Line>();
      ConvexArea convexArea0 = ConvexArea.fromBounds((Iterable<Line>) treeSet0);
      EmbeddedAreaPlaneConvexSubset embeddedAreaPlaneConvexSubset0 = new EmbeddedAreaPlaneConvexSubset(embeddingPlane0, convexArea0);
      Plane plane0 = embeddedAreaPlaneConvexSubset0.getHyperplane();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Vector3D.Unit vector3D_Unit0 = Vector3D.Unit.PLUS_Z;
      Plane plane0 = new Plane(vector3D_Unit0, 34.0, (Precision.DoubleEquivalence) null);
      EmbeddingPlane embeddingPlane0 = plane0.getEmbedding();
      EmbeddedTreePlaneSubset embeddedTreePlaneSubset0 = new EmbeddedTreePlaneSubset(embeddingPlane0, false);
      Plane plane1 = embeddedTreePlaneSubset0.getHyperplane();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConvexArea convexArea0 = ConvexArea.full();
      EmbeddedAreaPlaneConvexSubset embeddedAreaPlaneConvexSubset0 = new EmbeddedAreaPlaneConvexSubset((EmbeddingPlane) null, convexArea0);
      // Undeclared exception!
      try { 
        embeddedAreaPlaneConvexSubset0.intersection((Line3D) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.geometry.euclidean.threed.Planes", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Vector3D.Unit vector3D_Unit0 = Vector3D.Unit.MINUS_X;
      SimpleTriangle3D simpleTriangle3D0 = new SimpleTriangle3D((Plane) null, vector3D_Unit0, vector3D_Unit0, vector3D_Unit0);
      Plane plane0 = simpleTriangle3D0.getHyperplane();
      assertNotNull(plane0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ConvexArea convexArea0 = ConvexArea.full();
      EmbeddedAreaPlaneConvexSubset embeddedAreaPlaneConvexSubset0 = new EmbeddedAreaPlaneConvexSubset((EmbeddingPlane) null, convexArea0);
      // Undeclared exception!
      try { 
        embeddedAreaPlaneConvexSubset0.intersection((LineConvexSubset3D) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.geometry.euclidean.threed.Planes", e);
      }
  }
}
