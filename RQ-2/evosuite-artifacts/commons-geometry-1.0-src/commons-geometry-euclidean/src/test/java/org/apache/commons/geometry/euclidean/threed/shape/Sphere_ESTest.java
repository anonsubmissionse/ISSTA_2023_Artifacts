/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 01:27:43 GMT 2022
 */

package org.apache.commons.geometry.euclidean.threed.shape;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.geometry.euclidean.threed.Vector3D;
import org.apache.commons.geometry.euclidean.threed.rotation.AxisSequence;
import org.apache.commons.geometry.euclidean.threed.shape.Sphere;
import org.apache.commons.numbers.core.Precision;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Sphere_ESTest extends Sphere_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector3D.Unit vector3D_Unit0 = Vector3D.Unit.MINUS_Z;
      // Undeclared exception!
      try { 
        Sphere.from(vector3D_Unit0, 1276.85, (Precision.DoubleEquivalence) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.geometry.euclidean.AbstractNSphere", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AxisSequence axisSequence0 = AxisSequence.YZY;
      Vector3D vector3D0 = axisSequence0.getAxis3();
      // Undeclared exception!
      try { 
        Sphere.from(vector3D0, Double.POSITIVE_INFINITY, (Precision.DoubleEquivalence) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal radius: Infinity
         //
         verifyException("org.apache.commons.geometry.euclidean.AbstractNSphere", e);
      }
  }
}
