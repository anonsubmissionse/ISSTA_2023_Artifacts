 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("jW8=!;?=U6)[#");
      Integer integer0 = new Integer(3);
      Integer integer1 = new Integer(332);
      Integer integer2 = BooleanUtils.toIntegerObject(boolean0, integer1, integer0, integer0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Boolean boolean0 = new Boolean("The String did not match any specified value");
      Integer integer0 = new Integer(3);
      Integer integer1 = new Integer(332);
      Integer integer2 = BooleanUtils.toIntegerObject(boolean0, integer0, integer0, integer1);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(85);
      Integer integer1 = BooleanUtils.toIntegerObject(true);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(85);
      Integer integer1 = BooleanUtils.toIntegerObject(true);
      Integer integer2 = BooleanUtils.toIntegerObject(true, integer0, integer1);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Boolean boolean0 = new Boolean("");
      int int0 = BooleanUtils.toInteger(boolean0, (-2029), (-123), 2367);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("false");
      int int0 = BooleanUtils.toInteger(boolean0, 0, 0, 423);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int int0 = BooleanUtils.toInteger((Boolean) true, 2101, 101, 0);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      int int0 = BooleanUtils.toInteger(true, 0, 79);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("n_");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("o'");
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("<R");
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean("{%");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("-");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("z");
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(917);
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject(563, 0, (-1), (-1));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match any specified value
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(102);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean((-1216), 88, 0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match either specified value
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean(65);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = true;
      boolean boolean0 = BooleanUtils.xor(booleanArray0);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      String string0 = BooleanUtils.toStringTrueFalse(boolean0);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      String string0 = BooleanUtils.toStringTrueFalse(boolean0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = BooleanUtils.toStringOnOff((Boolean) null);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = BooleanUtils.toString(true, (String) null, "no");
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = BooleanUtils.toString(true, "", "j IsV6");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      String string0 = BooleanUtils.toString(boolean0, "5MYYM", (String) null, "Array cannot be empty.");
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      String string0 = BooleanUtils.toString(boolean0, "", "", "");
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Integer integer0 = BooleanUtils.toIntegerObject(true, (Integer) null, (Integer) null);
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Integer integer0 = new Integer(82);
      Integer integer1 = new Integer(0);
      Integer integer2 = BooleanUtils.toIntegerObject(false, integer0, integer1);
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Integer integer0 = new Integer(3);
      Integer integer1 = new Integer((-1814));
      Integer integer2 = BooleanUtils.toIntegerObject(false, integer0, integer1);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Integer integer0 = new Integer(85);
      Integer integer1 = BooleanUtils.toIntegerObject(boolean0, (Integer) null, integer0, integer0);
      assertEquals(integer0, integer1);
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Boolean boolean0 = new Boolean(false);
      Integer integer0 = new Integer(0);
      Integer integer1 = BooleanUtils.toIntegerObject(boolean0, integer0, integer0, integer0);
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = BooleanUtils.toInteger(false, (-1), (-1));
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = BooleanUtils.toInteger((Boolean) null, (-3254), (-3254), 829);
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      boolean boolean0 = BooleanUtils.isTrue((Boolean) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      boolean boolean0 = BooleanUtils.isFalse((Boolean) null);
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.xor((boolean[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // array
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        BooleanUtils.xor(booleanArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // array
         //
         verifyException("org.apache.commons.lang3.ObjectUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.xor((Boolean[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // array
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Boolean[] booleanArray0 = new Boolean[3];
      // Undeclared exception!
      try { 
        BooleanUtils.xor(booleanArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The array must not contain any null elements
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.or((boolean[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // array
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        BooleanUtils.or(booleanArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // array
         //
         verifyException("org.apache.commons.lang3.ObjectUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.or((Boolean[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // array
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Boolean[] booleanArray0 = new Boolean[5];
      // Undeclared exception!
      try { 
        BooleanUtils.or(booleanArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The array must not contain any null elements
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.and((boolean[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // array
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        BooleanUtils.and(booleanArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // array
         //
         verifyException("org.apache.commons.lang3.ObjectUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.and((Boolean[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // array
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Boolean[] booleanArray0 = new Boolean[4];
      // Undeclared exception!
      try { 
        BooleanUtils.and(booleanArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The array must not contain any null elements
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[7];
      boolean boolean0 = BooleanUtils.xor(booleanArray0);
      ;
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Boolean boolean0 = new Boolean(false);
      String string0 = BooleanUtils.toString(boolean0, "yes", "yes", "-#");
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = BooleanUtils.toString((Boolean) null, "on", "on", "on");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = BooleanUtils.toString(true, "G", "c5a+AD");
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("V((/");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("h6:XO:Zmio:Rs");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((String) null);
      ;
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("true");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[20];
      booleanArray0[0] = true;
      boolean boolean0 = BooleanUtils.or(booleanArray0);
      ;
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[20];
      boolean boolean0 = BooleanUtils.and(booleanArray0);
      ;
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = true;
      boolean boolean0 = BooleanUtils.and(booleanArray0);
      ;
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((-586));
      Boolean[] booleanArray0 = new Boolean[1];
      booleanArray0[0] = boolean0;
      Boolean boolean1 = BooleanUtils.xor(booleanArray0);
      ;
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[11];
      String string0 = BooleanUtils.toStringYesNo((Boolean) booleanArray0[0]);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[11];
      String string0 = BooleanUtils.toStringYesNo((Boolean) booleanArray0[0]);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = BooleanUtils.toString(false, " in an array of ", "VKbyVSR )h<(En");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Integer integer0 = Integer.getInteger("tr>u", (-25));
      Integer integer1 = BooleanUtils.toIntegerObject((Boolean) null, (Integer) null, (Integer) null, integer0);
      ;
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      Integer integer1 = BooleanUtils.toIntegerObject(boolean0, integer0, integer0, integer0);
      ;
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Integer integer0 = BooleanUtils.toIntegerObject((Boolean) null);
      ;
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      Integer integer1 = BooleanUtils.toIntegerObject(boolean0);
      assertEquals(integer0, integer1);
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      Integer integer1 = BooleanUtils.toIntegerObject(boolean0);
      ;
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Integer integer0 = BooleanUtils.toIntegerObject(false);
      ;
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("off", "off", "", "off");
      ;
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("off", "off", "", "off");
      int int0 = BooleanUtils.toInteger(boolean0, 0, 0, 0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int int0 = BooleanUtils.toInteger(false, 0, 2344);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      int int0 = BooleanUtils.toInteger(true);
      ;
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      int int0 = BooleanUtils.toInteger(false);
      ;
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("F]YxoW?M(%-", "{_]r`", "{_]r`", "F]YxoW?M(%-");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("8._58<WF", "go", "8._58<WF", "8._58<WF");
      ;
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("8._58<WF", "go", "8._58<WF", "8._58<WF");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((String) null, "no", "c5a+AD", (String) null);
      ;
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((String) null, "", (String) null, (String) null);
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((String) null, "", (String) null, (String) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((String) null, (String) null, "W^2Sl@", "Ajq4|Z:WT.YV ");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject((String) null, "The String did not match any specified value", "V((/", "The String did not match any specified value");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match any specified value
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject("858", "$bFVw", "yes", "{");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match any specified value
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("facse");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("fscse");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("M/O6U");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean("tr>u");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("T4f4");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("off");
      boolean boolean1 = BooleanUtils.isFalse(boolean0);
      assertFalse(boolean1);
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("O80");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("Y9s");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("yes");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("nH");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("Oi");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("on");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("0");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("0");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("F");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("F");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("f");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("f");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("n");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("n");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("Y");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("Y");
      ;
}
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("false");
      ;
}
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("false");
      ;
}
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("ofH");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("no");
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject("no");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Integer integer1 = Integer.getInteger("-AXSw/>m^", 6);
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer1, integer0, integer0, integer1);
      assertNotNull(boolean0);
}
 @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Integer integer0 = new Integer(4);
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0, (Integer) null, integer0, integer0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Integer integer0 = new Integer(4);
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0, (Integer) null, integer0, integer0);
      ;
}
 @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Integer integer1 = Integer.getInteger("-AXSw/>m^", 6);
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject(integer1, integer0, integer0, integer0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match any specified value
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Integer integer0 = new Integer(5180);
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject((Integer) null, integer0, integer0, integer0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match any specified value
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Integer integer0 = new Integer(858);
      Boolean boolean0 = BooleanUtils.toBooleanObject((Integer) null, integer0, (Integer) null, integer0);
      Integer integer1 = BooleanUtils.toIntegerObject(boolean0);
      assertEquals(integer0, integer1);
}
 @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Integer integer0 = new Integer(858);
      Boolean boolean0 = BooleanUtils.toBooleanObject((Integer) null, integer0, (Integer) null, integer0);
      Integer integer1 = BooleanUtils.toIntegerObject(boolean0);
      ;
}
 @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Integer integer0 = Integer.getInteger("tr>u", (-25));
      Boolean boolean0 = BooleanUtils.toBooleanObject((Integer) null, integer0, integer0, (Integer) null);
      ;
}
 @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Integer integer0 = Integer.getInteger("8nH");
      Boolean boolean0 = BooleanUtils.toBooleanObject((Integer) null, (Integer) null, integer0, (Integer) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0, integer0, integer0, integer0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((Integer) null);
      ;
}
 @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.toBooleanObject((-1978), 0, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match any specified value
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(2179, (-707), (-1610), 2179);
      ;
}
 @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(2344, 2344, 0, 2038);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(0, 16, 0, (-441));
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBooleanDefaultIfNull((Boolean) null, false);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      boolean boolean1 = BooleanUtils.toBooleanDefaultIfNull(boolean0, true);
      assertTrue(boolean1);
}
 @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean((String) null, "", "The array must not contain any null elements");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match either specified value
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean("ofH", "off", "ofH");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean("false", "false", "The Integer did not match either specified value");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean(" in an array of ", "-AXSw/>m^", "]");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The String did not match either specified value
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean("true");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Integer integer0 = new Integer((-2315));
      Integer integer1 = Integer.getInteger("false");
      boolean boolean0 = BooleanUtils.toBoolean(integer0, integer1, integer0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Integer integer0 = new Integer((-4101));
      Integer integer1 = new Integer((-801));
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean(integer0, integer1, integer1);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match either specified value
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Integer integer0 = new Integer(758);
      boolean boolean0 = BooleanUtils.toBoolean((Integer) null, integer0, (Integer) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Integer integer0 = new Integer(127);
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean((Integer) null, integer0, integer0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match either specified value
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean((Integer) null, (Integer) null, (Integer) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      boolean boolean0 = BooleanUtils.toBoolean(integer0, integer0, integer0);
      ;
}
 @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean(2, 2445, 2);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean(2344, 2344, 2038);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtils.toBoolean(117, (-2740), (-586));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The Integer did not match either specified value
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean((-1394));
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean(0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject(0);
      boolean boolean1 = BooleanUtils.toBoolean(boolean0);
      assertFalse(boolean1);
}
 @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((-586));
      boolean boolean1 = BooleanUtils.toBoolean(boolean0);
      assertFalse(boolean1);
}
 @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      boolean boolean0 = BooleanUtils.toBoolean((Boolean) null);
      ;
}
 @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Boolean[] booleanArray0 = new Boolean[7];
      Boolean boolean0 = new Boolean((String) null);
      booleanArray0[0] = boolean0;
      booleanArray0[1] = booleanArray0[0];
      booleanArray0[2] = booleanArray0[0];
      booleanArray0[3] = boolean0;
      booleanArray0[4] = booleanArray0[3];
      booleanArray0[5] = boolean0;
      booleanArray0[6] = booleanArray0[1];
      Boolean boolean1 = BooleanUtils.or(booleanArray0);
      assertTrue(boolean1);
}
 @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Boolean[] booleanArray0 = BooleanUtils.booleanValues();
      Boolean boolean0 = BooleanUtils.or(booleanArray0);
      ;
}
 @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[11];
      boolean boolean0 = BooleanUtils.or(booleanArray0);
      ;
}
 @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      ;
}
 @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      Boolean[] booleanArray0 = new Boolean[6];
      booleanArray0[0] = boolean0;
      booleanArray0[1] = boolean0;
      booleanArray0[2] = boolean0;
      booleanArray0[3] = boolean0;
      booleanArray0[4] = boolean0;
      booleanArray0[5] = boolean0;
      Boolean boolean1 = BooleanUtils.xor(booleanArray0);
      Boolean boolean2 = BooleanUtils.negate(boolean1);
      assertTrue(boolean2);
}
 @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.negate((Boolean) null);
      ;
}
 @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      Boolean boolean1 = BooleanUtils.negate(boolean0);
      assertTrue(boolean1);
}
 @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      Boolean boolean1 = BooleanUtils.negate(boolean0);
      assertEquals(boolean0, boolean1);
}
 @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      boolean boolean0 = BooleanUtils.isNotTrue((Boolean) null);
      assertFalse(boolean0);
}
 @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      boolean boolean1 = BooleanUtils.isNotTrue(boolean0);
      assertTrue(boolean1);
}
 @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Boolean boolean0 = new Boolean(false);
      boolean boolean1 = BooleanUtils.isNotFalse(boolean0);
      assertFalse(boolean1);
}
 @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      int int0 = BooleanUtils.compare(true, false);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      int int0 = BooleanUtils.compare(true, true);
      ;
}
 @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      int int0 = BooleanUtils.compare(false, true);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      ;
}
 @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      Boolean[] booleanArray0 = new Boolean[6];
      booleanArray0[0] = boolean0;
      booleanArray0[1] = boolean0;
      booleanArray0[2] = boolean0;
      booleanArray0[3] = boolean0;
      booleanArray0[4] = boolean0;
      booleanArray0[5] = boolean0;
      Boolean boolean1 = BooleanUtils.and(booleanArray0);
      assertTrue(boolean1);
}
 @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      BooleanUtils booleanUtils0 = new BooleanUtils();
  }
 @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Boolean[] booleanArray0 = BooleanUtils.booleanValues();
      ;
}
 @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Boolean[] booleanArray0 = BooleanUtils.booleanValues();
      Boolean boolean0 = BooleanUtils.and(booleanArray0);
      ;
}
 @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      String string0 = BooleanUtils.toStringYesNo((Boolean) null);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      boolean[] booleanArray0 = BooleanUtils.primitiveValues();
      ;
}
 @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((-586));
      boolean boolean1 = BooleanUtils.isNotFalse(boolean0);
      assertFalse(boolean1);
}
 @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Integer integer0 = new Integer((-3707));
      Boolean boolean0 = BooleanUtils.toBooleanObject(integer0);
      boolean boolean1 = BooleanUtils.isTrue(boolean0);
      assertTrue(boolean1);
}
 @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      String string0 = BooleanUtils.toStringYesNo(true);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      String string0 = BooleanUtils.toStringTrueFalse(true);
      ;
}
 @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((-586));
      String string0 = BooleanUtils.toStringOnOff(boolean0);
      ;
}
 @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Boolean boolean0 = BooleanUtils.toBooleanObject((-586));
      String string0 = BooleanUtils.toStringOnOff(boolean0);
      ;
}
 @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      String string0 = BooleanUtils.toStringOnOff(true);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      String string0 = BooleanUtils.toStringTrueFalse((Boolean) null);
      ;
}
