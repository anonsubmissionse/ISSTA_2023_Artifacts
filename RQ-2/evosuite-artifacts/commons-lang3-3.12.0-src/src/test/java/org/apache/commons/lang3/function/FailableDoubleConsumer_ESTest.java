/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 18:27:49 GMT 2022
 */

package org.apache.commons.lang3.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.function.FailableDoubleConsumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FailableDoubleConsumer_ESTest extends FailableDoubleConsumer_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FailableDoubleConsumer<Throwable> failableDoubleConsumer0 = FailableDoubleConsumer.nop();
      FailableDoubleConsumer<Throwable> failableDoubleConsumer1 = failableDoubleConsumer0.andThen(failableDoubleConsumer0);
      FailableDoubleConsumer<Throwable> failableDoubleConsumer2 = failableDoubleConsumer0.andThen(failableDoubleConsumer1);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FailableDoubleConsumer<Throwable> failableDoubleConsumer0 = FailableDoubleConsumer.nop();
      failableDoubleConsumer0.accept(0.0);
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FailableDoubleConsumer<Throwable> failableDoubleConsumer0 = FailableDoubleConsumer.nop();
      // Undeclared exception!
      try { 
        failableDoubleConsumer0.andThen((FailableDoubleConsumer<Throwable>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }
}
