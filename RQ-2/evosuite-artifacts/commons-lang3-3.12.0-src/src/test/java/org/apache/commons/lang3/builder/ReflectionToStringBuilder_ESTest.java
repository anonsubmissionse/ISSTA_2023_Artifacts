/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 18:07:27 GMT 2022
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Field;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.LinkedList;
import org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle;
import org.apache.commons.lang3.builder.RecursiveToStringStyle;
import org.apache.commons.lang3.builder.ReflectionToStringBuilder;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReflectionToStringBuilder_ESTest extends ReflectionToStringBuilder_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Class<Object> class0 = Object.class;
      Object[] objectArray0 = new Object[0];
      ReflectionToStringBuilder.toNoNullStringArray(objectArray0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ReflectionToStringBuilder.toStringExclude((Object) "}", (Collection<String>) linkedList0);
      ReflectionToStringBuilder.toString((Object) "}", (ToStringStyle) multilineRecursiveToStringStyle0, false);
      // Undeclared exception!
      ReflectionToStringBuilder.toString((Object) class0, (ToStringStyle) multilineRecursiveToStringStyle0, true);
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      Class<Object> class0 = Object.class;
      Object[] objectArray0 = new Object[0];
      ReflectionToStringBuilder.toNoNullStringArray(objectArray0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ReflectionToStringBuilder.toStringExclude((Object) "}", (Collection<String>) linkedList0);
      ReflectionToStringBuilder.toString((Object) "}", (ToStringStyle) recursiveToStringStyle0, false);
      ReflectionToStringBuilder.toString((Object) class0, (ToStringStyle) recursiveToStringStyle0, true);
      boolean boolean0 = false;
      Integer integer0 = new Integer(2353);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0, toStringStyle0);
      Object object1 = new Object();
      ReflectionToStringBuilder.toString(object1, toStringStyle0);
      Integer integer0 = new Integer(345);
      ReflectionToStringBuilder.toString((Object) integer0, toStringStyle0);
      reflectionToStringBuilder0.getUpToClass();
      // Undeclared exception!
      try { 
        reflectionToStringBuilder0.getExcludeFieldNames();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ReflectionToStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder("", toStringStyle0);
      reflectionToStringBuilder0.getUpToClass();
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      ReflectionToStringBuilder reflectionToStringBuilder1 = (ReflectionToStringBuilder)reflectionToStringBuilder0.append("", byteArray0, true);
      reflectionToStringBuilder1.setUpToClass((Class<?>) null);
      booleanArray0[5] = false;
      booleanArray0[6] = true;
      booleanArray0[7] = true;
      reflectionToStringBuilder0.append(booleanArray0);
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder.toString((Object) reflectionToStringBuilder0, toStringStyle0, true, false, true, (Class<? super Object>) class0);
      reflectionToStringBuilder0.setUpToClass(class0);
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Class<Object> class0 = Object.class;
      Object object0 = new Object();
      ReflectionToStringBuilder.toString(object0, toStringStyle0, true, true, (Class<? super Object>) class0);
      Integer integer0 = new Integer(0);
      Object object1 = new Object();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "{}";
      ReflectionToStringBuilder.toStringExclude(object1, stringArray0);
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder("{}", toStringStyle0);
      // Undeclared exception!
      try { 
        reflectionToStringBuilder0.reflectionAppendArray(class0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Argument is not an array
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      Object[] objectArray0 = new Object[0];
      ReflectionToStringBuilder.toNoNullStringArray(objectArray0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ReflectionToStringBuilder.toStringExclude((Object) "}", (Collection<String>) linkedList0);
      Integer integer0 = new Integer(0);
      ReflectionToStringBuilder.toString((Object) "}", toStringStyle0, false);
      StringBuffer stringBuffer0 = new StringBuffer(11);
      Class<String> class0 = String.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder("}", toStringStyle0, stringBuffer0, (Class<? super String>) class0, true, false);
      reflectionToStringBuilder0.toString();
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      Class<Object> class0 = Object.class;
      Object object0 = new Object();
      ReflectionToStringBuilder.toString(object0, toStringStyle0, true, true, (Class<? super Object>) class0);
      Integer integer0 = new Integer((-1267));
      Object object1 = new Object();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      ReflectionToStringBuilder.toStringExclude(object1, stringArray0);
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(toStringStyle0);
      reflectionToStringBuilder0.toString();
      Object object1 = new Object();
      ReflectionToStringBuilder.toString(object1, toStringStyle0, false, false);
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      int int0 = 124;
      Integer integer0 = new Integer(124);
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0, toStringStyle0, (StringBuffer) null, (Class<? super Integer>) class0, true, true, true);
      reflectionToStringBuilder0.toString();
      int int1 = 3579;
      Integer integer1 = new Integer(3579);
      ToStringStyle toStringStyle1 = ToStringStyle.SIMPLE_STYLE;
      ReflectionToStringBuilder.toString((Object) integer1, toStringStyle1, true, true);
      reflectionToStringBuilder0.getUpToClass();
      Class<Object> class1 = Object.class;
      reflectionToStringBuilder0.setUpToClass(class1);
      // Undeclared exception!
      try { 
        ReflectionToStringBuilder.toString((Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // obj
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder.toString("}", toStringStyle0, true, true, true, (Class<? super String>) class0);
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder("java.lang.String$CaseInsensitiveComparator@51a01c7c,125,{},-6849794470754667710,{}}");
      reflectionToStringBuilder0.append("java.lang.String$CaseInsensitiveComparator@51a01c7c,125,{},-6849794470754667710,{}}", 15.6805F);
      reflectionToStringBuilder0.append("}", (short)2832);
      reflectionToStringBuilder0.setAppendStatics(false);
      Object[] objectArray0 = new Object[0];
      String[] stringArray0 = ReflectionToStringBuilder.toNoNullStringArray(objectArray0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ReflectionToStringBuilder.toStringExclude((Object) "}", (Collection<String>) linkedList0);
      Integer integer0 = new Integer(0);
      Class<Object> class1 = Object.class;
      ReflectionToStringBuilder.toString((Object) integer0, toStringStyle0, false, true, (Class<? super Object>) class1);
      ReflectionToStringBuilder.toString((Object) "}", toStringStyle0, false);
      Object object0 = new Object();
      ToStringStyle toStringStyle1 = ToStringStyle.SIMPLE_STYLE;
      ReflectionToStringBuilder.toString(object0, toStringStyle1, true, true, false, (Class<? super Object>) class1);
      ReflectionToStringBuilder.toNoNullStringArray(stringArray0);
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ReflectionToStringBuilder.toString((Object) "V/:>");
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      ReflectionToStringBuilder.toString((Object) "V/:>", (ToStringStyle) multilineRecursiveToStringStyle0);
      Object object0 = new Object();
      ReflectionToStringBuilder.toString(object0, (ToStringStyle) multilineRecursiveToStringStyle0);
      Object object1 = new Object();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ReflectionToStringBuilder.toStringExclude(object1, (Collection<String>) linkedList0);
      // Undeclared exception!
      try { 
        ReflectionToStringBuilder.toNoNullStringArray((Object[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ReflectionToStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = (-887);
      Integer integer0 = new Integer((-887));
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      String string0 = "char";
      StringBuffer stringBuffer0 = new StringBuffer("char");
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0, toStringStyle0, stringBuffer0);
      reflectionToStringBuilder0.getUpToClass();
      boolean boolean0 = true;
      ReflectionToStringBuilder.toString((Object) stringBuffer0, toStringStyle0, true);
      // Undeclared exception!
      try { 
        reflectionToStringBuilder0.getExcludeFieldNames();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ReflectionToStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      Object object1 = new Object();
      ReflectionToStringBuilder.toString(object1, toStringStyle0, false);
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[2] = objectArray0[1];
      Object object2 = new Object();
      objectArray0[3] = object2;
      ReflectionToStringBuilder.toNoNullStringArray(objectArray0);
      ReflectionToStringBuilder.toNoNullStringArray((Collection<String>) null);
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = ReflectionToStringBuilder.toString((Object) integer0, (ToStringStyle) multilineRecursiveToStringStyle0, true, true);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) string0);
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0, (ToStringStyle) multilineRecursiveToStringStyle0, stringBuffer0, (Class<? super Integer>) class0, false, true, false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = string0;
      StringBuffer stringBuffer1 = stringBuffer0.insert(0, 0.0);
      stringArray0[1] = "org.apache.commons.lang3.builder.ReflectionToStringBuilder";
      stringArray0[2] = "org.apache.commons.lang3.builder.ReflectionToStringBuilder";
      ReflectionToStringBuilder reflectionToStringBuilder1 = reflectionToStringBuilder0.setExcludeFieldNames(stringArray0);
      Integer integer1 = new Integer(0);
      reflectionToStringBuilder0.append(0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ReflectionToStringBuilder.toStringExclude((Object) integer1, (Collection<String>) linkedList0);
      long[] longArray0 = new long[3];
      longArray0[0] = (long) 0;
      longArray0[1] = (long) 0;
      longArray0[2] = (long) 0;
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer1, "<size=", longArray0);
      ReflectionToStringBuilder reflectionToStringBuilder2 = reflectionToStringBuilder1.setExcludeFieldNames(stringArray0);
      ReflectionToStringBuilder.toString((Object) stringBuffer1, (ToStringStyle) multilineRecursiveToStringStyle0, false, true);
      reflectionToStringBuilder2.getExcludeFieldNames();
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      // Undeclared exception!
      try { 
        ReflectionToStringBuilder.toString((Object) null, toStringStyle0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // obj
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Fom<";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "G6XKzSrqh>$tS";
      stringArray0[5] = "uM~;U@d<w";
      stringArray0[6] = "xIWdAEp!";
      stringArray0[7] = "fg9H{cy-^hAnO";
      ReflectionToStringBuilder.toStringExclude(object0, stringArray0);
      Object object1 = new Object();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object1, multilineRecursiveToStringStyle0, stringBuffer0);
      Integer integer0 = new Integer(0);
      multilineRecursiveToStringStyle0.appendStart(stringBuffer0, integer0);
      ReflectionToStringBuilder reflectionToStringBuilder1 = reflectionToStringBuilder0.setExcludeFieldNames(stringArray0);
      reflectionToStringBuilder1.append("G6XKzSrqh>$tS", 0L);
      // Undeclared exception!
      try { 
        reflectionToStringBuilder1.accept((Field) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ReflectionToStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      ReflectionToStringBuilder reflectionToStringBuilder0 = null;
      try {
        reflectionToStringBuilder0 = new ReflectionToStringBuilder((Object) null, recursiveToStringStyle0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // obj
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = new Object();
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0);
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder.toString("Unexpected IllegalAccessException: ", toStringStyle0, true, true, true, (Class<? super String>) class0);
      reflectionToStringBuilder0.isExcludeNullValues();
      reflectionToStringBuilder0.append("", (-2094.8674713509));
      Class<Object> class1 = Object.class;
      ReflectionToStringBuilder.toString((Object) reflectionToStringBuilder0, (ToStringStyle) null, true, true, true, (Class<? super Object>) class1);
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Class<Object> class0 = Object.class;
      boolean boolean0 = false;
      ReflectionToStringBuilder reflectionToStringBuilder0 = null;
      try {
        reflectionToStringBuilder0 = new ReflectionToStringBuilder((Integer) null, toStringStyle0, stringBuffer0, (Class<? super Integer>) class0, true, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // obj
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = null;
      try {
        reflectionToStringBuilder0 = new ReflectionToStringBuilder((Object) null, (ToStringStyle) standardToStringStyle0, stringBuffer0, (Class<? super Object>) class0, true, false, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // obj
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0, toStringStyle0);
      boolean boolean0 = true;
      reflectionToStringBuilder0.setAppendTransients(true);
      reflectionToStringBuilder0.isExcludeNullValues();
      Object object1 = new Object();
      ReflectionToStringBuilder.toString(object1);
      boolean boolean1 = false;
      reflectionToStringBuilder0.append("", (Object) "", false);
      // Undeclared exception!
      try { 
        reflectionToStringBuilder0.getValue((Field) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ReflectionToStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = new Integer(1295);
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0);
      String[] stringArray0 = new String[0];
      ReflectionToStringBuilder reflectionToStringBuilder1 = reflectionToStringBuilder0.setExcludeFieldNames(stringArray0);
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      ReflectionToStringBuilder.toString(object0, toStringStyle0);
      reflectionToStringBuilder1.setAppendTransients(true);
      reflectionToStringBuilder1.getUpToClass();
      String[] stringArray1 = ReflectionToStringBuilder.toNoNullStringArray(stringArray0);
      ReflectionToStringBuilder reflectionToStringBuilder2 = reflectionToStringBuilder0.setExcludeFieldNames(stringArray1);
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = 'T';
      charArray0[2] = 'y';
      charArray0[3] = '?';
      charArray0[4] = 'N';
      charArray0[5] = 'q';
      charArray0[6] = ',';
      reflectionToStringBuilder2.append("[]", charArray0);
      reflectionToStringBuilder1.isAppendTransients();
      reflectionToStringBuilder0.isAppendTransients();
      reflectionToStringBuilder0.getExcludeFieldNames();
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(2801);
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0, toStringStyle0, stringBuffer0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-38);
      byteArray0[2] = (byte)114;
      byteArray0[3] = (byte)0;
      reflectionToStringBuilder0.append(byteArray0);
      reflectionToStringBuilder0.isAppendTransients();
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        reflectionToStringBuilder0.setUpToClass(class0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Specified class is not a superclass of the object
         //
         verifyException("org.apache.commons.lang3.builder.ReflectionToStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("AWAX7!C2B*t(Y'F^j");
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0, toStringStyle0, stringBuffer0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".2r";
      stringArray0[1] = "AWAX7!C2B*t(Y'F^j";
      stringArray0[2] = "AWAX7!C2B*t(Y'F^j";
      stringArray0[3] = "AWAX7!C2B*t(Y'F^j";
      ReflectionToStringBuilder reflectionToStringBuilder1 = reflectionToStringBuilder0.setExcludeFieldNames(stringArray0);
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        reflectionToStringBuilder1.setUpToClass(class0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Specified class is not a superclass of the object
         //
         verifyException("org.apache.commons.lang3.builder.ReflectionToStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ReflectionToStringBuilder reflectionToStringBuilder0 = null;
      try {
        reflectionToStringBuilder0 = new ReflectionToStringBuilder((Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // obj
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder((Object) "nWh)wg06Aw'IX\"9B2", toStringStyle0, stringBuffer0, (Class<? super Object>) class0, false, false, false);
      Class<String> class1 = String.class;
      reflectionToStringBuilder0.appendFieldsIn(class1);
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      ReflectionToStringBuilder.toString((Object) reflectionToStringBuilder0, (ToStringStyle) multilineRecursiveToStringStyle0, false, false);
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0, (ToStringStyle) null);
      reflectionToStringBuilder0.append((byte)67);
      reflectionToStringBuilder0.getUpToClass();
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0, toStringStyle0);
      String[] stringArray0 = new String[0];
      ReflectionToStringBuilder reflectionToStringBuilder1 = reflectionToStringBuilder0.setExcludeFieldNames(stringArray0);
      reflectionToStringBuilder1.toString();
      reflectionToStringBuilder0.getUpToClass();
      // Undeclared exception!
      try { 
        reflectionToStringBuilder1.appendFieldsIn((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ReflectionToStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Integer integer0 = new Integer(3388);
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      ToStringBuilder.reflectionToString((Object) integer0, (ToStringStyle) standardToStringStyle0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "java.lang.Integer@2[value=3388]");
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0, toStringStyle0, stringBuffer0, (Class<? super Integer>) class0, true, true, true);
      reflectionToStringBuilder0.isExcludeNullValues();
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "y;^F> g`2ke";
      stringArray0[1] = "s?#4Mc^y;";
      stringArray0[2] = "P]";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = ">";
      stringArray0[6] = "1g!i>s\"dlB?LOtW>50a";
      stringArray0[7] = "(~UgrMJgOv`,od";
      stringArray0[8] = "V(YQtanR^yj)dG\"%^";
      // Undeclared exception!
      try { 
        ReflectionToStringBuilder.toStringExclude((Object) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // obj
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        ReflectionToStringBuilder.toString((Object) null, toStringStyle0, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // obj
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Integer integer0 = new Integer((-2923));
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder((Object) integer0, (ToStringStyle) null, stringBuffer1, (Class<? super Object>) class0, true, true);
      reflectionToStringBuilder0.getUpToClass();
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) reflectionToStringBuilder0;
      objectArray0[1] = (Object) integer0;
      objectArray0[2] = (Object) reflectionToStringBuilder0;
      objectArray0[3] = (Object) reflectionToStringBuilder0;
      ReflectionToStringBuilder.toNoNullStringArray(objectArray0);
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.addLast("\"3Gpd");
      linkedList0.clone();
      ReflectionToStringBuilder.toNoNullStringArray(linkedList0);
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        ReflectionToStringBuilder.toString((Object) null, toStringStyle0, false, false, (Class<? super Object>) class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // obj
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      ReflectionToStringBuilder.toString(object0, toStringStyle0, true, true);
      StringBuffer stringBuffer0 = new StringBuffer("Object[]");
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0, toStringStyle0, stringBuffer0, (Class<? super Object>) class0, true, true, true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Object[]";
      stringArray0[1] = "Object[]";
      stringArray0[2] = "Object[]";
      stringArray0[3] = "Object[]";
      ReflectionToStringBuilder reflectionToStringBuilder1 = reflectionToStringBuilder0.setExcludeFieldNames(stringArray0);
      reflectionToStringBuilder1.isAppendStatics();
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder.toString("", toStringStyle0, false, false, true, (Class<? super String>) class0);
      ToStringStyle toStringStyle1 = ToStringStyle.SHORT_PREFIX_STYLE;
      ReflectionToStringBuilder.toString((Object) "L`YR15-9gRWBj&{pW", toStringStyle1, false);
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder("", toStringStyle1);
      reflectionToStringBuilder0.setUpToClass(class0);
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      ReflectionToStringBuilder.toNoNullStringArray(objectArray0);
      Integer integer0 = new Integer((-1336));
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-1336));
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      charBuffer0.clear();
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      recursiveToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      ReflectionToStringBuilder reflectionToStringBuilder0 = null;
      try {
        reflectionToStringBuilder0 = new ReflectionToStringBuilder((Object) null, recursiveToStringStyle0, (StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // obj
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = null;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0, (ToStringStyle) null);
      char[] charArray0 = new char[5];
      charArray0[0] = 's';
      charArray0[1] = 't';
      charArray0[2] = '\"';
      charArray0[3] = '|';
      charArray0[4] = 'O';
      boolean boolean0 = false;
      reflectionToStringBuilder0.append("", charArray0, false);
      reflectionToStringBuilder0.isAppendStatics();
      ReflectionToStringBuilder.toString((Object) reflectionToStringBuilder0);
      String string0 = null;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        ReflectionToStringBuilder.toStringExclude((Object) null, (Collection<String>) linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // obj
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Object object0 = new Object();
      ReflectionToStringBuilder.toString(object0);
      Object object1 = new Object();
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object1);
      Class<Object> class0 = Object.class;
      reflectionToStringBuilder0.setUpToClass(class0);
  }
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Integer integer0 = new Integer(1406);
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder.toString((Object) integer0, (ToStringStyle) null, true, true, (Class<? super Object>) class0);
      Object object0 = new Object();
      StringBuffer stringBuffer0 = new StringBuffer("java.lang.Integer@1[BYTES=4,DigitOnes={0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9},DigitTens={0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9},MAX_VALUE=2147483647,MIN_VALUE=-2147483648,SIZE=32,TYPE=int,digits={0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z},serialVersionUID=1360826667806852920,sizeTable={9,99,999,9999,99999,999999,9999999,99999999,999999999,2147483647},value=1406,serialVersionUID=-8742448824652078965]");
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0, (ToStringStyle) null, stringBuffer0);
  }
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Integer integer0 = new Integer((-392));
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0, toStringStyle0);
      ReflectionToStringBuilder.toNoNullStringArray((Collection<String>) null);
      reflectionToStringBuilder0.getUpToClass();
      reflectionToStringBuilder0.setAppendStatics(true);
  }
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringBuilder.getDefaultStyle();
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder.toString("", toStringStyle0, true, true, true, (Class<? super String>) class0);
      Integer integer0 = new Integer(0);
      StringBuffer stringBuffer0 = new StringBuffer();
      Class<Object> class1 = Object.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0, toStringStyle0, stringBuffer0, (Class<? super Integer>) class1, true, false, true);
      reflectionToStringBuilder0.setAppendTransients(true);
      // Undeclared exception!
      try { 
        reflectionToStringBuilder0.getExcludeFieldNames();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ReflectionToStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Integer integer0 = new Integer(1);
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      boolean boolean0 = false;
      boolean boolean1 = true;
      boolean boolean2 = true;
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        ReflectionToStringBuilder.toString((Integer) null, toStringStyle0, false, true, true, (Class<? super Integer>) class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // obj
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder("SdKIi6i69MxG&s", toStringStyle0);
      reflectionToStringBuilder0.append("SdKIi6i69MxG&s", (-450));
      // Undeclared exception!
      try { 
        reflectionToStringBuilder0.getExcludeFieldNames();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ReflectionToStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Integer integer0 = new Integer((-3779));
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0);
      reflectionToStringBuilder0.isAppendStatics();
      reflectionToStringBuilder0.setExcludeNullValues(false);
      Object object0 = new Object();
      String[] stringArray0 = new String[0];
      ReflectionToStringBuilder.toStringExclude(object0, stringArray0);
  }
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Integer integer0 = new Integer(3550);
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0, toStringStyle0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "^y0g}";
      stringArray0[2] = "";
      ReflectionToStringBuilder reflectionToStringBuilder1 = reflectionToStringBuilder0.setExcludeFieldNames(stringArray0);
      reflectionToStringBuilder1.toString();
  }
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.iterator();
      linkedList0.addLast("\"3Gpd");
      linkedList0.clone();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      ReflectionToStringBuilder.toNoNullStringArray(linkedList0);
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Class<String> class0 = String.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder("sTMrd", toStringStyle0, stringBuffer0, (Class<? super String>) class0, false, false);
      reflectionToStringBuilder0.setExcludeFieldNames((String[]) null);
  }
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ReflectionToStringBuilder.toStringExclude((Object) "}>o,t>qRGDR#I}tGh", (Collection<String>) linkedList0);
      linkedList0.poll();
      linkedList0.offerLast("}>o,t>qRGDR#I}tGh");
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(linkedList0, (ToStringStyle) null);
      ReflectionToStringBuilder.toString((Object) "}>o,t>qRGDR#I}tGh", (ToStringStyle) null, false, true);
      reflectionToStringBuilder0.append((short)10);
      Object object0 = new Object();
      ReflectionToStringBuilder.toStringExclude(object0, (Collection<String>) linkedList0);
      reflectionToStringBuilder0.isExcludeNullValues();
  }
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Object object0 = new Object();
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0);
      // Undeclared exception!
      try { 
        reflectionToStringBuilder0.reflectionAppendArray((Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Object object0 = new Object();
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0);
      reflectionToStringBuilder0.isAppendTransients();
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        reflectionToStringBuilder0.appendFieldsIn(class0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Object object0 = new Object();
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0);
      reflectionToStringBuilder0.isExcludeNullValues();
  }
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "!8)<?WY=]RZEje0_P=^");
      stringBuffer0.append((CharSequence) "!8)<?WY=]RZEje0_P=^", 1, 1);
      stringBuffer0.chars();
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder("!8)<?WY=]RZEje0_P=^", toStringStyle0, stringBuffer0);
      stringBuffer0.appendCodePoint(0);
      reflectionToStringBuilder0.setAppendTransients(true);
      ReflectionToStringBuilder.toString((Object) "!8)<?WY=]RZEje0_P=^", toStringStyle0, false);
      Object object0 = new Object();
      ReflectionToStringBuilder.toString(object0, toStringStyle0, true);
      ReflectionToStringBuilder.toString((Object) "java.lang.String@1[\n  hash=-111211967\n  value={!,8,),<,?,W,Y,=,],R,Z,E,j,e,0,_,P,=,^}\n]", toStringStyle0);
      reflectionToStringBuilder0.isAppendTransients();
  }
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Object object0 = null;
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      char[] charArray0 = new char[9];
      charArray0[0] = 'u';
      charArray0[1] = '/';
      charArray0[2] = 'X';
      charArray0[3] = 'z';
      charArray0[4] = '~';
      charArray0[5] = 'p';
      charArray0[6] = 'a';
      charArray0[7] = '@';
      charArray0[8] = '\'';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      short[] shortArray0 = new short[7];
      shortArray0[0] = (short)1;
      shortArray0[1] = (short)0;
      shortArray0[2] = (short)206;
      shortArray0[3] = (short)391;
      shortArray0[4] = (short)0;
      shortArray0[5] = (short)0;
      shortArray0[6] = (short)34;
      recursiveToStringStyle0.appendDetail(stringBuffer0, "org.apache.commons.lang3.builder.ReflectionToStringBuilder", shortArray0);
      // Undeclared exception!
      try { 
        ReflectionToStringBuilder.toString((Object) null, (ToStringStyle) recursiveToStringStyle0, true, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // obj
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[3];
      String string0 = "";
      stringArray0[0] = "";
      stringArray0[1] = "X-8h_qTel-s@re[qr";
      stringArray0[2] = "[[8kg_Up_]:`YA!";
      ReflectionToStringBuilder.toStringExclude(object0, stringArray0);
      ReflectionToStringBuilder.toStringExclude((Object) "X-8h_qTel-s@re[qr", stringArray0);
      Integer integer0 = new Integer((-1555));
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(1);
      Class<Integer> class0 = Integer.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0, toStringStyle0, stringBuffer0, (Class<? super Integer>) class0, false, false, true);
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        reflectionToStringBuilder0.reflectionAppendArray(object1);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Argument is not an array
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Integer integer0 = new Integer(512);
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder.toString(integer0, (ToStringStyle) multilineRecursiveToStringStyle0, true, true, true, (Class<? super Integer>) class0);
  }
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringBuilder.getDefaultStyle();
      Class<Object> class0 = Object.class;
      ToStringBuilder.reflectionToString(object0, toStringStyle0, false, (Class<? super Object>) class0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "java.lang.Object@1[]");
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0, toStringStyle0, stringBuffer0);
  }
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      ReflectionToStringBuilder.toString((Object) integer0, toStringStyle0, true);
  }
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      ReflectionToStringBuilder.toString(object0, toStringStyle0);
  }
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0);
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      ReflectionToStringBuilder.toString((Object) reflectionToStringBuilder0, toStringStyle0, false, false);
  }
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder("", toStringStyle0, (StringBuffer) null, (Class<? super String>) class0, true, true);
      // Undeclared exception!
      try { 
        reflectionToStringBuilder0.reflectionAppendArray("");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Argument is not an array
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "lk2m;{6Ro";
      stringArray0[1] = "lk2m;{6Ro";
      stringArray0[2] = "$MthY68Rm()D7";
      stringArray0[3] = "lk2m;{6Ro";
      stringArray0[4] = "lk2m;{6Ro";
      stringArray0[5] = "lk2m;{6Ro";
      stringArray0[6] = "lk2m;{6Ro";
      stringArray0[7] = "lk2m;{6Ro";
      ReflectionToStringBuilder.toStringExclude((Object) "lk2m;{6Ro", stringArray0);
  }
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder.toString("QRQu", toStringStyle0, false, false, false, (Class<? super String>) class0);
  }
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Object object0 = new Object();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      linkedList0.spliterator();
      ReflectionToStringBuilder.toStringExclude(object0, (Collection<String>) linkedList0);
  }
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[0];
      ReflectionToStringBuilder.toStringExclude(object0, stringArray0);
  }
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder("", toStringStyle0);
      reflectionToStringBuilder0.getUpToClass();
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      booleanArray0[4] = false;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      reflectionToStringBuilder0.append("", byteArray0, true);
      booleanArray0[5] = false;
      booleanArray0[6] = true;
      reflectionToStringBuilder0.append(booleanArray0);
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder.toString((Object) reflectionToStringBuilder0, toStringStyle0, true, false, true, (Class<? super Object>) class0);
      reflectionToStringBuilder0.setUpToClass(class0);
  }
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Integer integer0 = new Integer(2358);
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      stringBuffer0.reverse();
      Class<Integer> class0 = Integer.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0, toStringStyle0, stringBuffer0, (Class<? super Integer>) class0, false, false, false);
      Integer integer1 = new Integer(2358);
      boolean boolean0 = true;
      ReflectionToStringBuilder.toString((Object) integer1, toStringStyle0, false, true);
      // Undeclared exception!
      try { 
        reflectionToStringBuilder0.getExcludeFieldNames();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ReflectionToStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      Object object0 = new Object();
      ReflectionToStringBuilder.toStringExclude(object0, (Collection<String>) null);
      Object object1 = new Object();
      ReflectionToStringBuilder.toString(object1);
  }
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      Class<Object> class0 = Object.class;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ReflectionToStringBuilder.toStringExclude((Object) "}", (Collection<String>) linkedList0);
      String string0 = ReflectionToStringBuilder.toString((Object) "}", (ToStringStyle) recursiveToStringStyle0, true);
      String string1 = ReflectionToStringBuilder.toString((Object) class0, (ToStringStyle) recursiveToStringStyle0, true);
      ;
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Integer integer0 = new Integer(2);
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0, (ToStringStyle) recursiveToStringStyle0, stringBuffer0, (Class<? super Integer>) class0, true, false);
      assertTrue(reflectionToStringBuilder0.isAppendTransients());
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Integer integer0 = new Integer(2);
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Class<Object> class0 = Object.class;
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0, (ToStringStyle) recursiveToStringStyle0, stringBuffer0, (Class<? super Integer>) class0, true, false);
      reflectionToStringBuilder0.setAppendTransients(false);
      reflectionToStringBuilder0.isExcludeNullValues();
      assertTrue(reflectionToStringBuilder0.isAppendStatics());
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Class<Object> class0 = Object.class;
      Object object0 = new Object();
      String string0 = ReflectionToStringBuilder.toString(object0, toStringStyle0, true, true, (Class<? super Object>) class0);
      Object object1 = new Object();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "{}";
      String string1 = ReflectionToStringBuilder.toStringExclude(object1, stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ReflectionToStringBuilder.toString((Object) "V/:>");
      Integer integer0 = new Integer((-3169));
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(integer0, multilineRecursiveToStringStyle0);
      ReflectionToStringBuilder.toString((Object) "V/:>", (ToStringStyle) multilineRecursiveToStringStyle0);
      reflectionToStringBuilder0.isAppendStatics();
      reflectionToStringBuilder0.isAppendStatics();
      Object object0 = new Object();
      Class<Field> class0 = Field.class;
      // Undeclared exception!
      try { 
        reflectionToStringBuilder0.setUpToClass(class0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Specified class is not a superclass of the object
         //
         verifyException("org.apache.commons.lang3.builder.ReflectionToStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      Class<String> class0 = String.class;
      ReflectionToStringBuilder.toString("", toStringStyle0, true, false, false, (Class<? super String>) class0);
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(class0);
      reflectionToStringBuilder0.setExcludeNullValues(false);
      reflectionToStringBuilder0.toString();
      Object object0 = new Object();
  }
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(1);
      ReflectionToStringBuilder reflectionToStringBuilder0 = new ReflectionToStringBuilder(object0, toStringStyle0, stringBuffer0);
      ReflectionToStringBuilder reflectionToStringBuilder1 = reflectionToStringBuilder0.setExcludeFieldNames((String[]) null);
      long[] longArray0 = new long[1];
      longArray0[0] = (long) 1;
      stringBuffer0.insert(0, (double) 1);
      // Undeclared exception!
      try { 
        reflectionToStringBuilder1.reflectionAppendArray("MT");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Argument is not an array
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ;
}
}
