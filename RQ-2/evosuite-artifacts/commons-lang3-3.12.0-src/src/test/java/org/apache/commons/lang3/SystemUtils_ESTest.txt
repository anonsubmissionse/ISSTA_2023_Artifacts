 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      boolean boolean0 = SystemUtils.isOSVersionMatch(")J[QGU2 D", ")J[QGU2 D");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      boolean boolean0 = SystemUtils.isOSNameMatch("o", "o");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean boolean0 = SystemUtils.isJavaVersionMatch("N|I[8Y06=`", "N|I[8Y06=`");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JavaVersion javaVersion0 = JavaVersion.JAVA_1_3;
      boolean boolean0 = SystemUtils.isJavaVersionAtMost(javaVersion0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JavaVersion javaVersion0 = JavaVersion.JAVA_0_9;
      boolean boolean0 = SystemUtils.isJavaVersionAtLeast(javaVersion0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ISSTA_USER");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Windows XP");
      File file0 = SystemUtils.getUserHome();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ISSTA_USER");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = SystemUtils.getUserHome();
      assertTrue(file0.isFile());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/commons-lang3-3.12.0-src");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      File file0 = SystemUtils.getUserDir();
      assertNotNull(file0.toString());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      File file0 = SystemUtils.getJavaIoTmpDir();
      assertEquals(0, file0.getUsableSpace());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/usr/lib/jvm/java-8-openjdk-amd64/jre");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "]*Zv41~t|lN)|");
      File file0 = SystemUtils.getJavaHome();
      assertEquals(1, file0.lastModified());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/usr/lib/jvm/java-8-openjdk-amd64/jre");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = SystemUtils.getJavaHome();
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = SystemUtils.getEnvironmentVariable("ISSTA_USER", (String) null);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = SystemUtils.getEnvironmentVariable("ISSTA_USER", "");
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = SystemUtils.getEnvironmentVariable("ISSTA_USER", "");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemUtils.isOSVersionMatch("Windows Server 2008", (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.SystemUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemUtils.isOSNameMatch("Windows 8", (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemUtils.isOSMatch("Gs+.B~oYZHE@,k", "25.312-b07", (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemUtils.isJavaVersionMatch("Windows 8Linux", (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemUtils.isJavaVersionAtMost((JavaVersion) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.JavaVersion", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemUtils.isJavaVersionAtLeast((JavaVersion) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.JavaVersion", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemUtils.getEnvironmentVariable((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      boolean boolean0 = SystemUtils.isOSVersionMatch((String) null, "/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext");
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      boolean boolean0 = SystemUtils.isOSNameMatch((String) null, (String) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      boolean boolean0 = SystemUtils.isOSMatch("dgvX", "dgvX", "dgvX", "dgvX");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      boolean boolean0 = SystemUtils.isOSMatch("JAVA_11", "SunOS", "/", "/usr/lib/jvm/java-8-openjdk-amd64/jre");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      boolean boolean0 = SystemUtils.isOSMatch("O'6", (String) null, "O'6", (String) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      boolean boolean0 = SystemUtils.isOSMatch("os.name", "tfXiq>~M/EAd7S/*Q", "", "Windows Server 2008");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      boolean boolean0 = SystemUtils.isOSMatch((String) null, (String) null, (String) null, "O'6");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      boolean boolean0 = SystemUtils.isJavaVersionMatch((String) null, (String) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = SystemUtils.getHostName();
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = SystemUtils.getEnvironmentVariable("5 =", "/media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/commons-lang3-3.12.0-src");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = SystemUtils.getEnvironmentVariable("5 =", "/media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/commons-lang3-3.12.0-src");
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = SystemUtils.getEnvironmentVariable("_", "O?fw,Y^");
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = SystemUtils.getEnvironmentVariable("_", "O?fw,Y^");
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SystemUtils systemUtils0 = new SystemUtils();
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      boolean boolean0 = SystemUtils.isJavaAwtHeadless();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      File file0 = SystemUtils.getUserHome();
      assertEquals(0, file0.getTotalSpace());
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      File file0 = SystemUtils.getUserDir();
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      File file0 = SystemUtils.getJavaHome();
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = SystemUtils.getUserName();
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JavaVersion javaVersion0 = JavaVersion.JAVA_16;
      boolean boolean0 = SystemUtils.isJavaVersionAtLeast(javaVersion0);
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JavaVersion javaVersion0 = JavaVersion.JAVA_16;
      boolean boolean0 = SystemUtils.isJavaVersionAtMost(javaVersion0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      File file0 = SystemUtils.getJavaIoTmpDir();
      assertTrue(file0.isFile());
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = SystemUtils.getUserName("X.A(4.V/%M$5K");
      assertNotNull(string0);
}
