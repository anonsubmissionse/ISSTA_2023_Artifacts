 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      assertNotNull(lookupTranslator0);
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      ;
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      assertEquals(lookupTranslator0, charBuffer2);
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      ;
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      ;
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      assertEquals(0, charBuffer2.arrayOffset());
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      ;
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      assertTrue(charBuffer2.hasArray());
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      assertTrue(charBuffer2.hasRemaining());
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      assertFalse(charBuffer2.isReadOnly());
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      assertEquals(0, charBuffer2.limit());
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      assertEquals(0, charBuffer2.position());
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      assertEquals(0, charBuffer2.remaining());
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      assertEquals(0, charBuffer2.capacity());
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      assertEquals(0, charBuffer2.length());
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      assertNotNull(charBuffer2.toString());
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      ;
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      ;
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      ;
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      assertNotNull(stringWriter0.toString());
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      assertEquals(0, charBuffer2.arrayOffset());
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      ;
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      assertTrue(charBuffer2.hasArray());
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      ;
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      assertFalse(charBuffer2.isReadOnly());
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      assertEquals(0, charBuffer2.limit());
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      assertEquals(0, charBuffer2.position());
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      assertEquals(1, charBuffer2.remaining());
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      assertEquals(0, charBuffer2.capacity());
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      assertEquals(0, charBuffer2.length());
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      charSequenceArray0[2] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      CharBuffer charBuffer2 = CharBuffer.allocate(57);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer2, 13, (Writer) stringWriter0);
      assertNotNull(charBuffer2.toString());
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][8];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      assertNotNull(lookupTranslator0);
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][8];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][8];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(1);
      assertEquals(lookupTranslator0, stringWriter0);
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][8];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(1);
      assertNotNull(stringWriter0.toString());
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][7];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      assertNotNull(lookupTranslator0);
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][7];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      ;
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][7];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(0);
      assertEquals(lookupTranslator0, stringWriter0);
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][7];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(0);
      assertNotNull(stringWriter0.toString());
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      ;
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      ;
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[8][1];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[0] = (CharSequence) stringBuffer0;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      ;
}
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      ;
}
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[1][1];
      CharSequence[] charSequenceArray1 = new CharSequence[0];
      charSequenceArray0[0] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.lang3.text.translate.LookupTranslator", e);
      }
  }
 @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][8];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      assertNotNull(lookupTranslator0);
}
 @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][8];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      ;
}
 @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][8];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(1);
      assertEquals(lookupTranslator0, stringWriter0);
}
 @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][8];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(1);
      assertNotNull(stringWriter0.toString());
}
 @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][8];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(1);
      int int0 = lookupTranslator0.translate((CharSequence) "FFFFFBB2", 0, (Writer) stringWriter0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][8];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(1);
      int int0 = lookupTranslator0.translate((CharSequence) "FFFFFBB2", 0, (Writer) stringWriter0);
      ;
}
 @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[0][8];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      StringWriter stringWriter0 = new StringWriter(1);
      int int0 = lookupTranslator0.translate((CharSequence) "FFFFFBB2", 0, (Writer) stringWriter0);
      assertNotNull(stringWriter0.toString());
}
 @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      ;
}
 @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      ;
}
 @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      ;
}
 @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      ;
}
 @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      ;
}
 @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      ;
}
 @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      assertNotNull(lookupTranslator0);
}
 @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      ;
}
 @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      ;
}
 @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      ;
}
 @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertEquals(1, charBuffer0.length());
}
 @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertEquals(0, charBuffer0.remaining());
}
 @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertEquals(1, charBuffer0.arrayOffset());
}
 @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      ;
}
 @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertEquals(0, charBuffer0.limit());
}
 @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertTrue(charBuffer0.isDirect());
}
 @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertNotNull(charBuffer0.toString());
}
 @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertTrue(charBuffer0.hasArray());
}
 @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertEquals(0, charBuffer0.capacity());
}
 @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertEquals(0, charBuffer0.position());
}
 @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertFalse(charBuffer0.isReadOnly());
}
 @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 42);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      CharSequence[] charSequenceArray2 = new CharSequence[5];
      charSequenceArray2[0] = (CharSequence) charBuffer0;
      charSequenceArray2[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[2] = charSequenceArray2;
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertNotNull(stringWriter0.toString());
}
 @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      charSequenceArray0[2] = charSequenceArray0[0];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 13, 57);
      charSequenceArray1[0] = (CharSequence) charBuffer1;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      charSequenceArray0[2] = charSequenceArray0[0];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertNotNull(stringWriter0.toString());
}
 @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray0[0];
      charSequenceArray0[2] = charSequenceArray0[1];
      LookupTranslator lookupTranslator0 = new LookupTranslator(charSequenceArray0);
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 20, (Writer) stringWriter0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      CharSequence[][] charSequenceArray0 = new CharSequence[3][9];
      CharSequence[] charSequenceArray1 = new CharSequence[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(970);
      charSequenceArray1[0] = (CharSequence) charBuffer0;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charSequenceArray1[1] = (CharSequence) stringBuffer0;
      charSequenceArray0[0] = charSequenceArray1;
      charSequenceArray0[1] = charSequenceArray1;
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(charSequenceArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.text.translate.LookupTranslator", e);
      }
  }
 @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      LookupTranslator lookupTranslator0 = new LookupTranslator((CharSequence[][]) null);
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 0, 0);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        lookupTranslator0.translate((CharSequence) charBuffer1, 0, (Writer) stringWriter0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }
