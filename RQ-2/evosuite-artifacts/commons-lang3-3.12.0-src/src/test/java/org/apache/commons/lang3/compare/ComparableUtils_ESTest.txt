 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Predicate<String> predicate0 = ComparableUtils.betweenExclusive("", "(I7s|t+A");
      assertNotNull(predicate0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Predicate<String> predicate0 = ComparableUtils.between("&2~83y}2x\"", (String) null);
      assertNotNull(predicate0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("648DgD61pwGT");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.between("~mTjtXQ.KGvQ=7Iy,E", "648DgD61pwGT");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("648DgD61pwGT");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.equalTo("org.apache.commons.lang3.compare.ComparableUtils");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is(":95");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.lessThanOrEqualTo(":95");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("D&");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.lessThanOrEqualTo("2OK!t%d}R{4$");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("org.apache.commons.lang3.compare.ComparableUtils$1");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.lessThan("");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("org.apache.commons.lang3.compare.ComparableUtils$1");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.lessThan("org.apache.commons.lang3.compare.ComparableUtils$ComparableCheckBuilder");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("org.apache.commons.lang3.compare.ComparableUtils$1");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.greaterThanOrEqualTo("");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("26|VM9m");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.greaterThanOrEqualTo("L'u$$u");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("org.apache.commons.lang3.compare.ComparableUtils$1");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.greaterThan("");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("org.apache.commons.lang3.compare.ComparableUtils$1");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.greaterThan("org.apache.commons.lang3.compare.ComparableUtils$ComparableCheckBuilder");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("org.apache.commons.lang3.compare.ComparableUtils$1");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.equalTo("org.apache.commons.lang3.compare.ComparableUtils$1");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("26|VM9m");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.equalTo("1IjiMXQ:m,");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.between("VNc=\"f).\"fMTe9%", "VNc=\"f).\"fMTe9%");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("26|VM9m");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.betweenExclusive("L'u$$u", "");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("org.apache.commons.lang3.compare.ComparableUtils$1");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.betweenExclusive("", "org.apache.commons.lang3.compare.ComparableUtils$1");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("26|VM9m");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.betweenExclusive("", "L'u$$u");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("org.apache.commons.lang3.compare.ComparableUtils$1");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.between("org.apache.commons.lang3.compare.ComparableUtils$1", "");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ComparableUtils.ComparableCheckBuilder<String> comparableUtils_ComparableCheckBuilder0 = ComparableUtils.is("26|VM9m");
      boolean boolean0 = comparableUtils_ComparableCheckBuilder0.between("26|VM9m", "26|VM9m");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Predicate<Integer> predicate0 = ComparableUtils.gt(integer0);
      assertNotNull(predicate0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer((-1478));
      Predicate<Integer> predicate0 = ComparableUtils.ge(integer0);
      assertNotNull(predicate0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Predicate<String> predicate0 = ComparableUtils.lt(",]O");
      assertNotNull(predicate0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Predicate<String> predicate0 = ComparableUtils.le(";D%XrU~9Nxa");
      assertNotNull(predicate0);
}
