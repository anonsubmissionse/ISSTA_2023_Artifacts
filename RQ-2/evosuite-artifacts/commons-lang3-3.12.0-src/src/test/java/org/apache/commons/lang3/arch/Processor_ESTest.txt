 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Processor.Arch processor_Arch0 = Processor.Arch.BIT_64;
      Processor processor0 = new Processor(processor_Arch0, (Processor.Type) null);
      processor0.getType();
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Processor.Type processor_Type0 = Processor.Type.PPC;
      Processor processor0 = new Processor((Processor.Arch) null, processor_Type0);
      processor0.getArch();
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Processor.Arch processor_Arch0 = Processor.Arch.BIT_32;
      Processor.Type processor_Type0 = Processor.Type.PPC;
      Processor processor0 = new Processor(processor_Arch0, processor_Type0);
      boolean boolean0 = processor0.isPPC();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Processor.Arch processor_Arch0 = Processor.Arch.BIT_64;
      Processor.Type processor_Type0 = Processor.Type.X86;
      Processor processor0 = new Processor(processor_Arch0, processor_Type0);
      boolean boolean0 = processor0.isPPC();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Processor.Arch processor_Arch0 = Processor.Arch.BIT_64;
      Processor.Type processor_Type0 = Processor.Type.IA_64;
      Processor processor0 = new Processor(processor_Arch0, processor_Type0);
      boolean boolean0 = processor0.isIA64();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Processor.Arch processor_Arch0 = Processor.Arch.BIT_32;
      Processor.Type processor_Type0 = Processor.Type.PPC;
      Processor processor0 = new Processor(processor_Arch0, processor_Type0);
      boolean boolean0 = processor0.isIA64();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Processor.Arch processor_Arch0 = Processor.Arch.BIT_64;
      Processor.Type processor_Type0 = Processor.Type.X86;
      Processor processor0 = new Processor(processor_Arch0, processor_Type0);
      boolean boolean0 = processor0.isX86();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Processor.Arch processor_Arch0 = Processor.Arch.BIT_32;
      Processor.Type processor_Type0 = Processor.Type.PPC;
      Processor processor0 = new Processor(processor_Arch0, processor_Type0);
      boolean boolean0 = processor0.isX86();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Processor.Arch processor_Arch0 = Processor.Arch.BIT_64;
      Processor.Type processor_Type0 = Processor.Type.X86;
      Processor processor0 = new Processor(processor_Arch0, processor_Type0);
      boolean boolean0 = processor0.is64Bit();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Processor.Arch processor_Arch0 = Processor.Arch.BIT_32;
      Processor.Type processor_Type0 = Processor.Type.PPC;
      Processor processor0 = new Processor(processor_Arch0, processor_Type0);
      boolean boolean0 = processor0.is64Bit();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Processor.Arch processor_Arch0 = Processor.Arch.BIT_32;
      Processor.Type processor_Type0 = Processor.Type.PPC;
      Processor processor0 = new Processor(processor_Arch0, processor_Type0);
      boolean boolean0 = processor0.is32Bit();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Processor.Type processor_Type0 = Processor.Type.PPC;
      Processor processor0 = new Processor((Processor.Arch) null, processor_Type0);
      boolean boolean0 = processor0.is32Bit();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Processor.Arch processor_Arch0 = Processor.Arch.BIT_32;
      Processor.Type processor_Type0 = Processor.Type.PPC;
      Processor processor0 = new Processor(processor_Arch0, processor_Type0);
      Processor.Arch processor_Arch1 = processor0.getArch();
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Processor.Arch processor_Arch0 = Processor.Arch.BIT_64;
      Processor.Type processor_Type0 = Processor.Type.X86;
      Processor processor0 = new Processor(processor_Arch0, processor_Type0);
      Processor.Type processor_Type1 = processor0.getType();
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Processor.Arch processor_Arch0 = Processor.Arch.BIT_32;
      String string0 = processor_Arch0.getLabel();
      ;
}
