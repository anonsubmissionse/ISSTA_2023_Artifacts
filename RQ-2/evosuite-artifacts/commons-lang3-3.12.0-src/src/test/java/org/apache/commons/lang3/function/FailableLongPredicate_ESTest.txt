 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.falsePredicate();
      FailableLongPredicate<Throwable> failableLongPredicate1 = failableLongPredicate0.negate();
      FailableLongPredicate<Throwable> failableLongPredicate2 = failableLongPredicate0.or(failableLongPredicate1);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.truePredicate();
      boolean boolean0 = failableLongPredicate0.test(0L);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.falsePredicate();
      boolean boolean0 = failableLongPredicate0.test((-3946L));
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.falsePredicate();
      // Undeclared exception!
      try { 
        failableLongPredicate0.and((FailableLongPredicate<Throwable>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.falsePredicate();
      FailableLongPredicate<Throwable> failableLongPredicate1 = failableLongPredicate0.and(failableLongPredicate0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.truePredicate();
      // Undeclared exception!
      try { 
        failableLongPredicate0.or((FailableLongPredicate<Throwable>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.falsePredicate();
      FailableLongPredicate<Throwable> failableLongPredicate1 = failableLongPredicate0.negate();
      FailableLongPredicate<Throwable> failableLongPredicate2 = failableLongPredicate0.and(failableLongPredicate1);
      ;
}
