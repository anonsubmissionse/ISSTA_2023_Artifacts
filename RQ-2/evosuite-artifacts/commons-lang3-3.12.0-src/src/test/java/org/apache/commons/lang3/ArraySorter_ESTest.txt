 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      short[] shortArray0 = new short[8];
      short[] shortArray1 = ArraySorter.sort(shortArray0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      short[] shortArray0 = new short[0];
      short[] shortArray1 = ArraySorter.sort(shortArray0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = ">;g4!(";
      stringArray0[2] = "";
      stringArray0[3] = "1gHoFxx*-K7~*";
      String[] stringArray1 = ArraySorter.sort(stringArray0, (Comparator<? super String>) null);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Object[] objectArray1 = ArraySorter.sort(objectArray0, (Comparator<? super Object>) null);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Object[] objectArray1 = ArraySorter.sort(objectArray0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      long[] longArray0 = new long[0];
      long[] longArray1 = ArraySorter.sort(longArray0);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int[] intArray0 = new int[4];
      int[] intArray1 = ArraySorter.sort(intArray0);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      int[] intArray0 = new int[0];
      int[] intArray1 = ArraySorter.sort(intArray0);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      float[] floatArray0 = new float[3];
      float[] floatArray1 = ArraySorter.sort(floatArray0);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      float[] floatArray0 = new float[0];
      float[] floatArray1 = ArraySorter.sort(floatArray0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double[] doubleArray1 = ArraySorter.sort(doubleArray0);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = ArraySorter.sort(doubleArray0);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[4];
      char[] charArray1 = ArraySorter.sort(charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[0];
      char[] charArray1 = ArraySorter.sort(charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = ArraySorter.sort(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = ArraySorter.sort(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArraySorter.sort((String[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = objectArray0[0];
      // Undeclared exception!
      try { 
        ArraySorter.sort(objectArray0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArraySorter.sort((long[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long[] longArray0 = new long[5];
      long[] longArray1 = ArraySorter.sort(longArray0);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArraySorter.sort((int[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object[] objectArray1 = ArraySorter.sort(objectArray0);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArraySorter.sort((short[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        ArraySorter.sort(objectArray0, (Comparator<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ArraySorter arraySorter0 = new ArraySorter();
      Object[] objectArray0 = new Object[2];
      objectArray0[1] = (Object) arraySorter0;
      // Undeclared exception!
      try { 
        ArraySorter.sort(objectArray0, (Comparator<? super Object>) null);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArraySorter.sort((char[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArraySorter.sort((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArraySorter.sort((float[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArraySorter.sort((double[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }
