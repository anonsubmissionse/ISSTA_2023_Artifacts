/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 18:25:33 GMT 2022
 */

package org.apache.commons.lang3.concurrent;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.concurrent.ConcurrentException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConcurrentException_ESTest extends ConcurrentException_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConcurrentException concurrentException0 = null;
      try {
        concurrentException0 = new ConcurrentException((Throwable) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Not a checked exception: null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConcurrentException concurrentException0 = null;
      try {
        concurrentException0 = new ConcurrentException("", (Throwable) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Not a checked exception: null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConcurrentException concurrentException0 = new ConcurrentException();
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      ConcurrentException concurrentException0 = new ConcurrentException("", mockThrowable0);
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      ConcurrentException concurrentException0 = new ConcurrentException(mockThrowable0);
  }
}
