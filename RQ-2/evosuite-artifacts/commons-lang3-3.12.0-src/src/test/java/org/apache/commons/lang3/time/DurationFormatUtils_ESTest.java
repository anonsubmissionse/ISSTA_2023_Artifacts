/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 17:47:04 GMT 2022
 */

package org.apache.commons.lang3.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Clock;
import java.time.DateTimeException;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.ChronoLocalDate;
import java.time.chrono.IsoChronology;
import java.time.chrono.JapaneseDate;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.apache.commons.lang3.time.DurationFormatUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DurationFormatUtils_ESTest extends DurationFormatUtils_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("q  ds");
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("q  ds");
      TimeZone timeZone0 = TimeZone.getDefault();
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.formatPeriod((-1859L), 3065L, "q  ds", false, timeZone0);
      DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.SSS'S'");
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("q  ds");
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
      DurationFormatUtils.formatPeriod((-2988L), 0L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.SSS'S'", false, timeZone0);
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "java.lang.StringBuilder@000000000704");
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      long long0 = 524L;
      long long1 = 9223372036854775804L;
      DurationFormatUtils.formatPeriod(524L, 9223372036854775804L, "_\"0Mk48FQE&?");
      boolean boolean0 = false;
      DurationFormatUtils.formatDuration(2010L, "pBOX;@raEY4", false);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[3];
      int int0 = 129;
      Period period0 = Period.ofMonths(129);
      IsoChronology isoChronology0 = period0.getChronology();
      ChronoLocalDate chronoLocalDate0 = isoChronology0.dateNow();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(chronoLocalDate0, (-2132));
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(isoChronology0);
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token((Object) null);
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token2;
      // Undeclared exception!
      try { 
        DurationFormatUtils.format(durationFormatUtils_TokenArray0, 9223372036854775807L, 0L, 129, 1888L, 9223372036854775804L, (-2132), 1L, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.time.DurationFormatUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DurationFormatUtils.formatDurationWords(3600010L, true, true);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("0java.lang.StringBuilder@00000000091java.lang.StringBuilder@00000000100java.lang.StringBuilder@00000000110java.lang.StringBuilder@0000000012");
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.equals("0java.lang.StringBuilder@00000000091java.lang.StringBuilder@00000000100java.lang.StringBuilder@00000000110java.lang.StringBuilder@0000000012");
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.formatDurationWords(3600010L, false, false);
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.formatDuration(9223372036854775807L, "", false);
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("java.lang.String@0000000014java.lang.String@0000000014", 0);
      durationFormatUtils_Token0.toString();
      System.setCurrentTimeMillis(1419L);
      DurationFormatUtils.lexx("dCptKHf):pjXS/");
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "?KnzuG,+jI");
      // Undeclared exception!
      DurationFormatUtils.formatPeriod(14L, 9223372036854775807L, "java.lang.String@0000000014", false, (TimeZone) simpleTimeZone0);
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DurationFormatUtils.lexx(")G]Z6~pmuD&;$");
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0);
      durationFormatUtils_Token0.equals("/hF.g'aMc<");
      Object object1 = new Object();
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object1);
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DurationFormatUtils.lexx(")G]Z6~pmuD&;$");
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0);
      durationFormatUtils_Token0.equals("/hF.g'aMc<");
      Object object1 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object1);
      durationFormatUtils_Token1.increment();
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriodISO(1L, (-3158L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // startMillis must not be greater than endMillis
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0);
      durationFormatUtils_Token0.getCount();
      DurationFormatUtils.formatDuration(2L, "K??", true);
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[4];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token0;
      Object object1 = new Object();
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object1);
      DurationFormatUtils.formatDurationWords(2L, false, true);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray1 = new DurationFormatUtils.Token[7];
      Object object2 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object2, 1000);
      durationFormatUtils_TokenArray1[0] = durationFormatUtils_Token1;
      durationFormatUtils_TokenArray1[1] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray1[2] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray1[3] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray1[4] = durationFormatUtils_Token0;
      durationFormatUtils_Token0.toString();
      durationFormatUtils_TokenArray1[5] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray1[6] = durationFormatUtils_Token0;
      DurationFormatUtils.format(durationFormatUtils_TokenArray1, 1, 1000, 2L, 1000, 1, 1, 1000, true);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1000, 0, 1000, 0, 0, 0);
      durationFormatUtils_Token1.equals(mockGregorianCalendar0);
      DurationFormatUtils.formatDurationWords(2L, false, false);
      durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DurationFormatUtils.lexx(")G]Z6~pmuD&;$");
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0);
      durationFormatUtils_Token0.equals("/hF.g'aMc<");
      Object object1 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object1);
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      DurationFormatUtils.formatPeriod((-3912L), 2745L, "\"-[Zx?G]L", true, timeZone0);
      timeZone0.getOffset((-3912L));
      DurationFormatUtils.formatPeriod((-635L), (-635L), "java.lang.StringBuilder@0000000002");
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("\"-[Zx?G]L");
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 0);
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
      int int0 = 3;
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1, 3);
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token2;
      DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token("\"-[Zx?G]L");
      DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token4;
      JapaneseDate japaneseDate0 = MockJapaneseDate.now();
      DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(japaneseDate0, (-2253));
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token5;
      DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token(durationFormatUtils_Token1, 0);
      DurationFormatUtils.Token durationFormatUtils_Token7 = new DurationFormatUtils.Token(durationFormatUtils_Token6, (-818));
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token7;
      // Undeclared exception!
      try { 
        MockJapaneseDate.of((-818), (-818), 0);
        fail("Expecting exception: DateTimeException");
      } catch(DateTimeException e) {
         //
         // Invalid value for MonthOfYear (valid values 1 - 12): -818
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      String string0 = "~T'z`V#LB[";
      // Undeclared exception!
      try { 
        DurationFormatUtils.lexx("~T'z`V#LB[");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unmatched quote in format: ~T'z`V#LB[
         //
         verifyException("org.apache.commons.lang3.time.DurationFormatUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      long long0 = (-641L);
      String string0 = " 0 days";
      DurationFormatUtils.formatPeriod((-641L), 3056L, " 0 days");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 0 days");
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(" 0 days");
      TimeZone timeZone0 = TimeZone.getTimeZone("APoLa|=Zcb");
      TimeZone timeZone1 = TimeZone.getDefault();
      TimeZone.setDefault(timeZone0);
      DurationFormatUtils.formatPeriod((-641L), (-641L), "APoLa|=Zcb", false, timeZone0);
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.formatPeriod((-1843L), 3056L, " 0 days", false, timeZone1);
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDurationISO((-641L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DurationFormatUtils.formatPeriodISO(3089L, 3089L);
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 0);
      DurationFormatUtils.formatDurationISO(0L);
      DurationFormatUtils.formatDuration(0L, "java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000210java.lang.StringBuilder@0000000022000java.lang.StringBuilder@0000000023", true);
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      DurationFormatUtils.formatPeriod(783L, 2553L, "org.apache.commons.lang3.time.DurationFormatUtils$Token", true, timeZone0);
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ZoneId zoneId0 = ZoneId.systemDefault();
      TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);
      DurationFormatUtils.formatPeriod(0L, 0L, "", true, timeZone0);
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.formatDuration(0L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.SSS'S'");
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(203, "java.lang.StringBuilder@00000000170000java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000210java.lang.StringBuilder@00000000220java.lang.StringBuilder@0000000023000java.lang.StringBuilder@0000000024");
      TimeZone.setDefault(simpleTimeZone0);
      DurationFormatUtils.formatPeriod(1L, 1745L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.SSS'S'", false, (TimeZone) simpleTimeZone0);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[4];
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0);
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, (-325));
      durationFormatUtils_Token1.toString();
      durationFormatUtils_Token1.toString();
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
      durationFormatUtils_Token1.toString();
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token((Object) null);
      DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2);
      DurationFormatUtils.Token durationFormatUtils_Token4 = new DurationFormatUtils.Token(durationFormatUtils_Token3);
      DurationFormatUtils.Token durationFormatUtils_Token5 = new DurationFormatUtils.Token(durationFormatUtils_Token4);
      durationFormatUtils_Token3.toString();
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token5;
      durationFormatUtils_Token2.increment();
      DurationFormatUtils.Token durationFormatUtils_Token6 = new DurationFormatUtils.Token("java.lang.StringBuilder@00000000400java.lang.StringBuilder@00000000410java.lang.StringBuilder@00000000420java.lang.StringBuilder@00000000430java.lang.StringBuilder@00000000440java.lang.StringBuilder@00000000451java.lang.StringBuilder@0000000046744java.lang.StringBuilder@0000000047", (-325));
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token6;
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, durationFormatUtils_Token6);
      durationFormatUtils_Token0.getValue();
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.formatDurationISO(0L);
      DurationFormatUtils.formatPeriod((-1362L), 0L, "org.apache.commons.lang3.time.DurationFormatUtils$Token");
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(571, "ko(&#\fk0q");
      DurationFormatUtils.formatPeriod((-1477L), (-1477L), "ko(&#\fk0q", true, (TimeZone) simpleTimeZone0);
      // Undeclared exception!
      try { 
        DurationFormatUtils.format((DurationFormatUtils.Token[]) null, 571, 0L, (-1477L), 0L, 571, (-1477L), 571, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.time.DurationFormatUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriod((-1301L), (-1301L), (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long long0 = (-1L);
      long long1 = 9223372036854775807L;
      String string0 = "";
      // Undeclared exception!
      DurationFormatUtils.formatPeriod((-1L), 9223372036854775807L, "");
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DurationFormatUtils.formatDurationISO(0L);
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 4463);
      durationFormatUtils_Token0.equals((Object) null);
      DurationFormatUtils.formatPeriod((-1486L), 0L, "");
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDuration(9223372036854775807L, "s ^6d'", true);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unmatched quote in format: s ^6d'
         //
         verifyException("org.apache.commons.lang3.time.DurationFormatUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 0);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[8];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[7] = durationFormatUtils_Token0;
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, (Object) null);
      long long0 = 1L;
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDuration(1L, (String) null, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0);
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 1212);
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token1.increment();
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(durationFormatUtils_Token1);
      durationFormatUtils_Token1.increment();
      durationFormatUtils_Token2.toString();
      DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, (-276));
      durationFormatUtils_Token3.increment();
      durationFormatUtils_Token3.toString();
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      durationFormatUtils_Token2.increment();
      durationFormatUtils_Token1.increment();
      durationFormatUtils_Token3.increment();
      DurationFormatUtils.formatPeriodISO((-276), 1212);
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token2.toString();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("*\"$Axn+");
      durationFormatUtils_Token3.toString();
      durationFormatUtils_Token0.getValue();
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.lexx("");
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, 1212, (-626L), (-276), 2161L, (-276), (-1L), (-3369L), true);
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDuration((-3369L), "", true);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(949, 0, 0, 0, 0, 0);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(mockGregorianCalendar0);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.getCount();
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.formatDuration(314L, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.SSS'S'", false);
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("m]Pra&j\"92-c;,o", 430);
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.formatDuration(1L, "m]Pra&j\"92-c;,o", false);
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.formatDurationISO(430);
      durationFormatUtils_Token0.increment();
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      long long0 = (-1985L);
      String string0 = "";
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDuration((-1985L), "");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DurationFormatUtils.formatPeriodISO(1L, 1L);
      DurationFormatUtils.formatDuration(1L, "java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000210java.lang.StringBuilder@0000000022000java.lang.StringBuilder@0000000023");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minute", 0);
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.formatDurationHMS(86400000L);
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = (-532);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-532), (-532), 0, 0, (-532), 667);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(mockGregorianCalendar0);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      int int1 = 0;
      mockGregorianCalendar0.roll(667, 0);
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.equals(mockGregorianCalendar0);
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      // Undeclared exception!
      try { 
        DurationFormatUtils.lexx((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DurationFormatUtils.lexx("");
      DurationFormatUtils.formatPeriod(0L, 0L, "");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null);
      durationFormatUtils_Token0.getCount();
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(mockGregorianCalendar0, 2058);
      durationFormatUtils_Token1.toString();
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
      DurationFormatUtils.formatDurationISO(3600000L);
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 0);
      DurationFormatUtils.formatPeriod((long) 0, (long) 0, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.SSS'S'");
      DurationFormatUtils.formatDurationISO(0);
      DurationFormatUtils.formatDurationISO(0);
      durationFormatUtils_Token0.equals((Object) null);
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("or\u0002_'9g", 0);
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0);
      durationFormatUtils_Token0.getValue();
      DurationFormatUtils.formatDurationISO(1L);
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
      durationFormatUtils_Token0.increment();
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_Token0.toString();
      long long0 = 0L;
      long long1 = (-1L);
      long long2 = 0L;
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, (-51L), 0L, (-1L), 0L, 0L, 1L, (-1L), true);
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDuration(1L, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 1677;
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 1 minutes", 1677);
      durationFormatUtils_Token0.getCount();
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[2];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      String string0 = durationFormatUtils_Token0.toString();
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, (-303L), 1677, 1677, 1677, 1677, 1677, (-303L), false);
      long long0 = 48L;
      String string1 = "m![qDMJUySi)i8%*dt";
      boolean boolean0 = true;
      SimpleTimeZone simpleTimeZone0 = null;
      try {
        simpleTimeZone0 = new SimpleTimeZone(1677, string0, 1677, 1677, 1677, 1677, 0, 1677, 1349, 1349);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal start month 1677
         //
         verifyException("java.util.SimpleTimeZone", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DurationFormatUtils.formatDurationWords(9223372036854775807L, true, true);
      DurationFormatUtils.formatDurationWords(60000L, true, true);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[1];
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, 0, 0, 0);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(mockGregorianCalendar0);
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, (Object) null);
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token((Object) null);
      Object object0 = new Object();
      durationFormatUtils_Token0.equals(object0);
      durationFormatUtils_Token0.equals("");
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token((Object) null);
      DurationFormatUtils.formatDuration(1L, "", true);
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token((Object) null, 5);
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriod(1L, (-3069L), "");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // startMillis must not be greater than endMillis
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      int int0 = 1;
      mockGregorianCalendar0.setTimeInMillis(1);
      mockGregorianCalendar0.getCalendarType();
      mockGregorianCalendar0.set(1, 1, 0);
      mockGregorianCalendar0.getMaximum(0);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(mockGregorianCalendar0, 0);
      long long0 = (-193L);
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDuration((-193L), "", true);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      long long0 = 86400000L;
      long long1 = 0L;
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriodISO(86400000L, 0L);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // startMillis must not be greater than endMillis
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DurationFormatUtils.formatDurationHMS(3126L);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("00java.lang.StringBuilder@000000000800java.lang.StringBuilder@000000000903java.lang.StringBuilder@0000000010126");
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
      durationFormatUtils_Token1.increment();
      durationFormatUtils_Token1.getCount();
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("00java.lang.StringBuilder@000000000800java.lang.StringBuilder@000000000903java.lang.StringBuilder@0000000010126");
      int int0 = 0;
      DurationFormatUtils.Token durationFormatUtils_Token3 = new DurationFormatUtils.Token(durationFormatUtils_Token2, 0);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[7];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token3;
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token1;
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[6] = durationFormatUtils_Token0;
      durationFormatUtils_Token3.toString();
      Locale locale0 = Locale.PRC;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(locale0);
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, mockGregorianCalendar0);
      DurationFormatUtils.lexx("00java.lang.StringBuilder@000000000800java.lang.StringBuilder@000000000903java.lang.StringBuilder@0000000010126");
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDurationHMS((-294L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("VRg", 66);
      DurationFormatUtils.formatDuration(0L, "", false);
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token((Object) null);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[6];
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token1;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token1;
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
      StringBuilder stringBuilder0 = new StringBuilder(66);
      StringBuilder stringBuilder1 = stringBuilder0.append((-2935));
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token(stringBuilder1, (-592));
      durationFormatUtils_TokenArray0[3] = durationFormatUtils_Token2;
      durationFormatUtils_TokenArray0[4] = durationFormatUtils_Token1;
      durationFormatUtils_TokenArray0[5] = durationFormatUtils_Token1;
      // Undeclared exception!
      try { 
        DurationFormatUtils.format(durationFormatUtils_TokenArray0, 0L, 0L, 0L, 1078L, 2945L, 0L, 1L, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.time.DurationFormatUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DurationFormatUtils.formatDurationWords(0L, true, false);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "0java.lang.StringBuilder@00000000090java.lang.StringBuilder@00000000100java.lang.StringBuilder@00000000110java.lang.StringBuilder@0000000012");
      // Undeclared exception!
      try { 
        stringBuilder0.insert((-318), (CharSequence) "0java.lang.StringBuilder@00000000090java.lang.StringBuilder@00000000100java.lang.StringBuilder@00000000110java.lang.StringBuilder@0000000012", 0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // dstOffset -318
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DurationFormatUtils.formatPeriodISO(1586L, 1586L);
      DurationFormatUtils.formatDurationHMS(1586L);
      DurationFormatUtils.formatPeriodISO(1000L, 9223372036854775807L);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000210java.lang.StringBuilder@0000000022000java.lang.StringBuilder@0000000023");
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.formatDuration(1586L, "");
      durationFormatUtils_Token0.toString();
      long long0 = 1L;
      long long1 = 0L;
      boolean boolean0 = false;
      SimpleTimeZone simpleTimeZone0 = null;
      try {
        simpleTimeZone0 = new SimpleTimeZone(2, (String) null, 2, 2, 2, 2, 2, 115, 115, 2, 2, 0, 686);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TimeZone", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(")qLd");
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.getCount();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.toString();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriod((long) 3, (long) 3, "java.lang.String@0000000002java.lang.String@0000000002java.lang.String@0000000002java.lang.String@0000000002java.lang.String@0000000002java.lang.String@0000000002java.lang.String@0000000002", false, (TimeZone) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DurationFormatUtils.formatPeriodISO((-2727L), 0L);
      DurationFormatUtils.formatDuration(101L, "(6C2t`XnpT/j", true);
  }
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDurationISO((-1L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("bO~r{72U#>ZFI");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(stringBuilder0);
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0);
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token1.toString();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token1.increment();
      durationFormatUtils_Token1.increment();
      stringBuilder0.append('\"');
      DurationFormatUtils.Token durationFormatUtils_Token2 = new DurationFormatUtils.Token("bO~r{72U#>ZFI");
      durationFormatUtils_Token1.toString();
      durationFormatUtils_Token0.getCount();
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token1.increment();
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.formatDuration((long) 3, "", true);
      durationFormatUtils_Token0.toString();
      DurationFormatUtils.formatDurationHMS(0L);
      durationFormatUtils_Token1.getValue();
      DurationFormatUtils.formatDurationWords(0L, true, true);
      DurationFormatUtils.formatDurationISO(3);
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatDurationWords((-1L), true, true);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DurationFormatUtils.formatDurationISO(0L);
      DurationFormatUtils.lexx("java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000210java.lang.StringBuilder@0000000022000java.lang.StringBuilder@0000000023");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000210java.lang.StringBuilder@0000000022000java.lang.StringBuilder@0000000023");
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriodISO((-1267L), (-1413L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // startMillis must not be greater than endMillis
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = DurationFormatUtils.lexx("");
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, "");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("");
      durationFormatUtils_Token0.getCount();
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, 0L, 0L, 1, 1L, 0L, (-494L), 0L, false);
  }
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DurationFormatUtils.formatDuration(1532L, "");
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("", 1655);
      durationFormatUtils_Token0.getCount();
  }
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0);
      durationFormatUtils_Token0.increment();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object0);
      DurationFormatUtils.formatDurationHMS(394L);
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriodISO(1L, 0L);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // startMillis must not be greater than endMillis
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DurationFormatUtils.formatDurationWords(1432L, false, false);
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0);
      durationFormatUtils_Token0.toString();
      durationFormatUtils_Token0.equals(object0);
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.equals("java.lang.Object@0000000002");
      durationFormatUtils_Token0.increment();
      Object object1 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object1);
      durationFormatUtils_Token1.getCount();
      durationFormatUtils_Token1.increment();
      durationFormatUtils_Token1.increment();
      durationFormatUtils_Token0.increment();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutesSeconds(1, 1, 1);
      ZoneOffset.ofHours(1);
      durationFormatUtils_Token0.increment();
      zoneOffset0.getTotalSeconds();
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriod((long) 1, 0L, "1\")N8ym", false, timeZone0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // startMillis must not be greater than endMillis
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("", (-407));
      durationFormatUtils_Token0.equals("");
  }
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DurationFormatUtils.formatPeriod((-1L), 0L, "y");
      DurationFormatUtils.formatDurationHMS(0L);
  }
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0, 2893);
      durationFormatUtils_Token0.toString();
  }
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DurationFormatUtils.formatPeriod(0L, 0L, "3");
  }
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DurationFormatUtils.formatDurationWords(0L, true, true);
  }
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TimeZone.getDefault();
      DurationFormatUtils.formatDurationHMS(3600000L);
  }
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DurationFormatUtils.formatDurationHMS(14L);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("00java.lang.StringBuilder@000000000800java.lang.StringBuilder@000000000900java.lang.StringBuilder@0000000010014", (-3582));
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token("00java.lang.StringBuilder@000000000800java.lang.StringBuilder@000000000900java.lang.StringBuilder@0000000010014");
      durationFormatUtils_Token1.increment();
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
      DurationFormatUtils.formatDuration(14L, "00java.lang.StringBuilder@000000000800java.lang.StringBuilder@000000000900java.lang.StringBuilder@0000000010014", false);
  }
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DurationFormatUtils.formatDurationHMS(1470L);
      DurationFormatUtils.formatDurationWords(1470L, false, false);
      DurationFormatUtils.Token[] durationFormatUtils_TokenArray0 = new DurationFormatUtils.Token[3];
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0);
      durationFormatUtils_TokenArray0[0] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[1] = durationFormatUtils_Token0;
      durationFormatUtils_TokenArray0[2] = durationFormatUtils_Token0;
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(durationFormatUtils_Token0, 115);
      Object object1 = new Object();
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, object1);
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
      durationFormatUtils_Token1.increment();
      DurationFormatUtils.Token.containsTokenWithValue(durationFormatUtils_TokenArray0, durationFormatUtils_Token0);
      DurationFormatUtils.format(durationFormatUtils_TokenArray0, (-589L), 1470L, (-379L), (-589L), 2315L, 2315L, (-589L), false);
      DurationFormatUtils.formatDuration(3321L, ";3gA&@9Z6Fxy~CK#Vx");
      durationFormatUtils_Token1.equals("00java.lang.StringBuilder@000000000800java.lang.StringBuilder@000000000901java.lang.StringBuilder@0000000010470");
      DurationFormatUtils.formatPeriod((-589L), (-589L), "0java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000211java.lang.StringBuilder@0000000022");
  }
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      long long0 = 524L;
      long long1 = 9223372036854775807L;
      // Undeclared exception!
      DurationFormatUtils.formatPeriod(524L, 9223372036854775807L, "");
  }
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DurationFormatUtils.formatPeriod((-247L), (-247L), "tM*@pKv");
      Clock clock0 = MockClock.systemDefaultZone();
      MockJapaneseDate.now(clock0);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(clock0);
      boolean boolean0 = true;
      long long0 = (-641L);
      String string0 = "Expected type: %s, actual: %s";
      int int0 = 109;
      SimpleTimeZone simpleTimeZone0 = null;
      try {
        simpleTimeZone0 = new SimpleTimeZone(109, "l]dPv4``n|t~{XZ9Oq+", (-1454), (-1454), Integer.MIN_VALUE, (-1508), (-432), 100, Integer.MIN_VALUE, 139, 139);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal start month -1454
         //
         verifyException("java.util.SimpleTimeZone", e);
      }
  }
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(" 0 days");
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(" 0 days");
      TimeZone timeZone0 = TimeZone.getDefault();
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      DurationFormatUtils.formatDurationHMS(2435L);
      DurationFormatUtils.formatPeriod((-1859L), 3065L, " 0 days", false, timeZone0);
      DurationFormatUtils.lexx("'P'yyyy'Y'M'M'd'DT'H'H'm'M's.SSS'S'");
      DurationFormatUtils.lexx(" 0 days");
      DurationFormatUtils.formatPeriod((-1859L), (-1L), "t3+A6X urMYr", false, timeZone0);
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriodISO(2435L, 2010L);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // startMillis must not be greater than endMillis
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DurationFormatUtils.formatDurationWords(3600000L, true, true);
      DurationFormatUtils.formatDuration(0L, "", false);
  }
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Object object0 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token(object0);
      durationFormatUtils_Token0.equals((Object) null);
      Object object1 = new Object();
      DurationFormatUtils.Token durationFormatUtils_Token1 = new DurationFormatUtils.Token(object1);
      durationFormatUtils_Token0.equals(durationFormatUtils_Token1);
  }
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("XG]Z6~pmuD&;$");
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.increment();
      durationFormatUtils_Token0.equals(durationFormatUtils_Token0);
  }
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      long long0 = (-450L);
      DurationFormatUtils.formatPeriodISO((-450L), 1L);
      TimeZone timeZone0 = TimeZone.getTimeZone("java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000210java.lang.StringBuilder@0000000022451java.lang.StringBuilder@0000000023");
      // Undeclared exception!
      DurationFormatUtils.formatPeriod((-450L), 9223372036854775807L, "java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000210java.lang.StringBuilder@0000000022451java.lang.StringBuilder@0000000023", true, timeZone0);
  }
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DurationFormatUtils.formatDurationISO(0L);
      DurationFormatUtils.Token durationFormatUtils_Token0 = new DurationFormatUtils.Token("java.lang.StringBuilder@00000000160java.lang.StringBuilder@00000000170java.lang.StringBuilder@00000000180java.lang.StringBuilder@00000000190java.lang.StringBuilder@00000000200java.lang.StringBuilder@00000000210java.lang.StringBuilder@0000000022000java.lang.StringBuilder@0000000023", 0);
      durationFormatUtils_Token0.toString();
      String string0 = durationFormatUtils_Token0.toString();
      DurationFormatUtils.formatPeriodISO(0, 0L);
      DurationFormatUtils.formatDurationWords(0L, true, true);
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      String string1 = DurationFormatUtils.formatPeriod((-1L), 0L, "0java.lang.StringBuilder@00000000570java.lang.StringBuilder@00000000580java.lang.StringBuilder@00000000590java.lang.StringBuilder@0000000060");
      ;
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DurationFormatUtils durationFormatUtils0 = new DurationFormatUtils();
      TimeZone.getDefault();
      // Undeclared exception!
      try { 
        DurationFormatUtils.formatPeriod((long) 0, 0L, "O%s'Lv12?5{8");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unmatched quote in format: O%s'Lv12?5{8
         //
         verifyException("org.apache.commons.lang3.time.DurationFormatUtils", e);
      }
  }
}
