/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 18:06:20 GMT 2022
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.CharUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharUtils_ESTest extends CharUtils_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int int0 = CharUtils.toIntValue('9', (-789));
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaLower('z');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaLower('a');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('Z');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiControl('\uD7C0');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiControl(' ');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiPrintable('\uD7C0');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiPrintable(' ');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      boolean boolean0 = CharUtils.isAscii('\u0080');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      String string0 = CharUtils.toString('\u0080');
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('`');
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('`');
      int int0 = CharUtils.toIntValue(character0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = CharUtils.toIntValue((Character) null, (-40));
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('0');
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('0');
      int int0 = CharUtils.toIntValue(character0);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = CharUtils.toIntValue('u', (-1));
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = CharUtils.toIntValue('1');
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char char0 = CharUtils.toChar("<", '<');
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char char0 = CharUtils.toChar("", '2');
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char char0 = CharUtils.toChar("9|Al\"@3#ZcA?)QC");
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char char0 = CharUtils.toChar("s");
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char char0 = CharUtils.toChar((Character) null, '/');
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Character character0 = Character.valueOf('8');
      char char0 = CharUtils.toChar(character0, '(');
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('9');
      char char0 = CharUtils.toChar(character0);
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Character character0 = Character.valueOf('Y');
      char char0 = CharUtils.toChar(character0);
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = CharUtils.compare('', '');
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = CharUtils.compare('u', 'z');
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toIntValue((Character) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // ch
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toChar((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // The String must not be empty
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toChar("");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The String must not be empty
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toChar((Character) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // ch
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiNumeric('8');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiNumeric('y');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiNumeric('\"');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaLower('\u0080');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaLower('<');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaUpper('[');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaUpper('7');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaUpper('A');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('\r');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = CharUtils.toIntValue('0', (-2337));
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toIntValue('m');
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The character m is not in the range '0' - '9'
         //
         verifyException("org.apache.commons.lang3.CharUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = CharUtils.toIntValue('0');
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('4');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('?');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('e');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('D');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiControl('');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiControl('\u0000');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiPrintable('');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiPrintable('\n');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      boolean boolean0 = CharUtils.isAscii('\u001C');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      boolean boolean0 = CharUtils.isAscii('\u0087');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = CharUtils.unicodeEscaped((Character) null);
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('9');
      String string0 = CharUtils.unicodeEscaped(character0);
      ;
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('9');
      String string0 = CharUtils.unicodeEscaped(character0);
      ;
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = CharUtils.toString((Character) null);
      ;
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = CharUtils.toString('\n');
      ;
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = CharUtils.toString('\uDFFF');
      ;
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      int int0 = CharUtils.toIntValue((Character) null, (int) '\r');
      ;
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject("2");
      int int0 = CharUtils.toIntValue(character0);
      ;
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      char char0 = CharUtils.toChar("", 'r');
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      char char0 = CharUtils.toChar((Character) null, 'r');
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject((String) null);
      assertNotNull(character0);
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      char char0 = CharUtils.toChar((Character) '\u0000');
      ;
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CharUtils charUtils0 = new CharUtils();
      String string0 = CharUtils.toString((Character) charUtils0.NUL);
      ;
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CharUtils charUtils0 = new CharUtils();
      String string0 = CharUtils.toString((Character) charUtils0.NUL);
      ;
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String string0 = CharUtils.unicodeEscaped('\u0000');
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      char char0 = CharUtils.toChar("\n");
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      int int0 = CharUtils.compare('2', ',');
      ;
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toIntValue((Character) '\r');
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The character \r is not in the range '0' - '9'
         //
         verifyException("org.apache.commons.lang3.CharUtils", e);
      }
  }
}
