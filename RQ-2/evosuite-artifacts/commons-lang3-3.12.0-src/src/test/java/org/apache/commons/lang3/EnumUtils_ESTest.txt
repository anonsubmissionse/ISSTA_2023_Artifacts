 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      EnumUtils.getEnumIgnoreCase(class0, "KMiqIzHzh", (ClassUtils.Interfaces) null);
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      JavaVersion javaVersion0 = EnumUtils.getEnumIgnoreCase(class0, "java_1_7");
      assertNotNull(javaVersion0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      JavaVersion javaVersion0 = EnumUtils.getEnum(class0, "JAVA_1_8");
      assertNotNull(javaVersion0.toString());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      JavaVersion[] javaVersionArray0 = new JavaVersion[0];
      long long0 = EnumUtils.generateBitVector(class0, javaVersionArray0);
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      ClassUtils.Interfaces classUtils_Interfaces0 = ClassUtils.Interfaces.INCLUDE;
      ClassUtils.Interfaces classUtils_Interfaces1 = EnumUtils.getEnumIgnoreCase(class0, "JAVA_10", classUtils_Interfaces0);
      ClassUtils.Interfaces[] classUtils_InterfacesArray0 = new ClassUtils.Interfaces[8];
      classUtils_InterfacesArray0[0] = classUtils_Interfaces0;
      classUtils_InterfacesArray0[1] = classUtils_Interfaces0;
      classUtils_InterfacesArray0[2] = classUtils_Interfaces1;
      classUtils_InterfacesArray0[3] = classUtils_Interfaces0;
      classUtils_InterfacesArray0[4] = classUtils_Interfaces0;
      classUtils_InterfacesArray0[5] = classUtils_Interfaces1;
      classUtils_InterfacesArray0[6] = classUtils_Interfaces0;
      classUtils_InterfacesArray0[7] = classUtils_Interfaces1;
      long long0 = EnumUtils.generateBitVector(class0, classUtils_InterfacesArray0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      // Undeclared exception!
      try { 
        EnumUtils.processBitVectors(class0, (long[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // The validated object is null
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnumUtils.processBitVector((Class<ClassUtils.Interfaces>) null, 4121L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // EnumClass must be defined.
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnumUtils.isValidEnumIgnoreCase((Class<ClassUtils.Interfaces>) null, "7i0z!eszUt[5:T1e(");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.EnumUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnumUtils.getEnumMap((Class<JavaVersion>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.EnumUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnumUtils.getEnumList((Class<ClassUtils.Interfaces>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.EnumUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassUtils.Interfaces classUtils_Interfaces0 = ClassUtils.Interfaces.INCLUDE;
      // Undeclared exception!
      try { 
        EnumUtils.getEnumIgnoreCase((Class<ClassUtils.Interfaces>) null, "JAVA_10", classUtils_Interfaces0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.EnumUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnumUtils.getEnumIgnoreCase((Class<JavaVersion>) null, "java_1_7");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.EnumUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVectors(class0, (ClassUtils.Interfaces[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // The validated object is null
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      ClassUtils.Interfaces[] classUtils_InterfacesArray0 = new ClassUtils.Interfaces[4];
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVectors(class0, classUtils_InterfacesArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The validated array contains null element at index: 0
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      ArrayDeque<ClassUtils.Interfaces> arrayDeque0 = new ArrayDeque<ClassUtils.Interfaces>();
      ArrayList<ClassUtils.Interfaces> arrayList0 = new ArrayList<ClassUtils.Interfaces>(arrayDeque0);
      arrayList0.add((ClassUtils.Interfaces) null);
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVectors(class0, (Iterable<? extends ClassUtils.Interfaces>) arrayList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // null elements not permitted
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      ClassUtils.Interfaces[] classUtils_InterfacesArray0 = new ClassUtils.Interfaces[1];
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVector(class0, classUtils_InterfacesArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The validated array contains null element at index: 0
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVector(class0, (Iterable<? extends JavaVersion>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // The validated object is null
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      LinkedHashSet<ClassUtils.Interfaces> linkedHashSet0 = new LinkedHashSet<ClassUtils.Interfaces>();
      ClassUtils.Interfaces classUtils_Interfaces0 = ClassUtils.Interfaces.EXCLUDE;
      linkedHashSet0.add(classUtils_Interfaces0);
      long[] longArray0 = EnumUtils.generateBitVectors(class0, (Iterable<? extends ClassUtils.Interfaces>) linkedHashSet0);
      EnumSet<ClassUtils.Interfaces> enumSet0 = EnumUtils.processBitVectors(class0, longArray0);
      assertEquals(0, enumSet0.size());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      LinkedHashSet<ClassUtils.Interfaces> linkedHashSet0 = new LinkedHashSet<ClassUtils.Interfaces>();
      ClassUtils.Interfaces classUtils_Interfaces0 = ClassUtils.Interfaces.EXCLUDE;
      linkedHashSet0.add(classUtils_Interfaces0);
      long[] longArray0 = EnumUtils.generateBitVectors(class0, (Iterable<? extends ClassUtils.Interfaces>) linkedHashSet0);
      EnumSet<ClassUtils.Interfaces> enumSet0 = EnumUtils.processBitVectors(class0, longArray0);
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      LinkedHashSet<ClassUtils.Interfaces> linkedHashSet0 = new LinkedHashSet<ClassUtils.Interfaces>();
      ClassUtils.Interfaces classUtils_Interfaces0 = ClassUtils.Interfaces.EXCLUDE;
      linkedHashSet0.add(classUtils_Interfaces0);
      long[] longArray0 = EnumUtils.generateBitVectors(class0, (Iterable<? extends ClassUtils.Interfaces>) linkedHashSet0);
      EnumSet<ClassUtils.Interfaces> enumSet0 = EnumUtils.processBitVectors(class0, longArray0);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      LinkedHashSet<ClassUtils.Interfaces> linkedHashSet0 = new LinkedHashSet<ClassUtils.Interfaces>();
      ClassUtils.Interfaces classUtils_Interfaces0 = ClassUtils.Interfaces.EXCLUDE;
      linkedHashSet0.add(classUtils_Interfaces0);
      long[] longArray0 = EnumUtils.generateBitVectors(class0, (Iterable<? extends ClassUtils.Interfaces>) linkedHashSet0);
      EnumSet<ClassUtils.Interfaces> enumSet0 = EnumUtils.processBitVectors(class0, longArray0);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      ClassUtils.Interfaces classUtils_Interfaces0 = ClassUtils.Interfaces.EXCLUDE;
      ClassUtils.Interfaces classUtils_Interfaces1 = EnumUtils.getEnumIgnoreCase(class0, (String) null, classUtils_Interfaces0);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      JavaVersion javaVersion0 = JavaVersion.JAVA_0_9;
      JavaVersion javaVersion1 = EnumUtils.getEnumIgnoreCase(class0, "JAVA_1_6", javaVersion0);
      assertNotNull(javaVersion1);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      JavaVersion javaVersion0 = EnumUtils.getEnum(class0, "*B#0/5s)uFTBxU");
      EnumUtils.getEnum(class0, "*B#0/5s)uFTBxU", javaVersion0);
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      EnumUtils.getEnumIgnoreCase(class0, "");
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      long[] longArray0 = new long[0];
      EnumSet<JavaVersion> enumSet0 = EnumUtils.processBitVectors(class0, longArray0);
      assertEquals(1, enumSet0.size());
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      boolean boolean0 = EnumUtils.isValidEnum(class0, "JAVA_15");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      boolean boolean0 = EnumUtils.isValidEnum(class0, "%s does not seem to be an Enum type");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      Map<String, ClassUtils.Interfaces> map0 = EnumUtils.getEnumMap(class0);
      assertEquals(0, map0.size());
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      boolean boolean0 = EnumUtils.isValidEnumIgnoreCase(class0, "JAVA_10");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      boolean boolean0 = EnumUtils.isValidEnumIgnoreCase(class0, (String) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      JavaVersion javaVersion0 = JavaVersion.JAVA_1_3;
      JavaVersion javaVersion1 = EnumUtils.getEnum(class0, (String) null, javaVersion0);
      assertNotNull(javaVersion1.toString());
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      ClassUtils.Interfaces[] classUtils_InterfacesArray0 = new ClassUtils.Interfaces[8];
      ClassUtils.Interfaces classUtils_Interfaces0 = ClassUtils.Interfaces.EXCLUDE;
      classUtils_InterfacesArray0[0] = classUtils_Interfaces0;
      classUtils_InterfacesArray0[1] = classUtils_Interfaces0;
      classUtils_InterfacesArray0[2] = classUtils_InterfacesArray0[1];
      classUtils_InterfacesArray0[3] = classUtils_InterfacesArray0[0];
      classUtils_InterfacesArray0[4] = classUtils_InterfacesArray0[1];
      classUtils_InterfacesArray0[5] = classUtils_InterfacesArray0[0];
      classUtils_InterfacesArray0[6] = classUtils_Interfaces0;
      classUtils_InterfacesArray0[7] = classUtils_InterfacesArray0[2];
      long[] longArray0 = EnumUtils.generateBitVectors(class0, classUtils_InterfacesArray0);
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      ClassUtils.Interfaces[] classUtils_InterfacesArray0 = new ClassUtils.Interfaces[8];
      ClassUtils.Interfaces classUtils_Interfaces0 = ClassUtils.Interfaces.EXCLUDE;
      classUtils_InterfacesArray0[0] = classUtils_Interfaces0;
      classUtils_InterfacesArray0[1] = classUtils_Interfaces0;
      classUtils_InterfacesArray0[2] = classUtils_InterfacesArray0[1];
      classUtils_InterfacesArray0[3] = classUtils_InterfacesArray0[0];
      classUtils_InterfacesArray0[4] = classUtils_InterfacesArray0[1];
      classUtils_InterfacesArray0[5] = classUtils_InterfacesArray0[0];
      classUtils_InterfacesArray0[6] = classUtils_Interfaces0;
      classUtils_InterfacesArray0[7] = classUtils_InterfacesArray0[2];
      long[] longArray0 = EnumUtils.generateBitVectors(class0, classUtils_InterfacesArray0);
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      ArrayList<JavaVersion> arrayList0 = new ArrayList<JavaVersion>();
      JavaVersion javaVersion0 = JavaVersion.JAVA_12;
      arrayList0.add(javaVersion0);
      long long0 = EnumUtils.generateBitVector(class0, (Iterable<? extends JavaVersion>) arrayList0);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      ArrayList<JavaVersion> arrayList0 = new ArrayList<JavaVersion>();
      long long0 = EnumUtils.generateBitVector(class0, (Iterable<? extends JavaVersion>) arrayList0);
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Class<JavaVersion> class0 = JavaVersion.class;
      List<JavaVersion> list0 = EnumUtils.getEnumList(class0);
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      EnumSet<ClassUtils.Interfaces> enumSet0 = EnumUtils.processBitVector(class0, (-462L));
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Class<ClassUtils.Interfaces> class0 = ClassUtils.Interfaces.class;
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVector(class0, (ClassUtils.Interfaces[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // The validated object is null
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EnumUtils enumUtils0 = new EnumUtils();
  }
