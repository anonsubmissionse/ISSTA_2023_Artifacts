 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        FastTimeZone.getTimeZone((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        FastTimeZone.getGmtTimeZone((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TimeZone timeZone0 = FastTimeZone.getGmtTimeZone(" hours out of range");
      assertNotNull(timeZone0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TimeZone timeZone0 = FastTimeZone.getGmtTimeZone("Z");
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TimeZone timeZone0 = FastTimeZone.getGmtTimeZone("UTC");
      assertFalse(timeZone0.useDaylightTime());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TimeZone timeZone0 = FastTimeZone.getTimeZone("Y");
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TimeZone timeZone0 = FastTimeZone.getTimeZone("Z");
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TimeZone timeZone0 = FastTimeZone.getGmtTimeZone();
      ;
}
