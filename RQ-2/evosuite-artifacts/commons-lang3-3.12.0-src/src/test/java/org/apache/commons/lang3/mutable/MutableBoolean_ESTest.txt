 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      MutableBoolean mutableBoolean0 = new MutableBoolean(boolean0);
      assertNotNull(mutableBoolean0.toString());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean(true);
      Boolean boolean0 = mutableBoolean0.toBoolean();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      mutableBoolean0.setTrue();
      boolean boolean0 = mutableBoolean0.isTrue();
      assertTrue(mutableBoolean0.getValue());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      mutableBoolean0.setTrue();
      boolean boolean0 = mutableBoolean0.isTrue();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean(false);
      assertFalse(mutableBoolean0.toBoolean());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean(false);
      mutableBoolean0.setTrue();
      Boolean boolean0 = mutableBoolean0.getValue();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean(false);
      MutableBoolean mutableBoolean1 = new MutableBoolean(false);
      mutableBoolean1.setValue(true);
      int int0 = mutableBoolean1.compareTo(mutableBoolean0);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean(false);
      MutableBoolean mutableBoolean1 = new MutableBoolean(false);
      mutableBoolean1.setValue(true);
      int int0 = mutableBoolean1.compareTo(mutableBoolean0);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean(false);
      MutableBoolean mutableBoolean1 = new MutableBoolean(false);
      mutableBoolean1.setValue(true);
      int int0 = mutableBoolean0.compareTo(mutableBoolean1);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean(false);
      MutableBoolean mutableBoolean1 = new MutableBoolean(false);
      mutableBoolean1.setValue(true);
      int int0 = mutableBoolean0.compareTo(mutableBoolean1);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      // Undeclared exception!
      try { 
        mutableBoolean0.setValue((Boolean) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.mutable.MutableBoolean", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean(true);
      // Undeclared exception!
      try { 
        mutableBoolean0.compareTo((MutableBoolean) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.mutable.MutableBoolean", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      boolean boolean0 = mutableBoolean0.booleanValue();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      mutableBoolean0.setTrue();
      mutableBoolean0.hashCode();
      assertTrue(mutableBoolean0.booleanValue());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      mutableBoolean0.hashCode();
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      mutableBoolean0.setTrue();
      MutableBoolean mutableBoolean1 = new MutableBoolean(false);
      boolean boolean0 = mutableBoolean0.equals(mutableBoolean1);
      assertTrue(mutableBoolean0.isTrue());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      mutableBoolean0.setTrue();
      MutableBoolean mutableBoolean1 = new MutableBoolean(false);
      boolean boolean0 = mutableBoolean0.equals(mutableBoolean1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      Object object0 = new Object();
      boolean boolean0 = mutableBoolean0.equals(object0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      boolean boolean0 = mutableBoolean0.isFalse();
      assertFalse(boolean0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MutableBoolean mutableBoolean0 = null;
      try {
        mutableBoolean0 = new MutableBoolean((Boolean) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.mutable.MutableBoolean", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      boolean boolean0 = mutableBoolean0.isTrue();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      Boolean boolean0 = mutableBoolean0.toBoolean();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      String string0 = mutableBoolean0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      int int0 = mutableBoolean0.compareTo(mutableBoolean0);
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      boolean boolean0 = mutableBoolean0.equals(mutableBoolean0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      mutableBoolean0.setTrue();
      boolean boolean0 = mutableBoolean0.isFalse();
      assertTrue(mutableBoolean0.toBoolean());
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      mutableBoolean0.setTrue();
      boolean boolean0 = mutableBoolean0.isFalse();
      assertFalse(boolean0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      mutableBoolean0.setValue(true);
      boolean boolean0 = mutableBoolean0.booleanValue();
      assertTrue(mutableBoolean0.isTrue());
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      mutableBoolean0.setValue(true);
      boolean boolean0 = mutableBoolean0.booleanValue();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean();
      mutableBoolean0.setFalse();
      assertFalse(mutableBoolean0.toBoolean());
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean(false);
      Boolean boolean0 = mutableBoolean0.getValue();
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MutableBoolean mutableBoolean0 = new MutableBoolean(false);
      Boolean boolean0 = mutableBoolean0.getValue();
      mutableBoolean0.setValue(boolean0);
      assertTrue(mutableBoolean0.booleanValue());
}
