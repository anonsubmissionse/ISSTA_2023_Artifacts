 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TreeMap<String, Transformer<Integer, Integer>> treeMap0 = new TreeMap<String, Transformer<Integer, Integer>>();
      Predicate<Object> predicate0 = EqualPredicate.equalPredicate((Object) treeMap0);
      NullIsTruePredicate<Object> nullIsTruePredicate0 = new NullIsTruePredicate<Object>(predicate0);
      PredicatedSortedMap<String, Transformer<Integer, Integer>> predicatedSortedMap0 = PredicatedSortedMap.predicatedSortedMap((SortedMap<String, Transformer<Integer, Integer>>) treeMap0, (Predicate<? super String>) nullIsTruePredicate0, (Predicate<? super Transformer<Integer, Integer>>) predicate0);
      SortedMap<String, Transformer<Integer, Integer>> sortedMap0 = predicatedSortedMap0.tailMap("b)ieZcB<Rhu");
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Comparator<InstanceofPredicate> comparator0 = (Comparator<InstanceofPredicate>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any(org.apache.commons.collections4.functors.InstanceofPredicate.class) , any(org.apache.commons.collections4.functors.InstanceofPredicate.class));
      TreeMap<InstanceofPredicate, Integer> treeMap0 = new TreeMap<InstanceofPredicate, Integer>(comparator0);
      Class<Integer> class0 = Integer.class;
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(class0);
      Predicate<InstanceofPredicate> predicate0 = EqualPredicate.equalPredicate(instanceofPredicate0);
      PredicatedSortedMap<InstanceofPredicate, Integer> predicatedSortedMap0 = PredicatedSortedMap.predicatedSortedMap((SortedMap<InstanceofPredicate, Integer>) treeMap0, (Predicate<? super InstanceofPredicate>) predicate0, (Predicate<? super Integer>) instanceofPredicate0);
      SortedMap<InstanceofPredicate, Integer> sortedMap0 = predicatedSortedMap0.subMap((InstanceofPredicate) null, instanceofPredicate0);
      assertTrue(sortedMap0.isEmpty());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TreeMap<String, InstanceofPredicate> treeMap0 = new TreeMap<String, InstanceofPredicate>();
      LinkedList<InstanceofPredicate> linkedList0 = new LinkedList<InstanceofPredicate>();
      Predicate<Object> predicate0 = AllPredicate.allPredicate((Collection<? extends Predicate<? super Object>>) linkedList0);
      PredicatedSortedMap<String, InstanceofPredicate> predicatedSortedMap0 = new PredicatedSortedMap<String, InstanceofPredicate>(treeMap0, predicate0, predicate0);
      Class<String> class0 = String.class;
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(class0);
      treeMap0.put("", instanceofPredicate0);
      SortedMap<String, InstanceofPredicate> sortedMap0 = predicatedSortedMap0.subMap("", "org.apache.commons.collections4.functors.NullPredicate");
      assertTrue(sortedMap0.isEmpty());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TreeMap<String, Integer> treeMap0 = new TreeMap<String, Integer>();
      UniquePredicate<Object> uniquePredicate0 = new UniquePredicate<Object>();
      Integer integer0 = new Integer((-2388));
      treeMap0.put("", integer0);
      PredicatedSortedMap<String, Integer> predicatedSortedMap0 = PredicatedSortedMap.predicatedSortedMap((SortedMap<String, Integer>) treeMap0, (Predicate<? super String>) uniquePredicate0, (Predicate<? super Integer>) uniquePredicate0);
      assertTrue(predicatedSortedMap0.isEmpty());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TreeMap<String, Integer> treeMap0 = new TreeMap<String, Integer>();
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 3);
      Transformer<Object, String> transformer0 = InvokerTransformer.invokerTransformer("m}zi_M.b( ?<Em8", (Class<?>[]) classArray0, (Object[]) classArray0);
      Class<InstanceofPredicate> class0 = InstanceofPredicate.class;
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(class0);
      TransformedPredicate<String> transformedPredicate0 = new TransformedPredicate<String>(transformer0, instanceofPredicate0);
      PredicatedSortedMap<String, Integer> predicatedSortedMap0 = new PredicatedSortedMap<String, Integer>(treeMap0, transformedPredicate0, instanceofPredicate0);
      SortedMap<String, Integer> sortedMap0 = predicatedSortedMap0.headMap("m}zi_M.b( ?<Em8");
      assertTrue(sortedMap0.isEmpty());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TreeMap<String, Object> treeMap0 = new TreeMap<String, Object>();
      Predicate<Object> predicate0 = FalsePredicate.falsePredicate();
      PredicatedSortedMap<String, Object> predicatedSortedMap0 = new PredicatedSortedMap<String, Object>(treeMap0, predicate0, predicate0);
      PredicatedSortedMap<String, Object> predicatedSortedMap1 = new PredicatedSortedMap<String, Object>(predicatedSortedMap0, predicate0, predicate0);
      SortedMap<String, Object> sortedMap0 = predicatedSortedMap1.getSortedMap();
      assertTrue(sortedMap0.isEmpty());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<InstanceofPredicate> linkedList0 = new LinkedList<InstanceofPredicate>();
      Predicate<Object> predicate0 = AllPredicate.allPredicate((Collection<? extends Predicate<? super Object>>) linkedList0);
      TreeMap<Object, Transformer<Boolean, Integer>> treeMap0 = new TreeMap<Object, Transformer<Boolean, Integer>>();
      PredicatedSortedMap<Object, Transformer<Boolean, Integer>> predicatedSortedMap0 = PredicatedSortedMap.predicatedSortedMap((SortedMap<Object, Transformer<Boolean, Integer>>) treeMap0, (Predicate<? super Object>) predicate0, (Predicate<? super Transformer<Boolean, Integer>>) null);
      // Undeclared exception!
      try { 
        predicatedSortedMap0.tailMap((Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TreeMap<InstanceofPredicate, Transformer<Object, Boolean>> treeMap0 = new TreeMap<InstanceofPredicate, Transformer<Object, Boolean>>();
      Class<Boolean>[] classArray0 = (Class<Boolean>[]) Array.newInstance(Class.class, 4);
      InvokerTransformer<Object, Boolean> invokerTransformer0 = new InvokerTransformer<Object, Boolean>("", classArray0, classArray0);
      Predicate<Object> predicate0 = FalsePredicate.falsePredicate();
      TransformedPredicate<Object> transformedPredicate0 = new TransformedPredicate<Object>(invokerTransformer0, predicate0);
      PredicatedSortedMap<InstanceofPredicate, Transformer<Object, Boolean>> predicatedSortedMap0 = PredicatedSortedMap.predicatedSortedMap((SortedMap<InstanceofPredicate, Transformer<Object, Boolean>>) treeMap0, (Predicate<? super InstanceofPredicate>) transformedPredicate0, (Predicate<? super Transformer<Object, Boolean>>) transformedPredicate0);
      Class<Object> class0 = Object.class;
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(class0);
      // Undeclared exception!
      try { 
        predicatedSortedMap0.tailMap(instanceofPredicate0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.commons.collections4.functors.InstanceofPredicate cannot be cast to java.lang.Comparable
         //
         verifyException("java.util.TreeMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TreeMap<Integer, InstanceofPredicate> treeMap0 = new TreeMap<Integer, InstanceofPredicate>();
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 0);
      Predicate<Object> predicate0 = AllPredicate.allPredicate((Predicate<? super Object>[]) predicateArray0);
      PredicatedSortedMap<Integer, InstanceofPredicate> predicatedSortedMap0 = new PredicatedSortedMap<Integer, InstanceofPredicate>(treeMap0, predicate0, predicate0);
      // Undeclared exception!
      try { 
        predicatedSortedMap0.subMap((Integer) null, (Integer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      TreeMap<String, String> treeMap0 = new TreeMap<String, String>();
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 5);
      Predicate<Object> predicate0 = FalsePredicate.falsePredicate();
      NullIsTruePredicate<Object> nullIsTruePredicate0 = new NullIsTruePredicate<Object>(predicate0);
      predicateArray0[0] = (Predicate<Object>) nullIsTruePredicate0;
      EqualPredicate<Object> equalPredicate0 = new EqualPredicate<Object>((Object) null);
      predicateArray0[1] = (Predicate<Object>) equalPredicate0;
      predicateArray0[2] = predicateArray0[1];
      predicateArray0[3] = (Predicate<Object>) equalPredicate0;
      predicateArray0[4] = predicateArray0[3];
      Predicate<String> predicate1 = OnePredicate.onePredicate((Predicate<? super String>[]) predicateArray0);
      PredicatedSortedMap<String, String> predicatedSortedMap0 = PredicatedSortedMap.predicatedSortedMap((SortedMap<String, String>) treeMap0, (Predicate<? super String>) predicate1, (Predicate<? super String>) nullIsTruePredicate0);
      // Undeclared exception!
      try { 
        predicatedSortedMap0.subMap("org.apache.commons.collections4.map.PredicatedSortedMap", "RYk$mww/]S~[&gP0]79");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // fromKey > toKey
         //
         verifyException("java.util.TreeMap$NavigableSubMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Predicate<Object> predicate0 = InstanceofPredicate.instanceOfPredicate(class0);
      TreeMap<Predicate<Object>, Object> treeMap0 = new TreeMap<Predicate<Object>, Object>();
      PredicatedSortedMap<Predicate<Object>, Object> predicatedSortedMap0 = new PredicatedSortedMap<Predicate<Object>, Object>(treeMap0, predicate0, predicate0);
      // Undeclared exception!
      try { 
        predicatedSortedMap0.subMap(predicate0, predicate0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.commons.collections4.functors.InstanceofPredicate cannot be cast to java.lang.Comparable
         //
         verifyException("java.util.TreeMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicatedSortedMap.predicatedSortedMap((SortedMap<String, String>) null, (Predicate<? super String>) null, (Predicate<? super String>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // Map must not be null.
         //
         verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TreeMap<Boolean, Object> treeMap0 = new TreeMap<Boolean, Object>();
      EqualPredicate<Boolean> equalPredicate0 = new EqualPredicate<Boolean>((Boolean) null);
      LinkedList<InstanceofPredicate> linkedList0 = new LinkedList<InstanceofPredicate>();
      Predicate<Object> predicate0 = NonePredicate.nonePredicate((Collection<? extends Predicate<? super Object>>) linkedList0);
      PredicatedSortedMap<Boolean, Object> predicatedSortedMap0 = PredicatedSortedMap.predicatedSortedMap((SortedMap<Boolean, Object>) treeMap0, (Predicate<? super Boolean>) equalPredicate0, (Predicate<? super Object>) predicate0);
      // Undeclared exception!
      try { 
        predicatedSortedMap0.headMap((Boolean) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TreeMap<String, Object> treeMap0 = new TreeMap<String, Object>();
      Predicate<Object> predicate0 = UniquePredicate.uniquePredicate();
      PredicatedSortedMap<String, Object> predicatedSortedMap0 = new PredicatedSortedMap<String, Object>(treeMap0, predicate0, predicate0);
      predicatedSortedMap0.put("", (Object) null);
      // Undeclared exception!
      try { 
        predicatedSortedMap0.headMap("|xZ%t1ik{s");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Cannot add key - Predicate rejected it
         //
         verifyException("org.apache.commons.collections4.map.PredicatedMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TreeMap<String, Integer> treeMap0 = new TreeMap<String, Integer>();
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 3);
      Integer integer0 = new Integer((-3));
      treeMap0.put("EQUAL", integer0);
      Transformer<Object, String> transformer0 = InvokerTransformer.invokerTransformer("m}zi_M.b( ?<Em8", (Class<?>[]) classArray0, (Object[]) classArray0);
      Class<InstanceofPredicate> class0 = InstanceofPredicate.class;
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(class0);
      TransformedPredicate<String> transformedPredicate0 = new TransformedPredicate<String>(transformer0, instanceofPredicate0);
      PredicatedSortedMap<String, Integer> predicatedSortedMap0 = null;
      try {
        predicatedSortedMap0 = new PredicatedSortedMap<String, Integer>(treeMap0, transformedPredicate0, instanceofPredicate0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // InvokerTransformer: The method 'm}zi_M.b( ?<Em8' on 'class java.lang.String' does not exist
         //
         verifyException("org.apache.commons.collections4.functors.InvokerTransformer", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EqualPredicate<Object> equalPredicate0 = new EqualPredicate<Object>((Object) null);
      PredicatedSortedMap<Object, Object> predicatedSortedMap0 = null;
      try {
        predicatedSortedMap0 = new PredicatedSortedMap<Object, Object>((SortedMap<Object, Object>) null, (Predicate<? super Object>) null, equalPredicate0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // Map must not be null.
         //
         verifyException("org.apache.commons.collections4.map.AbstractMapDecorator", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TreeMap<String, Integer> treeMap0 = new TreeMap<String, Integer>();
      Predicate<String> predicate0 = NullPredicate.nullPredicate();
      Integer integer0 = new Integer(0);
      treeMap0.put("", integer0);
      NullIsTruePredicate<String> nullIsTruePredicate0 = new NullIsTruePredicate<String>(predicate0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.GREATER_OR_EQUAL;
      ComparatorPredicate<Object> comparatorPredicate0 = new ComparatorPredicate<Object>(nullIsTruePredicate0, comparator0, comparatorPredicate_Criterion0);
      PredicatedSortedMap<String, Integer> predicatedSortedMap0 = null;
      try {
        predicatedSortedMap0 = new PredicatedSortedMap<String, Integer>(treeMap0, nullIsTruePredicate0, comparatorPredicate0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Cannot add key - Predicate rejected it
         //
         verifyException("org.apache.commons.collections4.map.PredicatedMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TreeMap<String, Object> treeMap0 = new TreeMap<String, Object>();
      PredicatedSortedMap<String, Object> predicatedSortedMap0 = new PredicatedSortedMap<String, Object>(treeMap0, (Predicate<? super String>) null, (Predicate<? super Object>) null);
      Comparator<? super String> comparator0 = predicatedSortedMap0.comparator();
      assertNotNull(comparator0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TreeMap<String, Object> treeMap0 = new TreeMap<String, Object>();
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 5);
      OnePredicate<Object> onePredicate0 = new OnePredicate<Object>(predicateArray0);
      AndPredicate<Object> andPredicate0 = new AndPredicate<Object>(onePredicate0, onePredicate0);
      AllPredicate<Object> allPredicate0 = new AllPredicate<Object>(predicateArray0);
      PredicatedSortedMap<String, Object> predicatedSortedMap0 = PredicatedSortedMap.predicatedSortedMap((SortedMap<String, Object>) treeMap0, (Predicate<? super String>) allPredicate0, (Predicate<? super Object>) andPredicate0);
      // Undeclared exception!
      try { 
        predicatedSortedMap0.firstKey();
        fail("Expecting exception: NoSuchElementException");
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(class0);
      TreeMap<InstanceofPredicate, InstanceofPredicate> treeMap0 = new TreeMap<InstanceofPredicate, InstanceofPredicate>();
      PredicatedSortedMap<InstanceofPredicate, InstanceofPredicate> predicatedSortedMap0 = new PredicatedSortedMap<InstanceofPredicate, InstanceofPredicate>(treeMap0, (Predicate<? super InstanceofPredicate>) null, instanceofPredicate0);
      // Undeclared exception!
      try { 
        predicatedSortedMap0.lastKey();
        fail("Expecting exception: NoSuchElementException");
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Predicate<Object> predicate0 = FalsePredicate.falsePredicate();
      TreeMap<Object, Boolean> treeMap0 = new TreeMap<Object, Boolean>();
      PredicatedSortedMap<Object, Boolean> predicatedSortedMap0 = PredicatedSortedMap.predicatedSortedMap((SortedMap<Object, Boolean>) treeMap0, (Predicate<? super Object>) predicate0, (Predicate<? super Boolean>) predicate0);
      // Undeclared exception!
      try { 
        predicatedSortedMap0.headMap(predicate0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.commons.collections4.functors.FalsePredicate cannot be cast to java.lang.Comparable
         //
         verifyException("java.util.TreeMap", e);
      }
  }
