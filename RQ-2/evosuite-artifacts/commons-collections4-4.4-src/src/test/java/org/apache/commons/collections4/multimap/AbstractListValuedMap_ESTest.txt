 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayListValuedHashMap<String, Integer> arrayListValuedHashMap0 = new ArrayListValuedHashMap<String, Integer>();
      List<Integer> list0 = arrayListValuedHashMap0.wrappedCollection("");
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayListValuedHashMap<Collection<String>, String> arrayListValuedHashMap0 = new ArrayListValuedHashMap<Collection<String>, String>(0, 0);
      ArrayList<String> arrayList0 = arrayListValuedHashMap0.createCollection();
      arrayListValuedHashMap0.put(arrayList0, "N)");
      List<String> list0 = arrayListValuedHashMap0.remove(arrayList0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrayListValuedHashMap<Collection<String>, LinkedList<Object>> arrayListValuedHashMap0 = new ArrayListValuedHashMap<Collection<String>, LinkedList<Object>>(1);
      Map<Collection<String>, List<LinkedList<Object>>> map0 = arrayListValuedHashMap0.getMap();
      assertEquals(0, map0.size());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayListValuedHashMap<Integer, Integer> arrayListValuedHashMap0 = new ArrayListValuedHashMap<Integer, Integer>(2489, 0);
      Integer integer0 = new Integer(1);
      arrayListValuedHashMap0.put(integer0, integer0);
      Map<Integer, List<Integer>> map0 = arrayListValuedHashMap0.getMap();
      assertEquals(0, map0.size());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayListValuedHashMap<Integer, String> arrayListValuedHashMap0 = new ArrayListValuedHashMap<Integer, String>(991);
      ArrayListValuedHashMap<Object, String> arrayListValuedHashMap1 = new ArrayListValuedHashMap<Object, String>();
      List<String> list0 = arrayListValuedHashMap1.get(arrayListValuedHashMap0);
      ArrayListValuedHashMap<String, Object> arrayListValuedHashMap2 = new ArrayListValuedHashMap<String, Object>(991);
      List<Object> list1 = arrayListValuedHashMap2.remove(list0);
      assertTrue(list1.isEmpty());
}
