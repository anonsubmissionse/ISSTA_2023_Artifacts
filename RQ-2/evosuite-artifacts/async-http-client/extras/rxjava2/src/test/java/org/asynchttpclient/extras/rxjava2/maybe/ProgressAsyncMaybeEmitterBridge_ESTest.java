/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 07 16:08:44 GMT 2022
 */

package org.asynchttpclient.extras.rxjava2.maybe;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.reactivex.MaybeEmitter;
import org.asynchttpclient.extras.rxjava2.maybe.ProgressAsyncMaybeEmitterBridge;
import org.asynchttpclient.handler.ProgressAsyncHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ProgressAsyncMaybeEmitterBridge_ESTest extends ProgressAsyncMaybeEmitterBridge_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MaybeEmitter<Integer> maybeEmitter0 = (MaybeEmitter<Integer>) mock(MaybeEmitter.class, new ViolatedAssumptionAnswer());
      ProgressAsyncMaybeEmitterBridge<Integer> progressAsyncMaybeEmitterBridge0 = null;
      try {
        progressAsyncMaybeEmitterBridge0 = new ProgressAsyncMaybeEmitterBridge<Integer>(maybeEmitter0, (ProgressAsyncHandler<? extends Integer>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }
}
