/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 07 16:00:51 GMT 2022
 */

package org.asynchttpclient.extras.registry;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.asynchttpclient.AsyncHttpClientConfig;
import org.asynchttpclient.extras.registry.AsyncHttpClientFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AsyncHttpClientFactory_ESTest extends AsyncHttpClientFactory_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      AsyncHttpClientConfig asyncHttpClientConfig1 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(asyncHttpClientConfig1).getRequestFilters();
      // Undeclared exception!
      try { 
        AsyncHttpClientFactory.getAsyncHttpClient(asyncHttpClientConfig1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.DefaultAsyncHttpClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AsyncHttpClientFactory asyncHttpClientFactory0 = new AsyncHttpClientFactory();
  }
}
