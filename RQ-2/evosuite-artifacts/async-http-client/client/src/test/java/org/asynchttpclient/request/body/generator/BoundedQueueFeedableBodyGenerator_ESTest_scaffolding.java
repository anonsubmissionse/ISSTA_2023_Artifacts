/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Oct 07 15:53:05 GMT 2022
 */

package org.asynchttpclient.request.body.generator;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class BoundedQueueFeedableBodyGenerator_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.asynchttpclient.request.body.generator.BoundedQueueFeedableBodyGenerator"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/async-http-client/client"); 
    java.lang.System.setProperty("user.home", "/home/ISSTA_USER"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "ISSTA_USER"); 
    java.lang.System.setProperty("user.timezone", "America/New_York"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BoundedQueueFeedableBodyGenerator_ESTest_scaffolding.class.getClassLoader() ,
      "io.netty.buffer.AdvancedLeakAwareCompositeByteBuf",
      "org.asynchttpclient.request.body.generator.QueueBasedFeedableBodyGenerator",
      "io.netty.buffer.ByteBufAllocatorMetricProvider",
      "io.netty.util.IllegalReferenceCountException",
      "io.netty.buffer.ByteBufAllocator",
      "io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledDirectByteBuf",
      "io.netty.buffer.WrappedCompositeByteBuf",
      "org.asynchttpclient.request.body.generator.BodyChunk",
      "io.netty.buffer.SwappedByteBuf",
      "io.netty.buffer.CompositeByteBuf$Component",
      "io.netty.buffer.UnpooledUnsafeHeapByteBuf",
      "io.netty.buffer.DuplicatedByteBuf",
      "io.netty.buffer.AbstractReferenceCountedByteBuf$1",
      "io.netty.buffer.AbstractUnsafeSwappedByteBuf",
      "io.netty.buffer.AbstractByteBuf",
      "io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf",
      "io.netty.buffer.UnpooledUnsafeDirectByteBuf",
      "io.netty.buffer.PoolArena",
      "org.asynchttpclient.request.body.generator.FeedListener",
      "io.netty.buffer.UnsafeDirectSwappedByteBuf",
      "io.netty.buffer.AbstractByteBufAllocator",
      "org.asynchttpclient.request.body.generator.PushBody",
      "io.netty.buffer.PooledByteBufAllocator",
      "io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeDirectByteBuf",
      "io.netty.buffer.PoolArenaMetric",
      "io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf",
      "io.netty.buffer.CompositeByteBuf",
      "io.netty.buffer.UnpooledDuplicatedByteBuf",
      "io.netty.util.internal.logging.InternalLogger",
      "io.netty.buffer.AbstractDerivedByteBuf",
      "org.asynchttpclient.request.body.Body$BodyState",
      "io.netty.buffer.UnpooledDirectByteBuf",
      "io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric",
      "io.netty.buffer.AbstractReferenceCountedByteBuf",
      "io.netty.buffer.UnpooledHeapByteBuf",
      "org.asynchttpclient.request.body.generator.BodyGenerator",
      "io.netty.buffer.UnpooledByteBufAllocator",
      "io.netty.buffer.UnpooledSlicedByteBuf",
      "io.netty.buffer.SizeClassesMetric",
      "io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache",
      "io.netty.buffer.AdvancedLeakAwareByteBuf",
      "io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf",
      "io.netty.buffer.PooledByteBufAllocatorMetric",
      "io.netty.util.internal.ReferenceCountUpdater",
      "io.netty.buffer.ByteBuf",
      "org.asynchttpclient.request.body.generator.FeedableBodyGenerator",
      "io.netty.util.concurrent.FastThreadLocal",
      "io.netty.buffer.SimpleLeakAwareCompositeByteBuf",
      "org.asynchttpclient.request.body.generator.BoundedQueueFeedableBodyGenerator",
      "io.netty.buffer.SimpleLeakAwareByteBuf",
      "io.netty.buffer.UnsafeHeapSwappedByteBuf",
      "io.netty.buffer.PooledByteBuf",
      "io.netty.buffer.AbstractUnpooledSlicedByteBuf",
      "io.netty.util.ByteProcessor",
      "io.netty.buffer.WrappedByteBuf",
      "io.netty.util.ReferenceCounted",
      "io.netty.buffer.SizeClasses",
      "io.netty.buffer.ByteBufAllocatorMetric",
      "io.netty.buffer.CompositeByteBuf$ByteWrapper",
      "io.netty.buffer.EmptyByteBuf",
      "org.asynchttpclient.request.body.Body",
      "io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.asynchttpclient.request.body.generator.BodyChunk", false, BoundedQueueFeedableBodyGenerator_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.asynchttpclient.request.body.generator.FeedListener", false, BoundedQueueFeedableBodyGenerator_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BoundedQueueFeedableBodyGenerator_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.asynchttpclient.request.body.generator.QueueBasedFeedableBodyGenerator",
      "org.asynchttpclient.request.body.generator.BoundedQueueFeedableBodyGenerator",
      "org.asynchttpclient.request.body.generator.BodyChunk",
      "org.asynchttpclient.request.body.generator.PushBody",
      "org.asynchttpclient.request.body.Body$BodyState",
      "io.netty.buffer.ByteBuf"
    );
  }
}
