/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 07 15:40:40 GMT 2022
 */

package org.asynchttpclient;

import org.junit.Test;
import static org.junit.Assert.*;
import org.asynchttpclient.HostStats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HostStats_ESTest extends HostStats_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-1L), 1217L);
      HostStats hostStats1 = new HostStats((-1L), (-1L));
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-1L), 1217L);
      HostStats hostStats1 = new HostStats((-1L), (-1L));
      boolean boolean0 = hostStats0.equals(hostStats1);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-1L), 1217L);
      HostStats hostStats1 = new HostStats((-1L), (-1L));
      boolean boolean0 = hostStats0.equals(hostStats1);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, (-1L));
      HostStats hostStats1 = new HostStats((-1L), (-1L));
      boolean boolean0 = hostStats0.equals(hostStats1);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, (-1L));
      HostStats hostStats1 = new HostStats((-1L), (-1L));
      boolean boolean0 = hostStats0.equals(hostStats1);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, (-1L));
      HostStats hostStats1 = new HostStats((-1L), (-1L));
      boolean boolean0 = hostStats0.equals(hostStats1);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, (-1L));
      HostStats hostStats1 = new HostStats((-1L), (-1L));
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, 0L);
      long long0 = hostStats0.getHostIdleConnectionCount();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      HostStats hostStats0 = new HostStats(2281L, 2281L);
      long long0 = hostStats0.getHostIdleConnectionCount();
      assertEquals(0, hostStats0.getHostConnectionCount());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      HostStats hostStats0 = new HostStats(2281L, 2281L);
      long long0 = hostStats0.getHostIdleConnectionCount();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, 0L);
      long long0 = hostStats0.getHostConnectionCount();
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HostStats hostStats0 = new HostStats(1155L, 1155L);
      long long0 = hostStats0.getHostConnectionCount();
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, 0L);
      long long0 = hostStats0.getHostActiveConnectionCount();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HostStats hostStats0 = new HostStats(1L, (-3557L));
      long long0 = hostStats0.getHostActiveConnectionCount();
      assertEquals(1, hostStats0.getHostConnectionCount());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HostStats hostStats0 = new HostStats(1L, (-3557L));
      long long0 = hostStats0.getHostActiveConnectionCount();
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-344L), (-344L));
      long long0 = hostStats0.getHostIdleConnectionCount();
      assertEquals(1, hostStats0.getHostActiveConnectionCount());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-344L), (-344L));
      long long0 = hostStats0.getHostIdleConnectionCount();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-4929L), (-4929L));
      long long0 = hostStats0.getHostActiveConnectionCount();
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-4929L), (-4929L));
      long long0 = hostStats0.getHostActiveConnectionCount();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-344L), (-344L));
      long long0 = hostStats0.getHostConnectionCount();
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HostStats hostStats0 = new HostStats(52L, 52L);
      HostStats hostStats1 = new HostStats(52L, 52L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HostStats hostStats0 = new HostStats(52L, 52L);
      HostStats hostStats1 = new HostStats(52L, 52L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HostStats hostStats0 = new HostStats(23L, 23L);
      HostStats hostStats1 = new HostStats(35L, 23L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HostStats hostStats0 = new HostStats(23L, 23L);
      HostStats hostStats1 = new HostStats(35L, 23L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HostStats hostStats0 = new HostStats(23L, 23L);
      HostStats hostStats1 = new HostStats(35L, 23L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertEquals(0, hostStats1.getHostConnectionCount());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HostStats hostStats0 = new HostStats(23L, 23L);
      HostStats hostStats1 = new HostStats(23L, 35L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HostStats hostStats0 = new HostStats(23L, 23L);
      HostStats hostStats1 = new HostStats(23L, 35L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HostStats hostStats0 = new HostStats(23L, 23L);
      HostStats hostStats1 = new HostStats(23L, 35L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-655L), (-655L));
      boolean boolean0 = hostStats0.equals("There are -1310 total connections, -655 are active and -655 are idle.");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-655L), (-655L));
      boolean boolean0 = hostStats0.equals("There are -1310 total connections, -655 are active and -655 are idle.");
      assertEquals(0, hostStats0.getHostConnectionCount());
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HostStats hostStats0 = new HostStats(52L, 52L);
      boolean boolean0 = hostStats0.equals(hostStats0);
      assertEquals(0, hostStats0.getHostConnectionCount());
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HostStats hostStats0 = new HostStats(52L, 52L);
      boolean boolean0 = hostStats0.equals(hostStats0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-655L), (-655L));
      boolean boolean0 = hostStats0.equals((Object) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-655L), (-655L));
      boolean boolean0 = hostStats0.equals((Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HostStats hostStats0 = new HostStats(52L, 52L);
      hostStats0.hashCode();
      assertEquals(0, hostStats0.getHostConnectionCount());
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-655L), (-655L));
      String string0 = hostStats0.toString();
      ;
}
}
