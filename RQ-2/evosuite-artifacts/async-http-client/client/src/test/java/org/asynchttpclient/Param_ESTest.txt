 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Param param0 = new Param(",yt9h ", ",yt9h ");
      param0.hashCode();
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Param param0 = new Param("T@u2AJb;J@<ep`lHk3", "T@u2AJb;J@<ep`lHk3");
      String string0 = param0.getValue();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Param param0 = new Param("", "");
      String string0 = param0.getValue();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Param param0 = new Param((String) null, (String) null);
      String string0 = param0.getName();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Param param0 = new Param("", "");
      String string0 = param0.getName();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      List<String> list0 = linkedList0.subList(0, 0);
      hashMap0.put("{} -> {}", list0);
      linkedList0.pollLast();
      // Undeclared exception!
      try { 
        Param.map2ParamList(hashMap0);
        fail("Expecting exception: ConcurrentModificationException");
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.SubList", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      hashMap0.put("", (List<String>) null);
      // Undeclared exception!
      try { 
        Param.map2ParamList(hashMap0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.Param", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Param param0 = new Param(",yt9h ", ",yt9h ");
      Param param1 = new Param(",yt9h ", ",yt;h ");
      boolean boolean0 = param0.equals(param1);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Param param0 = new Param(",yt9h ", ",yt9h ");
      Param param1 = new Param(",yt9h ", ",yt;h ");
      boolean boolean0 = param0.equals(param1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Param param0 = new Param((String) null, (String) null);
      Param param1 = new Param((String) null, (String) null);
      boolean boolean0 = param0.equals(param1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Param param0 = new Param(",yt9h ", ",yt9h ");
      Param param1 = new Param(",yt;h ", ",yt9h ");
      boolean boolean0 = param0.equals(param1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Param param0 = new Param(",yt9h ", ",yt9h ");
      Param param1 = new Param(",yt;h ", ",yt9h ");
      boolean boolean0 = param0.equals(param1);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Param param0 = new Param((String) null, (String) null);
      Param param1 = new Param("Defaulting Uptimeto NOIMPL due to (%s) %s%n", (String) null);
      boolean boolean0 = param0.equals(param1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Param param0 = new Param(",yt9h ", ",yt9h ");
      Param param1 = new Param(",yt9h ", ",yt9h ");
      boolean boolean0 = param0.equals(param1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Param param0 = new Param((String) null, (String) null);
      Param param1 = new Param((String) null, "");
      boolean boolean0 = param0.equals(param1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Param param0 = new Param((String) null, (String) null);
      Param param1 = new Param((String) null, "");
      boolean boolean0 = param0.equals(param1);
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Param param0 = new Param((String) null, (String) null);
      boolean boolean0 = param0.equals((Object) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Param param0 = new Param((String) null, (String) null);
      boolean boolean0 = param0.equals(param0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Param param0 = new Param((String) null, (String) null);
      Object object0 = new Object();
      boolean boolean0 = param0.equals(object0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Param param0 = new Param((String) null, (String) null);
      param0.hashCode();
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("stopping {}");
      hashMap0.put((String) null, linkedList0);
      List<Param> list0 = Param.map2ParamList(hashMap0);
      assertEquals(0, list0.size());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      hashMap0.put((String) null, linkedList0);
      List<Param> list0 = Param.map2ParamList(hashMap0);
      assertEquals(0, list0.size());
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      List<Param> list0 = Param.map2ParamList((Map<String, List<String>>) null);
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Param param0 = new Param((String) null, (String) null);
      String string0 = param0.getValue();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Param param0 = new Param(",yt9h ", ",yt9h ");
      String string0 = param0.getName();
      ;
}
