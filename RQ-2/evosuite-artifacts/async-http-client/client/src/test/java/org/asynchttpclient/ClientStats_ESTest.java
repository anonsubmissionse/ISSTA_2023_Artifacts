/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 07 15:45:00 GMT 2022
 */

package org.asynchttpclient;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.asynchttpclient.ClientStats;
import org.asynchttpclient.HostStats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientStats_ESTest extends ClientStats_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      HostStats hostStats0 = new HostStats(1L, 1L);
      hashMap0.put(" total connections, ", hostStats0);
      long long0 = clientStats0.getTotalIdleConnectionCount();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      HostStats hostStats0 = new HostStats((-1739L), (-1739L));
      hashMap0.put("A2R3$)$IV9|z", hostStats0);
      long long0 = clientStats0.getTotalIdleConnectionCount();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      HostStats hostStats0 = new HostStats(1L, 1L);
      hashMap0.put(" total connections, ", hostStats0);
      long long0 = clientStats0.getTotalConnectionCount();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      HostStats hostStats0 = new HostStats((-1463L), (-1463L));
      hashMap0.put("org.asynchttpclient.ClientStats", hostStats0);
      long long0 = clientStats0.getTotalConnectionCount();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      HostStats hostStats0 = new HostStats(327L, 0L);
      hashMap0.put(" are idle.", hostStats0);
      long long0 = clientStats0.getTotalActiveConnectionCount();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      HostStats hostStats0 = new HostStats((-1665L), (-1665L));
      hashMap0.put("io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector", hostStats0);
      ClientStats clientStats0 = new ClientStats(hashMap0);
      long long0 = clientStats0.getTotalActiveConnectionCount();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      hashMap0.put("!!(qALcjqQY>", (HostStats) null);
      ClientStats clientStats0 = new ClientStats(hashMap0);
      // Undeclared exception!
      try { 
        clientStats0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.stream.ReferencePipeline$5$1", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      hashMap0.put("", (HostStats) null);
      // Undeclared exception!
      try { 
        clientStats0.getTotalIdleConnectionCount();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.stream.ReferencePipeline$5$1", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      hashMap0.put("AbrKQ5", (HostStats) null);
      // Undeclared exception!
      try { 
        clientStats0.getTotalConnectionCount();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.stream.ReferencePipeline$5$1", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      hashMap0.put("There are -3330 total connections, -1665 are active and -1665 are idle.", (HostStats) null);
      // Undeclared exception!
      try { 
        clientStats0.getTotalActiveConnectionCount();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.stream.ReferencePipeline$5$1", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClientStats clientStats0 = null;
      try {
        clientStats0 = new ClientStats((Map<String, HostStats>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      long long0 = clientStats0.getTotalIdleConnectionCount();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      long long0 = clientStats0.getTotalConnectionCount();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      ClientStats clientStats1 = new ClientStats(hashMap0);
      boolean boolean0 = clientStats0.equals(clientStats1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      boolean boolean0 = clientStats0.equals((Object) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      boolean boolean0 = clientStats0.equals(clientStats0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      boolean boolean0 = clientStats0.equals("<oCM_W(%_2");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      Map<String, HostStats> map0 = clientStats0.getStatsPerHost();
      assertTrue(map0.isEmpty());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      String string0 = clientStats0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      long long0 = clientStats0.getTotalActiveConnectionCount();
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      clientStats0.hashCode();
  }
}
