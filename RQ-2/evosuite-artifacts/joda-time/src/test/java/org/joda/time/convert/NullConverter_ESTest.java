/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 05 20:33:09 GMT 2022
 */

package org.joda.time.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeZone;
import org.joda.time.MutableInterval;
import org.joda.time.MutablePeriod;
import org.joda.time.Period;
import org.joda.time.ReadWritableInterval;
import org.joda.time.ReadWritablePeriod;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.CopticChronology;
import org.joda.time.convert.NullConverter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NullConverter_ESTest extends NullConverter_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NullConverter nullConverter0 = new NullConverter();
      Period period0 = new Period(0L, (-3151L));
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
      DateTimeZone dateTimeZone0 = buddhistChronology0.getZone();
      CopticChronology copticChronology0 = CopticChronology.getInstance(dateTimeZone0, 1);
      // Undeclared exception!
      try { 
        nullConverter0.setInto((ReadWritablePeriod) null, (Object) period0, (Chronology) copticChronology0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.NullConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NullConverter nullConverter0 = new NullConverter();
      // Undeclared exception!
      try { 
        nullConverter0.setInto((ReadWritableInterval) null, (Object) null, (Chronology) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.NullConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NullConverter nullConverter0 = NullConverter.INSTANCE;
      MutablePeriod mutablePeriod0 = new MutablePeriod();
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance();
      nullConverter0.setInto((ReadWritablePeriod) mutablePeriod0, (Object) null, (Chronology) buddhistChronology0);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NullConverter nullConverter0 = new NullConverter();
      Class<?> class0 = nullConverter0.getSupportedType();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NullConverter nullConverter0 = new NullConverter();
      MutableInterval mutableInterval0 = new MutableInterval();
      nullConverter0.setInto((ReadWritableInterval) mutableInterval0, (Object) mutableInterval0, (Chronology) null);
      assertEquals(0, mutableInterval0.getStartMillis());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NullConverter nullConverter0 = new NullConverter();
      Period period0 = new Period(0L, (-3151L));
      long long0 = nullConverter0.getDurationMillis(period0);
      assertEquals(1, long0);
}
}
