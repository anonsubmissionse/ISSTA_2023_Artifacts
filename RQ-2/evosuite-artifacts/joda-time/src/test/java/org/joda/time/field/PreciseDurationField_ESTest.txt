 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, (-409L));
      preciseDurationField0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4089L);
      PreciseDurationField preciseDurationField1 = new PreciseDurationField(durationFieldType0, 2091L);
      boolean boolean0 = preciseDurationField0.equals(preciseDurationField1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4089L);
      PreciseDurationField preciseDurationField1 = new PreciseDurationField(durationFieldType0, 2091L);
      boolean boolean0 = preciseDurationField0.equals(preciseDurationField1);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4089L);
      PreciseDurationField preciseDurationField1 = new PreciseDurationField(durationFieldType0, 2091L);
      boolean boolean0 = preciseDurationField0.equals(preciseDurationField1);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4089L);
      long long0 = preciseDurationField0.getValueAsLong(0L, 35L);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4089L);
      long long0 = preciseDurationField0.getValueAsLong(0L, 35L);
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 60L);
      long long0 = preciseDurationField0.getValueAsLong((-2394L), 60L);
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.millis();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 0L);
      long long0 = preciseDurationField0.getUnitMillis();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.eras();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, (-493L));
      long long0 = preciseDurationField0.getUnitMillis();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 945L);
      preciseDurationField0.getMillis(0L, 0L);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, (-409L));
      long long0 = preciseDurationField0.getMillis((-409L), (-409L));
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 0L);
      long long0 = preciseDurationField0.getMillis((-490), 0L);
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.minutes();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 632L);
      long long0 = preciseDurationField0.getMillis((-191), 376L);
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.minutes();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 632L);
      long long0 = preciseDurationField0.getDifferenceAsLong(15778800000L, 0L);
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 1821L);
      long long0 = preciseDurationField0.getDifferenceAsLong((-2860L), (-1));
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 945L);
      preciseDurationField0.add(0L, 0L);
      assertEquals(0, preciseDurationField0.getUnitMillis());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4089L);
      long long0 = preciseDurationField0.add((-1L), (-2720L));
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 0L);
      long long0 = preciseDurationField0.add(0L, 1);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 1821L);
      long long0 = preciseDurationField0.add(0L, (-1));
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.months();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 0L);
      // Undeclared exception!
      try { 
        preciseDurationField0.getValueAsLong(0L, 1L);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.joda.time.field.PreciseDurationField", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.years();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 30617280288L);
      // Undeclared exception!
      try { 
        preciseDurationField0.getMillis(30617280288L, 30617280288L);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // Multiplication overflows a long: 30617280288 * 30617280288
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.millis();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 0L);
      // Undeclared exception!
      try { 
        preciseDurationField0.getDifferenceAsLong(2310L, 0L);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.joda.time.field.PreciseDurationField", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekyearOfCentury();
      DurationFieldType durationFieldType0 = dateTimeFieldType0.getDurationType();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 15778800000L);
      // Undeclared exception!
      try { 
        preciseDurationField0.add(15778800000L, 15778800000L);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // Multiplication overflows a long: 15778800000 * 15778800000
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4063L);
      // Undeclared exception!
      try { 
        preciseDurationField0.add(9223372036854775807L, 2541);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // The calculation caused an overflow: 9223372036854775807 + 10324083
         //
         verifyException("org.joda.time.field.FieldUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PreciseDurationField preciseDurationField0 = null;
      try {
        preciseDurationField0 = new PreciseDurationField((DurationFieldType) null, (-4031L));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The type must not be null
         //
         verifyException("org.joda.time.field.BaseDurationField", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.weeks();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 1821L);
      PreciseDurationField preciseDurationField1 = new PreciseDurationField(durationFieldType0, 1821L);
      boolean boolean0 = preciseDurationField1.equals(preciseDurationField0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.weeks();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 1821L);
      PreciseDurationField preciseDurationField1 = new PreciseDurationField(durationFieldType0, 1821L);
      boolean boolean0 = preciseDurationField1.equals(preciseDurationField0);
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.millis();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, (-1631L));
      DurationFieldType durationFieldType1 = DurationFieldType.days();
      PreciseDurationField preciseDurationField1 = new PreciseDurationField(durationFieldType1, 2658530L);
      boolean boolean0 = preciseDurationField0.equals(preciseDurationField1);
      assertEquals(0, preciseDurationField1.getUnitMillis());
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.millis();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, (-1631L));
      DurationFieldType durationFieldType1 = DurationFieldType.days();
      PreciseDurationField preciseDurationField1 = new PreciseDurationField(durationFieldType1, 2658530L);
      boolean boolean0 = preciseDurationField0.equals(preciseDurationField1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.years();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 380L);
      boolean boolean0 = preciseDurationField0.equals(durationFieldType0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.years();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 380L);
      boolean boolean0 = preciseDurationField0.equals(durationFieldType0);
      assertEquals(0, preciseDurationField0.getUnitMillis());
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4089L);
      boolean boolean0 = preciseDurationField0.equals(preciseDurationField0);
      assertEquals(0, preciseDurationField0.getUnitMillis());
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4089L);
      boolean boolean0 = preciseDurationField0.equals(preciseDurationField0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, (-409L));
      PreciseDurationField preciseDurationField1 = new PreciseDurationField(durationFieldType0, 167281L);
      boolean boolean0 = preciseDurationField0.equals(preciseDurationField1);
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, (-409L));
      PreciseDurationField preciseDurationField1 = new PreciseDurationField(durationFieldType0, 167281L);
      boolean boolean0 = preciseDurationField0.equals(preciseDurationField1);
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.weekyears();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, (-409L));
      PreciseDurationField preciseDurationField1 = new PreciseDurationField(durationFieldType0, 167281L);
      boolean boolean0 = preciseDurationField0.equals(preciseDurationField1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.weeks();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 1821L);
      long long0 = preciseDurationField0.getUnitMillis();
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4089L);
      long long0 = preciseDurationField0.add((-494L), 2205);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4089L);
      long long0 = preciseDurationField0.add(4089L, 4089L);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.weeks();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 1821L);
      long long0 = preciseDurationField0.getMillis(1, (long) 0);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4089L);
      long long0 = preciseDurationField0.getDifferenceAsLong((-279L), (-279L));
      assertEquals(0, preciseDurationField0.getUnitMillis());
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4089L);
      long long0 = preciseDurationField0.getDifferenceAsLong((-279L), (-279L));
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4089L);
      long long0 = preciseDurationField0.getMillis((-967L), (-967L));
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.weeks();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 1821L);
      boolean boolean0 = preciseDurationField0.isPrecise();
      assertEquals(0, preciseDurationField0.getUnitMillis());
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.weeks();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 1821L);
      boolean boolean0 = preciseDurationField0.isPrecise();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.days();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 4093L);
      long long0 = preciseDurationField0.getValueAsLong(16756742L, 16756742L);
      assertEquals(1, long0);
}
