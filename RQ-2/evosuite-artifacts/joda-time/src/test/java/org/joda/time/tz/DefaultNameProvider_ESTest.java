/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 05 19:58:26 GMT 2022
 */

package org.joda.time.tz;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.tz.DefaultNameProvider;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultNameProvider_ESTest extends DefaultNameProvider_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.ITALY;
      locale0.getDisplayVariant();
      defaultNameProvider0.getShortName(locale0, "WET", "WET");
      defaultNameProvider0.getShortName(locale0, "WET", "yXHB2");
      defaultNameProvider0.getShortName(locale0, (String) null, "WET");
      defaultNameProvider0.getName(locale0, "WET", (String) null, false);
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.ITALY;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      defaultNameProvider0.getName(locale0, "GMT", "tD^`W<.m.,?", true);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode1);
      defaultNameProvider0.getShortName(locale0, "3j5#v2", "6El[Q(mKYdLUE/");
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.CHINESE;
      locale0.getExtensionKeys();
      defaultNameProvider0.getShortName(locale0, "America/New_York", "", false);
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      defaultNameProvider0.getName(locale1, "DateTimeZone.setNameProvider", "", true);
      defaultNameProvider0.getShortName(locale1, "DateTimeZone.setNameProvider", "");
      defaultNameProvider0.getName(locale0, "-JT*", "DateTimeZone.setNameProvider");
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.UK;
      locale0.getExtensionKeys();
      Locale locale1 = locale0.stripExtensions();
      defaultNameProvider0.getName(locale1, "jT}#7y4^C2c", "I&3Pt[IFz7&Gpks8 ~");
      defaultNameProvider0.getShortName(locale0, "qAp|", "I&3Pt[IFz7&Gpks8 ~", true);
      defaultNameProvider0.getShortName(locale0, "qAp|", "I&3Pt[IFz7&Gpks8 ~", false);
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.US;
      defaultNameProvider0.getShortName(locale0, "B&p", "B&p", false);
      defaultNameProvider0.getShortName(locale0, (String) null, "B&p");
      defaultNameProvider0.getShortName(locale0, (String) null, (String) null);
      defaultNameProvider0.getShortName(locale0, "org.joda.time.DateTimeUtils$OffsetMillisProvider", "%$|[HO6I*4", true);
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.JAPAN;
      defaultNameProvider0.getName(locale0, "", "");
      defaultNameProvider0.getShortName(locale0, "", "");
      defaultNameProvider0.getName(locale0, (String) null, "");
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.US;
      defaultNameProvider0.getName(locale0, "&C*S:ZHc62 /0TuC-", (String) null);
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.GERMAN;
      defaultNameProvider0.getName(locale0, "America/New_York", "America/New_York");
      defaultNameProvider0.getName(locale0, "", (String) null, false);
      defaultNameProvider0.getShortName(locale0, "", (String) null, true);
      Locale locale1 = Locale.KOREA;
      defaultNameProvider0.getShortName(locale1, "", ",>K#F cB(yR{*iOP");
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.JAPAN;
      Locale locale1 = Locale.ITALY;
      locale0.getDisplayName(locale1);
      defaultNameProvider0.getName(locale0, "UTC", "UTC");
      defaultNameProvider0.getShortName(locale1, (String) null, "#Mzl+-", false);
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.GERMAN;
      defaultNameProvider0.getShortName(locale0, "Etc/", "Etc/");
      defaultNameProvider0.getName(locale0, (String) null, "Etc/", true);
      defaultNameProvider0.getName(locale0, (String) null, (String) null);
      defaultNameProvider0.getName(locale0, (String) null, "Etc/", true);
      defaultNameProvider0.getShortName(locale0, "a=mA:\"VC;oaxTAPt6hk", "V4l");
      Locale locale1 = Locale.FRENCH;
      defaultNameProvider0.getName(locale1, "Etc/", "", true);
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.ITALIAN;
      defaultNameProvider0.getName(locale0, "The datetime zone id '", "The datetime zone id '");
      defaultNameProvider0.getName(locale0, (String) null, (String) null);
      defaultNameProvider0.getName(locale0, "", "");
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      defaultNameProvider0.getShortName(locale0, (String) null, (String) null);
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.TAIWAN;
      defaultNameProvider0.getShortName(locale0, (String) null, "ae1N{}-+AhjI", true);
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.JAPANESE;
      defaultNameProvider0.getShortName(locale0, "System property referred to class that does not implement ", "System property referred to class that does not implement ");
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      defaultNameProvider0.getName(locale0, "org.joda.time.DateTimeUtils", "org.joda.time.DateTimeUtils");
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.UK;
      defaultNameProvider0.getShortName(locale0, "7<h2.%2{z", "7<h2.%2{z", false);
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      defaultNameProvider0.getName((Locale) null, "c#^8NG", "c#^8NG", true);
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.ROOT;
      defaultNameProvider0.getName(locale0, "CST", "CST");
      defaultNameProvider0.getName(locale0, "$y", "$y");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      defaultNameProvider0.getName(locale0, (String) null, "CST", true);
      defaultNameProvider0.getName(locale0, "Zulu", "Pacific/Wake");
      defaultNameProvider0.getShortName(locale0, (String) null, "", true);
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.CHINA;
      Locale locale1 = Locale.CHINESE;
      defaultNameProvider0.getName(locale1, "SystemV/CST6CDT", "SystemV/CST6CDT", true);
      defaultNameProvider0.getShortName(locale0, "SystemV/CST6CDT", "SystemV/CST6CDT", true);
      Locale locale2 = Locale.SIMPLIFIED_CHINESE;
      locale0.getDisplayScript(locale2);
      locale2.getDisplayCountry(locale0);
      defaultNameProvider0.getShortName(locale0, "SystemV/CST6CDT", "SystemV/CST6CDT", false);
      defaultNameProvider0.getName(locale2, "8+", "CST");
      defaultNameProvider0.getShortName(locale0, "wsX{", "8+");
      defaultNameProvider0.getShortName(locale0, ">K", "@", true);
      Locale locale3 = Locale.forLanguageTag("org.joda.time.tz.DefaultNameProvider");
      defaultNameProvider0.getName(locale2, "l^@k0/", "\u4E2D\u56FD");
      defaultNameProvider0.getName(locale0, "wsX{", "wsX{");
      defaultNameProvider0.getName(locale2, "@", "US/Arizona", true);
      defaultNameProvider0.getName(locale3, "QT20r,L2E7'w$a%)M^", (String) null, false);
      defaultNameProvider0.getName(locale3, "Poland", (String) null);
      defaultNameProvider0.getName(locale2, "vJ", "&~x");
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.CANADA_FRENCH;
      Locale locale1 = locale0.stripExtensions();
      Locale.getISOLanguages();
      defaultNameProvider0.getShortName(locale1, "", "");
      locale0.getExtension('L');
      defaultNameProvider0.getName(locale0, (String) null, (String) null);
      defaultNameProvider0.getShortName(locale1, "", "");
      defaultNameProvider0.getName(locale1, "CDT", "");
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = new Locale("iwE");
      defaultNameProvider0.getName(locale0, "iwE", "iwE", true);
      Locale locale1 = Locale.PRC;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale2 = Locale.ITALIAN;
      Locale.setDefault(locale_Category0, locale2);
      Locale locale3 = Locale.GERMANY;
      Locale.setDefault(locale3);
      defaultNameProvider0.getShortName(locale3, "", "Tm)kK");
      defaultNameProvider0.getName(locale1, "Etc/", "%~zb,", true);
      defaultNameProvider0.getShortName(locale1, "", "");
      Locale locale4 = Locale.SIMPLIFIED_CHINESE;
      locale4.getExtensionKeys();
      defaultNameProvider0.getName(locale4, "Etc/", "@`_4LC8_\"5:W1^_@");
      defaultNameProvider0.getShortName(locale1, "Etc/", "Hours out of range: ");
      defaultNameProvider0.getName(locale1, "iwE", (String) null, true);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      defaultNameProvider0.getName(locale1, ",", (String) null);
      defaultNameProvider0.getName(locale4, "", "");
      defaultNameProvider0.getName(locale4, "Hours out of range: ", (String) null, true);
      String string0 = defaultNameProvider0.getShortName(locale3, "@`_4LC8_\"5:W1^_@", "US/Central", false);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.PRC;
      locale0.getDisplayCountry();
      locale0.getUnicodeLocaleKeys();
      locale0.getScript();
      defaultNameProvider0.getName(locale0, ">tx lGPM!i;Kml", "sm'(.Knz)3rO]${", true);
      defaultNameProvider0.getName((Locale) null, "PST", "T]r TW^k&?B= /@'Ue", true);
      defaultNameProvider0.getName((Locale) null, "VST", (String) null);
      String string0 = defaultNameProvider0.getName((Locale) null, (String) null, "tRGK.");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      defaultNameProvider0.getShortName((Locale) null, "Etc/", "1cB");
      defaultNameProvider0.getName((Locale) null, "yx@9(&A", "1cB");
      defaultNameProvider0.getName((Locale) null, "(K'b/#pf<", (String) null);
      defaultNameProvider0.getShortName((Locale) null, (String) null, "1cB", true);
      defaultNameProvider0.getShortName((Locale) null, (String) null, "1cB", true);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.forLanguageTag("Mv6k?.");
      defaultNameProvider0.getShortName(locale0, "", "org.joda.time.tz.DefaultNameProvider", true);
      locale1.getDisplayLanguage();
      defaultNameProvider0.getName(locale0, "", "1cB");
      String string0 = defaultNameProvider0.getShortName(locale1, "", "", true);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.ROOT;
      defaultNameProvider0.getShortName(locale0, "CDT", "", false);
      defaultNameProvider0.getName(locale0, "s!/m.;u'i1E_3SA#f*(", "", true);
      defaultNameProvider0.getName(locale0, "Subtracting time zone offset caused overflow", "s!/m.;u'i1E_3SA#f*(", true);
      defaultNameProvider0.getName(locale0, "CDT", (String) null);
      Locale.forLanguageTag("America/New_York");
      defaultNameProvider0.getShortName(locale0, "America/New_York", "");
      Locale locale1 = Locale.ENGLISH;
      defaultNameProvider0.getName(locale1, (String) null, (String) null);
      defaultNameProvider0.getShortName(locale1, (String) null, (String) null);
      Locale locale2 = Locale.KOREAN;
      String string0 = defaultNameProvider0.getName(locale2, "s!/m.;u'i1E_3SA#f*(", "s!/m.;u'i1E_3SA#f*(");
      assertNotNull(string0);
}
}
