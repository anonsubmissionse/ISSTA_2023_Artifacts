 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Converter[] converterArray0 = new Converter[2];
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      // Undeclared exception!
      try { 
        converterSet0.remove(2598, converterArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ConverterSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Converter[] converterArray0 = new Converter[0];
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      int int0 = converterSet0.size();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Converter[] converterArray0 = new Converter[3];
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      int int0 = converterSet0.size();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Converter[] converterArray0 = new Converter[3];
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      ConverterSet converterSet1 = converterSet0.remove(1, converterArray0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Converter[] converterArray0 = new Converter[1];
      NullConverter nullConverter0 = new NullConverter();
      converterArray0[0] = (Converter) nullConverter0;
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      converterSet0.add(converterArray0[0], converterArray0);
      // Undeclared exception!
      try { 
        converterSet0.remove(converterArray0[0], converterArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ConverterSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ConverterSet converterSet0 = new ConverterSet((Converter[]) null);
      // Undeclared exception!
      try { 
        converterSet0.remove(3165, (Converter[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ConverterSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Converter[] converterArray0 = new Converter[0];
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      // Undeclared exception!
      try { 
        converterSet0.remove((-1288), (Converter[]) null);
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ConverterSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Converter[] converterArray0 = new Converter[3];
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      // Undeclared exception!
      try { 
        converterSet0.remove((-778), converterArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -778
         //
         verifyException("org.joda.time.convert.ConverterSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ConverterSet converterSet0 = new ConverterSet((Converter[]) null);
      // Undeclared exception!
      try { 
        converterSet0.copyInto((Converter[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ConverterSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Converter[] converterArray0 = new Converter[8];
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      Converter[] converterArray1 = new Converter[3];
      // Undeclared exception!
      try { 
        converterSet0.copyInto(converterArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Converter[] converterArray0 = new Converter[0];
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      // Undeclared exception!
      try { 
        converterSet0.add(readableDurationConverter0, converterArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.joda.time.convert.ConverterSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      ReadablePartialConverter readablePartialConverter0 = new ReadablePartialConverter();
      Converter[] converterArray0 = new Converter[6];
      LongConverter longConverter0 = new LongConverter();
      converterArray0[0] = (Converter) longConverter0;
      ReadableInstantConverter readableInstantConverter0 = new ReadableInstantConverter();
      converterArray0[1] = (Converter) readableInstantConverter0;
      converterArray0[2] = (Converter) readableDurationConverter0;
      converterArray0[3] = (Converter) readablePartialConverter0;
      converterArray0[4] = (Converter) readablePartialConverter0;
      converterArray0[5] = (Converter) readableDurationConverter0;
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      Converter converter0 = converterSet0.select((Class<?>) null);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      Converter[] converterArray0 = new Converter[6];
      converterArray0[5] = (Converter) readableDurationConverter0;
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      // Undeclared exception!
      try { 
        converterSet0.select((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ConverterSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Converter[] converterArray0 = new Converter[1];
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      converterArray0[0] = (Converter) readableDurationConverter0;
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      StringConverter stringConverter0 = StringConverter.INSTANCE;
      ConverterSet converterSet1 = converterSet0.add(stringConverter0, converterArray0);
      Class<String> class0 = String.class;
      Converter converter0 = converterSet1.select(class0);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Converter[] converterArray0 = new Converter[6];
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      // Undeclared exception!
      try { 
        converterSet0.remove(6, (Converter[]) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ConverterSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Converter[] converterArray0 = new Converter[0];
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      CalendarConverter calendarConverter0 = new CalendarConverter();
      // Undeclared exception!
      try { 
        converterSet0.remove(calendarConverter0, converterArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.joda.time.convert.ConverterSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Converter[] converterArray0 = new Converter[0];
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      DateConverter dateConverter0 = DateConverter.INSTANCE;
      ConverterSet converterSet1 = converterSet0.remove(dateConverter0, (Converter[]) null);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Converter[] converterArray0 = new Converter[0];
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      ConverterSet converterSet1 = converterSet0.add((Converter) null, (Converter[]) null);
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      ReadablePartialConverter readablePartialConverter0 = new ReadablePartialConverter();
      ReadablePartialConverter readablePartialConverter1 = ReadablePartialConverter.INSTANCE;
      Converter[] converterArray0 = new Converter[6];
      LongConverter longConverter0 = new LongConverter();
      converterArray0[0] = (Converter) longConverter0;
      ReadableInstantConverter readableInstantConverter0 = new ReadableInstantConverter();
      converterArray0[1] = (Converter) readableInstantConverter0;
      converterArray0[2] = (Converter) readableDurationConverter0;
      converterArray0[3] = (Converter) readablePartialConverter0;
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      ConverterSet converterSet1 = converterSet0.add(readablePartialConverter1, converterArray0);
      ConverterSet converterSet2 = converterSet1.remove(readablePartialConverter1, converterArray0);
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      ReadablePartialConverter readablePartialConverter0 = new ReadablePartialConverter();
      ReadablePartialConverter readablePartialConverter1 = ReadablePartialConverter.INSTANCE;
      Converter[] converterArray0 = new Converter[6];
      LongConverter longConverter0 = new LongConverter();
      converterArray0[0] = (Converter) longConverter0;
      ReadableInstantConverter readableInstantConverter0 = new ReadableInstantConverter();
      converterArray0[1] = (Converter) readableInstantConverter0;
      converterArray0[2] = (Converter) readableDurationConverter0;
      converterArray0[3] = (Converter) readablePartialConverter0;
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      ConverterSet converterSet1 = converterSet0.add(readablePartialConverter1, converterArray0);
      ConverterSet converterSet2 = converterSet1.remove(readablePartialConverter1, converterArray0);
      ConverterSet converterSet3 = converterSet0.add(converterArray0[3], (Converter[]) null);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      ReadablePartialConverter readablePartialConverter0 = new ReadablePartialConverter();
      Converter[] converterArray0 = new Converter[6];
      LongConverter longConverter0 = new LongConverter();
      converterArray0[0] = (Converter) longConverter0;
      ReadableInstantConverter readableInstantConverter0 = new ReadableInstantConverter();
      converterArray0[1] = (Converter) readableInstantConverter0;
      converterArray0[2] = (Converter) readableDurationConverter0;
      converterArray0[3] = (Converter) readablePartialConverter0;
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      ConverterSet converterSet1 = converterSet0.add(converterArray0[3], (Converter[]) null);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Converter[] converterArray0 = new Converter[3];
      DateConverter dateConverter0 = new DateConverter();
      converterArray0[2] = (Converter) dateConverter0;
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      // Undeclared exception!
      try { 
        converterSet0.add(converterArray0[2], converterArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ConverterSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Converter[] converterArray0 = new Converter[3];
      ReadableIntervalConverter readableIntervalConverter0 = new ReadableIntervalConverter();
      DateTimeZone dateTimeZone0 = DateTimeZone.UTC;
      DateTimeZone.forOffsetMillis(6);
      GJChronology.getInstance(dateTimeZone0);
      GJChronology.getInstanceUTC();
      GJChronology.getInstanceUTC();
      GJChronology.getInstance();
      converterArray0[0] = (Converter) readableIntervalConverter0;
      NullConverter nullConverter0 = new NullConverter();
      converterArray0[1] = (Converter) nullConverter0;
      DateConverter dateConverter0 = new DateConverter();
      converterArray0[2] = (Converter) dateConverter0;
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      Class<Object> class0 = Object.class;
      converterSet0.select(class0);
      Class<ConverterSet.Entry> class1 = ConverterSet.Entry.class;
      converterSet0.select(class1);
      Class<Integer> class2 = Integer.class;
      converterSet0.select(class2);
      ConverterSet.Entry converterSet_Entry0 = new ConverterSet.Entry(class1, converterArray0[2]);
      Class<String> class3 = String.class;
      Converter converter0 = converterSet0.select(class3);
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PeriodPrinter periodPrinter0 = mock(PeriodPrinter.class, new ViolatedAssumptionAnswer());
      PeriodParser periodParser0 = mock(PeriodParser.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(periodParser0).parseInto(any(org.joda.time.ReadWritablePeriod.class) , anyString() , anyInt() , any(java.util.Locale.class));
      PeriodFormatter periodFormatter0 = new PeriodFormatter(periodPrinter0, periodParser0);
      MutablePeriod mutablePeriod0 = MutablePeriod.parse("", periodFormatter0);
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Converter[] converterArray0 = new Converter[3];
      ReadableIntervalConverter readableIntervalConverter0 = new ReadableIntervalConverter();
      converterArray0[0] = (Converter) readableIntervalConverter0;
      NullConverter nullConverter0 = new NullConverter();
      converterArray0[1] = (Converter) nullConverter0;
      DateConverter dateConverter0 = new DateConverter();
      converterArray0[2] = (Converter) dateConverter0;
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      Class<Object> class0 = Object.class;
      converterSet0.select(class0);
      Class<ConverterSet.Entry> class1 = ConverterSet.Entry.class;
      converterSet0.select(class1);
      Class<Integer> class2 = Integer.class;
      converterSet0.select(class2);
      ConverterSet.Entry converterSet_Entry0 = new ConverterSet.Entry(class1, converterArray0[2]);
      Class<String> class3 = String.class;
      Converter converter0 = converterSet0.select(class3);
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConverterSet converterSet0 = new ConverterSet((Converter[]) null);
      // Undeclared exception!
      try { 
        converterSet0.size();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ConverterSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Converter[] converterArray0 = new Converter[0];
      ConverterSet converterSet0 = new ConverterSet(converterArray0);
      converterSet0.copyInto(converterArray0);
      ;
}
