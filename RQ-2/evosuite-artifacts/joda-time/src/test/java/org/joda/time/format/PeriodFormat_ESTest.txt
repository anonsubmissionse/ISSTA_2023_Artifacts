 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        PeriodFormat.wordBased((Locale) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.getDefault();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      Locale locale0 = Locale.US;
      int int0 = periodFormat_DynamicWordBased0.parseInto((ReadWritablePeriod) null, "*PS`T%,$i{T;0f\tg", 4, locale0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased(locale0);
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      StringBuffer stringBuffer0 = new StringBuffer();
      Months months0 = Months.ELEVEN;
      periodFormat_DynamicWordBased0.printTo(stringBuffer0, (ReadablePeriod) months0, locale0);
      assertEquals(0, months0.getMonths());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.getDefault();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      StringWriter stringWriter0 = new StringWriter();
      Days days0 = Days.FOUR;
      Locale locale0 = Locale.FRANCE;
      periodFormat_DynamicWordBased0.printTo((Writer) stringWriter0, (ReadablePeriod) days0, locale0);
      assertNotNull(stringWriter0.toString());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      Minutes minutes0 = Minutes.ONE;
      Hours hours0 = minutes0.toStandardHours();
      Locale locale0 = new Locale("XI@?6Zuq)6Ao8Iqn", "XI@?6Zuq)6Ao8Iqn");
      // Undeclared exception!
      try { 
        periodFormat_DynamicWordBased0.printTo((StringBuffer) null, (ReadablePeriod) hours0, locale0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.PeriodFormatterBuilder$FieldFormatter", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      Minutes minutes0 = Minutes.ONE;
      Hours hours0 = minutes0.toStandardHours();
      Locale locale0 = new Locale("XI@?6Zuq)6Ao8Iqn", "XI@?6Zuq)6Ao8Iqn");
      int int0 = periodFormat_DynamicWordBased0.calculatePrintedLength(hours0, locale0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      MutablePeriod mutablePeriod0 = new MutablePeriod(3301L);
      int int0 = periodFormat_DynamicWordBased0.parseInto(mutablePeriod0, "XI@?6Zuq)6Ao8Iqn", 2091, (Locale) null);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PeriodFormat periodFormat0 = new PeriodFormat();
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.getDefault();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      Duration duration0 = Duration.standardHours(0L);
      Period period0 = duration0.toPeriod();
      int int0 = periodFormat_DynamicWordBased0.countFieldsToPrint(period0, 32, (Locale) null);
      assertEquals(0, int0);
}
