/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 06 15:38:29 GMT 2022
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.ParseError;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.TreeBuilder;
import org.jsoup.parser.XmlTreeBuilder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Parser parser1 = parser0.setTrackErrors(0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Parser parser1 = parser0.setTrackErrors(0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "");
      ParseErrorList parseErrorList0 = ParseErrorList.tracking((-908));
      Parser.parseFragment("org.eclipse.jetty.io.Connection$Listener$Adapter", (Element) document0, "dd", parseErrorList0);
      assertNotNull(document0.location());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Document document0 = parser0.parseInput("hvM4Qv|DPnow", "hvM4Qv|DPnow");
      parser0.parseFragmentInput("", document0, "");
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Document document0 = parser0.parseInput("hvM4Qv|DPnow", "hvM4Qv|DPnow");
      parser0.parseFragmentInput("", document0, "");
      assertFalse(parser0.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Document document0 = parser0.parseInput("hvM4Qv|DPnow", "hvM4Qv|DPnow");
      Parser.parseFragment("hvM4Qv|DPnow", (Element) document0, "hvM4Qv|DPnow");
      assertFalse(parser0.isTrackErrors());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Document document0 = parser0.parseInput("hvM4Qv|DPnow", "hvM4Qv|DPnow");
      Parser.parseFragment("hvM4Qv|DPnow", (Element) document0, "hvM4Qv|DPnow");
      assertTrue(parser0.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String string0 = Parser.unescapeEntities("hvM4Qv|DPnow", true);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      assertTrue(parser0.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Parser parser1 = parser0.setTrackPosition(true);
      XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
      ParseSettings parseSettings0 = xmlTreeBuilder0.defaultSettings();
      parser1.settings(parseSettings0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Parser parser1 = parser0.setTrackErrors(141);
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      parser1.settings(parseSettings0);
      assertTrue(parser0.isTrackErrors());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      parser0.settings();
      assertTrue(parser0.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      assertTrue(parser0.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.setTrackPosition(true);
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      parser1.setTreeBuilder(htmlTreeBuilder0);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Parser parser1 = parser0.setTrackErrors(100);
      parser1.setTreeBuilder(htmlTreeBuilder0);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      parser0.setTrackErrors(100);
      parser0.setTrackPosition(false);
      assertTrue(parser0.isTrackErrors());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.setTrackPosition(true);
      parser1.setTrackErrors(100);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
      Parser parser1 = parser0.setTreeBuilder(xmlTreeBuilder0);
      Document document0 = parser1.parseInput("", "org.eclipse.jetty.io.ManagedSelector$SelectorProducer");
      assertNotNull(document0.location());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
      Parser parser1 = parser0.setTreeBuilder(xmlTreeBuilder0);
      Document document0 = parser1.parseInput("", "org.eclipse.jetty.io.ManagedSelector$SelectorProducer");
      assertEquals(1, document0.childNodeSize());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
      Parser parser1 = parser0.setTreeBuilder(xmlTreeBuilder0);
      Document document0 = parser1.parseInput("", "org.eclipse.jetty.io.ManagedSelector$SelectorProducer");
      assertFalse(parser1.isTrackErrors());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
      Parser parser1 = parser0.setTreeBuilder(xmlTreeBuilder0);
      Document document0 = parser1.parseInput("", "org.eclipse.jetty.io.ManagedSelector$SelectorProducer");
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("");
      parser0.parseInput((Reader) stringReader0, "");
      assertTrue(parser0.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("");
      parser0.parseInput((Reader) stringReader0, "");
      assertFalse(parser0.isTrackErrors());
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      assertTrue(parser0.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.setTrackPosition(true);
      parser1.newInstance();
      assertTrue(parser0.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Parser parser1 = parser0.setTrackErrors(100);
      parser1.newInstance();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      parser0.setTrackPosition(true);
      boolean boolean0 = parser0.isTrackPosition();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      ParseErrorList parseErrorList0 = parser0.getErrors();
      parseErrorList0.add((ParseError) null);
      parser0.getErrors();
      assertTrue(parser0.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.unescapeEntities((String) null, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      // Undeclared exception!
      try { 
        parser0.setTreeBuilder((TreeBuilder) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Parser", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseXmlFragment("", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The parameter 'baseUri' must not be null.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseXmlFragment((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      // Undeclared exception!
      try { 
        parser0.parseInput("org.jsoup.parser.Parser", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The parameter 'baseUri' must not be null.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      // Undeclared exception!
      try { 
        parser0.parseInput((String) null, " An^88\\6f6");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      // Undeclared exception!
      try { 
        parser0.parseInput((Reader) null, "Mor#+D]\u0005?MK&ul.2");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The parameter 'input' must not be null.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = Parser.parse("(}Zd[pNJzwk77vq", "K5Ku@`'I:%F8sItX");
      // Undeclared exception!
      try { 
        parser0.parseFragmentInput("(}Zd[pNJzwk77vq", document0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The parameter 'baseUri' must not be null.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.appendTo(document0);
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      // Undeclared exception!
      parser0.parseFragmentInput("^u>*5Rq", document0, "");
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ParseErrorList parseErrorList0 = new ParseErrorList(0, 0);
      // Undeclared exception!
      try { 
        Parser.parseFragment("zpJn[c_;MHwqSsf", (Element) null, (String) null, parseErrorList0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The parameter 'baseUri' must not be null.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "org.jsoup.parser.Parser");
      Parser parser0 = Parser.htmlParser();
      document0.appendChild(document0);
      ParseErrorList parseErrorList0 = parser0.getErrors();
      // Undeclared exception!
      Parser.parseFragment("-w5fj2Y?o&BG##6", (Element) document0, "", parseErrorList0);
  }
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ParseErrorList parseErrorList0 = new ParseErrorList(4726, 4726);
      // Undeclared exception!
      try { 
        Parser.parseFragment((String) null, (Element) null, "H`L,k+.-i~", parseErrorList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Document document0 = new Document((String) null);
      // Undeclared exception!
      try { 
        Parser.parseFragment("object", (Element) document0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The parameter 'baseUri' must not be null.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("CB?6t rf}~<j|x<9zF", "CB?6t rf}~<j|x<9zF");
      Element element0 = document0.appendTo(document0);
      // Undeclared exception!
      Parser.parseFragment("CB?6t rf}~<j|x<9zF", element0, "CB?6t rf}~<j|x<9zF");
  }
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseBodyFragment("c[>!gZfEJu!l~b", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parseBodyFragment((String) null, "=");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parse((String) null, "\",CV{%v{yn&z");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      // Undeclared exception!
      try { 
        parser1.newInstance();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      // Undeclared exception!
      try { 
        parser0.isContentForTagData((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Parser parser0 = null;
      try {
        parser0 = new Parser((TreeBuilder) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Parser", e);
      }
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      boolean boolean0 = parser0.isTrackErrors();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      boolean boolean0 = parser0.isTrackErrors();
      assertTrue(parser0.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      boolean boolean0 = parser0.isTrackPosition();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      parser0.getTreeBuilder();
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      parser0.settings();
      assertTrue(parser0.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("iYax~Qe L", "^D^/h|q_myY");
      // Undeclared exception!
      try { 
        Parser.parseFragment((String) null, (Element) document0, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.setTrackErrors((-584));
      assertTrue(parser1.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      assertTrue(parser0.isTrackErrors());
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Parser parser1 = parser0.setTrackErrors(100);
      boolean boolean0 = parser1.isTrackErrors();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      parser0.isContentForTagData("");
      assertTrue(parser0.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parser.parse("wy", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The parameter 'baseUri' must not be null.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      List<Node> list0 = Parser.parseXmlFragment("", "7^$");
      assertEquals(0, list0.size());
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      parser0.settings((ParseSettings) null);
      parser0.settings();
      assertTrue(parser0.isTrackPosition());
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = Parser.unescapeEntities("", false);
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Parser parser0 = Parser.xmlParser();
      // Undeclared exception!
      try { 
        parser0.parseFragmentInput((String) null, document0, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser1 = parser0.setTreeBuilder(htmlTreeBuilder0);
      Parser parser2 = parser1.settings((ParseSettings) null);
      StringReader stringReader0 = new StringReader("C'dck&|o\"rmwE#en");
      // Undeclared exception!
      try { 
        parser2.parseInput((Reader) stringReader0, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("xys1Gq3_bXE|#0C{J");
      parser0.parseInput((Reader) stringReader0, "xys1Gq3_bXE|#0C{J");
      // Undeclared exception!
      try { 
        parser0.parseInput((Reader) stringReader0, "xys1Gq3_bXE|#0C{J");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
}
