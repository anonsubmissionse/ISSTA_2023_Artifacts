/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 06 15:24:30 GMT 2022
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.TokenQueue;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TokenQueue_ESTest extends TokenQueue_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompBalanced('!', ')');
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompBalanced('!', ')');
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompBalanced('!', ')');
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompBalanced('!', ')');
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompBalanced('!', ')');
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      String string1 = tokenQueue0.chompBalanced('!', '!');
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      String string1 = tokenQueue0.chompBalanced('!', '!');
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      String string1 = tokenQueue0.chompBalanced('!', '!');
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      String string1 = tokenQueue0.chompBalanced('!', '!');
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      String string1 = tokenQueue0.chompBalanced('!', '!');
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      String string1 = tokenQueue0.chompBalanced('!', '!');
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      assertNotNull(tokenQueue0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      tokenQueue0.advance();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      tokenQueue0.advance();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      tokenQueue0.advance();
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      tokenQueue0.addFirst("Oes >&}");
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      tokenQueue0.addFirst("Oes >&}");
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      tokenQueue0.addFirst("Oes >&}");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      tokenQueue0.addFirst("Oes >&}");
      String string0 = tokenQueue0.chompTo("org.jsoup.parser.TokenQueue");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      tokenQueue0.addFirst("Oes >&}");
      String string0 = tokenQueue0.chompTo("org.jsoup.parser.TokenQueue");
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      tokenQueue0.addFirst("Oes >&}");
      String string0 = tokenQueue0.chompTo("org.jsoup.parser.TokenQueue");
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      tokenQueue0.addFirst("Oes >&}");
      String string0 = tokenQueue0.chompTo("org.jsoup.parser.TokenQueue");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      tokenQueue0.addFirst("Oes >&}");
      String string0 = tokenQueue0.chompTo("org.jsoup.parser.TokenQueue");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("#");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("#");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("#");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("#");
      ;
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("#");
      tokenQueue0.consume("#");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("#");
      tokenQueue0.consume("#");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("#");
      tokenQueue0.consume("#");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("B.9Jt(s)vJrz1j");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("B.9Jt(s)vJrz1j");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("B.9Jt(s)vJrz1j");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("B.9Jt(s)vJrz1j");
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("B.9Jt(s)vJrz1j");
      tokenQueue0.consume("");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("B.9Jt(s)vJrz1j");
      tokenQueue0.consume("");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("B.9Jt(s)vJrz1j");
      tokenQueue0.consume("");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = TokenQueue.unescape("");
      ;
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = TokenQueue.unescape("");
      ;
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      ;
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      String string0 = tokenQueue0.chompToIgnoreCase("    ");
      ;
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      String string0 = tokenQueue0.chompToIgnoreCase("    ");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      String string0 = tokenQueue0.chompToIgnoreCase("    ");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      String string0 = tokenQueue0.chompToIgnoreCase("    ");
      ;
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      String string0 = tokenQueue0.chompToIgnoreCase("    ");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      String string0 = tokenQueue0.chompToIgnoreCase("    ");
      String string1 = tokenQueue0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      String string0 = tokenQueue0.chompToIgnoreCase("    ");
      String string1 = tokenQueue0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      String string0 = tokenQueue0.chompToIgnoreCase("    ");
      String string1 = tokenQueue0.toString();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      String string0 = tokenQueue0.chompToIgnoreCase("    ");
      String string1 = tokenQueue0.toString();
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      String string0 = tokenQueue0.chompToIgnoreCase("    ");
      String string1 = tokenQueue0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      String string0 = tokenQueue0.chompToIgnoreCase("    ");
      String string1 = tokenQueue0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      ;
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      String string0 = tokenQueue0.remainder();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      String string0 = tokenQueue0.remainder();
      ;
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      String string0 = tokenQueue0.remainder();
      ;
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      String string0 = tokenQueue0.remainder();
      ;
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      String string0 = tokenQueue0.remainder();
      ;
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("               ");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("               ");
      ;
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("               ");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("               ");
      ;
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("               ");
      String string0 = tokenQueue0.consumeElementSelector();
      ;
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("               ");
      String string0 = tokenQueue0.consumeElementSelector();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("               ");
      String string0 = tokenQueue0.consumeElementSelector();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("               ");
      String string0 = tokenQueue0.consumeElementSelector();
      ;
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("               ");
      String string0 = tokenQueue0.consumeElementSelector();
      ;
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      ;
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      ;
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      String string0 = tokenQueue0.consumeCssIdentifier();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      String string0 = tokenQueue0.consumeCssIdentifier();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      String string0 = tokenQueue0.consumeCssIdentifier();
      ;
}
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      String string0 = tokenQueue0.consumeCssIdentifier();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      String string0 = tokenQueue0.consumeCssIdentifier();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("5DA=");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("5DA=");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("5DA=");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("5DA=");
      ;
}
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("5DA=");
      char char0 = tokenQueue0.consume();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("5DA=");
      char char0 = tokenQueue0.consume();
      ;
}
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("5DA=");
      char char0 = tokenQueue0.consume();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("5DA=");
      char char0 = tokenQueue0.consume();
      ;
}
 @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("  ");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("  ");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("  ");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("  ");
      ;
}
 @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("  ");
      String string0 = tokenQueue0.chompTo("fWe8");
      ;
}
 @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("  ");
      String string0 = tokenQueue0.chompTo("fWe8");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("  ");
      String string0 = tokenQueue0.chompTo("fWe8");
      ;
}
 @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("  ");
      String string0 = tokenQueue0.chompTo("fWe8");
      ;
}
 @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("  ");
      String string0 = tokenQueue0.chompTo("fWe8");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenQueue.unescape((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }
 @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("qpYkz?`~IHl*");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("qpYkz?`~IHl*");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("qpYkz?`~IHl*");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("qpYkz?`~IHl*");
      ;
}
 @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      ;
}
 @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      ;
}
 @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      ;
}
 @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("E3m}OKHTuHs!yG!");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("E3m}OKHTuHs!yG!");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("E3m}OKHTuHs!yG!");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("E3m}OKHTuHs!yG!");
      ;
}
 @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      ;
}
 @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      ;
}
 @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      ;
}
 @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("./t-\"");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("./t-\"");
      ;
}
 @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("./t-\"");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("./t-\"");
      ;
}
 @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("yhn[J");
      ;
}
 @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("yhn[J");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("yhn[J");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("yhn[J");
      ;
}
 @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("'Q~m@r`?S");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("'Q~m@r`?S");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("'Q~m@r`?S");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("'Q~m@r`?S");
      ;
}
 @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      ;
}
 @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      ;
}
 @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      ;
}
 @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      ;
}
 @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil$1");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil$1");
      ;
}
 @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil$1");
      ;
}
 @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil$1");
      ;
}
 @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      TokenQueue tokenQueue0 = null;
      try {
        tokenQueue0 = new TokenQueue((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      ;
}
 @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("^e&o*!");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("^e&o*!");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("^e&o*!");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("^e&o*!");
      tokenQueue0.addFirst("M");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("^e&o*!");
      tokenQueue0.addFirst("M");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("^e&o*!");
      tokenQueue0.addFirst("M");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      ;
}
 @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      ;
}
 @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      String string0 = tokenQueue0.consumeToIgnoreCase("                 ");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      String string0 = tokenQueue0.consumeToIgnoreCase("                 ");
      ;
}
 @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      String string0 = tokenQueue0.consumeToIgnoreCase("                 ");
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      String string0 = tokenQueue0.consumeToIgnoreCase("                 ");
      ;
}
 @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      String string0 = tokenQueue0.consumeToIgnoreCase("                 ");
      ;
}
 @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      ;
}
 @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      ;
}
 @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      char char0 = tokenQueue0.consume();
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      char char0 = tokenQueue0.consume();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      char char0 = tokenQueue0.consume();
      ;
}
 @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      char char0 = tokenQueue0.consume();
      ;
}
 @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      char char0 = tokenQueue0.consume();
      String string0 = tokenQueue0.consumeTo("    ");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      char char0 = tokenQueue0.consume();
      String string0 = tokenQueue0.consumeTo("    ");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      char char0 = tokenQueue0.consume();
      String string0 = tokenQueue0.consumeTo("    ");
      ;
}
 @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      char char0 = tokenQueue0.consume();
      String string0 = tokenQueue0.consumeTo("    ");
      ;
}
 @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("    ");
      char char0 = tokenQueue0.consume();
      String string0 = tokenQueue0.consumeTo("    ");
      ;
}
 @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      ;
}
 @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      String string0 = tokenQueue0.consumeElementSelector();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      String string0 = tokenQueue0.consumeElementSelector();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      String string0 = tokenQueue0.consumeElementSelector();
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      String string0 = tokenQueue0.consumeElementSelector();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      String string0 = tokenQueue0.consumeElementSelector();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      String string0 = tokenQueue0.consumeElementSelector();
      boolean boolean0 = tokenQueue0.matchesWord();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      String string0 = tokenQueue0.consumeElementSelector();
      boolean boolean0 = tokenQueue0.matchesWord();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      String string0 = tokenQueue0.consumeElementSelector();
      boolean boolean0 = tokenQueue0.matchesWord();
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      String string0 = tokenQueue0.consumeElementSelector();
      boolean boolean0 = tokenQueue0.matchesWord();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      ;
}
 @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      ;
}
 @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      boolean boolean0 = tokenQueue0.matchesWord();
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      boolean boolean0 = tokenQueue0.matchesWord();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      boolean boolean0 = tokenQueue0.matchesWord();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      boolean boolean0 = tokenQueue0.matchesWord();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
      ;
}
 @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
      ;
}
 @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
      boolean boolean0 = tokenQueue0.matchesWord();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
      boolean boolean0 = tokenQueue0.matchesWord();
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
      boolean boolean0 = tokenQueue0.matchesWord();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
      boolean boolean0 = tokenQueue0.matchesWord();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      ;
}
 @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      ;
}
 @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      boolean boolean0 = tokenQueue0.matchesWhitespace();
      ;
}
 @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      boolean boolean0 = tokenQueue0.matchesWhitespace();
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      boolean boolean0 = tokenQueue0.matchesWhitespace();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      boolean boolean0 = tokenQueue0.matchesWhitespace();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      ;
}
 @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      boolean boolean0 = tokenQueue0.matchesWhitespace();
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      boolean boolean0 = tokenQueue0.matchesWhitespace();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      boolean boolean0 = tokenQueue0.matchesWhitespace();
      ;
}
 @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      boolean boolean0 = tokenQueue0.matchesWhitespace();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      ;
}
 @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      ;
}
 @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      boolean boolean0 = tokenQueue0.matchesWhitespace();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      boolean boolean0 = tokenQueue0.matchesWhitespace();
      ;
}
 @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      boolean boolean0 = tokenQueue0.matchesWhitespace();
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      boolean boolean0 = tokenQueue0.matchesWhitespace();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      ;
}
 @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      char[] charArray0 = new char[9];
      charArray0[5] = '*';
      boolean boolean0 = tokenQueue0.matchesAny(charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      char[] charArray0 = new char[9];
      charArray0[5] = '*';
      boolean boolean0 = tokenQueue0.matchesAny(charArray0);
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      char[] charArray0 = new char[9];
      charArray0[5] = '*';
      boolean boolean0 = tokenQueue0.matchesAny(charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      char[] charArray0 = new char[9];
      charArray0[5] = '*';
      boolean boolean0 = tokenQueue0.matchesAny(charArray0);
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      char[] charArray0 = new char[9];
      charArray0[5] = '*';
      boolean boolean0 = tokenQueue0.matchesAny(charArray0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*|");
      char[] charArray0 = new char[9];
      charArray0[5] = '*';
      boolean boolean0 = tokenQueue0.matchesAny(charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      ;
}
 @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      char[] charArray0 = new char[5];
      boolean boolean0 = tokenQueue0.matchesAny(charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      char[] charArray0 = new char[5];
      boolean boolean0 = tokenQueue0.matchesAny(charArray0);
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      char[] charArray0 = new char[5];
      boolean boolean0 = tokenQueue0.matchesAny(charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      char[] charArray0 = new char[5];
      boolean boolean0 = tokenQueue0.matchesAny(charArray0);
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      char[] charArray0 = new char[5];
      boolean boolean0 = tokenQueue0.matchesAny(charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                 ");
      char[] charArray0 = new char[5];
      boolean boolean0 = tokenQueue0.matchesAny(charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[0CkZ;I");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[0CkZ;I");
      ;
}
 @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[0CkZ;I");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[0CkZ;I");
      ;
}
 @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Queue not long enough to consume sequence";
      boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Queue not long enough to consume sequence";
      boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Queue not long enough to consume sequence";
      boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Queue not long enough to consume sequence";
      boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Queue not long enough to consume sequence";
      boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      ;
}
 @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompToIgnoreCase("\"I(z");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompToIgnoreCase("\"I(z");
      ;
}
 @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompToIgnoreCase("\"I(z");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompToIgnoreCase("\"I(z");
      ;
}
 @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompToIgnoreCase("\"I(z");
      ;
}
 @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompToIgnoreCase("\"I(z");
      boolean boolean0 = tokenQueue0.isEmpty();
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompToIgnoreCase("\"I(z");
      boolean boolean0 = tokenQueue0.isEmpty();
      ;
}
 @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompToIgnoreCase("\"I(z");
      boolean boolean0 = tokenQueue0.isEmpty();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.chompToIgnoreCase("\"I(z");
      boolean boolean0 = tokenQueue0.isEmpty();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      ;
}
 @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      boolean boolean0 = tokenQueue0.isEmpty();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      boolean boolean0 = tokenQueue0.isEmpty();
      ;
}
 @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      boolean boolean0 = tokenQueue0.isEmpty();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      boolean boolean0 = tokenQueue0.isEmpty();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      ;
}
 @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      ;
}
 @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.remainder();
      ;
}
 @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.remainder();
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.remainder();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.remainder();
      ;
}
 @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"I(z");
      String string0 = tokenQueue0.remainder();
      ;
}
 @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      ;
}
 @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      boolean boolean0 = tokenQueue0.matches("\"GWi{%");
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      boolean boolean0 = tokenQueue0.matches("\"GWi{%");
      ;
}
 @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      boolean boolean0 = tokenQueue0.matches("\"GWi{%");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      boolean boolean0 = tokenQueue0.matches("\"GWi{%");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      String string0 = TokenQueue.unescape("\\xNNp8z{xf':)U");
      ;
}
 @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      String string0 = TokenQueue.unescape("\\xNNp8z{xf':)U");
      ;
}
 @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      ;
}
 @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      String string0 = tokenQueue0.chompBalanced('\"', 'i');
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      String string0 = tokenQueue0.chompBalanced('\"', 'i');
      ;
}
 @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      String string0 = tokenQueue0.chompBalanced('\"', 'i');
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      String string0 = tokenQueue0.chompBalanced('\"', 'i');
      ;
}
 @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      String string0 = tokenQueue0.chompBalanced('\"', 'i');
      ;
}
 @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      String string0 = tokenQueue0.chompBalanced('\"', 'i');
      boolean boolean0 = tokenQueue0.matches("\"GWi{%");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      String string0 = tokenQueue0.chompBalanced('\"', 'i');
      boolean boolean0 = tokenQueue0.matches("\"GWi{%");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      String string0 = tokenQueue0.chompBalanced('\"', 'i');
      boolean boolean0 = tokenQueue0.matches("\"GWi{%");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("\"GWi{%");
      String string0 = tokenQueue0.chompBalanced('\"', 'i');
      boolean boolean0 = tokenQueue0.matches("\"GWi{%");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      ;
}
 @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      ;
}
 @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      ;
}
 @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      tokenQueue0.addFirst("M");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      tokenQueue0.addFirst("M");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      tokenQueue0.addFirst("m\"2un3<'jni+y9qh g'");
      tokenQueue0.addFirst("M");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      ;
}
 @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("ww%:T^C6t'5XP\"A");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("ww%:T^C6t'5XP\"A");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("ww%:T^C6t'5XP\"A");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("ww%:T^C6t'5XP\"A");
      tokenQueue0.addFirst("M");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("ww%:T^C6t'5XP\"A");
      tokenQueue0.addFirst("M");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("M");
      tokenQueue0.addFirst("ww%:T^C6t'5XP\"A");
      tokenQueue0.addFirst("M");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      ;
}
 @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      ;
}
 @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3'");
      String string0 = tokenQueue0.consumeWord();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String[] stringArray0 = new String[10];
      stringArray0[0] = "Queue not long enough to consume sequence";
      String string0 = tokenQueue0.consumeToAny(stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String[] stringArray0 = new String[10];
      stringArray0[0] = "Queue not long enough to consume sequence";
      String string0 = tokenQueue0.consumeToAny(stringArray0);
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String[] stringArray0 = new String[10];
      stringArray0[0] = "Queue not long enough to consume sequence";
      String string0 = tokenQueue0.consumeToAny(stringArray0);
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String[] stringArray0 = new String[10];
      stringArray0[0] = "Queue not long enough to consume sequence";
      String string0 = tokenQueue0.consumeToAny(stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String[] stringArray0 = new String[10];
      stringArray0[0] = "Queue not long enough to consume sequence";
      String string0 = tokenQueue0.consumeToAny(stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String[] stringArray0 = new String[10];
      stringArray0[0] = "Queue not long enough to consume sequence";
      String string0 = tokenQueue0.consumeToAny(stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      ;
}
 @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      ;
}
 @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      ;
}
 @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      ;
}
 @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      String string1 = tokenQueue0.consumeToIgnoreCase("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      String string1 = tokenQueue0.consumeToIgnoreCase("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      String string1 = tokenQueue0.consumeToIgnoreCase("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      String string1 = tokenQueue0.consumeToIgnoreCase("Queue not long enough to consume sequence");
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      String string1 = tokenQueue0.consumeToIgnoreCase("Queue not long enough to consume sequence");
      assertNotNull(string1);
}
 @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      String string1 = tokenQueue0.consumeToIgnoreCase("Queue not long enough to consume sequence");
      assertNotNull(string1);
}
 @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeTo("");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeTo("");
      ;
}
 @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeTo("");
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeTo("");
      ;
}
 @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeTo("");
      ;
}
 @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertNotNull(tokenQueue0);
}
 @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      ;
}
 @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      assertNotNull(tokenQueue0);
}
 @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      tokenQueue0.advance();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      tokenQueue0.advance();
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      tokenQueue0.advance();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      tokenQueue0.advance();
      char char0 = tokenQueue0.consume();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      tokenQueue0.advance();
      char char0 = tokenQueue0.consume();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      tokenQueue0.advance();
      char char0 = tokenQueue0.consume();
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("3s'm~");
      tokenQueue0.advance();
      char char0 = tokenQueue0.consume();
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      ;
}
 @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      ;
}
 @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      String string0 = tokenQueue0.consumeElementSelector();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      String string0 = tokenQueue0.consumeElementSelector();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      String string0 = tokenQueue0.consumeElementSelector();
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      String string0 = tokenQueue0.consumeElementSelector();
      ;
}
 @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      String string0 = tokenQueue0.consumeElementSelector();
      ;
}
 @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      String string0 = tokenQueue0.consumeElementSelector();
      tokenQueue0.advance();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      String string0 = tokenQueue0.consumeElementSelector();
      tokenQueue0.advance();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      String string0 = tokenQueue0.consumeElementSelector();
      tokenQueue0.advance();
      ;
}
 @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      ;
}
 @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      ;
}
 @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      ;
}
 @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      assertNotNull(string1);
}
 @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      assertNotNull(string1);
}
 @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      String string2 = tokenQueue0.consumeWord();
      ;
}
 @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      String string2 = tokenQueue0.consumeWord();
      ;
}
 @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      String string2 = tokenQueue0.consumeWord();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      String string2 = tokenQueue0.consumeWord();
      ;
}
 @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      String string2 = tokenQueue0.consumeWord();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      String string2 = tokenQueue0.consumeWord();
      assertNotNull(string2);
}
 @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("m\"2UN3<'JNi+Y9QH R");
      String string0 = tokenQueue0.chompToIgnoreCase("'");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "'";
      stringArray0[1] = "m\"2UN3<";
      stringArray0[2] = "m\"2UN3<'JNi+Y9QH R";
      String string1 = tokenQueue0.consumeToAny(stringArray0);
      String string2 = tokenQueue0.consumeWord();
      assertNotNull(string2);
}
 @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      ;
}
 @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      ;
}
 @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      ;
}
 @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      boolean boolean0 = tokenQueue0.consumeWhitespace();
      ;
}
 @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      boolean boolean0 = tokenQueue0.consumeWhitespace();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      boolean boolean0 = tokenQueue0.consumeWhitespace();
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeElementSelector();
      boolean boolean0 = tokenQueue0.consumeWhitespace();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      boolean boolean0 = tokenQueue0.consumeWhitespace();
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      boolean boolean0 = tokenQueue0.consumeWhitespace();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      boolean boolean0 = tokenQueue0.consumeWhitespace();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      boolean boolean0 = tokenQueue0.consumeWhitespace();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeToIgnoreCase("        ");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeToIgnoreCase("        ");
      ;
}
 @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeToIgnoreCase("        ");
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeToIgnoreCase("        ");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeToIgnoreCase("        ");
      ;
}
 @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeToIgnoreCase("        ");
      boolean boolean0 = tokenQueue0.consumeWhitespace();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeToIgnoreCase("        ");
      boolean boolean0 = tokenQueue0.consumeWhitespace();
      ;
}
 @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeToIgnoreCase("        ");
      boolean boolean0 = tokenQueue0.consumeWhitespace();
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      String string0 = tokenQueue0.consumeToIgnoreCase("        ");
      boolean boolean0 = tokenQueue0.consumeWhitespace();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      ;
}
 @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      boolean boolean0 = tokenQueue0.matchChomp("");
      ;
}
 @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      boolean boolean0 = tokenQueue0.matchChomp("");
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      boolean boolean0 = tokenQueue0.matchChomp("");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      boolean boolean0 = tokenQueue0.matchChomp("");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil$1");
      assertTrue(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil$1");
      ;
}
 @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil$1");
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil$1");
      ;
}
 @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil$1");
      String string0 = tokenQueue0.consumeCssIdentifier();
      assertFalse(tokenQueue0.matchesWord());
}
 @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil$1");
      String string0 = tokenQueue0.consumeCssIdentifier();
      ;
}
 @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil$1");
      String string0 = tokenQueue0.consumeCssIdentifier();
      assertTrue(tokenQueue0.isEmpty());
}
 @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil$1");
      String string0 = tokenQueue0.consumeCssIdentifier();
      ;
}
 @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.internal.StringUtil$1");
      String string0 = tokenQueue0.consumeCssIdentifier();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      tokenQueue0.consumeToIgnoreCase("        ");
      boolean boolean0 = tokenQueue0.matchesAny((char[]) null);
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue not long enough to consume sequence");
      tokenQueue0.consumeToIgnoreCase("        ");
      boolean boolean0 = tokenQueue0.matchesAny((char[]) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      String string0 = tokenQueue0.consumeCssIdentifier();
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      String string0 = tokenQueue0.consumeCssIdentifier();
      ;
}
 @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[QHb|H[&");
      tokenQueue0.consume();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[QHb|H[&";
      stringArray0[1] = "[QHb|H[&";
      stringArray0[2] = "[QHb|H[&";
      stringArray0[3] = "[QHb|H[&";
      boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[QHb|H[&");
      tokenQueue0.consume();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[QHb|H[&";
      stringArray0[1] = "[QHb|H[&";
      stringArray0[2] = "[QHb|H[&";
      stringArray0[3] = "[QHb|H[&";
      boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      String string0 = tokenQueue0.consumeElementSelector();
      ;
}
 @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      String string0 = tokenQueue0.consumeElementSelector();
      tokenQueue0.chompTo("-");
      ;
}
 @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("-");
      String string0 = tokenQueue0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("E3m}OKHTuHs!yG!");
      boolean boolean0 = tokenQueue0.matchChomp("$z8");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("E3m}OKHTuHs!yG!");
      boolean boolean0 = tokenQueue0.matchChomp("$z8");
      assertNotNull(tokenQueue0.toString());
}
 @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      // Undeclared exception!
      try { 
        tokenQueue0.chompTo((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
