/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 06 15:37:16 GMT 2022
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.HttpConnection;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.LeafNode;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LeafNode_ESTest extends LeafNode_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("SOl3U&+65yp");
      List<Node> list0 = cDataNode0.ensureChildNodes();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("Km]F45<A`\"D");
      cDataNode0.doSetBaseUri("Km]F45<A`\"D");
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("*N21-,Xs')>&I=CL");
      cDataNode0.coreValue("*N21-,Xs')>&I=CL");
      assertEquals(0, cDataNode0.siblingIndex());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("4O@");
      cDataNode0.siblingIndex = (-1474407326);
      Node node0 = cDataNode0.removeAttr("4O@");
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("org.jsoup.nodes.LeafNode", true);
      Document document0 = Parser.parse("[U(6`?Ff?u<=", "org.jsoup.nodes.LeafNode");
      LeafNode leafNode0 = xmlDeclaration0.doClone(document0);
      Node node0 = leafNode0.removeAttr("[U(6`?Ff?u<=");
      assertFalse(node0.hasParent());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("PUBLIC", false);
      xmlDeclaration0.sourceRange();
      boolean boolean0 = xmlDeclaration0.hasAttributes();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("", true);
      boolean boolean0 = xmlDeclaration0.hasAttributes();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("$N2>-|Xs')>&I=CL");
      cDataNode0.attr(")quFrk", ")quFrk");
      boolean boolean0 = cDataNode0.hasAttr(")quFrk");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("Km]F45<A`\"D");
      boolean boolean0 = cDataNode0.hasAttr("");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Comment comment0 = new Comment("org.jsoup.nodes.LeafNode");
      comment0.siblingIndex = 8230;
      Node node0 = comment0.empty();
      assertNotNull(node0.nodeName());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Comment comment0 = new Comment("org.jsoup.nodes.LeafNode");
      comment0.setSiblingIndex((-1093));
      Node node0 = comment0.empty();
      assertFalse(node0.hasParent());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Comment comment0 = new Comment("org.jsoup.nodes.LeafNode");
      Node node0 = comment0.wrap("org.jsoup.nodes.LeafNode");
      Node node1 = comment0.empty();
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("N&A D3+jc8k", "N&A D3+jc8k", "N&A D3+jc8k");
      documentType0.setSiblingIndex(141);
      CDataNode cDataNode0 = new CDataNode("PUBLIC");
      LeafNode leafNode0 = documentType0.doClone(cDataNode0);
      assertTrue(leafNode0.hasParent());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("N&A D3+jc8k", "PH]OE.V3COC", "N&A D3+jc8k");
      CDataNode cDataNode0 = new CDataNode("PH]OE.V3COC");
      documentType0.setSiblingIndex((-446));
      LeafNode leafNode0 = documentType0.doClone(cDataNode0);
      assertTrue(leafNode0.hasParent());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Comment comment0 = new Comment("name");
      LeafNode leafNode0 = comment0.doClone((Node) null);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Comment comment0 = new Comment((String) null);
      String string0 = comment0.coreValue();
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("");
      CDataNode cDataNode1 = (CDataNode)cDataNode0.text("1sc#dLv");
      String string0 = cDataNode1.coreValue();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Comment comment0 = new Comment("");
      String string0 = comment0.coreValue();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("aside");
      int int0 = cDataNode0.childNodeSize();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode(":last-child");
      Document document0 = Parser.parseBodyFragment("2L", "dJo}Ko`P0yR#");
      cDataNode0.parentNode = (Node) document0;
      String string0 = cDataNode0.baseUri();
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("4O@");
      String string0 = cDataNode0.baseUri();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Comment comment0 = new Comment((String) null);
      Attributes attributes0 = comment0.attributes();
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("*N21-,Xs')>&I=CL");
      cDataNode0.siblingIndex = 117511;
      Node node0 = cDataNode0.attr("quirks", "quirks");
      assertEquals(0, node0.siblingIndex());
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("*N21-,Xs')>&I=CL");
      cDataNode0.siblingIndex = (-1480588177);
      Node node0 = cDataNode0.attr(")quFrk", ")quFrk");
      assertNotNull(node0.nodeName());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TextNode textNode0 = TextNode.createFromEncoded("u1jHE7B,8qY");
      textNode0.wrap("qr=");
      Node node0 = textNode0.attr("qr=", "jS[");
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode((String) null);
      String string0 = cDataNode0.attr("#cdata");
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("*N21-,Xs')>&I=CL");
      Node node0 = cDataNode0.attr(")quFrk", ")quFrk");
      String string0 = node0.attr(")quFrk");
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("4O@");
      // Undeclared exception!
      try { 
        cDataNode0.removeAttr((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Comment comment0 = new Comment("'Y$gY*d3)C/ow|w");
      comment0.value = (Object) comment0;
      // Undeclared exception!
      try { 
        comment0.removeAttr("BeforeDoctypeName");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.jsoup.nodes.Comment cannot be cast to java.lang.String
         //
         verifyException("org.jsoup.nodes.LeafNode", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DataNode dataNode0 = new DataNode("#doctype");
      dataNode0.reparentChild(dataNode0);
      // Undeclared exception!
      dataNode0.attr("bh.Me#/5 2Y_P:3eVw?", "*N21-,Xs')>&I=CL");
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DataNode dataNode0 = new DataNode("#doctype");
      // Undeclared exception!
      try { 
        dataNode0.attr((String) null, "org.jsoup.nodes.LeafNode");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("*N21-,Xs')>&I=CL");
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 391, 391);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0);
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create("org.jsoup.nodes.LeafNode", "*N21-,Xs')>&I=CL", (InputStream) pushbackInputStream0);
      cDataNode0.value = (Object) httpConnection_KeyVal0;
      // Undeclared exception!
      try { 
        cDataNode0.attr("\"qucrk", "\"qucrk");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.jsoup.helper.HttpConnection$KeyVal cannot be cast to java.lang.String
         //
         verifyException("org.jsoup.nodes.LeafNode", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Comment comment0 = new Comment("MdAaNE|}@P'!vRE$");
      XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
      // Undeclared exception!
      try { 
        xmlDeclaration0.attr((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Comment comment0 = new Comment("u1jHE7B,8qY");
      // Undeclared exception!
      try { 
        comment0.absUrl((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DataNode dataNode0 = new DataNode("#doctype");
      DataNode dataNode1 = dataNode0.setWholeData("#doctype");
      Comment comment0 = new Comment(";Jl1xwr,;p4*&2y'");
      dataNode1.value = (Object) comment0;
      // Undeclared exception!
      try { 
        dataNode1.absUrl("org.jsoup.nodes.LeafNode");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.jsoup.nodes.Comment cannot be cast to java.lang.String
         //
         verifyException("org.jsoup.nodes.LeafNode", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("msgsP^P]>}m7BJy");
      Attributes attributes0 = cDataNode0.attributes();
      assertTrue(attributes0.isEmpty());
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("org.jsoup.nodes.LeafNode");
      String string0 = cDataNode0.attr(")qgT]");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Comment comment0 = new Comment("<![CDATA[ec@]]>");
      String string0 = comment0.absUrl("<![CDATA[ec@]]>");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("4O@");
      TextNode textNode0 = cDataNode0.text("4O@");
      textNode0.siblingIndex = 498;
      Node node0 = textNode0.removeAttr("4O@");
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Comment comment0 = new Comment("<![CDATA[ec@]]>");
      // Undeclared exception!
      try { 
        comment0.hasAttr((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
