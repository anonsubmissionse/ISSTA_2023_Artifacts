/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 06 15:34:29 GMT 2022
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sun.org.apache.xerces.internal.dom.DocumentImpl;
import java.nio.charset.Charset;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import javax.imageio.metadata.IIOMetadataNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("xmlns:javax.xml.xpath.XPathFactory:jsoup", "[_d3");
      Element element0 = document0.createElement(":empty");
      org.w3c.dom.Document document1 = W3CDom.convert(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(element0, document1);
        fail("Expecting exception: DOMException");
      } catch(DOMException e) {
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("}>1%\"'ke|zR", "");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup((Element) document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      w3CDom_W3CBuilder0.tail(document0, 0);
      assertTrue(w3CDom0.namespaceAware());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      w3CDom0.selectXpath("javax.xml.xpath.XPathFactory:jsoup", (Node) iIOMetadataNode0);
      assertTrue(w3CDom0.namespaceAware());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Document document0 = new Document("");
      Map<String, String> map0 = document0.dataset();
      Properties properties0 = W3CDom.propertiesFromMap(map0);
      assertFalse(properties0.isEmpty());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      W3CDom w3CDom1 = w3CDom0.namespaceAware(false);
      boolean boolean0 = w3CDom1.namespaceAware();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("javax.xml.xpath.XPathFactory:jsoup");
      NodeList nodeList0 = iIOMetadataNode0.getElementsByTagNameNS("jsoupSource", "javax.xml.xpath.XPathFactory:jsoup");
      Class<Document> class0 = Document.class;
      // Undeclared exception!
      try { 
        w3CDom0.sourceNodes(nodeList0, class0);
        fail("Expecting exception: DOMException");
      } catch(DOMException e) {
         //
         // Method not supported
         //
         verifyException("javax.imageio.metadata.IIOMetadataNode", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Class<Document> class0 = Document.class;
      // Undeclared exception!
      try { 
        w3CDom0.sourceNodes((NodeList) null, class0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.selectXpath("<", (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The parameter 'contextNode' must not be null.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("@d");
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.insertBefore(iIOMetadataNode1, iIOMetadataNode1);
      // Undeclared exception!
      try { 
        w3CDom0.selectXpath("org.eclipse.jetty.util.thread.Locker", node0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("javax.xml.xpath.XPathFactory:jsoup", "javax.xml.xpath.XPathFactory:jsoup");
      Element element0 = document0.appendElement("contextNode");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(element0);
      // Undeclared exception!
      try { 
        w3CDom0.selectXpath("<?xml version=\"1.0\" encoding=\"UTF-8\"?><contextNode/>", document1);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
         //
         // Could not evaluate XPath query [<?xml version=\"1.0\" encoding=\"UTF-8\"?><contextNode/>]: javax.xml.transform.TransformerException: A location path was expected, but the following token was encountered:  <
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.selectXpath("~&yy", (org.w3c.dom.Document) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // The parameter 'contextNode' must not be null.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.add((String) null, (String) null);
      Map<String, String> map0 = attributes1.dataset();
      // Undeclared exception!
      try { 
        W3CDom.propertiesFromMap(map0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        W3CDom.propertiesFromMap((Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.factory = null;
      // Undeclared exception!
      try { 
        w3CDom0.namespaceAware(false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Tag tag0 = Tag.valueOf("#cdata");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "jsoupSource", attributes0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Element) formElement0);
        fail("Expecting exception: DOMException");
      } catch(DOMException e) {
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("Uu8x!yl");
      document0.appendTo(document0);
      // Undeclared exception!
      w3CDom0.fromJsoup((Element) document0);
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("javax.xml.xpath.XPathFactory:jsoup");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Element) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0
         //
         verifyException("java.util.Collections$EmptyList", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("javax.xml.xpath.XPathFactory:jsoup", "jsoupSource");
      document0.prependElement("vS$mgQsxESN");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      } catch(DOMException e) {
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Document) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("e3E--|", "e3E--|");
      document0.appendTo(document0);
      // Undeclared exception!
      w3CDom0.fromJsoup(document0);
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.factory = null;
      Document document0 = Document.createShell("org.eclipse.jetty.util.thread.ThreadPoolBudget");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("u()4;p|");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0
         //
         verifyException("java.util.Collections$EmptyList", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Tag tag0 = Tag.valueOf("javax.xml.xpath.XPathFactory:jsoup");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("", true);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "u*Lx\"{97x\"etMh\"[X", attributes1);
      Document document0 = Document.createShell("javax.xml.xpath.XPathFactory:jsoup");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert((Element) pseudoTextElement0, document1);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "Ec,8QG");
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.convert((Element) document0, (org.w3c.dom.Document) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("javax.xml.xpath.XPathFactory:jsoup");
      Charset charset0 = Charset.defaultCharset();
      document0.charset(charset0);
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      document0.prependChild(document0);
      // Undeclared exception!
      w3CDom0.convert(document0, document1);
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.convert((Document) null, (org.w3c.dom.Document) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("", "");
      Document document1 = document0.shallowClone();
      org.w3c.dom.Document document2 = w3CDom0.fromJsoup((Element) document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document1, document2);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0
         //
         verifyException("java.util.Collections$EmptyList", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("{L:_g4d0", "{L:_g4d0");
      Document document1 = document0.shallowClone();
      document1.prependChild(document0);
      // Undeclared exception!
      try { 
        W3CDom.convert(document1);
        fail("Expecting exception: DOMException");
      } catch(DOMException e) {
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        W3CDom.convert((Document) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Document document0 = Parser.parse("#<k`", "#<k`");
      document0.appendTo(document0);
      // Undeclared exception!
      W3CDom.convert(document0);
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Document document0 = new Document("jYfQ?`cCz5-69vu");
      // Undeclared exception!
      try { 
        W3CDom.convert(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0
         //
         verifyException("java.util.Collections$EmptyList", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.contextNode((org.w3c.dom.Document) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("jsoupSource", "javax.xml.xpath.XPathFactory:jsoup");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup((Element) document0);
      Attributes attributes0 = new Attributes();
      attributes0.put("", "");
      Map<String, String> map0 = attributes0.dataset();
      // Undeclared exception!
      try { 
        W3CDom.asString(document1, map0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Document document0 = Parser.parse("javax.xml.xpath.XPathFactory:jsoup", "jsoupSource");
      org.w3c.dom.Document document1 = W3CDom.convert(document0);
      HashMap<String, String> hashMap0 = W3CDom.OutputXml();
      hashMap0.put("", "     ");
      // Undeclared exception!
      try { 
        W3CDom.asString(document1, (Map<String, String>) hashMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("9W[@%=!FU#Y5'UQ", "9W[@%=!FU#Y5'UQ");
      // Undeclared exception!
      try { 
        W3CDom.asString((org.w3c.dom.Document) null, (Map<String, String>) hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.asString((org.w3c.dom.Document) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Tag tag0 = Tag.valueOf("javax.xml.xpath.XPathFactory:jsoup");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "jsoupSource", attributes0);
      Attribute attribute0 = new Attribute("xmlns:javax.xml.xpath.XPathFactory:jsoup", "jsoupSource", attributes0);
      attribute0.setKey("\"\r\nContent-Type: ");
      attributes0.put(attribute0);
      org.w3c.dom.Document document0 = w3CDom0.fromJsoup((Element) formElement0);
      // Undeclared exception!
      try { 
        w3CDom0.asString(document0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
         //
         // javax.xml.transform.TransformerException: java.lang.RuntimeException: Namespace for prefix 'Content-Type' has not been declared.
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("");
      org.w3c.dom.Document document1 = W3CDom.convert(document0);
      // Undeclared exception!
      try { 
        w3CDom0.selectXpath("[%s*=%s]", (Node) document1);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
         //
         // Could not evaluate XPath query [[%s*=%s]]: javax.xml.transform.TransformerException: A location path was expected, but the following token was encountered:  [
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("javax.xml.xpath.XPathFactory:jsoup");
      Document document1 = Parser.parse("Uf:WS", "h6");
      org.w3c.dom.Document document2 = W3CDom.convert(document1);
      // Undeclared exception!
      try { 
        w3CDom0.convert((Element) document0, document2);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0
         //
         verifyException("java.util.Collections$EmptyList", e);
      }
  }
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("jsoupSource");
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("jsoup", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "jsoup", (Attributes) null);
      document0.appendTo(pseudoTextElement0);
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup((Element) document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert((Element) document0, document1);
        fail("Expecting exception: DOMException");
      } catch(DOMException e) {
      }
  }
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("javax.xml.xpath.XPathFactory:jsoup", "");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert((Element) document0, document1);
        fail("Expecting exception: DOMException");
      } catch(DOMException e) {
      }
  }
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        W3CDom.asString((org.w3c.dom.Document) null, (Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Tag tag0 = Tag.valueOf("javax.xml.xpath.XPathFactory:jsoup");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "jsoupSource", attributes0);
      Attribute attribute0 = Attribute.createFromEncoded("xmlns:javax.xml.xpath.XPathFactory:jsoup", "xmlns:javax.xml.xpath.XPathFactory:jsoup");
      attributes0.put(attribute0);
      w3CDom0.fromJsoup((Element) formElement0);
      assertTrue(w3CDom0.namespaceAware());
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Tag tag0 = Tag.valueOf("javax.xml.xpath.XPathFactory:jsoup");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("4wuRpi`t*UY5^ kXr", "jsoupSource");
      attributes0.put(attribute0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "'-E,6k&7,18", attributes0);
      w3CDom0.fromJsoup((Element) pseudoTextElement0);
      assertFalse(w3CDom0.namespaceAware());
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("javax.xml.xpath.XPathFactory:jsoup");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup((Element) document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      w3CDom_W3CBuilder0.head((org.jsoup.nodes.Node) null, 0);
      assertTrue(w3CDom0.namespaceAware());
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      assertTrue(w3CDom0.namespaceAware());
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      W3CDom w3CDom1 = w3CDom0.namespaceAware(false);
      Tag tag0 = Tag.valueOf("javax.xml.xpath.XPathFactory:jsoup");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "jsoupSource", attributes0);
      w3CDom1.fromJsoup((Element) formElement0);
      assertTrue(w3CDom0.namespaceAware());
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("javax.xml.xpath.XPathFactory:jsoup", "jsoupSource");
      DocumentImpl documentImpl0 = (DocumentImpl)w3CDom0.fromJsoup((Element) document0);
      Class<Document> class0 = Document.class;
      w3CDom0.sourceNodes((NodeList) documentImpl0, class0);
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("javax.xml.xpath.XPathFactory:jsoup");
      Charset charset0 = Charset.defaultCharset();
      document0.charset(charset0);
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      Map<String, String> map0 = document0.dataset();
      String string0 = W3CDom.asString(document1, map0);
      ;
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("javax.xml.xpath.XPathFactory:jsoup");
      Charset charset0 = Charset.defaultCharset();
      document0.charset(charset0);
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      Map<String, String> map0 = document0.dataset();
      String string0 = W3CDom.asString(document1, map0);
      assertTrue(w3CDom0.namespaceAware());
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("");
      org.w3c.dom.Document document1 = W3CDom.convert(document0);
      String string0 = w3CDom0.asString(document1);
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("");
      org.w3c.dom.Document document1 = W3CDom.convert(document0);
      String string0 = w3CDom0.asString(document1);
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HashMap<String, String> hashMap0 = W3CDom.OutputHtml();
      assertTrue(hashMap0.isEmpty());
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      boolean boolean0 = w3CDom0.namespaceAware();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("", "");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup((Element) document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: DOMException");
      } catch(DOMException e) {
      }
  }
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HashMap<String, String> hashMap0 = W3CDom.OutputXml();
      Properties properties0 = W3CDom.propertiesFromMap(hashMap0);
      assertTrue(properties0.isEmpty());
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("javax.xml.xpath.XPathFactory:jsoup", "jsoupSource");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup((Element) document0);
      w3CDom0.selectXpath("jsoupSource", document1);
      assertTrue(w3CDom0.namespaceAware());
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      W3CDom w3CDom1 = w3CDom0.namespaceAware(true);
      Document document0 = Document.createShell("javax.xml.xpath.XPathFactory:jsoup");
      w3CDom1.factory = null;
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Element) document0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("");
      org.w3c.dom.Document document1 = W3CDom.convert(document0);
      Node node0 = w3CDom0.contextNode(document1);
      assertNotNull(node0);
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("");
      org.w3c.dom.Document document1 = W3CDom.convert(document0);
      Node node0 = w3CDom0.contextNode(document1);
      ;
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Document document0 = Parser.parse(",Trs->9,<?y*|xB;I", ",Trs->9,<?y*|xB;I");
      W3CDom.convert(document0);
  }
}
