 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[1] = 't';
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 1, 1, "8");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3PnZD~p/&");
      char[] charArray0 = new char[1];
      characterReader0.consumeToAny(charArray0);
      characterReader0.toString();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      String string0 = characterReader0.toString();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8p%V,J~pzYZYA8{Bn(");
      boolean boolean0 = characterReader0.containsIgnoreCase("j");
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8p%V,J~pzYZYA8{Bn(");
      boolean boolean0 = characterReader0.containsIgnoreCase("j");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8p%V,J~pzYZYA8{Bn(");
      characterReader0.consumeDigitSequence();
      characterReader0.containsIgnoreCase("8");
      boolean boolean0 = characterReader0.containsIgnoreCase("8");
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8p%V,J~pzYZYA8{Bn(");
      characterReader0.consumeDigitSequence();
      characterReader0.containsIgnoreCase("8");
      boolean boolean0 = characterReader0.containsIgnoreCase("8");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$8502TYC^Z1e");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("$8502TYC^Z1e");
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$8502TYC^Z1e");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("$8502TYC^Z1e");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9QZ|3%-jDZKH*[0}5");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesDigit();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0~Yg6@#`Q[");
      boolean boolean0 = characterReader0.matchesDigit();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<az=N,2\"QwfK6h_on");
      characterReader0.consume();
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesAsciiAlpha();
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<az=N,2\"QwfK6h_on");
      characterReader0.consume();
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesAsciiAlpha();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<az=N,2\"QwfK6h_on");
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesAsciiAlpha();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<az=N,2\"QwfK6h_on");
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesAsciiAlpha();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8p%V,J~pzYZYA8{Bn(");
      char[] charArray0 = new char[8];
      charArray0[6] = 'Z';
      characterReader0.consumeToAny(charArray0);
      boolean boolean0 = characterReader0.matchesAsciiAlpha();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8p%V,J~pzYZYA8{Bn(");
      char[] charArray0 = new char[8];
      charArray0[6] = 'Z';
      characterReader0.consumeToAny(charArray0);
      boolean boolean0 = characterReader0.matchesAsciiAlpha();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("zD>Dj");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesLetter();
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("zD>Dj");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      boolean boolean0 = characterReader0.matchesLetter();
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("}ZVd");
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("}ZVd");
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("LaZLtp($AA&");
      char[] charArray0 = new char[4];
      char[] charArray1 = new char[6];
      charArray1[2] = 'A';
      characterReader0.consumeToAnySorted(charArray1);
      charArray0[0] = 'A';
      charArray0[1] = 'k';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("LaZLtp($AA&");
      char[] charArray0 = new char[4];
      char[] charArray1 = new char[6];
      charArray1[2] = 'A';
      characterReader0.consumeToAnySorted(charArray1);
      charArray0[0] = 'A';
      charArray0[1] = 'k';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("LaZLtp($AA&");
      char[] charArray0 = new char[3];
      charArray0[0] = 'v';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("LaZLtp($AA&");
      char[] charArray0 = new char[3];
      charArray0[0] = 'v';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<az=N,2\"QwfK6h_on");
      boolean boolean0 = characterReader0.matchesIgnoreCase("wqtub|ghTBw");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("D.KWI");
      characterReader0.consume();
      boolean boolean0 = characterReader0.matches(":");
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("D.KWI");
      characterReader0.consume();
      boolean boolean0 = characterReader0.matches(":");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("JW");
      boolean boolean0 = characterReader0.matches('-');
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("JW");
      boolean boolean0 = characterReader0.matches('-');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("95<");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("05Ub0^(0]GVpt<>B");
      characterReader0.consumeDigitSequence();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consume();
      characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aOdcp!KaI_Llq");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1622);
      characterReader0.consumeHexSequence();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Fwf\"J!3'@=!0");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeHexSequence();
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9{Jc02on;");
      String string0 = characterReader0.consumeHexSequence();
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9{Jc02on;");
      String string0 = characterReader0.consumeHexSequence();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$0");
      stringReader0.read();
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeHexSequence();
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consume();
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]H9_*+7O>r");
      stringReader0.read();
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("GMyoza40Kg");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ZVd");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("LaZLtp($AA&");
      char[] charArray0 = new char[6];
      charArray0[2] = 'A';
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StringReader stringReader0 = new StringReader("zzPCb:=(");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterSequence();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ivbFUTpZn`[{");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterSequence();
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeLetterSequence();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.advance();
      characterReader0.consumeLetterSequence();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{6.2<s");
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.advance();
      characterReader0.consumeTagName();
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("'=;/#C[kfrKn^#`!J");
      char[] charArray0 = new char[4];
      charArray0[2] = '^';
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.consumeRawData();
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consume();
      characterReader0.consumeRawData();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0~Yg6@#`Q[");
      characterReader0.advance();
      characterReader0.consumeAttributeQuoted(true);
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.advance();
      characterReader0.consumeAttributeQuoted(false);
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.advance();
      characterReader0.consumeData();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.advance();
      char[] charArray0 = new char[4];
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8p%V,J~pzYZYA8{Bn(");
      characterReader0.consumeDigitSequence();
      char[] charArray0 = new char[8];
      characterReader0.consumeToAny(charArray0);
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.advance();
      char[] charArray0 = new char[4];
      characterReader0.consumeToAny(charArray0);
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("@<kE[$AQb~X:f~t7A%");
      characterReader0.consumeTo("kE[$AQb~X:f~t7A%");
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consume();
      int int0 = characterReader0.nextIndexOf('*');
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consume();
      int int0 = characterReader0.nextIndexOf('*');
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consume();
      characterReader0.trackNewlines(true);
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consume();
      characterReader0.mark();
      char[] charArray0 = new char[9];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consume();
      characterReader0.mark();
      char[] charArray0 = new char[9];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      char[] charArray0 = new char[6];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 0, 0, "");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vh%ua=");
      boolean boolean0 = characterReader0.rangeEquals(1, '\u0000', "");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8p%V,J~pzYZYA8{Bn(");
      characterReader0.rangeEquals(1, ',', "8p%V,J~pzYZYA8{Bn(");
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consume();
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0~Yg6@#`Q[");
      int int0 = characterReader0.nextIndexOf("0~Yg6@#`Q[");
      ;
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8p%V,J~pzYZYA8{Bn(");
      characterReader0.consumeDigitSequence();
      int int0 = characterReader0.nextIndexOf("8");
      ;
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8p%V,J~pzYZYA8{Bn(");
      characterReader0.consumeDigitSequence();
      int int0 = characterReader0.nextIndexOf("8");
      ;
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = characterReader0.nextIndexOf(charBuffer0);
      ;
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[&=`gso03bb.=t");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('3');
      int int0 = characterReader0.nextIndexOf('3');
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[&=`gso03bb.=t");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('3');
      int int0 = characterReader0.nextIndexOf('3');
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      int int0 = characterReader0.nextIndexOf('i');
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      int int0 = characterReader0.nextIndexOf('*');
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matches("");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("5<");
      char char0 = characterReader0.current();
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consumeToEnd();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1Y{qC");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char char0 = characterReader0.consume();
      ;
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1Y{qC");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char char0 = characterReader0.consume();
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.helper.Validate");
      int int0 = characterReader0.columnNumber((-1));
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.helper.Validate");
      int int0 = characterReader0.columnNumber((-1));
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("XSK");
      int int0 = characterReader0.columnNumber((-833));
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("XSK");
      int int0 = characterReader0.columnNumber((-833));
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<az=N,2\"QwfK6h_on");
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.trackNewlines(true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3PnZD~p/&");
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        CharacterReader.rangeEquals(charArray0, 4922, 0, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        CharacterReader.rangeEquals(charArray0, 1366, 1, "v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1366
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5<");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      // Undeclared exception!
      try { 
        characterReader0.rangeEquals('J', 1, "5");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 74
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.helper.Validate");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf("org.jsoup.helper.Validate");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0~Yg6@#`Q[");
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 70);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf(":");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2498);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf(charBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@<kE[$AQb~X:f~t7A%");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf('>');
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" vXo[0*LW*s");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesLetter();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`@");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesIgnoreCase("|Hiiy>@r`");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesDigit();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jC{bxF9NZz!");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesAsciiAlpha();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@<kE[$AQb~X:f~t7A%");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesAsciiAlpha();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("m[7'9l");
      char[] charArray0 = new char[4];
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesAnySorted(charArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5.:v,_1u_f");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 4);
      // Undeclared exception!
      try { 
        characterReader0.matchesAny((char[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9Jvt8)gHT;/ )~!\"");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      characterReader0.consumeTagName();
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matches("9Jvt8)gHT;/ )~!\"");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("x+z#%|[p+p+");
      // Undeclared exception!
      try { 
        characterReader0.matches((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.helper.Validate");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matches('\'');
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matches('M');
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("String must not be empty");
      characterReader0.consumeAttributeQuoted(false);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchConsumeIgnoreCase("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchConsume("");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(":J.i5#_u");
      // Undeclared exception!
      try { 
        characterReader0.matchConsume((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8p%V,J~pzYZYA8{Bn(");
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.mark();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[&=`gsoG03bb.=t");
      char[] charArray0 = new char[1];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.isEmpty();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5<");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      stringReader0.close();
      characterReader0.consumeToEnd();
      // Undeclared exception!
      try { 
        characterReader0.current();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("?;YY':^KZ;B");
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.current();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#usA be_false");
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
 @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("L_");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5<");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      stringReader0.close();
      characterReader0.consumeAttributeQuoted(false);
      // Undeclared exception!
      try { 
        characterReader0.consumeToEnd();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeToEnd();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5<");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      stringReader0.close();
      characterReader0.consumeToEnd();
      // Undeclared exception!
      try { 
        characterReader0.consumeToAnySorted((char[]) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C+jjXfIn");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.consumeToAnySorted((char[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }
 @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("N?lEa%n3w");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 9);
      stringReader0.close();
      char[] charArray0 = new char[9];
      characterReader0.consumeToAnySorted(charArray0);
      // Undeclared exception!
      try { 
        characterReader0.consumeToAny(charArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("_l9m!g>btgdC");
      // Undeclared exception!
      try { 
        characterReader0.consumeToAny((char[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      // Undeclared exception!
      try { 
        characterReader0.consumeTo("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
 @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeTo("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@<kE[$AQb~X:f~t7A%");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeTo('G');
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@<kE[$AQb~X:f~t7A%");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeTagName();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q'?lDR.dMPdRzW");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeRawData();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<;nJIG prt6$");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterThenDigitSequence();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      stringReader0.close();
      characterReader0.consumeTo(':');
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterSequence();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@<kE[$AQb~X:f~t7A%");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeHexSequence();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("The parameter '%s' must not be null.");
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeDigitSequence();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@<kE[$AQb~X:f~t7A%");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeData();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@<kE[$AQb~X:f~t7A%");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeAttributeQuoted(false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("aYem");
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consume();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0, 2296);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((Reader) null, 38);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BATQOQe5Onh+");
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0, (-3326));
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q");
      stringReader0.close();
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      boolean boolean0 = characterReader0.isEmpty();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      boolean boolean0 = characterReader0.isEmpty();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.isEmpty();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Bm");
      characterReader0.trackNewlines(true);
      int int0 = characterReader0.columnNumber(0);
      assertTrue(characterReader0.isTrackNewlines());
}
 @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Bm");
      characterReader0.trackNewlines(true);
      int int0 = characterReader0.columnNumber(0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.trackNewlines(true);
      int int0 = characterReader0.lineNumber(2);
      assertTrue(characterReader0.isTrackNewlines());
}
 @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.trackNewlines(true);
      int int0 = characterReader0.lineNumber(2);
      ;
}
 @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      int int0 = characterReader0.lineNumber((-502));
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C+jjXfIn");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.isTrackNewlines();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.trackNewlines(true);
      boolean boolean0 = characterReader0.isTrackNewlines();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      char[] charArray0 = new char[12];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 8, 8, "zzPCb:=(");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("}bZ<_==/Yu/XH:p");
      characterReader0.consumeAttributeQuoted(true);
      characterReader0.unconsume();
      characterReader0.consumeTagName();
      characterReader0.unconsume();
      characterReader0.consumeTo('z');
      ;
}
 @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vh%ua=");
      String string0 = characterReader0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A^");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.containsIgnoreCase("A^");
      characterReader0.consumeRawData();
      boolean boolean0 = characterReader0.containsIgnoreCase("A^");
      ;
}
 @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A^");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.containsIgnoreCase("A^");
      characterReader0.consumeRawData();
      boolean boolean0 = characterReader0.containsIgnoreCase("A^");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A^");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeRawData();
      characterReader0.containsIgnoreCase("A^");
      boolean boolean0 = characterReader0.containsIgnoreCase("A^");
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A^");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeRawData();
      characterReader0.containsIgnoreCase("A^");
      boolean boolean0 = characterReader0.containsIgnoreCase("A^");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("}bZ<_==/Yu/XH:p");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("H3-");
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("}bZ<_==/Yu/XH:p");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("H3-");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("&-H");
      boolean boolean0 = characterReader0.matchesDigit();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("&-H");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("}bZ<_==/Yu/XH:p");
      characterReader0.consumeAttributeQuoted(true);
      characterReader0.matchesDigit();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("}bZ<_==/Yu/XH:p");
      boolean boolean0 = characterReader0.matchesAsciiAlpha();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A^");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesAsciiAlpha();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@<kE[$AQb~X:f~t7A%");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesAsciiAlpha();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@<kE[$AQb~X:f~t7A%");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesAsciiAlpha();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vh%ua=");
      characterReader0.consumeAttributeQuoted(true);
      boolean boolean0 = characterReader0.matchesAsciiAlpha();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vh%ua=");
      characterReader0.consumeAttributeQuoted(true);
      boolean boolean0 = characterReader0.matchesAsciiAlpha();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("}ZVd");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consumeLetterSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consumeLetterSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consumeAttributeQuoted(true);
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consumeAttributeQuoted(true);
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5<");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0, 1, 1);
      characterReader0.consumeToEnd();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5<");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0, 1, 1);
      characterReader0.consumeToEnd();
      characterReader0.unconsume();
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("5<");
      char[] charArray0 = new char[2];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("5<");
      char[] charArray0 = new char[2];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("YZ].[@<{1qaB8<Ub");
      characterReader0.consumeData();
      char[] charArray0 = new char[3];
      characterReader0.consumeTo("YZ].[@<{1qaB8<Ub");
      characterReader0.matchesAnySorted(charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      char[] charArray0 = new char[22];
      charArray0[0] = 'M';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      boolean boolean0 = characterReader0.matchesIgnoreCase("Mark invalid");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("R'KcvZC.$3(-o ");
      boolean boolean0 = characterReader0.matches("Hzx");
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("R'KcvZC.$3(-o ");
      boolean boolean0 = characterReader0.matches("Hzx");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("@<kE[$AQb~X:f~t7A%");
      characterReader0.advance();
      characterReader0.consume();
      characterReader0.unconsume();
      boolean boolean0 = characterReader0.matches('<');
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("@<kE[$AQb~X:f~t7A%");
      characterReader0.advance();
      characterReader0.consume();
      characterReader0.unconsume();
      boolean boolean0 = characterReader0.matches('<');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#usA be_false");
      boolean boolean0 = characterReader0.matches('A');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#usA be_false");
      boolean boolean0 = characterReader0.matches('A');
      ;
}
 @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.matches('a');
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("&-H");
      String string0 = characterReader0.consumeDigitSequence();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StringReader stringReader0 = new StringReader("67fK6R=6{AC\"");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeHexSequence();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-iG(l4&m#!D8");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo("Qlc");
      characterReader0.consumeHexSequence();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("#usA be_false");
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("}ZVd");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("R'KcvZC.$3(-o ");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeData();
      ;
}
 @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("e{?zU*e=F}e5j-AON");
      characterReader0.consumeLetterSequence();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consumeLetterSequence();
      boolean boolean0 = characterReader0.matchesIgnoreCase("Mark invalid");
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consumeLetterSequence();
      boolean boolean0 = characterReader0.matchesIgnoreCase("Mark invalid");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consumeAttributeQuoted(true);
      characterReader0.consumeLetterSequence();
      ;
}
 @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m@S0wPj#>8m,c_");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("5<");
      String string0 = characterReader0.consumeTagName();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("5<");
      String string0 = characterReader0.consumeTagName();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("81=//NLxn;)?E");
      characterReader0.consumeTagName();
      ;
}
 @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consumeTagName();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("5<");
      characterReader0.matchConsume("5<");
      characterReader0.consumeTagName();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@<kE[$AQb~X:f~t7A%");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeRawData();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("The parameter '%s' must not be null.");
      characterReader0.consumeAttributeQuoted(false);
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      StringReader stringReader0 = new StringReader("R'KcvZC.$3(-o ");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeAttributeQuoted(true);
      ;
}
 @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[&=`gsoG03bb.=t");
      characterReader0.consumeAttributeQuoted(false);
      char[] charArray0 = new char[1];
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<az=N,2\"QwfK6h_on");
      characterReader0.consumeAttributeQuoted(true);
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-iG(l4&m#!D8");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      characterReader0.consumeTo("Qlc");
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[&=`gsoG03bb.=t");
      char[] charArray0 = new char[1];
      charArray0[0] = 'g';
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vh%ua=");
      characterReader0.consumeTo("M[QZp}");
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3PnZD~p/&");
      String string0 = characterReader0.consumeTo("3PnZD~p/&");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3PnZD~p/&");
      String string0 = characterReader0.consumeTo("3PnZD~p/&");
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vh%ua=");
      boolean boolean0 = characterReader0.containsIgnoreCase("vh%ua=");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("vh%ua=");
      boolean boolean0 = characterReader0.containsIgnoreCase("vh%ua=");
      boolean boolean1 = characterReader0.containsIgnoreCase("vh%ua=");
      assertFalse(boolean1);
}
 @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@<kE[$AQb~X:f~t7A%");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.containsIgnoreCase("@<kE[$AQb~X:f~t7A%");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      boolean boolean0 = characterReader0.containsIgnoreCase("vh%ua=");
      assertFalse(boolean0);
}
 @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consumeTo('M');
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@<kE[$AQb~X:f~t7A%");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.rewindToMark();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Mark invalid
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("YZ].[@<{1qaB8<Ub");
      characterReader0.mark();
      characterReader0.rewindToMark();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.unconsume();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: WTF: No buffer left to unconsume.
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char char0 = characterReader0.current();
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consume();
      characterReader0.toString();
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      char char0 = characterReader0.current();
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("YZ].[@<{1qaB8<Ub");
      boolean boolean0 = characterReader0.matchesDigit();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("YZ].[@<{1qaB8<Ub");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.trackNewlines(true);
      int int0 = characterReader0.columnNumber();
      ;
}
 @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.trackNewlines(true);
      int int0 = characterReader0.columnNumber();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("The '%s' parameter must not be empty.");
      characterReader0.trackNewlines(true);
      characterReader0.trackNewlines(true);
      assertTrue(characterReader0.isTrackNewlines());
}
 @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.trackNewlines(true);
      int int0 = characterReader0.lineNumber();
      assertTrue(characterReader0.isTrackNewlines());
}
 @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.trackNewlines(true);
      int int0 = characterReader0.lineNumber();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jP2U&/ 0z1o OK^H_<A");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.trackNewlines(false);
      assertEquals(0, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("The '%s' parameter must not be empty.");
      characterReader0.mark();
      characterReader0.matchConsume("The '%s' parameter must not be empty.");
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3PnZD~p/&");
      char[] charArray0 = new char[1];
      characterReader0.consumeToAny(charArray0);
      boolean boolean0 = characterReader0.matchConsume("3PnZD~p/&");
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3PnZD~p/&");
      char[] charArray0 = new char[1];
      characterReader0.consumeToAny(charArray0);
      boolean boolean0 = characterReader0.matchConsume("3PnZD~p/&");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3PnZD~p/&");
      characterReader0.close();
      characterReader0.close();
      ;
}
 @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterSequence();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.rangeEquals(361, 361, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.unmark();
      assertTrue(characterReader0.isTrackNewlines());
}
 @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.advance();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
}
 @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((Reader) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      String string0 = characterReader0.cursorPos();
      ;
}
