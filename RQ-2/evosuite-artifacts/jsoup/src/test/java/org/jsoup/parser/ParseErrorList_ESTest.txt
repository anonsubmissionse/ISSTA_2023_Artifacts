 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ParseErrorList parseErrorList0 = ParseErrorList.tracking((-3659));
      boolean boolean0 = parseErrorList0.canAddError();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ParseErrorList parseErrorList0 = new ParseErrorList(113, 113);
      int int0 = parseErrorList0.getMaxSize();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ParseErrorList parseErrorList0 = ParseErrorList.tracking((-1342));
      int int0 = parseErrorList0.getMaxSize();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ParseErrorList parseErrorList0 = null;
      try {
        parseErrorList0 = new ParseErrorList((ParseErrorList) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseErrorList", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ParseErrorList parseErrorList0 = null;
      try {
        parseErrorList0 = new ParseErrorList((-2), (-1));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2
         //
         verifyException("java.util.ArrayList", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ParseErrorList parseErrorList0 = new ParseErrorList(113, 113);
      boolean boolean0 = parseErrorList0.canAddError();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      boolean boolean0 = parseErrorList0.canAddError();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      Object object0 = parseErrorList0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      int int0 = parseErrorList0.getMaxSize();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      ParseErrorList parseErrorList1 = new ParseErrorList(parseErrorList0);
      assertTrue(parseErrorList1.isEmpty());
}
