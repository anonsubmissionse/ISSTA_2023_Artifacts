 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      boolean boolean0 = parseSettings0.preserveTagCase();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      boolean boolean0 = parseSettings0.preserveAttributeCase();
      assertFalse(parseSettings0.preserveTagCase());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      boolean boolean0 = parseSettings0.preserveAttributeCase();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      String string0 = parseSettings0.normalizeTag("Pattern syntax error: ");
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      String string0 = parseSettings0.normalizeTag("Pattern syntax error: ");
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Attributes attributes0 = new Attributes();
      attributes0.add("B,Nmtqw1898fi:>.", "f)a^5ps_=ry$<ud2");
      Attributes attributes1 = parseSettings0.normalizeAttributes(attributes0);
      assertEquals(0, attributes1.size());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String string0 = ParseSettings.normalName("");
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      // Undeclared exception!
      try { 
        parseSettings0.normalizeTag((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      // Undeclared exception!
      try { 
        parseSettings0.normalizeAttribute((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try { 
        ParseSettings.normalName((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParseSettings parseSettings0 = null;
      try {
        parseSettings0 = new ParseSettings((ParseSettings) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = parseSettings0.normalizeAttributes(attributes0);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Attributes attributes0 = parseSettings0.normalizeAttributes((Attributes) null);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      String string0 = parseSettings0.htmlDefault.normalizeAttribute("Pattern syntax error:");
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      String string0 = parseSettings0.htmlDefault.normalizeAttribute("Pattern syntax error:");
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      String string0 = parseSettings0.htmlDefault.normalizeAttribute("Pattern syntax error:");
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      String string0 = parseSettings0.normalizeAttribute("");
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      String string0 = parseSettings0.normalizeTag("");
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = ParseSettings.normalName("8'g~WKAB?UA");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      ParseSettings parseSettings1 = new ParseSettings(parseSettings0);
      assertFalse(parseSettings1.preserveAttributeCase());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      ParseSettings parseSettings1 = new ParseSettings(parseSettings0);
      assertFalse(parseSettings1.preserveTagCase());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      boolean boolean0 = parseSettings0.preserveAttributeCase();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      boolean boolean0 = parseSettings0.preserveTagCase();
      assertTrue(boolean0);
}
