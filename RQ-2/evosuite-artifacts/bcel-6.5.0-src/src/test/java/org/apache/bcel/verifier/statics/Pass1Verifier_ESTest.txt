 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Verifier verifier0 = mock(Verifier.class, new ViolatedAssumptionAnswer());
      doReturn("u^gUKEUm", "u^gUKEUm", "u^gUKEUm", "u^gUKEUm", "u^gUKEUm").when(verifier0).getClassName();
      JavaClass javaClass0 = mock(JavaClass.class, new ViolatedAssumptionAnswer());
      doReturn("u^gYKEUm", "u^gUKEUm", "u^gYKEUm", "u^gUKEUm", "u^gUKEUm").when(javaClass0).getClassName();
      doReturn("u^gUKEUm", "u^gUKEUm", "u^gUKEUm").when(javaClass0).toString();
      Repository repository0 = mock(Repository.class, new ViolatedAssumptionAnswer());
      doReturn(javaClass0).when(repository0).loadClass(anyString());
      org.apache.bcel.Repository.setRepository(repository0);
      Pass1Verifier pass1Verifier0 = new Pass1Verifier(verifier0);
      pass1Verifier0.getMessages();
      VerificationResult verificationResult0 = pass1Verifier0.do_verify();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Verifier verifier0 = mock(Verifier.class, new ViolatedAssumptionAnswer());
      doReturn("u^gUKEUm", "u^gUKEUm", "u^gUKEUm", "u^gUKEUm", "u^gUKEUm").when(verifier0).getClassName();
      JavaClass javaClass0 = mock(JavaClass.class, new ViolatedAssumptionAnswer());
      doReturn("u^gYKEUm", "u^gUKEUm", "u^gYKEUm", "u^gUKEUm", "u^gUKEUm").when(javaClass0).getClassName();
      doReturn("u^gUKEUm", "u^gUKEUm", "u^gUKEUm").when(javaClass0).toString();
      Repository repository0 = mock(Repository.class, new ViolatedAssumptionAnswer());
      doReturn(javaClass0).when(repository0).loadClass(anyString());
      org.apache.bcel.Repository.setRepository(repository0);
      Pass1Verifier pass1Verifier0 = new Pass1Verifier(verifier0);
      pass1Verifier0.getMessages();
      VerificationResult verificationResult0 = pass1Verifier0.do_verify();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Verifier verifier0 = mock(Verifier.class, new ViolatedAssumptionAnswer());
      doReturn("u^gUKEUm", "u^gUKEUm", "u^gUKEUm", "u^gUKEUm", "u^gUKEUm").when(verifier0).getClassName();
      JavaClass javaClass0 = mock(JavaClass.class, new ViolatedAssumptionAnswer());
      doReturn("u^gYKEUm", "u^gUKEUm", "u^gYKEUm", "u^gUKEUm", "u^gUKEUm").when(javaClass0).getClassName();
      doReturn("u^gUKEUm", "u^gUKEUm", "u^gUKEUm").when(javaClass0).toString();
      Repository repository0 = mock(Repository.class, new ViolatedAssumptionAnswer());
      doReturn(javaClass0).when(repository0).loadClass(anyString());
      org.apache.bcel.Repository.setRepository(repository0);
      Pass1Verifier pass1Verifier0 = new Pass1Verifier(verifier0);
      pass1Verifier0.getMessages();
      VerificationResult verificationResult0 = pass1Verifier0.do_verify();
      VerificationResult verificationResult1 = pass1Verifier0.do_verify();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Verifier verifier0 = mock(Verifier.class, new ViolatedAssumptionAnswer());
      doReturn("/Qo").when(verifier0).getClassName();
      Pass1Verifier pass1Verifier0 = new Pass1Verifier(verifier0);
      VerificationResult verificationResult0 = pass1Verifier0.do_verify();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Verifier verifier0 = mock(Verifier.class, new ViolatedAssumptionAnswer());
      doReturn("/Qo").when(verifier0).getClassName();
      Pass1Verifier pass1Verifier0 = new Pass1Verifier(verifier0);
      VerificationResult verificationResult0 = pass1Verifier0.do_verify();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Verifier verifier0 = mock(Verifier.class, new ViolatedAssumptionAnswer());
      doReturn("org.apache.bcel.verifier.statics.Pass3aVerifier", "org.apache.bcel.verifier.statics.Pass3aVerifier", (String) null).when(verifier0).getClassName();
      Pass1Verifier pass1Verifier0 = new Pass1Verifier(verifier0);
      VerificationResult verificationResult0 = pass1Verifier0.verify();
      assertEquals(0, verificationResult0.getStatus());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Verifier verifier0 = mock(Verifier.class, new ViolatedAssumptionAnswer());
      doReturn("org.apache.bcel.verifier.statics.Pass3aVerifier", "org.apache.bcel.verifier.statics.Pass3aVerifier", (String) null).when(verifier0).getClassName();
      Pass1Verifier pass1Verifier0 = new Pass1Verifier(verifier0);
      VerificationResult verificationResult0 = pass1Verifier0.verify();
      VerificationResult verificationResult1 = pass1Verifier0.do_verify();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Verifier verifier0 = mock(Verifier.class, new ViolatedAssumptionAnswer());
      doReturn("org.apache.bcel.verifier.statics.Pass3aVerifier", "org.apache.bcel.verifier.statics.Pass3aVerifier", (String) null).when(verifier0).getClassName();
      Pass1Verifier pass1Verifier0 = new Pass1Verifier(verifier0);
      VerificationResult verificationResult0 = pass1Verifier0.verify();
      VerificationResult verificationResult1 = pass1Verifier0.do_verify();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Pass1Verifier pass1Verifier0 = new Pass1Verifier((Verifier) null);
      pass1Verifier0.addMessage("");
      String[] stringArray0 = pass1Verifier0.getMessages();
      ;
}
