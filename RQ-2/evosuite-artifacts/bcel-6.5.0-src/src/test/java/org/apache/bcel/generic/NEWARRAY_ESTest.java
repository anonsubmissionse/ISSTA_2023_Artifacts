/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 22:46:50 GMT 2022
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import org.apache.bcel.generic.BasicType;
import org.apache.bcel.generic.NEWARRAY;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.verifier.structurals.ExecutionVisitor;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NEWARRAY_ESTest extends NEWARRAY_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BasicType basicType0 = Type.FLOAT;
      NEWARRAY nEWARRAY0 = new NEWARRAY(basicType0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      nEWARRAY0.dump(dataOutputStream0);
      assertNotNull(byteArrayOutputStream0.toString());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BasicType basicType0 = Type.BYTE;
      NEWARRAY nEWARRAY0 = new NEWARRAY(basicType0);
      ExecutionVisitor executionVisitor0 = new ExecutionVisitor();
      // Undeclared exception!
      try { 
        nEWARRAY0.accept(executionVisitor0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.ExecutionVisitor", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NEWARRAY nEWARRAY0 = new NEWARRAY();
      byte byte0 = nEWARRAY0.getTypecode();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NEWARRAY nEWARRAY0 = new NEWARRAY((byte) (-51));
      byte byte0 = nEWARRAY0.getTypecode();
      assertNotNull(byte0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BasicType basicType0 = Type.CHAR;
      NEWARRAY nEWARRAY0 = new NEWARRAY(basicType0);
      Type type0 = nEWARRAY0.getType();
      assertNotNull(type0.getSignature());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NEWARRAY nEWARRAY0 = new NEWARRAY((byte) (-51));
      // Undeclared exception!
      try { 
        nEWARRAY0.initFromFile((ByteSequence) null, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.NEWARRAY", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NEWARRAY nEWARRAY0 = new NEWARRAY();
      byte[] byteArray0 = new byte[1];
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      nEWARRAY0.initFromFile(byteSequence0, true);
      try { 
        nEWARRAY0.initFromFile(byteSequence0, true);
        fail("Expecting exception: EOFException");
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BasicType basicType0 = Type.SHORT;
      NEWARRAY nEWARRAY0 = new NEWARRAY(basicType0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        nEWARRAY0.dump(dataOutputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NEWARRAY nEWARRAY0 = null;
      try {
        nEWARRAY0 = new NEWARRAY((BasicType) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.NEWARRAY", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      NEWARRAY nEWARRAY0 = new NEWARRAY((byte) (-94));
      // Undeclared exception!
      try { 
        nEWARRAY0.toString(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -94
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BasicType basicType0 = Type.SHORT;
      NEWARRAY nEWARRAY0 = new NEWARRAY(basicType0);
      String string0 = nEWARRAY0.toString(true);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BasicType basicType0 = Type.SHORT;
      NEWARRAY nEWARRAY0 = new NEWARRAY(basicType0);
      String string0 = nEWARRAY0.toString(true);
      assertNotNull(nEWARRAY0.getTypecode());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BasicType basicType0 = Type.VOID;
      NEWARRAY nEWARRAY0 = new NEWARRAY(basicType0);
      byte byte0 = nEWARRAY0.getTypecode();
      assertNotNull(byte0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NEWARRAY nEWARRAY0 = new NEWARRAY();
      Class<?>[] classArray0 = nEWARRAY0.getExceptions();
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BasicType basicType0 = Type.VOID;
      NEWARRAY nEWARRAY0 = new NEWARRAY(basicType0);
      // Undeclared exception!
      try { 
        nEWARRAY0.getType();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Invalid type: void[]
         //
         verifyException("org.apache.bcel.generic.ArrayType", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NEWARRAY nEWARRAY0 = new NEWARRAY();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        nEWARRAY0.accept(instConstraintVisitor0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NEWARRAY nEWARRAY0 = new NEWARRAY();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        nEWARRAY0.dump(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }
}
