/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 22:39:48 GMT 2022
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MemorySensitiveClassPathRepository_ESTest extends MemorySensitiveClassPathRepository_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository((ClassPath) null);
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      memorySensitiveClassPathRepository0.removeClass(javaClass0);
      assertFalse(javaClass0.isStatic());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      JavaClass javaClass0 = classLoaderRepository0.loadClass("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      javaClass0.isEnum(true);
      javaClass0.setClassName((String) null);
      memorySensitiveClassPathRepository0.storeClass(javaClass0);
      JavaClass javaClass1 = memorySensitiveClassPathRepository0.findClass((String) null);
      assertTrue(javaClass1.isNative());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      JavaClass javaClass0 = classLoaderRepository0.loadClass("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      javaClass0.setModifiers(1023);
      memorySensitiveClassPathRepository0.storeClass(javaClass0);
      JavaClass javaClass1 = memorySensitiveClassPathRepository0.findClass("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      assertTrue(javaClass1.isAnnotation());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      JavaClass javaClass0 = classLoaderRepository0.loadClass("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      javaClass0.setClassName((String) null);
      javaClass0.setClassNameIndex(0);
      memorySensitiveClassPathRepository0.storeClass(javaClass0);
      JavaClass javaClass1 = memorySensitiveClassPathRepository0.findClass((String) null);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      JavaClass javaClass0 = classLoaderRepository0.loadClass("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      javaClass0.setClassNameIndex((-27));
      memorySensitiveClassPathRepository0.storeClass(javaClass0);
      JavaClass javaClass1 = memorySensitiveClassPathRepository0.findClass("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      assertFalse(javaClass1.isSynthetic());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      JavaClass javaClass0 = classLoaderRepository0.loadClass("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      javaClass0.setModifiers(0);
      memorySensitiveClassPathRepository0.storeClass(javaClass0);
      JavaClass javaClass1 = memorySensitiveClassPathRepository0.findClass("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      assertFalse(javaClass1.isStatic());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath0);
      // Undeclared exception!
      try { 
        syntheticRepository0.storeClass((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      JavaClass javaClass0 = memorySensitiveClassPathRepository0.findClass((String) null);
      assertNotNull(javaClass0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      memorySensitiveClassPathRepository0.clear();
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      // Undeclared exception!
      try { 
        syntheticRepository0.removeClass((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }
}
