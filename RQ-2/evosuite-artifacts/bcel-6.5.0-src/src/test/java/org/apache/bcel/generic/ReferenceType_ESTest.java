/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 20:48:50 GMT 2022
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.Repository;
import org.apache.bcel.generic.ArrayType;
import org.apache.bcel.generic.BasicType;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.ReferenceType;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.LruCacheClassPathRepository;
import org.apache.bcel.verifier.structurals.UninitializedObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReferenceType_ESTest extends ReferenceType_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReferenceType referenceType0 = Type.NULL;
      ArrayType arrayType0 = new ArrayType(referenceType0, 27);
      ArrayType arrayType1 = new ArrayType(arrayType0, 27);
      ObjectType objectType0 = (ObjectType)arrayType1.getFirstCommonSuperclass(arrayType0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("1^-SCct_=\" E");
      ArrayType arrayType0 = new ArrayType(objectType0, 1);
      ReferenceType referenceType0 = ((Type) ((org.apache.bcel.generic.Type) arrayType0).STRING).NULL.getFirstCommonSuperclass((ReferenceType) null);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("org.apache.bcel.generic.ReferenceType");
      ReferenceType referenceType0 = objectType0.NULL.firstCommonSuperclass((ReferenceType) null);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReferenceType referenceType0 = Type.NULL;
      ArrayType arrayType0 = new ArrayType(referenceType0, 143);
      // Undeclared exception!
      arrayType0.isCastableTo(arrayType0);
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("");
      ArrayType arrayType0 = new ArrayType(objectType0, 3);
      // Undeclared exception!
      try { 
        objectType0.isCastableTo(arrayType0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("9O}au~bMRg.hWr");
      try { 
        objectType0.isCastableTo(objectType0);
        fail("Expecting exception: ClassNotFoundException");
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class 9O}au~bMRg.hWr: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: 9O}au~bMRg/hWr.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ReferenceType referenceType0 = Type.NULL;
      ArrayType arrayType0 = new ArrayType(referenceType0, 215);
      ArrayType arrayType1 = new ArrayType(arrayType0, 215);
      // Undeclared exception!
      try { 
        arrayType1.isAssignmentCompatibleWith(arrayType0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Invalid number of dimensions: 429
         //
         verifyException("org.apache.bcel.generic.ArrayType", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("StackMap", 250);
      // Undeclared exception!
      arrayType0.isAssignmentCompatibleWith(arrayType0);
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("");
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      // Undeclared exception!
      try { 
        objectType0.isAssignmentCompatibleWith(uninitializedObjectType0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("StackMap", 250);
      Type type0 = Type.getReturnType("()LStackMap;");
      try { 
        ((Type) ((org.apache.bcel.generic.Type) arrayType0).THROWABLE).STRING.isAssignmentCompatibleWith(type0);
        fail("Expecting exception: ClassNotFoundException");
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class StackMap: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: StackMap.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      ArrayType arrayType0 = new ArrayType(objectType0, 1);
      ArrayType arrayType1 = new ArrayType(arrayType0.STRINGBUFFER, 1);
      ClassPath classPath0 = new ClassPath(" read ");
      LruCacheClassPathRepository lruCacheClassPathRepository0 = new LruCacheClassPathRepository(classPath0, 1);
      Repository.setRepository(lruCacheClassPathRepository0);
      // Undeclared exception!
      arrayType0.getFirstCommonSuperclass(arrayType1);
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectType objectType0 = Type.THROWABLE;
      // Undeclared exception!
      try { 
        objectType0.getFirstCommonSuperclass((ReferenceType) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.ReferenceType", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      ArrayType arrayType0 = new ArrayType(objectType0, 1);
      ArrayType arrayType1 = new ArrayType("", 1);
      // Undeclared exception!
      try { 
        arrayType0.getFirstCommonSuperclass(arrayType1);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("or.apache.bcel.generic.ReferenceType");
      ObjectType objectType1 = Type.CLASS;
      try { 
        objectType0.getFirstCommonSuperclass(objectType1);
        fail("Expecting exception: ClassNotFoundException");
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class or.apache.bcel.generic.ReferenceType: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: or/apache/bcel/generic/ReferenceType.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjectType objectType0 = Type.OBJECT;
      // Undeclared exception!
      try { 
        objectType0.firstCommonSuperclass((ReferenceType) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.ReferenceType", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjectType objectType0 = Type.OBJECT;
      ObjectType objectType1 = new ObjectType("16V WTX>D(W0+");
      try { 
        objectType0.firstCommonSuperclass(objectType1);
        fail("Expecting exception: ClassNotFoundException");
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class 16V WTX>D(W0+: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: 16V WTX>D(W0+.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectType objectType0 = Type.STRING;
      ReferenceType referenceType0 = objectType0.getFirstCommonSuperclass(objectType0.CLASS);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)4, (byte)4);
      boolean boolean0 = arrayType0.isAssignmentCompatibleWith(arrayType0);
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      ArrayType arrayType0 = new ArrayType("()", 1);
      boolean boolean0 = arrayType0.isAssignmentCompatibleWith(objectType0);
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)4, (byte)4);
      ObjectType objectType0 = ObjectType.getInstance("java.lang.Cloneable");
      boolean boolean0 = arrayType0.isAssignmentCompatibleWith(objectType0);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("tacMap", 213);
      boolean boolean0 = ((Type) ((org.apache.bcel.generic.Type) arrayType0).THROWABLE).STRING.isAssignmentCompatibleWith(arrayType0.STRINGBUFFER);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ObjectType objectType0 = Type.STRING;
      boolean boolean0 = objectType0.isAssignmentCompatibleWith(objectType0);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)4, (byte)4);
      ObjectType objectType0 = ObjectType.getInstance("java.lang.Cloneable");
      boolean boolean0 = ((Type) ((org.apache.bcel.generic.Type) arrayType0).BOOLEAN).THROWABLE.isAssignmentCompatibleWith(objectType0);
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BasicType basicType0 = Type.FLOAT;
      boolean boolean0 = ((Type) ((org.apache.bcel.generic.Type) basicType0).CLASS).NULL.isAssignmentCompatibleWith(basicType0.STRING);
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BasicType basicType0 = Type.FLOAT;
      boolean boolean0 = ((Type) ((org.apache.bcel.generic.Type) basicType0).THROWABLE).NULL.isAssignmentCompatibleWith(basicType0);
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)4, (byte)4);
      ObjectType objectType0 = ObjectType.getInstance("java.lang.Cloneable");
      ReferenceType referenceType0 = arrayType0.OBJECT.firstCommonSuperclass(objectType0);
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      // Undeclared exception!
      try { 
        objectType0.firstCommonSuperclass(uninitializedObjectType0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.bcel.verifier.structurals.UninitializedObjectType cannot be cast to org.apache.bcel.generic.ObjectType
         //
         verifyException("org.apache.bcel.generic.ReferenceType", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)4, (byte)4);
      ObjectType objectType0 = ObjectType.getInstance("java.lang.Cloneable");
      ReferenceType referenceType0 = objectType0.firstCommonSuperclass(arrayType0.THROWABLE);
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      // Undeclared exception!
      try { 
        uninitializedObjectType0.firstCommonSuperclass(objectType0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.bcel.verifier.structurals.UninitializedObjectType cannot be cast to org.apache.bcel.generic.ObjectType
         //
         verifyException("org.apache.bcel.generic.ReferenceType", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ObjectType objectType0 = Type.STRING;
      ArrayType arrayType0 = new ArrayType(objectType0, 32);
      ObjectType objectType1 = (ObjectType)objectType0.firstCommonSuperclass(arrayType0);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)4, (byte)4);
      ArrayType arrayType1 = new ArrayType(arrayType0, (byte)4);
      ReferenceType referenceType0 = arrayType0.firstCommonSuperclass(arrayType1);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ReferenceType referenceType0 = Type.NULL;
      ArrayType arrayType0 = new ArrayType(referenceType0, 52);
      ReferenceType referenceType1 = arrayType0.firstCommonSuperclass(referenceType0);
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)4, (byte)4);
      ObjectType objectType0 = ObjectType.getInstance("java.lang.Cloneable");
      ReferenceType referenceType0 = arrayType0.CLASS.getFirstCommonSuperclass(objectType0);
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BasicType basicType0 = Type.INT;
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(basicType0.OBJECT);
      // Undeclared exception!
      try { 
        basicType0.THROWABLE.getFirstCommonSuperclass(uninitializedObjectType0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.bcel.verifier.structurals.UninitializedObjectType cannot be cast to org.apache.bcel.generic.ObjectType
         //
         verifyException("org.apache.bcel.generic.ReferenceType", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("java.lang.Cloneable");
      ObjectType objectType1 = Type.OBJECT;
      ReferenceType referenceType0 = objectType0.getFirstCommonSuperclass(objectType1);
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BasicType basicType0 = Type.CHAR;
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(basicType0.OBJECT);
      // Undeclared exception!
      try { 
        uninitializedObjectType0.getFirstCommonSuperclass(basicType0.STRINGBUFFER);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.bcel.verifier.structurals.UninitializedObjectType cannot be cast to org.apache.bcel.generic.ObjectType
         //
         verifyException("org.apache.bcel.generic.ReferenceType", e);
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ReferenceType referenceType0 = Type.NULL;
      ArrayType arrayType0 = new ArrayType(referenceType0, 48);
      ArrayType arrayType1 = new ArrayType("()geu!Z./??", 48);
      ReferenceType referenceType1 = arrayType1.getFirstCommonSuperclass(arrayType0);
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ReferenceType referenceType0 = Type.NULL;
      ArrayType arrayType0 = new ArrayType(referenceType0, 23);
      ArrayType arrayType1 = new ArrayType("geu!Z./??", 23);
      ReferenceType referenceType1 = arrayType0.getFirstCommonSuperclass(arrayType1);
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ReferenceType referenceType0 = Type.NULL;
      ArrayType arrayType0 = new ArrayType(referenceType0, 27);
      ArrayType arrayType1 = new ArrayType(arrayType0, 27);
      ReferenceType referenceType1 = arrayType0.getFirstCommonSuperclass(arrayType1);
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ObjectType objectType0 = Type.STRING;
      ArrayType arrayType0 = new ArrayType(objectType0, 32);
      ArrayType arrayType1 = new ArrayType(arrayType0.STRINGBUFFER, 32);
      ReferenceType referenceType0 = arrayType0.getFirstCommonSuperclass(arrayType1);
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("tacMap", 213);
      ObjectType objectType0 = (ObjectType)arrayType0.getFirstCommonSuperclass(arrayType0.THROWABLE);
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("StackMap", 250);
      ReferenceType referenceType0 = ((Type) ((org.apache.bcel.generic.Type) arrayType0).OBJECT).STRING.firstCommonSuperclass(((Type) ((org.apache.bcel.generic.Type) arrayType0).OBJECT).CLASS);
      ;
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("StackMap", 250);
      ReferenceType referenceType0 = ((Type) ((org.apache.bcel.generic.Type) arrayType0).OBJECT).STRING.firstCommonSuperclass(((Type) ((org.apache.bcel.generic.Type) arrayType0).OBJECT).CLASS);
      ReferenceType referenceType1 = referenceType0.firstCommonSuperclass(((Type) ((org.apache.bcel.generic.Type) arrayType0).CLASS).OBJECT);
      ReferenceType referenceType2 = referenceType1.getFirstCommonSuperclass(referenceType0);
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("StackMap", 250);
      ReferenceType referenceType0 = ((Type) ((org.apache.bcel.generic.Type) arrayType0).OBJECT).STRING.firstCommonSuperclass(((Type) ((org.apache.bcel.generic.Type) arrayType0).OBJECT).CLASS);
      ReferenceType referenceType1 = referenceType0.firstCommonSuperclass(((Type) ((org.apache.bcel.generic.Type) arrayType0).CLASS).OBJECT);
      ReferenceType referenceType2 = referenceType1.getFirstCommonSuperclass(referenceType0);
      ;
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ReferenceType referenceType0 = Type.NULL;
      ArrayType arrayType0 = new ArrayType(referenceType0, 48);
      ReferenceType referenceType1 = arrayType0.STRING.getFirstCommonSuperclass(referenceType0);
      ;
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)4, (byte)4);
      ReferenceType referenceType0 = arrayType0.THROWABLE.getFirstCommonSuperclass(arrayType0);
      ;
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)4, (byte)4);
      ArrayType arrayType1 = new ArrayType(arrayType0, (byte)4);
      boolean boolean0 = arrayType1.isAssignmentCompatibleWith(arrayType0);
      ;
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)4, (byte)4);
      ArrayType arrayType1 = new ArrayType(arrayType0, (byte)4);
      boolean boolean0 = arrayType0.isCastableTo(arrayType1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)4, (byte)4);
      boolean boolean0 = arrayType0.isCastableTo(arrayType0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ObjectType objectType0 = Type.STRING;
      ArrayType arrayType0 = new ArrayType(objectType0, 32);
      boolean boolean0 = arrayType0.isAssignmentCompatibleWith(arrayType0.OBJECT);
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("java.lang.Cloneable");
      ObjectType objectType1 = Type.OBJECT;
      boolean boolean0 = objectType0.isAssignmentCompatibleWith(objectType1);
      ;
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)4, (byte)4);
      ObjectType objectType0 = ObjectType.getInstance("java.lang.Cloneable");
      boolean boolean0 = objectType0.isAssignmentCompatibleWith(arrayType0.STRING);
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)4, (byte)4);
      ObjectType objectType0 = ObjectType.getInstance("java.lang.Cloneable");
      boolean boolean0 = objectType0.isAssignmentCompatibleWith(arrayType0);
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("tacMap", 213);
      ReferenceType referenceType0 = ((Type) ((org.apache.bcel.generic.Type) arrayType0).OBJECT).OBJECT.firstCommonSuperclass(((Type) ((org.apache.bcel.generic.Type) arrayType0).OBJECT).STRING);
      boolean boolean0 = arrayType0.CLASS.isAssignmentCompatibleWith(referenceType0);
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("java.lang.Cloneable");
      boolean boolean0 = objectType0.isAssignmentCompatibleWith(objectType0);
      ;
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("StackMap", 250);
      boolean boolean0 = arrayType0.STRING.isAssignmentCompatibleWith(arrayType0);
      ;
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("StackMap", 250);
      boolean boolean0 = ((Type) ((org.apache.bcel.generic.Type) arrayType0).STRING).NULL.isCastableTo(arrayType0.CLASS);
      ;
}
}
