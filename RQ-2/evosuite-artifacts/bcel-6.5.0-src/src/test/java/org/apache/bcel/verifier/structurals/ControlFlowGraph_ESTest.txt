 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BasicType basicType0 = Type.CHAR;
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[2];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      MethodGen methodGen0 = new MethodGen(3226, basicType0, basicType0.NO_ARGS, stringArray0, "q~eVv]5:xI;rBI", "q~eVv]5:xI;rBI", instructionList0, (ConstantPoolGen) null);
      ControlFlowGraph controlFlowGraph0 = new ControlFlowGraph(methodGen0, false);
      // Undeclared exception!
      try { 
        controlFlowGraph0.isDead((InstructionHandle) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.Subroutines", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BasicType basicType0 = Type.FLOAT;
      byte[] byteArray0 = new byte[7];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      MethodGen methodGen0 = new MethodGen(0, basicType0, basicType0.NO_ARGS, (String[]) null, "`sn0V<D[9tae)", "`sn0V<D[9tae)", instructionList0, (ConstantPoolGen) null);
      ControlFlowGraph controlFlowGraph0 = new ControlFlowGraph(methodGen0, true);
      // Undeclared exception!
      try { 
        controlFlowGraph0.contextsOf((InstructionHandle[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.ControlFlowGraph", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ControlFlowGraph controlFlowGraph0 = null;
      try {
        controlFlowGraph0 = new ControlFlowGraph((MethodGen) null, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.Subroutines", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BasicType basicType0 = Type.CHAR;
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[2];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      MethodGen methodGen0 = new MethodGen(0, basicType0, basicType0.NO_ARGS, stringArray0, "q~eVv]5:xI;rBI", "q~eVv]5:xI;rBI", instructionList0, (ConstantPoolGen) null);
      InstructionHandle instructionHandle0 = instructionList0.getStart();
      JSR jSR0 = new JSR(instructionHandle0);
      instructionList0.insert(instructionHandle0, (BranchInstruction) jSR0);
      ControlFlowGraph controlFlowGraph0 = null;
      try {
        controlFlowGraph0 = new ControlFlowGraph(methodGen0, false);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.bcel.generic.NOP cannot be cast to org.apache.bcel.generic.ASTORE
         //
         verifyException("org.apache.bcel.verifier.structurals.Subroutines", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BasicType basicType0 = Type.CHAR;
      String[] stringArray0 = new String[0];
      InstructionList instructionList0 = new InstructionList();
      MethodGen methodGen0 = new MethodGen(0, basicType0, basicType0.NO_ARGS, stringArray0, "q~eVv]5:xI;rBI", "q~eVv]5:xI;rBI", instructionList0, (ConstantPoolGen) null);
      ControlFlowGraph controlFlowGraph0 = null;
      try {
        controlFlowGraph0 = new ControlFlowGraph(methodGen0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.bcel.verifier.structurals.Subroutines", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ControlFlowGraph controlFlowGraph0 = null;
      try {
        controlFlowGraph0 = new ControlFlowGraph((MethodGen) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.Subroutines", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BasicType basicType0 = Type.CHAR;
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[2];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      MethodGen methodGen0 = new MethodGen(0, basicType0, basicType0.NO_ARGS, stringArray0, "q~eVv]5:xI;rBI", "q~eVv]5:xI;rBI", instructionList0, (ConstantPoolGen) null);
      InstructionHandle instructionHandle0 = instructionList0.getStart();
      JSR jSR0 = new JSR(instructionHandle0);
      instructionList0.insert(instructionHandle0, (BranchInstruction) jSR0);
      ControlFlowGraph controlFlowGraph0 = null;
      try {
        controlFlowGraph0 = new ControlFlowGraph(methodGen0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.bcel.generic.NOP cannot be cast to org.apache.bcel.generic.ASTORE
         //
         verifyException("org.apache.bcel.verifier.structurals.Subroutines", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Constant[] constantArray0 = new Constant[1];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantPool0);
      ObjectType objectType0 = Type.STRINGBUFFER;
      InstructionList instructionList0 = new InstructionList();
      MethodGen methodGen0 = new MethodGen(2, objectType0, objectType0.NO_ARGS, (String[]) null, "\nInFrames: '", "\nInFrames: '", instructionList0, constantPoolGen0);
      ControlFlowGraph controlFlowGraph0 = null;
      try {
        controlFlowGraph0 = new ControlFlowGraph(methodGen0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.bcel.verifier.structurals.Subroutines", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      BasicType basicType0 = Type.INT;
      ICONST iCONST0 = (ICONST)InstructionConstants.ICONST_1;
      InstructionList instructionList0 = new InstructionList(iCONST0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      MethodGen methodGen0 = new MethodGen(2, basicType0, basicType0.NO_ARGS, (String[]) null, "", "", instructionList0, constantPoolGen0);
      ControlFlowGraph controlFlowGraph0 = new ControlFlowGraph(methodGen0, true);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList0);
      InstructionContext instructionContext0 = controlFlowGraph0.contextOf(instructionHandle0);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = aCONST_NULL0.getType(constantPoolGen0);
      Type[] typeArray0 = new Type[4];
      String[] stringArray0 = new String[4];
      byte[] byteArray0 = new byte[3];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      MethodGen methodGen0 = new MethodGen((-1153), type0, typeArray0, stringArray0, "", "cS", instructionList0, constantPoolGen0);
      ControlFlowGraph controlFlowGraph0 = new ControlFlowGraph(methodGen0);
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) aCONST_NULL0);
      // Undeclared exception!
      try { 
        controlFlowGraph0.contextOf(instructionHandle0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: InstructionContext requested for an InstructionHandle that's not known!
         //
         verifyException("org.apache.bcel.verifier.structurals.ControlFlowGraph", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BasicType basicType0 = Type.LONG;
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[2];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      MethodGen methodGen0 = new MethodGen((-15), basicType0, basicType0.NO_ARGS, stringArray0, "q~eVv]5:xI;rBI", "q~eVv]5:xI;rBI", instructionList0, (ConstantPoolGen) null);
      ControlFlowGraph controlFlowGraph0 = new ControlFlowGraph(methodGen0);
      ICONST iCONST0 = (ICONST)InstructionConstants.ICONST_4;
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) iCONST0);
      boolean boolean0 = controlFlowGraph0.isDead(instructionHandle0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BasicType basicType0 = Type.CHAR;
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[2];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      MethodGen methodGen0 = new MethodGen(0, basicType0, basicType0.NO_ARGS, stringArray0, "q~eVv]5:xI;rBI", "q~eVv]5:xI;rBI", instructionList0, (ConstantPoolGen) null);
      ControlFlowGraph controlFlowGraph0 = new ControlFlowGraph(methodGen0, true);
      InstructionHandle instructionHandle0 = instructionList0.findHandle(0);
      boolean boolean0 = controlFlowGraph0.isDead(instructionHandle0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BasicType basicType0 = Type.CHAR;
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[2];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      MethodGen methodGen0 = new MethodGen(0, basicType0, basicType0.NO_ARGS, stringArray0, "q~eVv]5:xI;rBI", "q~eVv]5:xI;rBI", instructionList0, (ConstantPoolGen) null);
      ControlFlowGraph controlFlowGraph0 = new ControlFlowGraph(methodGen0, true);
      InstructionHandle instructionHandle0 = instructionList0.findHandle(0);
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[5];
      instructionHandleArray0[0] = instructionHandle0;
      instructionHandleArray0[1] = instructionHandle0;
      instructionHandleArray0[2] = instructionHandle0;
      instructionHandleArray0[3] = instructionHandle0;
      instructionHandleArray0[4] = instructionHandle0;
      InstructionContext[] instructionContextArray0 = controlFlowGraph0.contextsOf(instructionHandleArray0);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BasicType basicType0 = Type.CHAR;
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[2];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      MethodGen methodGen0 = new MethodGen(0, basicType0, basicType0.NO_ARGS, stringArray0, "q~eVv]5:xI;rBI", "q~eVv]5:xI;rBI", instructionList0, (ConstantPoolGen) null);
      ControlFlowGraph controlFlowGraph0 = new ControlFlowGraph(methodGen0, true);
      InstructionHandle instructionHandle0 = instructionList0.findHandle(0);
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[5];
      instructionHandleArray0[0] = instructionHandle0;
      // Undeclared exception!
      try { 
        controlFlowGraph0.contextsOf(instructionHandleArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: InstructionContext requested for an InstructionHandle that's not known!
         //
         verifyException("org.apache.bcel.verifier.structurals.ControlFlowGraph", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BasicType basicType0 = Type.CHAR;
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[2];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      MethodGen methodGen0 = new MethodGen(0, basicType0, basicType0.NO_ARGS, stringArray0, "q~eVv]5:xI;rBI", "q~eVv]5:xI;rBI", instructionList0, (ConstantPoolGen) null);
      ControlFlowGraph controlFlowGraph0 = new ControlFlowGraph(methodGen0, true);
      InstructionContext[] instructionContextArray0 = controlFlowGraph0.getInstructionContexts();
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BasicType basicType0 = Type.CHAR;
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[2];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      MethodGen methodGen0 = new MethodGen(0, basicType0, basicType0.NO_ARGS, stringArray0, "q~eVv]5:xI;rBI", "q~eVv]5:xI;rBI", instructionList0, (ConstantPoolGen) null);
      ControlFlowGraph controlFlowGraph0 = new ControlFlowGraph(methodGen0);
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[0];
      InstructionContext[] instructionContextArray0 = controlFlowGraph0.contextsOf(instructionHandleArray0);
      ;
}
