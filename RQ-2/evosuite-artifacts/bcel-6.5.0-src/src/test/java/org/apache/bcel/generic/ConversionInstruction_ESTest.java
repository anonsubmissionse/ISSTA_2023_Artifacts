/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 22:10:12 GMT 2022
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.D2F;
import org.apache.bcel.generic.D2I;
import org.apache.bcel.generic.D2L;
import org.apache.bcel.generic.F2D;
import org.apache.bcel.generic.F2I;
import org.apache.bcel.generic.F2L;
import org.apache.bcel.generic.I2B;
import org.apache.bcel.generic.I2C;
import org.apache.bcel.generic.I2D;
import org.apache.bcel.generic.I2F;
import org.apache.bcel.generic.I2L;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.L2D;
import org.apache.bcel.generic.L2F;
import org.apache.bcel.generic.L2I;
import org.apache.bcel.generic.Type;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConversionInstruction_ESTest extends ConversionInstruction_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      I2F i2F0 = new I2F();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      i2F0.setOpcode((short)41);
      // Undeclared exception!
      try { 
        i2F0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Unknown type 41
         //
         verifyException("org.apache.bcel.generic.ConversionInstruction", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      I2C i2C0 = (I2C)InstructionConstants.I2C;
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = i2C0.getType(constantPoolGen0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      I2C i2C0 = new I2C();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = i2C0.getType(constantPoolGen0);
      assertNotNull(type0.getSignature());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      I2B i2B0 = new I2B();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = i2B0.getType(constantPoolGen0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      D2F d2F0 = new D2F();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = d2F0.getType(constantPoolGen0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      D2I d2I0 = new D2I();
      Type type0 = d2I0.getType(constantPoolGen0);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      F2D f2D0 = new F2D();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = f2D0.getType(constantPoolGen0);
      assertNotNull(type0.getSignature());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      F2L f2L0 = new F2L();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = f2L0.getType(constantPoolGen0);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      F2I f2I0 = new F2I();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = f2I0.getType(constantPoolGen0);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      L2D l2D0 = new L2D();
      Type type0 = l2D0.getType(constantPoolGen0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      L2F l2F0 = new L2F();
      Type type0 = l2F0.getType(constantPoolGen0);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      L2I l2I0 = new L2I();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = l2I0.getType(constantPoolGen0);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      I2D i2D0 = new I2D();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = i2D0.getType(constantPoolGen0);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      I2F i2F0 = new I2F();
      Type type0 = i2F0.getType(constantPoolGen0);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      D2L d2L0 = new D2L();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = d2L0.getType(constantPoolGen0);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      I2L i2L0 = new I2L();
      Type type0 = i2L0.getType(constantPoolGen0);
      ;
}
}
