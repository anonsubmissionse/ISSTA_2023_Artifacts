 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ParameterAnnotationEntry[] parameterAnnotationEntryArray0 = new ParameterAnnotationEntry[1];
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      RuntimeVisibleParameterAnnotations runtimeVisibleParameterAnnotations0 = new RuntimeVisibleParameterAnnotations(1, 1, dataInputStream0, (ConstantPool) null);
      runtimeVisibleParameterAnnotations0.setParameterAnnotationTable(parameterAnnotationEntryArray0);
      ParameterAnnotationEntry[] parameterAnnotationEntryArray1 = runtimeVisibleParameterAnnotations0.getParameterAnnotationTable();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ParameterAnnotationEntry[] parameterAnnotationEntryArray0 = new ParameterAnnotationEntry[1];
      byte[] byteArray0 = new byte[19];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      RuntimeVisibleParameterAnnotations runtimeVisibleParameterAnnotations0 = new RuntimeVisibleParameterAnnotations(1, 1, dataInputStream0, (ConstantPool) null);
      runtimeVisibleParameterAnnotations0.setParameterAnnotationTable(parameterAnnotationEntryArray0);
      ParameterAnnotationEntry[] parameterAnnotationEntryArray1 = runtimeVisibleParameterAnnotations0.getParameterAnnotationEntries();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Constant[] constantArray0 = new Constant[1];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      RuntimeInvisibleParameterAnnotations runtimeInvisibleParameterAnnotations0 = new RuntimeInvisibleParameterAnnotations((byte)0, (byte)0, dataInputStream0, constantPool0);
      Attribute attribute0 = runtimeInvisibleParameterAnnotations0.copy(constantPool0);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Constant[] constantArray0 = new Constant[1];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      RuntimeInvisibleParameterAnnotations runtimeInvisibleParameterAnnotations0 = new RuntimeInvisibleParameterAnnotations((-1750), (byte)0, dataInputStream0, constantPool0);
      Attribute attribute0 = runtimeInvisibleParameterAnnotations0.copy(constantPool0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      RuntimeVisibleParameterAnnotations runtimeVisibleParameterAnnotations0 = new RuntimeVisibleParameterAnnotations((-22), (-22), dataInputStream0, (ConstantPool) null);
      Attribute attribute0 = runtimeVisibleParameterAnnotations0.copy((ConstantPool) null);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      RuntimeVisibleParameterAnnotations runtimeVisibleParameterAnnotations0 = new RuntimeVisibleParameterAnnotations(1, 1, dataInputStream0, (ConstantPool) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("5$7XxMzFdMA2!Z");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      try { 
        runtimeVisibleParameterAnnotations0.dump(dataOutputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      RuntimeVisibleParameterAnnotations runtimeVisibleParameterAnnotations0 = new RuntimeVisibleParameterAnnotations(1, 1, dataInputStream0, (ConstantPool) null);
      MockFile mockFile0 = new MockFile(",Q66^t%/3[\"SC5bz(G");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(objectOutputStream0);
      runtimeVisibleParameterAnnotations0.dump(dataOutputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      RuntimeVisibleParameterAnnotations runtimeVisibleParameterAnnotations0 = null;
      try {
        runtimeVisibleParameterAnnotations0 = new RuntimeVisibleParameterAnnotations((-12), (-12), dataInputStream0, (ConstantPool) null);
        fail("Expecting exception: EOFException");
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      RuntimeVisibleParameterAnnotations runtimeVisibleParameterAnnotations0 = new RuntimeVisibleParameterAnnotations(1, 1, dataInputStream0, (ConstantPool) null);
      ParameterAnnotationEntry[] parameterAnnotationEntryArray0 = runtimeVisibleParameterAnnotations0.getParameterAnnotationEntries();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      RuntimeVisibleParameterAnnotations runtimeVisibleParameterAnnotations0 = new RuntimeVisibleParameterAnnotations(1, 1, dataInputStream0, (ConstantPool) null);
      ParameterAnnotationEntry[] parameterAnnotationEntryArray0 = runtimeVisibleParameterAnnotations0.getParameterAnnotationTable();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      RuntimeVisibleParameterAnnotations runtimeVisibleParameterAnnotations0 = new RuntimeVisibleParameterAnnotations(1, 1, dataInputStream0, (ConstantPool) null);
      runtimeVisibleParameterAnnotations0.copy((ConstantPool) null);
      assertEquals(0, byteArrayInputStream0.available());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParameterAnnotationEntry[] parameterAnnotationEntryArray0 = new ParameterAnnotationEntry[1];
      byte[] byteArray0 = new byte[19];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      RuntimeVisibleParameterAnnotations runtimeVisibleParameterAnnotations0 = new RuntimeVisibleParameterAnnotations(1, 1, dataInputStream0, (ConstantPool) null);
      runtimeVisibleParameterAnnotations0.setParameterAnnotationTable(parameterAnnotationEntryArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        runtimeVisibleParameterAnnotations0.dump(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.ParameterAnnotations", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      RuntimeVisibleParameterAnnotations runtimeVisibleParameterAnnotations0 = new RuntimeVisibleParameterAnnotations(1, 1, dataInputStream0, (ConstantPool) null);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<BufferedInputStream> class0 = BufferedInputStream.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      EmptyVisitor emptyVisitor0 = new EmptyVisitor();
      DescendingVisitor descendingVisitor0 = new DescendingVisitor(javaClass0, emptyVisitor0);
      runtimeVisibleParameterAnnotations0.accept(descendingVisitor0);
      assertEquals(1, byteArrayInputStream0.available());
}
