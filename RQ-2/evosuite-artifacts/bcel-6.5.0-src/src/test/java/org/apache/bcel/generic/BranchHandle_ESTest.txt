 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IFGT iFGT0 = new IFGT();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(iFGT0);
      BranchHandle branchHandle1 = BranchHandle.getBranchHandle(iFGT0);
      InstructionHandle instructionHandle0 = branchHandle1.setPrev(branchHandle0);
      // Undeclared exception!
      try { 
        branchHandle0.updateTarget(instructionHandle0, branchHandle1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IF_ICMPLE iF_ICMPLE0 = new IF_ICMPLE();
      IfInstruction ifInstruction0 = iF_ICMPLE0.negate();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(ifInstruction0);
      branchHandle0.updateTarget((InstructionHandle) null, (InstructionHandle) null);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(tABLESWITCH0);
      branchHandle0.updatePosition(256, 256);
      int int0 = branchHandle0.updatePosition(2, 671);
      assertEquals(1, tABLESWITCH0.getLength());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(tABLESWITCH0);
      branchHandle0.updatePosition(256, 256);
      int int0 = branchHandle0.updatePosition(2, 671);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      PUSH pUSH0 = new PUSH(constantPoolGen0, true);
      InstructionList instructionList0 = pUSH0.getInstructionList();
      NOP nOP0 = new NOP();
      InstructionHandle instructionHandle0 = new InstructionHandle(nOP0);
      JSR jSR0 = new JSR(instructionHandle0);
      BranchHandle branchHandle0 = instructionList0.append((BranchInstruction) jSR0);
      instructionHandle0.removeTargeter(jSR0);
      InstructionHandle instructionHandle1 = branchHandle0.getTarget();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      InstructionHandle instructionHandle0 = instructionList0.append(instructionList0);
      IFEQ iFEQ0 = new IFEQ(instructionHandle0);
      BranchHandle branchHandle0 = instructionList0.append((BranchInstruction) iFEQ0);
      InstructionHandle instructionHandle1 = branchHandle0.getTarget();
      assertEquals(0, instructionHandle1.getPosition());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IF_ICMPGE iF_ICMPGE0 = new IF_ICMPGE();
      IfInstruction ifInstruction0 = iF_ICMPGE0.negate();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(ifInstruction0);
      iF_ICMPGE0.setTarget(branchHandle0);
      IfInstruction ifInstruction1 = iF_ICMPGE0.negate();
      branchHandle0.updatePosition(1, (-1));
      assertEquals(0, branchHandle0.getPosition());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IF_ICMPGE iF_ICMPGE0 = new IF_ICMPGE();
      IfInstruction ifInstruction0 = iF_ICMPGE0.negate();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(ifInstruction0);
      iF_ICMPGE0.setTarget(branchHandle0);
      IfInstruction ifInstruction1 = iF_ICMPGE0.negate();
      branchHandle0.updatePosition(1, (-1));
      BranchHandle branchHandle1 = BranchHandle.getBranchHandle(ifInstruction1);
      InstructionHandle instructionHandle0 = branchHandle1.getTarget();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IF_ICMPGE iF_ICMPGE0 = new IF_ICMPGE();
      IfInstruction ifInstruction0 = iF_ICMPGE0.negate();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(ifInstruction0);
      branchHandle0.updatePosition(1, (-1));
      int int0 = branchHandle0.getPosition();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      InstructionList instructionList0 = new InstructionList();
      IFGT iFGT0 = new IFGT();
      BranchHandle branchHandle0 = instructionList0.append((BranchInstruction) iFGT0);
      branchHandle0.dispose();
      int int0 = branchHandle0.getPosition();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LCMP lCMP0 = new LCMP();
      InstructionHandle instructionHandle0 = InstructionHandle.getInstructionHandle(lCMP0);
      IFGT iFGT0 = new IFGT(instructionHandle0);
      iFGT0.setPosition(1980);
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(iFGT0);
      assertEquals(0, branchHandle0.getPosition());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IF_ICMPEQ iF_ICMPEQ0 = new IF_ICMPEQ();
      IfInstruction ifInstruction0 = iF_ICMPEQ0.negate();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(ifInstruction0);
      branchHandle0.updatePosition((-808), 1926);
      assertEquals(0, branchHandle0.getPosition());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IF_ICMPEQ iF_ICMPEQ0 = new IF_ICMPEQ();
      IfInstruction ifInstruction0 = iF_ICMPEQ0.negate();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(ifInstruction0);
      branchHandle0.updatePosition((-808), 1926);
      BranchHandle branchHandle1 = BranchHandle.getBranchHandle(ifInstruction0);
      assertEquals(0, branchHandle1.getPosition());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IFNONNULL iFNONNULL0 = new IFNONNULL();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(iFNONNULL0);
      InstructionList instructionList0 = new InstructionList((BranchInstruction) iFNONNULL0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = Type.OBJECT;
      PUSH pUSH0 = new PUSH(constantPoolGen0, objectType0);
      InstructionList instructionList1 = new InstructionList(pUSH0);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList1);
      // Undeclared exception!
      try { 
        branchHandle0.updateTarget(instructionHandle0, instructionHandle0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Not targeting   -1: ldc[18](2) 2, but null
         //
         verifyException("org.apache.bcel.generic.BranchInstruction", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IFGT iFGT0 = new IFGT();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(iFGT0);
      branchHandle0.dispose();
      // Undeclared exception!
      try { 
        branchHandle0.updateTarget(branchHandle0, branchHandle0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.InstructionHandle", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GOTO gOTO0 = new GOTO((InstructionHandle) null);
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(gOTO0);
      // Undeclared exception!
      try { 
        branchHandle0.updatePosition(1, 1);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Target of goto[167](3) is invalid null handle
         //
         verifyException("org.apache.bcel.generic.BranchInstruction", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GOTO gOTO0 = new GOTO();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(gOTO0);
      // Undeclared exception!
      try { 
        branchHandle0.updatePosition(444, 150);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IF_ICMPGT iF_ICMPGT0 = new IF_ICMPGT();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(iF_ICMPGT0);
      FCMPG fCMPG0 = new FCMPG();
      // Undeclared exception!
      try { 
        branchHandle0.setInstruction(fCMPG0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Assigning fcmpg[150](1) to branch handle which is not a branch instruction
         //
         verifyException("org.apache.bcel.generic.BranchHandle", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(tABLESWITCH0);
      // Undeclared exception!
      try { 
        branchHandle0.setInstruction(tABLESWITCH0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.Select", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        BranchHandle.getBranchHandle((BranchInstruction) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Assigning null to handle
         //
         verifyException("org.apache.bcel.generic.InstructionHandle", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IFNONNULL iFNONNULL0 = new IFNONNULL();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(iFNONNULL0);
      branchHandle0.setInstruction(iFNONNULL0);
      assertEquals(0, branchHandle0.getPosition());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IFEQ iFEQ0 = new IFEQ();
      IfInstruction ifInstruction0 = iFEQ0.negate();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(ifInstruction0);
      DSTORE dSTORE0 = new DSTORE();
      // Undeclared exception!
      try { 
        branchHandle0.setInstruction(dSTORE0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IFGT iFGT0 = new IFGT();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(iFGT0);
      branchHandle0.setTarget(branchHandle0);
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IFGT iFGT0 = new IFGT();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(iFGT0);
      branchHandle0.setPosition(0);
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(iF_ICMPLT0);
      int int0 = branchHandle0.getPosition();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT();
      BranchHandle branchHandle0 = BranchHandle.getBranchHandle(iF_ICMPLT0);
      InstructionHandle instructionHandle0 = branchHandle0.getTarget();
      assertNotNull(instructionHandle0);
}
