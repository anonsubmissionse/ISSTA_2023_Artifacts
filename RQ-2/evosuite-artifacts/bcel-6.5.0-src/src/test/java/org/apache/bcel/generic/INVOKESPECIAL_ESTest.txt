 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(180);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      iNVOKESPECIAL0.dump(dataOutputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL(2365);
      // Undeclared exception!
      try { 
        iNVOKESPECIAL0.dump((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.INVOKESPECIAL", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      INVOKESPECIAL iNVOKESPECIAL0 = null;
      try {
        iNVOKESPECIAL0 = new INVOKESPECIAL((-1475));
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Negative index value: -1475
         //
         verifyException("org.apache.bcel.generic.CPInstruction", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL(1902);
      Class<?>[] classArray0 = iNVOKESPECIAL0.getExceptions();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExecutionVisitor executionVisitor0 = new ExecutionVisitor();
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL();
      // Undeclared exception!
      try { 
        iNVOKESPECIAL0.accept(executionVisitor0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        iNVOKESPECIAL0.dump(dataOutputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
