 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InstructionList instructionList0 = new InstructionList();
      DUP2 dUP2_0 = (DUP2)InstructionConstants.DUP2;
      InstructionHandle instructionHandle0 = new InstructionHandle(dUP2_0);
      IF_ICMPGT iF_ICMPGT0 = new IF_ICMPGT(instructionHandle0);
      BranchHandle branchHandle0 = instructionList0.insert((BranchInstruction) iF_ICMPGT0);
      JSR jSR0 = new JSR(branchHandle0);
      int int0 = jSR0.updatePosition(168, 32767);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InstructionList instructionList0 = new InstructionList();
      DUP2 dUP2_0 = (DUP2)InstructionConstants.DUP2;
      InstructionHandle instructionHandle0 = new InstructionHandle(dUP2_0);
      IF_ICMPGT iF_ICMPGT0 = new IF_ICMPGT(instructionHandle0);
      BranchHandle branchHandle0 = instructionList0.insert((BranchInstruction) iF_ICMPGT0);
      JSR jSR0 = new JSR(branchHandle0);
      int int0 = jSR0.updatePosition(168, 32767);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("6Z:3%58_7bfOe");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      InstructionList instructionList0 = new InstructionList();
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT();
      BranchHandle branchHandle0 = instructionList0.append((BranchInstruction) iF_ICMPLT0);
      JSR jSR0 = new JSR(branchHandle0);
      jSR0.setOpcode((short)58);
      jSR0.dump(dataOutputStream0);
      assertEquals(0, mockFile0.length());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JSR jSR0 = new JSR();
      ExecutionVisitor executionVisitor0 = new ExecutionVisitor();
      // Undeclared exception!
      try { 
        jSR0.accept(executionVisitor0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.ExecutionVisitor", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InstructionList instructionList0 = new InstructionList();
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT();
      BranchHandle branchHandle0 = instructionList0.append((BranchInstruction) iF_ICMPLT0);
      JSR jSR0 = new JSR(branchHandle0);
      jSR0.updatePosition(2095, (-2629));
      jSR0.setLength(32767);
      int int0 = jSR0.updatePosition(66, 32527);
      assertEquals(0, jSR0.getOpcode());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InstructionList instructionList0 = new InstructionList();
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT();
      BranchHandle branchHandle0 = instructionList0.append((BranchInstruction) iF_ICMPLT0);
      JSR jSR0 = new JSR(branchHandle0);
      jSR0.updatePosition(2095, (-2629));
      jSR0.setLength(32767);
      int int0 = jSR0.updatePosition(66, 32527);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      I2L i2L0 = new I2L();
      InstructionList instructionList0 = new InstructionList(i2L0);
      InstructionHandle instructionHandle0 = instructionList0.append((Instruction) i2L0);
      JSR jSR0 = new JSR(instructionHandle0);
      // Undeclared exception!
      try { 
        jSR0.updatePosition((-1517), 5);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Invalid branch target position offset for jsr[168](3):-1:  -1: i2l[133](1)
         //
         verifyException("org.apache.bcel.generic.BranchInstruction", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DNEG dNEG0 = (DNEG)InstructionConstants.DNEG;
      InstructionList instructionList0 = new InstructionList(dNEG0);
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      instructionHandle0.dispose();
      JSR jSR0 = new JSR(instructionHandle0);
      // Undeclared exception!
      try { 
        jSR0.updatePosition(32763, 32767);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.InstructionHandle", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      JSR jSR0 = new JSR();
      // Undeclared exception!
      try { 
        jSR0.updatePosition(117, 117);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      I2D i2D0 = new I2D();
      InstructionHandle instructionHandle0 = InstructionHandle.getInstructionHandle(i2D0);
      JSR jSR0 = new JSR(instructionHandle0);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        jSR0.dump(dataOutputStream0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Invalid branch target position offset for jsr[168](3):-1:  -1: i2d[135](1)
         //
         verifyException("org.apache.bcel.generic.BranchInstruction", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InstructionList instructionList0 = new InstructionList();
      byte[] byteArray0 = new byte[1];
      InstructionList instructionList1 = new InstructionList(byteArray0);
      InstructionHandle instructionHandle0 = instructionList0.append(instructionList1);
      JSR jSR0 = new JSR(instructionHandle0);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        jSR0.dump(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSR jSR0 = new JSR();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(filterOutputStream0, 1847);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      // Undeclared exception!
      try { 
        jSR0.dump(dataOutputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InstructionList instructionList0 = new InstructionList();
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT();
      BranchHandle branchHandle0 = instructionList0.append((BranchInstruction) iF_ICMPLT0);
      JSR jSR0 = new JSR(branchHandle0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(pipedOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      try { 
        jSR0.dump(dataOutputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      File file0 = MockFile.createTempFile("6Z:3%58.7@f$e", "6Z:3%58.7@f$e");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      InstructionList instructionList0 = new InstructionList();
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT();
      BranchHandle branchHandle0 = instructionList0.append((BranchInstruction) iF_ICMPLT0);
      JSR jSR0 = new JSR(branchHandle0);
      jSR0.updatePosition(2095, (-2629));
      jSR0.updatePosition(66, 32527);
      jSR0.dump(dataOutputStream0);
      assertEquals(1, jSR0.getLength());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSR jSR0 = new JSR();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        jSR0.accept(instConstraintVisitor0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
