/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 22:14:59 GMT 2022
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.LruCacheClassPathRepository;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractClassPathRepository_ESTest extends AbstractClassPathRepository_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      ClassPath classPath0 = classLoaderRepository0.getClassPath();
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      classPathRepository0.storeClass(javaClass0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance((ClassPath) null);
      Class<String> class0 = String.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      syntheticRepository0.removeClass(javaClass0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository((ClassPath) null);
      memorySensitiveClassPathRepository0.clear();
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.loadClass("org.apache.bcel.classfile.Field$1");
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      JavaClass javaClass0 = memorySensitiveClassPathRepository0.loadClass("java.io.Serializable");
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LruCacheClassPathRepository lruCacheClassPathRepository0 = new LruCacheClassPathRepository((ClassPath) null, 384);
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = lruCacheClassPathRepository0.loadClass(class0);
      javaClass0.isVolatile(true);
      JavaClass javaClass1 = lruCacheClassPathRepository0.loadClass(class0);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LruCacheClassPathRepository lruCacheClassPathRepository0 = new LruCacheClassPathRepository((ClassPath) null, 384);
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = lruCacheClassPathRepository0.loadClass(class0);
      javaClass0.setModifiers(384);
      JavaClass javaClass1 = lruCacheClassPathRepository0.loadClass(class0);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LruCacheClassPathRepository lruCacheClassPathRepository0 = new LruCacheClassPathRepository((ClassPath) null, 384);
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = lruCacheClassPathRepository0.loadClass(class0);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LruCacheClassPathRepository lruCacheClassPathRepository0 = new LruCacheClassPathRepository((ClassPath) null, 384);
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = lruCacheClassPathRepository0.loadClass(class0);
      javaClass0.isInterface(true);
      JavaClass javaClass1 = lruCacheClassPathRepository0.loadClass(class0);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      Class<InputStream> class0 = InputStream.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      Class<InputStream> class0 = InputStream.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      ClassPath classPath0 = syntheticRepository0.getClassPath();
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.findClass("XyR]Ry{slwNH)G5");
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.findClass("org.apache.bcel.classfile.ParameterAnnotations");
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      memorySensitiveClassPathRepository0.loadClass("org.apache.bcel.classfile.ConstantMethodref");
      JavaClass javaClass0 = memorySensitiveClassPathRepository0.findClass("org.apache.bcel.classfile.ConstantMethodref");
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      // Undeclared exception!
      try { 
        syntheticRepository0.storeClass((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      ClassPath classPath0 = classLoaderRepository0.getClassPath();
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      // Undeclared exception!
      try { 
        classPathRepository0.removeClass((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.ClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance((ClassPath) null);
      // Undeclared exception!
      try { 
        syntheticRepository0.loadClass("org.apache.bcel.classfile.ParameterAnnotations");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LruCacheClassPathRepository lruCacheClassPathRepository0 = new LruCacheClassPathRepository((ClassPath) null, 384);
      // Undeclared exception!
      try { 
        lruCacheClassPathRepository0.loadClass((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      // Undeclared exception!
      try { 
        classPathRepository0.loadClass("");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      // Undeclared exception!
      try { 
        syntheticRepository0.loadClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name null
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      ClassPath classPath0 = classLoaderRepository0.getClassPath();
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      ClassPath classPath1 = classPathRepository0.getClassPath();
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      LruCacheClassPathRepository lruCacheClassPathRepository0 = new LruCacheClassPathRepository(classPath0, 2139);
      try { 
        lruCacheClassPathRepository0.loadClass("FAm[uM>D;/");
        fail("Expecting exception: ClassNotFoundException");
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class FAm[uM>D;.: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: FAm[uM>D;/.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }
}
