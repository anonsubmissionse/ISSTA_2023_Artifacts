 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      RuntimeVisibleAnnotations runtimeVisibleAnnotations0 = null;
      try {
        runtimeVisibleAnnotations0 = new RuntimeVisibleAnnotations(211, 0, dataInputStream0, (ConstantPool) null);
        fail("Expecting exception: IOException");
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-2);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 1265);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      RuntimeVisibleAnnotations runtimeVisibleAnnotations0 = null;
      try {
        runtimeVisibleAnnotations0 = new RuntimeVisibleAnnotations((-2155), (-2155), dataInputStream0, (ConstantPool) null);
        fail("Expecting exception: EOFException");
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RuntimeVisibleAnnotations runtimeVisibleAnnotations0 = null;
      try {
        runtimeVisibleAnnotations0 = new RuntimeVisibleAnnotations(0, 0, (DataInput) null, (ConstantPool) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.Annotations", e);
      }
  }
