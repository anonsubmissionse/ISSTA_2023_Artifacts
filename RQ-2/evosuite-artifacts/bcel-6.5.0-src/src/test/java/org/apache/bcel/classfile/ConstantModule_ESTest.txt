 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule((-165));
      EmptyVisitor emptyVisitor0 = new EmptyVisitor();
      constantModule0.accept(emptyVisitor0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule(1175);
      int int0 = constantModule0.getNameIndex();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule((-3274));
      int int0 = constantModule0.getNameIndex();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule(2715);
      // Undeclared exception!
      try { 
        constantModule0.getConstantValue((ConstantPool) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.ConstantModule", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule(0);
      Constant[] constantArray0 = new Constant[8];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      // Undeclared exception!
      try { 
        constantModule0.getBytes(constantPool0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Constant pool at index 0 is null.
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule((-2035));
      // Undeclared exception!
      try { 
        constantModule0.dump((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.ConstantModule", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule(0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        constantModule0.dump(dataOutputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ConstantModule constantModule0 = null;
      try {
        constantModule0 = new ConstantModule((ConstantModule) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.ConstantModule", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-817), 1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ConstantModule constantModule0 = null;
      try {
        constantModule0 = new ConstantModule(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -817
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      ConstantModule constantModule0 = null;
      try {
        constantModule0 = new ConstantModule(dataInputStream0);
        fail("Expecting exception: IOException");
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ConstantModule constantModule0 = null;
      try {
        constantModule0 = new ConstantModule(dataInputStream0);
        fail("Expecting exception: EOFException");
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ConstantModule constantModule0 = new ConstantModule(dataInputStream0);
      assertEquals(0, constantModule0.getNameIndex());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule(0);
      Constant[] constantArray0 = new Constant[7];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      // Undeclared exception!
      try { 
        constantModule0.getConstantValue(constantPool0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Constant pool at index 0 is null.
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule((-1));
      String string0 = constantModule0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule(223);
      // Undeclared exception!
      try { 
        constantModule0.accept((Visitor) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.ConstantModule", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule(223);
      ConstantModule constantModule1 = new ConstantModule(constantModule0);
      assertEquals(0, constantModule0.getNameIndex());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule(223);
      ConstantModule constantModule1 = new ConstantModule(constantModule0);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule(223);
      constantModule0.setNameIndex(56);
      assertEquals(1, constantModule0.getNameIndex());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule(0);
      int int0 = constantModule0.getNameIndex();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConstantModule constantModule0 = null;
      try {
        constantModule0 = new ConstantModule((DataInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.ConstantModule", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule(0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.bcel.classfile.ConstantModule");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      constantModule0.dump(dataOutputStream0);
      assertEquals(0, constantModule0.getNameIndex());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConstantModule constantModule0 = new ConstantModule(70);
      ConstantPool constantPool0 = new ConstantPool((Constant[]) null);
      // Undeclared exception!
      try { 
        constantModule0.getBytes(constantPool0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }
