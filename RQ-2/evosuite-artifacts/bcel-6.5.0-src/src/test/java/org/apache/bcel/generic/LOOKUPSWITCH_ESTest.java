/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 22:37:29 GMT 2022
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import org.apache.bcel.generic.ACONST_NULL;
import org.apache.bcel.generic.CompoundInstruction;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.ILOAD;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.LOOKUPSWITCH;
import org.apache.bcel.generic.PUSH;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.verifier.structurals.ExecutionVisitor;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LOOKUPSWITCH_ESTest extends LOOKUPSWITCH_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH();
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      lOOKUPSWITCH0.initFromFile(byteSequence0, false);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH();
      // Undeclared exception!
      try { 
        lOOKUPSWITCH0.initFromFile((ByteSequence) null, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.Select", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-25);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      // Undeclared exception!
      try { 
        lOOKUPSWITCH0.initFromFile(byteSequence0, true);
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.LOOKUPSWITCH", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        lOOKUPSWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH();
      MockPrintStream mockPrintStream0 = new MockPrintStream("aimaVf.;SX{Bh");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      // Undeclared exception!
      try { 
        lOOKUPSWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        lOOKUPSWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        lOOKUPSWITCH0.accept(instConstraintVisitor0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      int[] intArray0 = new int[8];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[1];
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      InstructionHandle instructionHandle0 = new InstructionHandle(aCONST_NULL0);
      LOOKUPSWITCH lOOKUPSWITCH0 = null;
      try {
        lOOKUPSWITCH0 = new LOOKUPSWITCH(intArray0, instructionHandleArray0, instructionHandle0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Match and target array have not the same length: Match length: 8 Target length: 1
         //
         verifyException("org.apache.bcel.generic.Select", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      int[] intArray0 = new int[4];
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Character character0 = Character.valueOf('!');
      PUSH pUSH0 = new PUSH(constantPoolGen0, character0);
      InstructionList instructionList0 = new InstructionList(pUSH0);
      InstructionHandle instructionHandle0 = instructionList0.append((CompoundInstruction) pUSH0);
      LOOKUPSWITCH lOOKUPSWITCH0 = null;
      try {
        lOOKUPSWITCH0 = new LOOKUPSWITCH(intArray0, (InstructionHandle[]) null, instructionHandle0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.Select", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[1] = (byte) (-85);
      InstructionList instructionList0 = new InstructionList(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      int[] intArray0 = new int[1];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[1];
      ILOAD iLOAD0 = (ILOAD)InstructionConstants.ILOAD_1;
      InstructionHandle instructionHandle0 = new InstructionHandle(iLOAD0);
      InstructionHandle instructionHandle1 = instructionList0.insert(instructionHandle0, instructionList0);
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH(intArray0, instructionHandleArray0, instructionHandle1);
      MockFile mockFile0 = new MockFile("org.apache.bcel.generic.AASTORE");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      // Undeclared exception!
      try { 
        lOOKUPSWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Target of lookupswitch[171](17) is invalid null handle
         //
         verifyException("org.apache.bcel.generic.BranchInstruction", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      int[] intArray0 = new int[0];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[0];
      ILOAD iLOAD0 = (ILOAD)InstructionConstants.ILOAD_1;
      InstructionHandle instructionHandle0 = new InstructionHandle(iLOAD0);
      InstructionHandle instructionHandle1 = instructionList0.insert(instructionHandle0, instructionList0);
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH(intArray0, instructionHandleArray0, instructionHandle1);
      MockFile mockFile0 = new MockFile("org.apache.bcel.generic.AASTORE", "org.apache.bcel.generic.AASTORE");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      lOOKUPSWITCH0.dump(dataOutputStream0);
      assertEquals(1, lOOKUPSWITCH0.getLength());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExecutionVisitor executionVisitor0 = new ExecutionVisitor();
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH();
      // Undeclared exception!
      try { 
        lOOKUPSWITCH0.accept(executionVisitor0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.ExecutionVisitor", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH();
      byte[] byteArray0 = new byte[35];
      byteArray0[6] = (byte) (-123);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      try { 
        lOOKUPSWITCH0.initFromFile(byteSequence0, true);
        fail("Expecting exception: EOFException");
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
}
