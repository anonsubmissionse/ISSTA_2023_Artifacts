 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList0);
      ReturnaddressType returnaddressType0 = new ReturnaddressType(instructionHandle0);
      ReturnaddressType returnaddressType1 = new ReturnaddressType(instructionHandle0);
      boolean boolean0 = returnaddressType0.equals(returnaddressType1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReturnaddressType returnaddressType0 = ReturnaddressType.NO_TARGET;
      byte[] byteArray0 = new byte[7];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList0);
      ReturnaddressType returnaddressType1 = new ReturnaddressType(instructionHandle0);
      boolean boolean0 = returnaddressType0.equals(returnaddressType1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReturnaddressType returnaddressType0 = ReturnaddressType.NO_TARGET;
      InstructionHandle instructionHandle0 = returnaddressType0.getTarget();
      assertNotNull(instructionHandle0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = Type.THROWABLE;
      PUSH pUSH0 = new PUSH(constantPoolGen0, objectType0);
      InstructionList instructionList0 = pUSH0.getInstructionList();
      InstructionHandle instructionHandle0 = instructionList0.getStart();
      IF_ICMPGE iF_ICMPGE0 = new IF_ICMPGE();
      instructionHandle0.addTargeter(iF_ICMPGE0);
      ReturnaddressType returnaddressType0 = new ReturnaddressType(instructionHandle0);
      InstructionHandle instructionHandle1 = returnaddressType0.getTarget();
      assertEquals(0, instructionHandle1.getPosition());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GOTO gOTO0 = new GOTO();
      InstructionList instructionList0 = new InstructionList((BranchInstruction) gOTO0);
      byte[] byteArray0 = new byte[4];
      InstructionList instructionList1 = new InstructionList(byteArray0);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList1);
      ReturnaddressType returnaddressType0 = new ReturnaddressType(instructionHandle0);
      InstructionHandle instructionHandle1 = returnaddressType0.getTarget();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      InstructionHandle instructionHandle0 = instructionList0.getStart();
      instructionHandle0.setPosition((byte)16);
      ReturnaddressType returnaddressType0 = new ReturnaddressType(instructionHandle0);
      InstructionHandle instructionHandle1 = returnaddressType0.getTarget();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList0);
      instructionHandle0.dispose();
      ReturnaddressType returnaddressType0 = null;
      try {
        returnaddressType0 = new ReturnaddressType(instructionHandle0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.InstructionHandle", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      GOTO gOTO0 = new GOTO();
      InstructionList instructionList0 = new InstructionList((BranchInstruction) gOTO0);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList0);
      ReturnaddressType returnaddressType0 = null;
      try {
        returnaddressType0 = new ReturnaddressType(instructionHandle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ReturnaddressType returnaddressType0 = ReturnaddressType.NO_TARGET;
      byte[] byteArray0 = new byte[7];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList0);
      ReturnaddressType returnaddressType1 = new ReturnaddressType(instructionHandle0);
      boolean boolean0 = returnaddressType1.equals(returnaddressType0);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ReturnaddressType returnaddressType0 = ReturnaddressType.NO_TARGET;
      byte[] byteArray0 = new byte[7];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList0);
      ReturnaddressType returnaddressType1 = new ReturnaddressType(instructionHandle0);
      boolean boolean0 = returnaddressType1.equals(returnaddressType0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      InstructionHandle instructionHandle0 = instructionList0.getStart();
      ReturnaddressType returnaddressType0 = new ReturnaddressType(instructionHandle0);
      boolean boolean0 = returnaddressType0.equals(instructionHandle0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReturnaddressType returnaddressType0 = ReturnaddressType.NO_TARGET;
      boolean boolean0 = returnaddressType0.equals(returnaddressType0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ReturnaddressType returnaddressType0 = ReturnaddressType.NO_TARGET;
      returnaddressType0.hashCode();
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = Type.THROWABLE;
      PUSH pUSH0 = new PUSH(constantPoolGen0, objectType0);
      InstructionList instructionList0 = pUSH0.getInstructionList();
      InstructionHandle instructionHandle0 = instructionList0.getStart();
      ReturnaddressType returnaddressType0 = new ReturnaddressType(instructionHandle0);
      returnaddressType0.hashCode();
  }
