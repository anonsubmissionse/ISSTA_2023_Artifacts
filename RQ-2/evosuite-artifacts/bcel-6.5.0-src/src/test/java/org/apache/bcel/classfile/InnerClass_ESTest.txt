 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(437, 437, (-1379), 0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("XN*uCxrrCTegR*JV.]r");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      innerClass0.dump(dataOutputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(437, 437, (-1379), 0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("XN*uCxrrCTegR*JV.]r");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      innerClass0.dump(dataOutputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(437, 437, (-1379), 0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("XN*uCxrrCTegR*JV.]r");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      innerClass0.dump(dataOutputStream0);
      assertEquals(0, innerClass0.getInnerNameIndex());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(437, 437, (-1379), 0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("XN*uCxrrCTegR*JV.]r");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      innerClass0.dump(dataOutputStream0);
      assertEquals(0, innerClass0.getInnerAccessFlags());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1629), 0, 0, (-286));
      EmptyVisitor emptyVisitor0 = new EmptyVisitor();
      innerClass0.accept(emptyVisitor0);
      assertEquals(0, innerClass0.getInnerNameIndex());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1629), 0, 0, (-286));
      EmptyVisitor emptyVisitor0 = new EmptyVisitor();
      innerClass0.accept(emptyVisitor0);
      assertEquals(0, innerClass0.getOuterClassIndex());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1629), 0, 0, (-286));
      EmptyVisitor emptyVisitor0 = new EmptyVisitor();
      innerClass0.accept(emptyVisitor0);
      assertEquals(0, innerClass0.getInnerAccessFlags());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1629), 0, 0, (-286));
      EmptyVisitor emptyVisitor0 = new EmptyVisitor();
      innerClass0.accept(emptyVisitor0);
      assertEquals(0, innerClass0.getInnerClassIndex());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(354, 354, 2719, 2719);
      int int0 = innerClass0.getOuterClassIndex();
      assertEquals(0, innerClass0.getInnerAccessFlags());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(354, 354, 2719, 2719);
      int int0 = innerClass0.getOuterClassIndex();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(354, 354, 2719, 2719);
      int int0 = innerClass0.getOuterClassIndex();
      assertEquals(0, innerClass0.getInnerNameIndex());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(354, 354, 2719, 2719);
      int int0 = innerClass0.getOuterClassIndex();
      assertEquals(0, innerClass0.getInnerClassIndex());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-849), (-849), (-849), 0);
      int int0 = innerClass0.getOuterClassIndex();
      assertEquals(0, innerClass0.getInnerClassIndex());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-849), (-849), (-849), 0);
      int int0 = innerClass0.getOuterClassIndex();
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-849), (-849), (-849), 0);
      int int0 = innerClass0.getOuterClassIndex();
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-849), (-849), (-849), 0);
      int int0 = innerClass0.getOuterClassIndex();
      assertEquals(0, innerClass0.getInnerNameIndex());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(57, (-854), 0, (-1301));
      int int0 = innerClass0.getInnerNameIndex();
      assertEquals(0, innerClass0.getOuterClassIndex());
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(57, (-854), 0, (-1301));
      int int0 = innerClass0.getInnerNameIndex();
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(57, (-854), 0, (-1301));
      int int0 = innerClass0.getInnerNameIndex();
      assertEquals(0, innerClass0.getInnerAccessFlags());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(57, (-854), 0, (-1301));
      int int0 = innerClass0.getInnerNameIndex();
      assertEquals(0, innerClass0.getInnerClassIndex());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(2295, 0, 2295, 466);
      int int0 = innerClass0.getInnerNameIndex();
      assertEquals(0, innerClass0.getOuterClassIndex());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(2295, 0, 2295, 466);
      int int0 = innerClass0.getInnerNameIndex();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(2295, 0, 2295, 466);
      int int0 = innerClass0.getInnerNameIndex();
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(2295, 0, 2295, 466);
      int int0 = innerClass0.getInnerNameIndex();
      assertEquals(0, innerClass0.getInnerClassIndex());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, (-1299));
      int int0 = innerClass0.getInnerClassIndex();
      assertEquals(0, innerClass0.getInnerAccessFlags());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, (-1299));
      int int0 = innerClass0.getInnerClassIndex();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, (-1299));
      int int0 = innerClass0.getInnerClassIndex();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, (-1299));
      int int0 = innerClass0.getInnerClassIndex();
      assertEquals(0, innerClass0.getInnerNameIndex());
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1629), 0, 0, (-286));
      int int0 = innerClass0.getInnerClassIndex();
      assertEquals(0, innerClass0.getOuterClassIndex());
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1629), 0, 0, (-286));
      int int0 = innerClass0.getInnerClassIndex();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1629), 0, 0, (-286));
      int int0 = innerClass0.getInnerClassIndex();
      assertEquals(0, innerClass0.getInnerNameIndex());
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1629), 0, 0, (-286));
      int int0 = innerClass0.getInnerClassIndex();
      assertEquals(0, innerClass0.getInnerAccessFlags());
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 181, 0, 0);
      assertEquals(0, innerClass0.getInnerAccessFlags());
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 181, 0, 0);
      innerClass0.setInnerAccessFlags(181);
      int int0 = innerClass0.getInnerAccessFlags();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-849), (-849), (-849), 0);
      innerClass0.setInnerAccessFlags((-5195));
      int int0 = innerClass0.getInnerAccessFlags();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 181, 0, 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 181, 0, 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 181, 0, 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 181, 0, 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, (-4556), 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, (-4556), 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, (-4556), 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, (-4556), 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(1, 0, 1415, 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(1, 0, 1415, 0);
      InnerClass innerClass1 = innerClass0.copy();
      assertEquals(0, innerClass1.getInnerClassIndex());
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(1, 0, 1415, 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(1, 0, 1415, 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-101), (-101), 0, 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-101), (-101), 0, 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-101), (-101), 0, 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-101), (-101), 0, 0);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1629), 0, 0, (-286));
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1629), 0, 0, (-286));
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1629), 0, 0, (-286));
      InnerClass innerClass1 = innerClass0.copy();
      assertEquals(0, innerClass1.getInnerAccessFlags());
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1629), 0, 0, (-286));
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(1299, 0, 3770, 1299);
      Constant[] constantArray0 = new Constant[1];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      // Undeclared exception!
      try { 
        innerClass0.toString(constantPool0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Invalid constant pool reference: 1299. Constant pool size is: 1
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1541), (-1541), 1547, 1547);
      // Undeclared exception!
      try { 
        innerClass0.toString((ConstantPool) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.InnerClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, 0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("org.apache.bcel.classfile.StackMapEntry", true);
      mockFileOutputStream0.close();
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      try { 
        innerClass0.dump(dataOutputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      InnerClass innerClass0 = null;
      try {
        innerClass0 = new InnerClass((InnerClass) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.InnerClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      InnerClass innerClass0 = null;
      try {
        innerClass0 = new InnerClass(dataInputStream0);
        fail("Expecting exception: IOException");
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      InnerClass innerClass0 = null;
      try {
        innerClass0 = new InnerClass(dataInputStream0);
        fail("Expecting exception: EOFException");
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-849), (-849), (-849), 0);
      int int0 = innerClass0.getInnerAccessFlags();
      assertEquals(0, innerClass0.getInnerClassIndex());
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-849), (-849), (-849), 0);
      int int0 = innerClass0.getInnerAccessFlags();
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-849), (-849), (-849), 0);
      int int0 = innerClass0.getInnerAccessFlags();
      assertEquals(0, innerClass0.getInnerNameIndex());
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-849), (-849), (-849), 0);
      int int0 = innerClass0.getInnerAccessFlags();
      ;
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-63), (-63), (-63), 578);
      int int0 = innerClass0.getInnerNameIndex();
      assertEquals(0, innerClass0.getInnerClassIndex());
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-63), (-63), (-63), 578);
      int int0 = innerClass0.getInnerNameIndex();
      assertEquals(0, innerClass0.getInnerAccessFlags());
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-63), (-63), (-63), 578);
      int int0 = innerClass0.getInnerNameIndex();
      assertEquals(0, innerClass0.getOuterClassIndex());
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-63), (-63), (-63), 578);
      int int0 = innerClass0.getInnerNameIndex();
      ;
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, (-1299));
      int int0 = innerClass0.getOuterClassIndex();
      ;
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, (-1299));
      int int0 = innerClass0.getOuterClassIndex();
      ;
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, (-1299));
      int int0 = innerClass0.getOuterClassIndex();
      assertEquals(0, innerClass0.getInnerAccessFlags());
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, (-1299));
      int int0 = innerClass0.getOuterClassIndex();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      InnerClass innerClass0 = new InnerClass(dataInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      InnerClass innerClass0 = new InnerClass(dataInputStream0);
      assertEquals(0, innerClass0.getInnerNameIndex());
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      InnerClass innerClass0 = new InnerClass(dataInputStream0);
      assertEquals(0, innerClass0.getInnerAccessFlags());
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      InnerClass innerClass0 = new InnerClass(dataInputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(1, 0, 1415, 0);
      int int0 = innerClass0.getInnerClassIndex();
      assertEquals(0, innerClass0.getInnerNameIndex());
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(1, 0, 1415, 0);
      int int0 = innerClass0.getInnerClassIndex();
      assertEquals(0, innerClass0.getInnerAccessFlags());
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(1, 0, 1415, 0);
      int int0 = innerClass0.getInnerClassIndex();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(1, 0, 1415, 0);
      int int0 = innerClass0.getInnerClassIndex();
      ;
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1550), (-1550), 1547, 1547);
      assertEquals(0, innerClass0.getOuterClassIndex());
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1550), (-1550), 1547, 1547);
      innerClass0.setOuterClassIndex(1547);
      assertEquals(0, innerClass0.getInnerNameIndex());
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, 0);
      innerClass0.setInnerClassIndex(83);
      assertEquals(0, innerClass0.getInnerClassIndex());
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      InnerClass innerClass0 = null;
      try {
        innerClass0 = new InnerClass(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, 0);
      String string0 = innerClass0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-726), (-726), (-726), 0);
      // Undeclared exception!
      try { 
        innerClass0.dump((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.InnerClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, 0);
      innerClass0.setInnerNameIndex(83);
      ;
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, 0);
      InnerClass innerClass1 = new InnerClass(innerClass0);
      ;
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, 0);
      InnerClass innerClass1 = new InnerClass(innerClass0);
      ;
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, 0);
      InnerClass innerClass1 = new InnerClass(innerClass0);
      ;
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, 0);
      InnerClass innerClass1 = new InnerClass(innerClass0);
      ;
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1550), (-1550), 1547, 1547);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1550), (-1550), 1547, 1547);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1550), (-1550), 1547, 1547);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-1550), (-1550), 1547, 1547);
      InnerClass innerClass1 = innerClass0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 0, 0);
      DescendingVisitor descendingVisitor0 = new DescendingVisitor((JavaClass) null, (Visitor) null);
      // Undeclared exception!
      try { 
        innerClass0.accept(descendingVisitor0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.InnerClass", e);
      }
  }
