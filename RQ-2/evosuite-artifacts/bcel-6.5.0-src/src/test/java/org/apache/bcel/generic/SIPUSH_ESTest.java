/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 22:40:39 GMT 2022
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.SIPUSH;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.verifier.structurals.ExecutionVisitor;
import org.apache.bcel.verifier.structurals.Frame;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SIPUSH_ESTest extends SIPUSH_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short)3178);
      Number number0 = sIPUSH0.getValue();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short) (-2243));
      Number number0 = sIPUSH0.getValue();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH();
      // Undeclared exception!
      try { 
        sIPUSH0.toString(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short)2802);
      // Undeclared exception!
      try { 
        sIPUSH0.initFromFile((ByteSequence) null, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.SIPUSH", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH();
      byte[] byteArray0 = new byte[2];
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      byteSequence0.readUnsignedByte();
      try { 
        sIPUSH0.initFromFile(byteSequence0, false);
        fail("Expecting exception: EOFException");
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short)0);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        sIPUSH0.dump(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        sIPUSH0.dump(dataOutputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short)0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(0, (-1048));
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        sIPUSH0.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Instruction SIPUSH constraint violated: Cannot produce 1 stack slots: only -1048 free stack slot(s) left.
         // Stack:
         // Slots used: 0 MaxStack: -1048.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        sIPUSH0.accept(instConstraintVisitor0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short) (-3447));
      byte[] byteArray0 = new byte[8];
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      sIPUSH0.initFromFile(byteSequence0, true);
      Number number0 = sIPUSH0.getValue();
      assertEquals(1, number0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short) (-3447));
      byte[] byteArray0 = new byte[8];
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      sIPUSH0.initFromFile(byteSequence0, true);
      Number number0 = sIPUSH0.getValue();
      assertEquals(0, sIPUSH0.getLength());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short) (-3447));
      ExecutionVisitor executionVisitor0 = new ExecutionVisitor();
      // Undeclared exception!
      try { 
        sIPUSH0.accept(executionVisitor0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.ExecutionVisitor", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short) (-3447));
      Number number0 = sIPUSH0.getValue();
      assertEquals(1, number0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short) (-3447));
      MockPrintStream mockPrintStream0 = new MockPrintStream("sipush[17](3) 0");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      sIPUSH0.dump(dataOutputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH();
      Type type0 = sIPUSH0.getType((ConstantPoolGen) null);
      assertEquals(type0, type0.getType());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short) (-3447));
      String string0 = sIPUSH0.toString(true);
      assertNotNull(string0);
}
}
