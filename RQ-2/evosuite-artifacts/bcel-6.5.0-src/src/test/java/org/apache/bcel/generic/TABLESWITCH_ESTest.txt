 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      byte[] byteArray0 = new byte[21];
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      tABLESWITCH0.updatePosition(257, 2);
      tABLESWITCH0.initFromFile(byteSequence0, false);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)1;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      tABLESWITCH0.initFromFile(byteSequence0, false);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)1;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      tABLESWITCH0.initFromFile(byteSequence0, false);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      byte[] byteArray0 = new byte[21];
      byteArray0[14] = (byte)99;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      byteSequence0.readByte();
      try { 
        tABLESWITCH0.initFromFile(byteSequence0, false);
        fail("Expecting exception: EOFException");
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[3];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[3];
      SWITCH sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, (InstructionHandle) null);
      InstructionList instructionList0 = sWITCH0.getInstructionList();
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      instructionHandleArray0[0] = instructionHandle0;
      instructionHandleArray0[2] = instructionHandle0;
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH(intArray0, instructionHandleArray0, instructionHandleArray0[2]);
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.bcel.generic.DCMPG");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      // Undeclared exception!
      try { 
        tABLESWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Target of tableswitch[170](25) is invalid null handle
         //
         verifyException("org.apache.bcel.generic.BranchInstruction", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[2] = 2855;
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[3];
      SWITCH sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, (InstructionHandle) null);
      InstructionList instructionList0 = sWITCH0.getInstructionList();
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      instructionHandleArray0[2] = instructionHandle0;
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH(intArray0, instructionHandleArray0, instructionHandleArray0[2]);
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.bcel.generic.DCMPG");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      // Undeclared exception!
      try { 
        tABLESWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Target of tableswitch[170](25) is invalid null handle
         //
         verifyException("org.apache.bcel.generic.BranchInstruction", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-1904);
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[3];
      SWITCH sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, (InstructionHandle) null);
      InstructionList instructionList0 = sWITCH0.getInstructionList();
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      instructionHandleArray0[2] = instructionHandle0;
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH(intArray0, instructionHandleArray0, instructionHandleArray0[2]);
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.bcel.generic.DCMPG");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      // Undeclared exception!
      try { 
        tABLESWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Target of tableswitch[170](25) is invalid null handle
         //
         verifyException("org.apache.bcel.generic.BranchInstruction", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      int[] intArray0 = new int[3];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[3];
      SWITCH sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, (InstructionHandle) null);
      InstructionList instructionList0 = sWITCH0.getInstructionList();
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList0);
      instructionHandleArray0[2] = instructionHandle0;
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH(intArray0, instructionHandleArray0, instructionHandleArray0[2]);
      tABLESWITCH0.setMatch_length(0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.cel.generic.DCMPG");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      tABLESWITCH0.dump(dataOutputStream0);
      assertEquals(1, tABLESWITCH0.getLength());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      // Undeclared exception!
      try { 
        tABLESWITCH0.initFromFile((ByteSequence) null, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.Select", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      byte[] byteArray0 = new byte[13];
      byteArray0[4] = (byte)40;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      // Undeclared exception!
      try { 
        tABLESWITCH0.initFromFile(byteSequence0, true);
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.TABLESWITCH", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        tABLESWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      // Undeclared exception!
      try { 
        tABLESWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        tABLESWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        tABLESWITCH0.accept(instConstraintVisitor0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[6];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[1];
      IF_ICMPNE iF_ICMPNE0 = new IF_ICMPNE();
      InstructionList instructionList0 = new InstructionList((BranchInstruction) iF_ICMPNE0);
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      TABLESWITCH tABLESWITCH0 = null;
      try {
        tABLESWITCH0 = new TABLESWITCH(intArray0, instructionHandleArray0, instructionHandle0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Match and target array have not the same length: Match length: 6 Target length: 1
         //
         verifyException("org.apache.bcel.generic.Select", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[3];
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      PUSH pUSH0 = new PUSH(constantPoolGen0, (long) 3199);
      InstructionList instructionList0 = pUSH0.getInstructionList();
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      TABLESWITCH tABLESWITCH0 = null;
      try {
        tABLESWITCH0 = new TABLESWITCH(intArray0, (InstructionHandle[]) null, instructionHandle0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.Select", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      ExecutionVisitor executionVisitor0 = new ExecutionVisitor();
      // Undeclared exception!
      try { 
        tABLESWITCH0.accept(executionVisitor0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.ExecutionVisitor", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[3];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[3];
      SWITCH sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, (InstructionHandle) null);
      InstructionList instructionList0 = sWITCH0.getInstructionList();
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      instructionHandleArray0[2] = instructionHandle0;
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH(intArray0, instructionHandleArray0, instructionHandleArray0[2]);
      tABLESWITCH0.setMatch_length((-1867));
      MockPrintStream mockPrintStream0 = new MockPrintStream("\nno?Nati}n");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      tABLESWITCH0.dump(dataOutputStream0);
      assertEquals(1, tABLESWITCH0.getLength());
}
