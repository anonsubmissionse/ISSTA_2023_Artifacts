 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      RouteContext routeContext1 = routeContext0.withBody(body0);
      HttpMethod httpMethod0 = HttpMethod.delete;
      RouteContext routeContext2 = routeContext1.withHttpMethod(httpMethod0);
      RouteContext routeContext3 = routeContext0.withUri("");
      spark.route.Routes routes0 = spark.route.Routes.create();
      TemplateViewRoute templateViewRoute0 = mock(TemplateViewRoute.class, new ViolatedAssumptionAnswer());
      TemplateEngine templateEngine0 = mock(TemplateEngine.class, new ViolatedAssumptionAnswer());
      TemplateViewRouteImpl templateViewRouteImpl0 = TemplateViewRouteImpl.create(".RMk&q]", templateViewRoute0, templateEngine0);
      ModelAndView modelAndView0 = new ModelAndView(templateViewRouteImpl0, ".RMk&q]");
      TemplateViewRoute templateViewRoute1 = mock(TemplateViewRoute.class, new ViolatedAssumptionAnswer());
      doReturn((ModelAndView) null, (ModelAndView) null).when(templateViewRoute1).handle(any(spark.Request.class) , any(spark.Response.class));
      TemplateEngine templateEngine1 = mock(TemplateEngine.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(templateEngine1).render(any(spark.ModelAndView.class));
      TemplateViewRouteImpl templateViewRouteImpl1 = TemplateViewRouteImpl.create("", templateViewRoute1, templateEngine1);
      routes0.add(httpMethod0, (RouteImpl) templateViewRouteImpl1);
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RequestWrapper requestWrapper0 = RequestWrapper.create();
      routeContext0.withRequestWrapper(requestWrapper0);
      routeContext2.withResponse(responseWrapper0);
      routeContext3.withMatcher(routes0);
      routeContext1.withResponseWrapper(responseWrapper0);
      Routes.execute(routeContext3);
      Routes.execute(routeContext3);
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      RouteContext routeContext1 = routeContext0.withBody(body0);
      HttpMethod httpMethod0 = HttpMethod.head;
      RouteContext routeContext2 = routeContext1.withHttpMethod(httpMethod0);
      RouteContext routeContext3 = routeContext1.withUri("");
      spark.route.Routes routes0 = spark.route.Routes.create();
      TemplateViewRoute templateViewRoute0 = mock(TemplateViewRoute.class, new ViolatedAssumptionAnswer());
      doReturn((ModelAndView) null).when(templateViewRoute0).handle(any(spark.Request.class) , any(spark.Response.class));
      TemplateEngine templateEngine0 = mock(TemplateEngine.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(templateEngine0).render(any(spark.ModelAndView.class));
      TemplateViewRouteImpl templateViewRouteImpl0 = TemplateViewRouteImpl.create("", templateViewRoute0, templateEngine0);
      routes0.add(httpMethod0, (RouteImpl) templateViewRouteImpl0);
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RequestWrapper requestWrapper0 = RequestWrapper.create();
      routeContext2.withRequestWrapper(requestWrapper0);
      routeContext3.withMatcher(routes0);
      routeContext0.withResponseWrapper(responseWrapper0);
      Routes.execute(routeContext3);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      RouteContext routeContext1 = routeContext0.withBody(body0);
      HttpMethod httpMethod0 = HttpMethod.delete;
      routeContext1.withHttpMethod(httpMethod0);
      RouteContext routeContext2 = routeContext1.withUri("");
      spark.route.Routes routes0 = spark.route.Routes.create();
      TemplateViewRoute templateViewRoute0 = mock(TemplateViewRoute.class, new ViolatedAssumptionAnswer());
      TemplateEngine templateEngine0 = mock(TemplateEngine.class, new ViolatedAssumptionAnswer());
      TemplateViewRouteImpl templateViewRouteImpl0 = TemplateViewRouteImpl.create(".RMk&q]", templateViewRoute0, templateEngine0);
      ModelAndView modelAndView0 = new ModelAndView(templateViewRouteImpl0, ".RMk&q]");
      TemplateViewRoute templateViewRoute1 = mock(TemplateViewRoute.class, new ViolatedAssumptionAnswer());
      doReturn((ModelAndView) null, (ModelAndView) null).when(templateViewRoute1).handle(any(spark.Request.class) , any(spark.Response.class));
      TemplateEngine templateEngine1 = mock(TemplateEngine.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(templateEngine1).render(any(spark.ModelAndView.class));
      TemplateViewRouteImpl templateViewRouteImpl1 = TemplateViewRouteImpl.create("", templateViewRoute1, templateEngine1);
      routes0.add(httpMethod0, (RouteImpl) templateViewRouteImpl1);
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RequestWrapper requestWrapper0 = RequestWrapper.create();
      routeContext1.withRequestWrapper(requestWrapper0);
      routeContext2.withMatcher(routes0);
      routeContext0.withResponseWrapper(responseWrapper0);
      Routes.execute(routeContext2);
      Routes.execute(routeContext2);
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      RouteContext routeContext1 = routeContext0.withBody(body0);
      HttpMethod httpMethod0 = HttpMethod.head;
      RouteContext routeContext2 = routeContext1.withHttpMethod(httpMethod0);
      TemplateViewRoute templateViewRoute0 = mock(TemplateViewRoute.class, new ViolatedAssumptionAnswer());
      TemplateEngine templateEngine0 = mock(TemplateEngine.class, new ViolatedAssumptionAnswer());
      TemplateViewRouteImpl templateViewRouteImpl0 = TemplateViewRouteImpl.create("", templateViewRoute0, templateEngine0);
      ResponseTransformer responseTransformer0 = mock(ResponseTransformer.class, new ViolatedAssumptionAnswer());
      ResponseTransformerRouteImpl responseTransformerRouteImpl0 = ResponseTransformerRouteImpl.create("2%JI>", "", (Route) templateViewRouteImpl0, responseTransformer0);
      body0.set(responseTransformerRouteImpl0);
      spark.route.Routes routes0 = spark.route.Routes.create();
      routeContext2.withMatcher(routes0);
      Routes.execute(routeContext2);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      RouteContext routeContext1 = routeContext0.withBody(body0);
      HttpMethod httpMethod0 = HttpMethod.head;
      RouteContext routeContext2 = routeContext1.withHttpMethod(httpMethod0);
      TemplateViewRoute templateViewRoute0 = mock(TemplateViewRoute.class, new ViolatedAssumptionAnswer());
      TemplateEngine templateEngine0 = mock(TemplateEngine.class, new ViolatedAssumptionAnswer());
      TemplateViewRouteImpl templateViewRouteImpl0 = TemplateViewRouteImpl.create("", templateViewRoute0, templateEngine0);
      ResponseTransformer responseTransformer0 = mock(ResponseTransformer.class, new ViolatedAssumptionAnswer());
      ResponseTransformerRouteImpl responseTransformerRouteImpl0 = ResponseTransformerRouteImpl.create("2%JI>", "", (Route) templateViewRouteImpl0, responseTransformer0);
      body0.set(responseTransformerRouteImpl0);
      spark.route.Routes routes0 = spark.route.Routes.create();
      routeContext2.withMatcher(routes0);
      Routes.execute(routeContext2);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      RouteContext routeContext1 = routeContext0.withBody(body0);
      HttpMethod httpMethod0 = HttpMethod.head;
      RouteContext routeContext2 = routeContext1.withHttpMethod(httpMethod0);
      spark.route.Routes routes0 = spark.route.Routes.create();
      routeContext2.withMatcher(routes0);
      Routes.execute(routeContext0);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      spark.route.Routes routes0 = spark.route.Routes.create();
      routeContext0.withMatcher(routes0);
      RouteContext routeContext1 = routeContext0.withBody(body0);
      Routes.execute(routeContext1);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Routes routes0 = new Routes();
  }
