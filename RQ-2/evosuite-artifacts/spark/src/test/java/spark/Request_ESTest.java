/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 06 16:48:08 GMT 2022
 */

package spark;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.IllegalCharsetNameException;
import java.util.Enumeration;
import java.util.Map;
import javax.servlet.ServletInputStream;
import javax.servlet.ServletRequestWrapper;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpSession;
import org.eclipse.jetty.webapp.ClasspathPattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import spark.Request;
import spark.Session;
import spark.route.HttpMethod;
import spark.routematch.RouteMatch;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Request_ESTest extends Request_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      RouteMatch routeMatch0 = new RouteMatch(httpServletRequestWrapper0, "]K}$.1", "zOe]Zdh'MI13|HS", "org.eclipse.jetty.http.PathMap$PathSet");
      request0.changeMatch(routeMatch0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("", ":q9^c").when(httpServletRequest0).getHeader(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      request0.headers(",&'MK6k[");
      String string0 = request0.userAgent();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getHeader(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.userAgent();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = "";
      RouteMatch routeMatch0 = new RouteMatch("", "aFpJ1X-Ky", "aFpJ1X-Ky", "glob:");
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(httpServletRequest0).getParameterMap();
      doReturn((String) null).when(httpServletRequest0).getScheme();
      doReturn((String) null).when(httpServletRequest0).getMethod();
      doReturn((String) null).when(httpServletRequest0).getPathInfo();
      doReturn("glob:").when(httpServletRequest0).getRequestURI();
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.getRequestURI();
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      request0.session();
      request0.scheme();
      request0.params();
      request0.pathInfo();
      request0.requestMethod();
      // Undeclared exception!
      try { 
        request0.queryMap((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.QueryParamsMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Request request0 = new Request();
      RouteMatch routeMatch0 = new RouteMatch(request0, "*", "*", "");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request1 = new Request(routeMatch0, httpServletRequestWrapper0);
      String[] stringArray0 = request1.splat();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("starting {}").when(httpServletRequest0).getServletPath();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.servletPath();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch("", "aFpJ12X-Ky", "aFpJ12X-Ky", "glob:");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getServletPath();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.servletPath();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, "org.eclipse.jetty.util.RegexSet").when(httpServletRequest0).getScheme();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.getScheme();
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      request0.scheme();
      String string0 = request0.scheme();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, "").when(httpServletRequest0).getScheme();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.getScheme();
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      request0.scheme();
      String string0 = request0.scheme();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("1Qg%ugBnj").when(httpServletRequest0).getMethod();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.requestMethod();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, "").when(httpServletRequest0).getMethod();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      request0.requestMethod();
      String string0 = request0.requestMethod();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Request request0 = new Request();
      HttpServletRequest httpServletRequest0 = request0.raw();
      assertNotNull(httpServletRequest0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("org.eclipse.jetty.util.PathWatcher$PathWatchEventType").when(httpServletRequest0).getQueryString();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.queryString();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object object0 = new Object();
      RouteMatch routeMatch0 = new RouteMatch(object0, "", "jrt:", "WATCH");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getQueryString();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.queryString();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[5];
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(stringArray0).when(httpServletRequest0).getParameterValues(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String[] stringArray1 = request0.queryParamsValues("spark.Request");
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[0];
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(stringArray0).when(httpServletRequest0).getParameterValues(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String[] stringArray1 = request0.queryParamsValues("UTF-8");
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(":jrt:").when(httpServletRequest0).getParameter(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.queryParamsSafe("fGu3$IUBLZ");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getParameter(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.queryParamsSafe("fGu3$IUBLZ");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("O5K4N$c}M#')<<Y").when(httpServletRequest0).getParameter(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.queryParams("O5K4N$c}M#')<<Y");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object object0 = new Object();
      RouteMatch routeMatch0 = new RouteMatch(object0, "", "jrt:", "WATCH");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getParameter(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.queryParams("WATCH");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object object0 = new Object();
      RouteMatch routeMatch0 = new RouteMatch(object0, "", "jrt:", "WATCH");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getParameter(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.queryParamOrDefault("jrt:", (String) null);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, "-4^u").when(httpServletRequest0).getProtocol();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      request0.protocol();
      String string0 = request0.protocol();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch("", "aFpJ12X-Ky", "aFpJ12X-Ky", "glob:");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getProtocol();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.protocol();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(58).when(httpServletRequest0).getServerPort();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      int int0 = request0.port();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((-16519105)).when(httpServletRequest0).getServerPort();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      int int0 = request0.port();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(" [depth=").when(httpServletRequest0).getPathInfo();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.pathInfo();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, "").when(httpServletRequest0).getPathInfo();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      request0.pathInfo();
      request0.pathInfo();
      String string0 = request0.pathInfo();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      RouteMatch routeMatch0 = new RouteMatch(object0, "HZ\"Tv", "HZ\"Tv", "G>1e`e9");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.matchedPath();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpMethod httpMethod0 = HttpMethod.before;
      RouteMatch routeMatch0 = new RouteMatch((Object) null, "", "", "Sy1Q>6B!c?;*:hT,\"T", httpMethod0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.matchedPath();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("1o%AIj!|j<G{PsZO").when(httpServletRequest0).getRemoteAddr();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.ip();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getRemoteAddr();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.ip();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("n").when(httpServletRequest0).getHeader(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.host();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getHeader(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.host();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("n").when(httpServletRequest0).getHeader(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.headers("Iec:Z NaEn#12D'N$");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Cookie[] cookieArray0 = new Cookie[1];
      Cookie cookie0 = new Cookie("n'", "n'");
      cookieArray0[0] = cookie0;
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(cookieArray0).when(httpServletRequest0).getCookies();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      Map<String, String> map0 = request0.cookies();
      assertTrue(map0.isEmpty());
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Cookie[] cookieArray0 = new Cookie[1];
      Cookie cookie0 = new Cookie("n'", "n'");
      cookieArray0[0] = cookie0;
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(cookieArray0).when(httpServletRequest0).getCookies();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      cookie0.setValue("");
      String string0 = request0.cookie("n'");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("-").when(httpServletRequest0).getContextPath();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.contextPath();
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object object0 = new Object();
      RouteMatch routeMatch0 = new RouteMatch(object0, "", "jrt:", "WATCH");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getContextPath();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.contextPath();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch("", "y`X2:", "y`X2:", "");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("G").when(httpServletRequest0).getContentType();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.contentType();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch("", "y`X2:", "y`X2:", "");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getContentType();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.contentType();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(1369).when(httpServletRequest0).getContentLength();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      int int0 = request0.contentLength();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((-92035013)).when(httpServletRequest0).getContentLength();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      int int0 = request0.contentLength();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch("", "y`X2:", "y`X2:", "");
      ServletInputStream servletInputStream0 = mock(ServletInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(888, 888, (-1)).when(servletInputStream0).read(any(byte[].class));
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(servletInputStream0).when(httpServletRequest0).getInputStream();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      byte[] byteArray0 = request0.bodyAsBytes();
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("matchedPart: ").when(httpServletRequest0).getAttribute(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      Object object0 = request0.attribute("");
      assertNotNull(object0);
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.userAgent();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(servletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.userAgent();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      Request request0 = new Request(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.url();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClasspathPattern.ByPackageOrName classpathPattern_ByPackageOrName0 = new ClasspathPattern.ByPackageOrName();
      HttpMethod httpMethod0 = HttpMethod.unsupported;
      RouteMatch routeMatch0 = new RouteMatch(classpathPattern_ByPackageOrName0, "(#A|+1rg91", "6 7bEQ", "''H+4l", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(httpServletRequest0).getParameterMap();
      doReturn((String) null).when(httpServletRequest0).getProtocol();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      request0.protocol();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(httpServletRequestWrapper0);
      request0.splat();
      // Undeclared exception!
      try { 
        request0.queryMap(":>PKvONKhz&6@J<7@VfL");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.QueryParamsMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      Request request0 = new Request(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.uri();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.uri();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Object object0 = new Object();
      HttpMethod httpMethod0 = HttpMethod.after;
      RouteMatch routeMatch0 = new RouteMatch(object0, "java.lang.Short", "java.lang.Short", "java.lang.Short", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(servletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.uri();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.splat();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Request request0 = new Request();
      RouteMatch routeMatch0 = new RouteMatch(request0, "6;L2kC@}'*X.'$A9PM,", "6;L2kC@}'*X.'$A9PM,", "6;L2kC@}'*X.'$A9PM,");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request1 = new Request(routeMatch0, httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request1.session(true);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.session(true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch("user-gent", "user-gent", "user-gent", "user-gent", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(servletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.session(false);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch("", "aFpJ1X-Ky", "aFpJ1X-Ky", "gTlob");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.session();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.session();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(servletRequestWrapper0);
      Request request0 = new Request(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.session();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.servletPath();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.servletPath();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch((Object) null, "$B4P*[lZ<]j,", "MQ7;[/@G+KdGo", "j");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(servletRequestWrapper0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.servletPath();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch((Object) null, ":UNKNOWN", ":UNKNOWN", "I");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.scheme();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Object object0 = new Object();
      HttpMethod httpMethod0 = HttpMethod.get;
      RouteMatch routeMatch0 = new RouteMatch(object0, "Ayn] 1ZdAXoB%/ncK]", "UTF-8", "Ayn] 1ZdAXoB%/ncK]", httpMethod0);
      Request request0 = new Request(routeMatch0, (HttpServletRequest) null);
      // Undeclared exception!
      try { 
        request0.scheme();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.requestMethod();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(servletRequestWrapper0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.requestMethod();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.queryString();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.queryString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.queryParamsValues("UTF-8");
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.queryParamsValues("2PW^yTH:}L\"@D[6}");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.queryParamsSafe(" = ");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.queryParams("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      RouteMatch routeMatch0 = new RouteMatch((Object) null, "f1j[dg8{+nhcH2d", "hHK{Y$&hWrMA=y S", "hHK{Y$&hWrMA=y S");
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.queryParams();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(httpServletRequest0).getParameterMap();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.queryParams();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.queryMap("::TWDaJr((ZFGVdE4C*` ");
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.queryMap("02S[Y9v=C:");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // HttpServletRequest cannot be null.
         //
         verifyException("spark.QueryParamsMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      Request request0 = new Request(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.queryMap();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).toString();
      doReturn((Map) null).when(httpServletRequest0).getParameterMap();
      Request request0 = new Request(httpServletRequest0);
      // Undeclared exception!
      try { 
        request0.queryMap();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.QueryParamsMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.queryMap();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // HttpServletRequest cannot be null.
         //
         verifyException("spark.QueryParamsMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.protocol();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.protocol();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpMethod httpMethod0 = HttpMethod.after;
      RouteMatch routeMatch0 = new RouteMatch((Object) null, "Not file or doesn't exist: ", "0F%%li%j4r2$bPO", "spark.utils.urldecoding.Utf8Appendable", httpMethod0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.port();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.port();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.pathInfo();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch("", "aFpJ1X-Ky", "aFpJ1X-Ky", "glob:");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(servletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.pathInfo();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.params("3_Jq");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch("user-gent", "user-gent", "user-gent", "user-gent", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.ip();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.ip();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.host();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.headers("E`##l_Mw})aK7'bt");
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(servletRequestWrapper0);
      HttpMethod httpMethod0 = HttpMethod.unsupported;
      RouteMatch routeMatch0 = new RouteMatch(servletRequestWrapper0, "zA$", ":@]S@Z>-wg_`~5}", "", httpMethod0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.headers();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Request request0 = new Request();
      RouteMatch routeMatch0 = new RouteMatch(request0, "*", "*", "*");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      Request request1 = new Request(routeMatch0, httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request1.cookies();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(servletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.cookies();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      Request request0 = new Request(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.cookie("n'");
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(servletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.cookie("| ");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      Request request0 = new Request(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.contextPath();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.contextPath();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.contentType();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.contentType();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      RouteMatch routeMatch0 = new RouteMatch((Object) null, "rO+Oi`(YUjU", "v| ", "v| ");
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.contentLength();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.contentLength();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      RouteMatch routeMatch0 = new RouteMatch((Object) null, ":LRb+~OKYV)", "he. Nq'A%7NFA.u", "Exception when reading body");
      // Undeclared exception!
      try { 
        request0.changeMatch(routeMatch0);
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
         //
         // !hex N
         //
         verifyException("spark.utils.urldecoding.TypeUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      RouteMatch routeMatch0 = new RouteMatch((Object) null, (String) null, (String) null, (String) null);
      // Undeclared exception!
      try { 
        request0.changeMatch(routeMatch0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = "";
      HttpMethod httpMethod0 = HttpMethod.afterafter;
      RouteMatch routeMatch0 = new RouteMatch("^sF>{7\"506rjWDy$T!", "", "^sF>{7\"506rjWDy$T!", "q>2JZ9!HR{", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(httpServletRequest0).getAttributeNames();
      doReturn((String) null).when(httpServletRequest0).getParameter(anyString());
      doReturn((Map) null).when(httpServletRequest0).getParameterMap();
      doReturn((Cookie[]) null).when(httpServletRequest0).getCookies();
      doReturn((String) null).when(httpServletRequest0).getHeader(anyString());
      doReturn((String) null).when(httpServletRequest0).getRemoteUser();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.getRemoteUser();
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      request0.host();
      request0.queryParams("");
      request0.cookie("q>2JZ9!HR{");
      httpServletRequestWrapper0.getAttributeNames();
      // Undeclared exception!
      try { 
        request0.queryParams();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(":jrt:").when(httpServletRequest0).getCharacterEncoding();
      doReturn((ServletInputStream) null).when(httpServletRequest0).getInputStream();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.body();
        fail("Expecting exception: IllegalCharsetNameException");
      } catch(IllegalCharsetNameException e) {
         //
         // :jrt:
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Object object0 = new Object();
      HttpMethod httpMethod0 = HttpMethod.trace;
      RouteMatch routeMatch0 = new RouteMatch(object0, "+w~lKpq", "+w~lKpq", "g&mi\u0005$V^u", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.body();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getCharacterEncoding();
      doReturn((ServletInputStream) null).when(httpServletRequest0).getInputStream();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.body();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      Request request0 = new Request(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.attributes();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.attribute("", (Object) "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.attribute(">AQCljF[<5]h?6d1 #");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpMethod httpMethod0 = HttpMethod.head;
      RouteMatch routeMatch0 = new RouteMatch((Object) null, ":EF80z5", "T,v)==3.R%E=Z&W!Q", "T,v)==3.R%E=Z&W!Q", httpMethod0);
      Request request0 = null;
      try {
        request0 = new Request(routeMatch0, httpServletRequestWrapper0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Not valid UTF8! char appended in state 60
         //
         verifyException("spark.utils.urldecoding.Utf8Appendable", e);
      }
  }
 @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      RouteMatch routeMatch0 = new RouteMatch((Object) null, ": = ", "Oky B%PQoM :", ": = ");
      Request request0 = null;
      try {
        request0 = new Request(routeMatch0, httpServletRequestWrapper0);
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
         //
         // !hex P
         //
         verifyException("spark.utils.urldecoding.TypeUtil", e);
      }
  }
 @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch(":", ":", ":S`hFRg2pN*?", "host");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      Request request0 = new Request(routeMatch0, httpServletRequest0);
      HttpServletRequest httpServletRequest1 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest1);
      HttpMethod httpMethod0 = HttpMethod.options;
      RouteMatch routeMatch1 = new RouteMatch(request0, (String) null, "test({}) -> [depth {}>{}]", (String) null, httpMethod0);
      Request request1 = null;
      try {
        request1 = new Request(routeMatch1, httpServletRequestWrapper0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request();
      RouteMatch routeMatch0 = new RouteMatch(request0, "*", ":%0)T]7aCo", "UTF-8");
      Request request1 = null;
      try {
        request1 = new Request(routeMatch0, httpServletRequestWrapper0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // URLDecoder: Illegal hex characters in escape (%) pattern - For input string: \"0)\"
         //
         verifyException("java.net.URLDecoder", e);
      }
  }
 @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Object object0 = new Object();
      HttpMethod httpMethod0 = HttpMethod.trace;
      RouteMatch routeMatch0 = new RouteMatch(object0, ":", ":", ":", httpMethod0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.params(":");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getHeader(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.userAgent();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getContentType();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.contentType();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getHeader(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.headers(",&'MK6k[");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch("", "aFpJ12X-Ky", "aFpJ12X-Ky", "glob:");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getRequestURI();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.uri();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      HttpServletRequest httpServletRequest1 = request0.raw();
      ;
}
 @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpMethod httpMethod0 = HttpMethod.after;
      RouteMatch routeMatch0 = new RouteMatch(httpServletRequestWrapper0, "*", "}uUhsO/P:", "-AN~CpDteaI~v9kU~k", httpMethod0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      assertNotNull(request0.matchedPath());
}
 @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Request request0 = new Request();
      RouteMatch routeMatch0 = new RouteMatch(request0, "*", "*", "");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request1 = new Request(routeMatch0, httpServletRequestWrapper0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request1.headers();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Cookie[] cookieArray0 = new Cookie[1];
      Cookie cookie0 = new Cookie("n'", "n'");
      cookieArray0[0] = cookie0;
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(cookieArray0).when(httpServletRequest0).getCookies();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.cookie("n'");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Cookie[] cookieArray0 = new Cookie[1];
      Cookie cookie0 = new Cookie("p!", "p!");
      cookieArray0[0] = cookie0;
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(cookieArray0).when(httpServletRequest0).getCookies();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.cookie("n#");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Cookie[] cookieArray0 = new Cookie[1];
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(cookieArray0).when(httpServletRequest0).getCookies();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.cookie("n#");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Cookie[] cookieArray0 = new Cookie[1];
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(cookieArray0).when(httpServletRequest0).getCookies();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.cookies();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch("5", "y`X2:", "y`X2:", "5");
      Cookie[] cookieArray0 = new Cookie[0];
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(cookieArray0).when(httpServletRequest0).getCookies();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      Map<String, String> map0 = request0.cookies();
      ;
}
 @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch("5", "y`X2:", "y`X2:", "5");
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(httpSession0).when(httpServletRequest0).getSession(anyBoolean());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      Session session0 = request0.session(true);
      assertNotNull(session0);
}
 @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch(" |", " |", " |", " |");
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      doReturn((HttpSession) null).when(httpServletRequest0).getSession(anyBoolean());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      request0.session();
      request0.validSession(false);
      Session session0 = request0.session(false);
      assertNotNull(session0);
}
 @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch(" |", " |", " |", " |");
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      Session session0 = request0.session();
      Session session1 = request0.session(false);
      ;
}
 @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch(" |", " |", " |", " |");
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(httpSession0, (HttpSession) null).when(httpServletRequest0).getSession();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      request0.session();
      request0.validSession(false);
      // Undeclared exception!
      try { 
        request0.session();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // session cannot be null
         //
         verifyException("spark.utils.Assert", e);
      }
  }
 @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch(" |", " |", " |", " |");
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      Session session0 = request0.session();
      Session session1 = request0.session();
      ;
}
 @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getParameter(anyString());
      doReturn((Map) null).when(httpServletRequest0).getParameterMap();
      doReturn((Cookie[]) null).when(httpServletRequest0).getCookies();
      doReturn((String) null).when(httpServletRequest0).getQueryString();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      request0.cookies();
      request0.queryParams("~\f#IS1^g_e!");
      request0.queryString();
      request0.validSession(false);
      // Undeclared exception!
      try { 
        request0.queryMap("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.QueryParamsMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(httpServletRequest0).getHeaderNames();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.headers();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch(" |", " |", " |", " |");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(" |").when(httpServletRequest0).getParameter(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.queryParamOrDefault("S6TOPPING", "");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch("5", "y`X2:", "y`X2:", "5");
      ServletInputStream servletInputStream0 = mock(ServletInputStream.class, new ViolatedAssumptionAnswer());
      doReturn((-1)).when(servletInputStream0).read(any(byte[].class));
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getCharacterEncoding();
      doReturn(servletInputStream0).when(httpServletRequest0).getInputStream();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      request0.body();
      byte[] byteArray0 = request0.bodyAsBytes();
      ;
}
 @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      RouteMatch routeMatch0 = new RouteMatch("5", "y`X2:", "y`X2:", "5");
      ServletInputStream servletInputStream0 = mock(ServletInputStream.class, new ViolatedAssumptionAnswer());
      doReturn((-1)).when(servletInputStream0).read(any(byte[].class));
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getCharacterEncoding();
      doReturn(servletInputStream0).when(httpServletRequest0).getInputStream();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      request0.body();
      String string0 = request0.body();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Object object0 = new Object();
      RouteMatch routeMatch0 = new RouteMatch(object0, "", "jrt:", "WATCH");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.params("d7Ct]");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.params((String) null);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.matchedPath();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      HttpMethod httpMethod0 = HttpMethod.patch;
      RouteMatch routeMatch0 = new RouteMatch(",&'MK6k[", "", ",&'MK6k[", "mbuM&|", httpMethod0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getServletPath();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      String string0 = request0.servletPath();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(httpServletRequest0).getServerPort();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      int int0 = request0.port();
      ;
}
 @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getParameter(anyString());
      Request request0 = new Request(httpServletRequest0);
      String string0 = request0.queryParamsSafe("");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getRemoteAddr();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.ip();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String[]) null).when(httpServletRequest0).getParameterValues(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String[] stringArray0 = request0.queryParamsValues("");
      assertNotNull(stringArray0);
}
 @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Object object0 = new Object();
      RouteMatch routeMatch0 = new RouteMatch(object0, "", "jrt:", "WATCH");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((StringBuffer) null).when(httpServletRequest0).getRequestURL();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(routeMatch0, httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        request0.url();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.Request", e);
      }
  }
 @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Request request0 = new Request();
      // Undeclared exception!
      try { 
        request0.params();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(httpServletRequest0).getContentLength();
      Request request0 = new Request(httpServletRequest0);
      int int0 = request0.contentLength();
      ;
}
 @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getContextPath();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Request request0 = new Request(httpServletRequestWrapper0);
      String string0 = request0.contextPath();
      ;
}
}
