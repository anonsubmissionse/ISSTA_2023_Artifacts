 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean((CacheManager) null);
      WebBeansContext webBeansContext0 = WebBeansContext.currentInstance();
      BeanManagerImpl beanManagerImpl0 = webBeansContext0.getBeanManagerImpl();
      CreationalContextImpl<CacheManager> creationalContextImpl0 = beanManagerImpl0.createCreationalContext((Contextual<CacheManager>) cacheManagerBean0);
      cacheManagerBean0.create(creationalContextImpl0);
      assertNotNull(cacheManagerBean0.getId());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean((CacheManager) null);
      WebBeansContext webBeansContext0 = WebBeansContext.currentInstance();
      BeanManagerImpl beanManagerImpl0 = webBeansContext0.getBeanManagerImpl();
      CreationalContextImpl<CacheManager> creationalContextImpl0 = beanManagerImpl0.createCreationalContext((Contextual<CacheManager>) cacheManagerBean0);
      // Undeclared exception!
      try { 
        cacheManagerBean0.destroy((CacheManager) null, (CreationalContext<CacheManager>) creationalContextImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.extras.cdi.CacheManagerBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JCSCachingProvider jCSCachingProvider0 = new JCSCachingProvider();
      CacheManager cacheManager0 = jCSCachingProvider0.getCacheManager();
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean(cacheManager0);
      WebBeansContext webBeansContext0 = WebBeansContext.currentInstance();
      BeanManagerImpl beanManagerImpl0 = new BeanManagerImpl(webBeansContext0);
      CreationalContextImpl<CacheManager> creationalContextImpl0 = beanManagerImpl0.createCreationalContext((Contextual<CacheManager>) cacheManagerBean0);
      cacheManagerBean0.create(creationalContextImpl0);
      assertNotNull(cacheManagerBean0.getId());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JCSCachingProvider jCSCachingProvider0 = new JCSCachingProvider();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JCSCachingManager jCSCachingManager0 = new JCSCachingManager(jCSCachingProvider0, jCSCachingProvider0.DEFAULT_URI, classLoader0, (Properties) null);
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean(jCSCachingManager0);
      cacheManagerBean0.getName();
      assertNotNull(cacheManagerBean0.getId());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JCSCachingProvider jCSCachingProvider0 = new JCSCachingProvider();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JCSCachingManager jCSCachingManager0 = new JCSCachingManager(jCSCachingProvider0, jCSCachingProvider0.DEFAULT_URI, classLoader0, (Properties) null);
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean(jCSCachingManager0);
      cacheManagerBean0.getQualifiers();
      assertNotNull(cacheManagerBean0.getId());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JCSCachingProvider jCSCachingProvider0 = new JCSCachingProvider();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JCSCachingManager jCSCachingManager0 = new JCSCachingManager(jCSCachingProvider0, jCSCachingProvider0.DEFAULT_URI, classLoader0, (Properties) null);
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean(jCSCachingManager0);
      cacheManagerBean0.getTypes();
      assertNotNull(cacheManagerBean0.getId());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JCSCachingProvider jCSCachingProvider0 = new JCSCachingProvider();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JCSCachingManager jCSCachingManager0 = new JCSCachingManager(jCSCachingProvider0, jCSCachingProvider0.DEFAULT_URI, classLoader0, (Properties) null);
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean(jCSCachingManager0);
      cacheManagerBean0.getInjectionPoints();
      assertNotNull(cacheManagerBean0.getId());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      JCSCachingProvider jCSCachingProvider0 = new JCSCachingProvider();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JCSCachingManager jCSCachingManager0 = new JCSCachingManager(jCSCachingProvider0, jCSCachingProvider0.DEFAULT_URI, classLoader0, (Properties) null);
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean(jCSCachingManager0);
      String string0 = cacheManagerBean0.getId();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      JCSCachingProvider jCSCachingProvider0 = new JCSCachingProvider();
      CacheManager cacheManager0 = jCSCachingProvider0.getCacheManager();
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean(cacheManager0);
      WebBeansContext webBeansContext0 = WebBeansContext.currentInstance();
      BeanManagerImpl beanManagerImpl0 = new BeanManagerImpl(webBeansContext0);
      CreationalContextImpl<CacheManager> creationalContextImpl0 = beanManagerImpl0.createCreationalContext((Contextual<CacheManager>) cacheManagerBean0);
      cacheManagerBean0.destroy(cacheManager0, (CreationalContext<CacheManager>) creationalContextImpl0);
      assertNotNull(cacheManagerBean0.getId());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      JCSCachingProvider jCSCachingProvider0 = new JCSCachingProvider();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JCSCachingManager jCSCachingManager0 = new JCSCachingManager(jCSCachingProvider0, jCSCachingProvider0.DEFAULT_URI, classLoader0, (Properties) null);
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean(jCSCachingManager0);
      cacheManagerBean0.getBeanClass();
      assertNotNull(cacheManagerBean0.getId());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JCSCachingProvider jCSCachingProvider0 = new JCSCachingProvider();
      CacheManager cacheManager0 = jCSCachingProvider0.getCacheManager();
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean(cacheManager0);
      boolean boolean0 = cacheManagerBean0.isNullable();
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JCSCachingProvider jCSCachingProvider0 = new JCSCachingProvider();
      CacheManager cacheManager0 = jCSCachingProvider0.getCacheManager();
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean(cacheManager0);
      boolean boolean0 = cacheManagerBean0.isNullable();
      assertNotNull(cacheManagerBean0.getId());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JCSCachingProvider jCSCachingProvider0 = new JCSCachingProvider();
      CacheManager cacheManager0 = jCSCachingProvider0.getCacheManager();
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean(cacheManager0);
      boolean boolean0 = cacheManagerBean0.isAlternative();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JCSCachingProvider jCSCachingProvider0 = new JCSCachingProvider();
      CacheManager cacheManager0 = jCSCachingProvider0.getCacheManager();
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean(cacheManager0);
      boolean boolean0 = cacheManagerBean0.isAlternative();
      assertNotNull(cacheManagerBean0.getId());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JCSCachingProvider jCSCachingProvider0 = new JCSCachingProvider();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JCSCachingManager jCSCachingManager0 = new JCSCachingManager(jCSCachingProvider0, jCSCachingProvider0.DEFAULT_URI, classLoader0, (Properties) null);
      CacheManagerBean cacheManagerBean0 = new CacheManagerBean(jCSCachingManager0);
      cacheManagerBean0.getScope();
      assertNotNull(cacheManagerBean0.getId());
}
