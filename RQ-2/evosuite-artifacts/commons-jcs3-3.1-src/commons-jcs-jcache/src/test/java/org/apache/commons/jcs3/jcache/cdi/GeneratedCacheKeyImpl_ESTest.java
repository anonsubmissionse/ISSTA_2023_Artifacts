/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 22:14:15 GMT 2022
 */

package org.apache.commons.jcs3.jcache.cdi;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.jcs3.jcache.cdi.GeneratedCacheKeyImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GeneratedCacheKeyImpl_ESTest extends GeneratedCacheKeyImpl_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GeneratedCacheKeyImpl generatedCacheKeyImpl0 = new GeneratedCacheKeyImpl((Object[]) null);
      GeneratedCacheKeyImpl generatedCacheKeyImpl1 = new GeneratedCacheKeyImpl((Object[]) null);
      boolean boolean0 = generatedCacheKeyImpl0.equals(generatedCacheKeyImpl1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GeneratedCacheKeyImpl generatedCacheKeyImpl0 = new GeneratedCacheKeyImpl((Object[]) null);
      Object object0 = new Object();
      boolean boolean0 = generatedCacheKeyImpl0.equals(object0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GeneratedCacheKeyImpl generatedCacheKeyImpl0 = new GeneratedCacheKeyImpl((Object[]) null);
      boolean boolean0 = generatedCacheKeyImpl0.equals(generatedCacheKeyImpl0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GeneratedCacheKeyImpl generatedCacheKeyImpl0 = new GeneratedCacheKeyImpl((Object[]) null);
      boolean boolean0 = generatedCacheKeyImpl0.equals((Object) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GeneratedCacheKeyImpl generatedCacheKeyImpl0 = new GeneratedCacheKeyImpl((Object[]) null);
      generatedCacheKeyImpl0.hashCode();
  }
}
