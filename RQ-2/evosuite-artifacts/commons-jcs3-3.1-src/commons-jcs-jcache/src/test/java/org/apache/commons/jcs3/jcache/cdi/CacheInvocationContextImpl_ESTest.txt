 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      doReturn(object0).when(invocationContext0).getTarget();
      Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 4);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Integer[] integerArray0 = new Integer[0];
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, linkedHashSet0, integerArray0, (Integer) null, integerArray0, ";ux6<", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, ";ux6<", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cachePut0, "org.apache.commons.jcs3.jcache.cdi.CacheInvocationContextImpl", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cacheRemove0, ";ux6<", cacheResolverFactoryImpl0, false, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, ";ux6<", cDIJCacheHelper_MethodMeta0);
      Object object1 = cacheInvocationContextImpl0.getTarget();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocationContext0).getParameters();
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 1);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      Integer[] integerArray0 = new Integer[0];
      Integer integer0 = new Integer((-678));
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, (Set<Annotation>) null, integerArray0, integer0, integerArray0, "", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, "", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cachePut0, "", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cacheRemove0, "", cacheResolverFactoryImpl0, true, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, "", cDIJCacheHelper_MethodMeta0);
      InvocationContext invocationContext1 = cacheInvocationContextImpl0.delegate;
      CacheKeyInvocationContextImpl<Annotation> cacheKeyInvocationContextImpl0 = new CacheKeyInvocationContextImpl<Annotation>(invocationContext1, (Annotation) null, "", cDIJCacheHelper_MethodMeta0);
      CacheInvocationParameter[] cacheInvocationParameterArray0 = cacheKeyInvocationContextImpl0.getAllParameters();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocationContext0).getParameters();
      Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 4);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Integer[] integerArray0 = new Integer[0];
      linkedList0.add((Set<Annotation>) linkedHashSet0);
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, linkedHashSet0, integerArray0, (Integer) null, integerArray0, ";ux6<", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, ";ux6<", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cachePut0, "org.apache.commons.jcs3.jcache.cdi.CacheInvocationContextImpl", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cacheRemove0, ";ux6<", cacheResolverFactoryImpl0, false, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, ";ux6<", cDIJCacheHelper_MethodMeta0);
      CacheInvocationParameter[] cacheInvocationParameterArray0 = cacheInvocationContextImpl0.doGetAllParameters((Integer[]) null);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 1);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      Integer[] integerArray0 = new Integer[0];
      Integer integer0 = new Integer((-678));
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, (Set<Annotation>) null, integerArray0, integer0, integerArray0, "", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, "", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cachePut0, "", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cacheRemove0, "", cacheResolverFactoryImpl0, true, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, "", cDIJCacheHelper_MethodMeta0);
      // Undeclared exception!
      try { 
        cacheInvocationContextImpl0.unwrap((Class<String>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.cdi.CacheInvocationContextImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 1);
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Integer[] integerArray0 = new Integer[4];
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, (List<Set<Annotation>>) null, linkedHashSet0, integerArray0, integerArray0[0], integerArray0, "N*jfOK^3PHm+P|Xnk ", cacheResolverFactoryImpl0, (CacheKeyGenerator) null, cacheResult0, "org.apache.commons.jcs3.jcache.cdi.CacheInvocationContextImpl", cacheResolverFactoryImpl0, (CacheKeyGenerator) null, false, cachePut0, "N*jfOK^3PHm+P|Xnk ", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, false, cacheRemove0, "N*jfOK^3PHm+P|Xnk ", cacheResolverFactoryImpl0, false, cacheRemoveAll0);
      CacheKeyInvocationContextImpl<Annotation> cacheKeyInvocationContextImpl0 = new CacheKeyInvocationContextImpl<Annotation>((InvocationContext) null, (Annotation) null, "", cDIJCacheHelper_MethodMeta0);
      // Undeclared exception!
      try { 
        cacheKeyInvocationContextImpl0.getTarget();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.cdi.CacheInvocationContextImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 4);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      Integer[] integerArray0 = new Integer[4];
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, (Set<Annotation>) null, integerArray0, integerArray0[1], integerArray0, "?KVS3QHSPWHd<?L ", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, "org.apache.commons.jcs3.jcache.cdi.skip-close", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, false, (CachePut) null, "", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, false, cacheRemove0, "dK", cacheResolverFactoryImpl0, false, cacheRemoveAll0);
      CacheKeyInvocationContextImpl<Annotation> cacheKeyInvocationContextImpl0 = new CacheKeyInvocationContextImpl<Annotation>((InvocationContext) null, (Annotation) null, "Zfv,f@VEbQWf4d@0", cDIJCacheHelper_MethodMeta0);
      // Undeclared exception!
      try { 
        cacheKeyInvocationContextImpl0.getAllParameters();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.cdi.CacheInvocationContextImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocationContext0).getParameters();
      Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 4);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Integer[] integerArray0 = new Integer[0];
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, linkedHashSet0, integerArray0, (Integer) null, integerArray0, ";ux6<", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, ";ux6<", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cachePut0, "org.apache.commons.jcs3.jcache.cdi.CacheInvocationContextImpl", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cacheRemove0, ";ux6<", cacheResolverFactoryImpl0, false, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, ";ux6<", cDIJCacheHelper_MethodMeta0);
      InvocationContext invocationContext1 = cacheInvocationContextImpl0.delegate;
      CacheKeyInvocationContextImpl<Annotation> cacheKeyInvocationContextImpl0 = new CacheKeyInvocationContextImpl<Annotation>(invocationContext1, (Annotation) null, "org.apache.commons.jcs3.jcache.cdi.CacheInvocationParameterImpl", cDIJCacheHelper_MethodMeta0);
      // Undeclared exception!
      try { 
        cacheKeyInvocationContextImpl0.getAllParameters();
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(invocationContext0).getParameters();
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 0);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Integer integer0 = new Integer(5);
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, linkedHashSet0, (Integer[]) null, integer0, (Integer[]) null, "", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, "", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cachePut0, "", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, (CacheRemove) null, "", cacheResolverFactoryImpl0, true, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, "", cDIJCacheHelper_MethodMeta0);
      InvocationContext invocationContext1 = cacheInvocationContextImpl0.delegate;
      CacheKeyInvocationContextImpl<Annotation> cacheKeyInvocationContextImpl0 = new CacheKeyInvocationContextImpl<Annotation>(invocationContext1, (Annotation) null, "", cDIJCacheHelper_MethodMeta0);
      cacheKeyGeneratorImpl0.generateCacheKey(cacheKeyInvocationContextImpl0);
      cacheInvocationContextImpl0.getAllParameters();
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocationContext0).getParameters();
      Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 4);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Integer[] integerArray0 = new Integer[0];
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, linkedHashSet0, integerArray0, (Integer) null, integerArray0, ";ux6<", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, ";ux6<", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cachePut0, "org.apache.commons.jcs3.jcache.cdi.CacheInvocationContextImpl", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cacheRemove0, ";ux6<", cacheResolverFactoryImpl0, false, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, ";ux6<", cDIJCacheHelper_MethodMeta0);
      // Undeclared exception!
      try { 
        cacheInvocationContextImpl0.doGetAllParameters((Integer[]) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocationContext0).getParameters();
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 1);
      Integer[] integerArray0 = new Integer[1];
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, (List<Set<Annotation>>) null, (Set<Annotation>) null, integerArray0, integer0, integerArray0, "j", cacheResolverFactoryImpl0, (CacheKeyGenerator) null, cacheResult0, "j", cacheResolverFactoryImpl0, (CacheKeyGenerator) null, true, cachePut0, "j", cacheResolverFactoryImpl0, (CacheKeyGenerator) null, true, cacheRemove0, "", cacheResolverFactoryImpl0, true, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, "j", cDIJCacheHelper_MethodMeta0);
      // Undeclared exception!
      try { 
        cacheInvocationContextImpl0.doGetAllParameters(integerArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.jcs3.jcache.cdi.CacheInvocationContextImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Annotation annotation0 = mock(Annotation.class, new ViolatedAssumptionAnswer());
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = null;
      try {
        cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>((InvocationContext) null, annotation0, "", (CDIJCacheHelper.MethodMeta) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.cdi.CacheMethodDetailsImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocationContext0).getParameters();
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 1);
      Integer[] integerArray0 = new Integer[1];
      Integer integer0 = new Integer(0);
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, (List<Set<Annotation>>) null, (Set<Annotation>) null, integerArray0, integer0, integerArray0, "j", cacheResolverFactoryImpl0, (CacheKeyGenerator) null, cacheResult0, "j", cacheResolverFactoryImpl0, (CacheKeyGenerator) null, true, cachePut0, "j", cacheResolverFactoryImpl0, (CacheKeyGenerator) null, true, cacheRemove0, "", cacheResolverFactoryImpl0, true, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, "j", cDIJCacheHelper_MethodMeta0);
      // Undeclared exception!
      try { 
        cacheInvocationContextImpl0.doGetAllParameters(integerArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.cdi.CacheInvocationContextImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object) objectArray0, (Object) null).when(invocationContext0).getParameters();
      Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 4);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Integer[] integerArray0 = new Integer[0];
      linkedList0.add((Set<Annotation>) linkedHashSet0);
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, linkedHashSet0, integerArray0, (Integer) null, integerArray0, ";ux6<", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, ";ux6<", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cachePut0, "org.apache.commons.jcs3.jcache.cdi.CacheInvocationContextImpl", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cacheRemove0, ";ux6<", cacheResolverFactoryImpl0, true, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, ";ux6<", cDIJCacheHelper_MethodMeta0);
      InvocationContext invocationContext1 = cacheInvocationContextImpl0.delegate;
      CacheKeyInvocationContextImpl<Annotation> cacheKeyInvocationContextImpl0 = new CacheKeyInvocationContextImpl<Annotation>(invocationContext1, (Annotation) null, "org.apache.commons.jcs3.jcache.cdi.CacheInvocationParameterImpl", cDIJCacheHelper_MethodMeta0);
      cacheKeyInvocationContextImpl0.getAllParameters();
      CacheInvocationParameter[] cacheInvocationParameterArray0 = cacheKeyInvocationContextImpl0.doGetAllParameters(integerArray0);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 2);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Integer[] integerArray0 = new Integer[0];
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, linkedHashSet0, integerArray0, (Integer) null, integerArray0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cachePut0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cacheRemove0, "pxOjs2e0>C", cacheResolverFactoryImpl0, true, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, "pxOjs2e0>C", cDIJCacheHelper_MethodMeta0);
      Class<Object> class0 = Object.class;
      CacheInvocationContextImpl cacheInvocationContextImpl1 = (CacheInvocationContextImpl)cacheInvocationContextImpl0.unwrap(class0);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 2);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Integer[] integerArray0 = new Integer[0];
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, linkedHashSet0, integerArray0, (Integer) null, integerArray0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cachePut0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cacheRemove0, "pxOjs2e0>C", cacheResolverFactoryImpl0, true, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, "pxOjs2e0>C", cDIJCacheHelper_MethodMeta0);
      InvocationContext invocationContext1 = cacheInvocationContextImpl0.delegate;
      CacheKeyInvocationContextImpl<Annotation> cacheKeyInvocationContextImpl0 = new CacheKeyInvocationContextImpl<Annotation>(invocationContext1, (Annotation) null, "pxOjs2e0>C", cDIJCacheHelper_MethodMeta0);
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        cacheKeyInvocationContextImpl0.unwrap(class0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // java.lang.String
         //
         verifyException("org.apache.commons.jcs3.jcache.cdi.CacheInvocationContextImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0[0]).when(invocationContext0).getTarget();
      Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 2);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Integer[] integerArray0 = new Integer[0];
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, linkedHashSet0, integerArray0, (Integer) null, integerArray0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cachePut0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cacheRemove0, "pxOjs2e0>C", cacheResolverFactoryImpl0, true, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, "pxOjs2e0>C", cDIJCacheHelper_MethodMeta0);
      InvocationContext invocationContext1 = cacheInvocationContextImpl0.delegate;
      CacheKeyInvocationContextImpl<Annotation> cacheKeyInvocationContextImpl0 = new CacheKeyInvocationContextImpl<Annotation>(invocationContext1, (Annotation) null, "pxOjs2e0>C", cDIJCacheHelper_MethodMeta0);
      Object object0 = cacheKeyInvocationContextImpl0.getTarget();
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocationContext0).getParameters();
      Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 2);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Integer[] integerArray0 = new Integer[0];
      linkedList0.add((Set<Annotation>) linkedHashSet0);
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, linkedHashSet0, integerArray0, (Integer) null, integerArray0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cachePut0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cacheRemove0, "pxOjs2e0>C", cacheResolverFactoryImpl0, true, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, "pxOjs2e0>C", cDIJCacheHelper_MethodMeta0);
      InvocationContext invocationContext1 = cacheInvocationContextImpl0.delegate;
      CacheKeyInvocationContextImpl<Annotation> cacheKeyInvocationContextImpl0 = new CacheKeyInvocationContextImpl<Annotation>(invocationContext1, (Annotation) null, "pxOjs2e0>C", cDIJCacheHelper_MethodMeta0);
      cacheKeyInvocationContextImpl0.getAllParameters();
      CacheInvocationParameter[] cacheInvocationParameterArray0 = cacheKeyInvocationContextImpl0.getAllParameters();
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocationContext0).getParameters();
      Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 2);
      LinkedList<Set<Annotation>> linkedList0 = new LinkedList<Set<Annotation>>();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Integer[] integerArray0 = new Integer[0];
      linkedList0.add((Set<Annotation>) linkedHashSet0);
      CacheResolverFactoryImpl cacheResolverFactoryImpl0 = new CacheResolverFactoryImpl();
      CacheKeyGeneratorImpl cacheKeyGeneratorImpl0 = new CacheKeyGeneratorImpl();
      CacheResult cacheResult0 = mock(CacheResult.class, new ViolatedAssumptionAnswer());
      CachePut cachePut0 = mock(CachePut.class, new ViolatedAssumptionAnswer());
      CacheRemove cacheRemove0 = mock(CacheRemove.class, new ViolatedAssumptionAnswer());
      CacheRemoveAll cacheRemoveAll0 = mock(CacheRemoveAll.class, new ViolatedAssumptionAnswer());
      CDIJCacheHelper.MethodMeta cDIJCacheHelper_MethodMeta0 = new CDIJCacheHelper.MethodMeta(classArray0, linkedList0, linkedHashSet0, integerArray0, (Integer) null, integerArray0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, cacheResult0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cachePut0, "pxOjs2e0>C", cacheResolverFactoryImpl0, cacheKeyGeneratorImpl0, true, cacheRemove0, "pxOjs2e0>C", cacheResolverFactoryImpl0, true, cacheRemoveAll0);
      CacheInvocationContextImpl<Annotation> cacheInvocationContextImpl0 = new CacheInvocationContextImpl<Annotation>(invocationContext0, (Annotation) null, "pxOjs2e0>C", cDIJCacheHelper_MethodMeta0);
      InvocationContext invocationContext1 = cacheInvocationContextImpl0.delegate;
      CacheKeyInvocationContextImpl<Annotation> cacheKeyInvocationContextImpl0 = new CacheKeyInvocationContextImpl<Annotation>(invocationContext1, (Annotation) null, "pxOjs2e0>C", cDIJCacheHelper_MethodMeta0);
      cacheKeyInvocationContextImpl0.getAllParameters();
      CacheInvocationParameter[] cacheInvocationParameterArray0 = cacheKeyInvocationContextImpl0.getAllParameters();
      ;
}
