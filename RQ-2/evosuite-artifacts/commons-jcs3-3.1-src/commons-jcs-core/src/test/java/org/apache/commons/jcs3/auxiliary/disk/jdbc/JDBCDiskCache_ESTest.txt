 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JDBCDiskCache<String, String> jDBCDiskCache0 = new JDBCDiskCache<String, String>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      jDBCDiskCacheAttributes0.setAllowRemoveAll(false);
      jDBCDiskCache0.processRemoveAll();
      JDBCDiskCache<Callable<Object>, ForkJoinTask<String>> jDBCDiskCache1 = new JDBCDiskCache<Callable<Object>, ForkJoinTask<String>>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      jDBCDiskCache1.getJdbcDiskCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      jDBCDiskCache0.getTableState();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)79;
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementAttributes iElementAttributes0 = elementAttributes0.clone();
      CacheElementSerialized<String, Object> cacheElementSerialized0 = new CacheElementSerialized<String, Object>("jcs", "jcs", byteArray0, iElementAttributes0);
      JDBCDiskCache<Delayed, ForkJoinTask<Object>> jDBCDiskCache2 = new JDBCDiskCache<Delayed, ForkJoinTask<Object>>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      jDBCDiskCache2.setAlive(true);
      jDBCDiskCache2.toString();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      JDBCDiskCache<Integer, CacheElementSerialized<String, String>> jDBCDiskCache3 = new JDBCDiskCache<Integer, CacheElementSerialized<String, String>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, (TableState) null);
      // Undeclared exception!
      try { 
        jDBCDiskCache3.processGetMatching("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jDBCDiskCacheAttributes0.setDriverClassName("xcVpwN5.P9Z(p:");
      TableState tableState0 = new TableState("_");
      tableState0.setTableName("_");
      JDBCDiskCache<Integer, String> jDBCDiskCache0 = new JDBCDiskCache<Integer, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jDBCDiskCacheAttributes0.setDriverClassName("xcVpwN5.P9Z(p:");
      TableState tableState0 = new TableState("_");
      tableState0.setTableName("_");
      JDBCDiskCache<Integer, String> jDBCDiskCache0 = new JDBCDiskCache<Integer, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache0.dispose();
      Integer integer0 = new Integer(0);
      jDBCDiskCache0.processGet(integer0);
      tableState0.setState(0);
      jDBCDiskCache0.processGetMatching("_");
      JDBCDiskCache<Integer, Callable<String>> jDBCDiskCache1 = new JDBCDiskCache<Integer, Callable<String>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache1.processDispose();
      assertFalse(jDBCDiskCache1.isAlive());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      jDBCDiskCacheAttributes0.setTableName("tu'an\b");
      TableState tableState0 = new TableState("tu'an\b");
      jDBCDiskCacheAttributes0.setJndiTTL(1000L);
      tableState0.setTableName("");
      JDBCDiskCache<Delayed, CacheElementSerialized<Integer, String>> jDBCDiskCache0 = new JDBCDiskCache<Delayed, CacheElementSerialized<Integer, String>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory1 = new SharedPoolDataSourceFactory();
      JDBCDiskCache<JDBCDiskCache<String, String>, String> jDBCDiskCache1 = new JDBCDiskCache<JDBCDiskCache<String, String>, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory1, tableState0);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes1 = jDBCDiskCache1.getJdbcDiskCacheAttributes();
      jDBCDiskCache0.setJdbcDiskCacheAttributes(jDBCDiskCacheAttributes1);
      String string0 = jDBCDiskCache0.constructLikeParameterFromPattern("tu'an\b");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      TableState tableState1 = new TableState("f\"R}kG)M0/");
      JDBCDiskCache<JDBCDiskCache<Object, Delayed>, String> jDBCDiskCache2 = new JDBCDiskCache<JDBCDiskCache<Object, Delayed>, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState1);
      jDBCDiskCache2.constructLikeParameterFromPattern("f\"R}kG)M0/");
      System.setCurrentTimeMillis(0L);
      JDBCDiskCache<Object, Integer> jDBCDiskCache3 = new JDBCDiskCache<Object, Integer>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState1);
      jDBCDiskCache3.getDiskLocation();
      JDBCDiskCache<ForkJoinTask<Delayed>, Callable<String>> jDBCDiskCache4 = new JDBCDiskCache<ForkJoinTask<Delayed>, Callable<String>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState1);
      jDBCDiskCache4.constructLikeParameterFromPattern("J");
      jDBCDiskCache4.toString();
      String string1 = jDBCDiskCache4.getTableName();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      jDBCDiskCacheAttributes0.setTableName("tu'an\b");
      TableState tableState0 = new TableState("tu'an\b");
      jDBCDiskCacheAttributes0.setJndiTTL(1000L);
      tableState0.setTableName("");
      JDBCDiskCache<Delayed, CacheElementSerialized<Integer, String>> jDBCDiskCache0 = new JDBCDiskCache<Delayed, CacheElementSerialized<Integer, String>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory1 = new SharedPoolDataSourceFactory();
      JDBCDiskCache<JDBCDiskCache<String, String>, String> jDBCDiskCache1 = new JDBCDiskCache<JDBCDiskCache<String, String>, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory1, tableState0);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes1 = jDBCDiskCache1.getJdbcDiskCacheAttributes();
      jDBCDiskCache0.setJdbcDiskCacheAttributes(jDBCDiskCacheAttributes1);
      String string0 = jDBCDiskCache0.constructLikeParameterFromPattern("tu'an\b");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      TableState tableState1 = new TableState("f\"R}kG)M0/");
      JDBCDiskCache<JDBCDiskCache<Object, Delayed>, String> jDBCDiskCache2 = new JDBCDiskCache<JDBCDiskCache<Object, Delayed>, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState1);
      jDBCDiskCache2.constructLikeParameterFromPattern("f\"R}kG)M0/");
      System.setCurrentTimeMillis(0L);
      JDBCDiskCache<Object, Integer> jDBCDiskCache3 = new JDBCDiskCache<Object, Integer>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState1);
      jDBCDiskCache3.getDiskLocation();
      JDBCDiskCache<ForkJoinTask<Delayed>, Callable<String>> jDBCDiskCache4 = new JDBCDiskCache<ForkJoinTask<Delayed>, Callable<String>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState1);
      jDBCDiskCache4.constructLikeParameterFromPattern("J");
      jDBCDiskCache4.toString();
      String string1 = jDBCDiskCache4.getTableName();
      JDBCDiskCache<String, String> jDBCDiskCache5 = new JDBCDiskCache<String, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache5.getDiskLocation();
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes2 = new JDBCDiskCacheAttributes();
      JDBCDiskCache<String, JDBCDiskCache<Object, Object>> jDBCDiskCache6 = new JDBCDiskCache<String, JDBCDiskCache<Object, Object>>(jDBCDiskCacheAttributes2, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache6.getJdbcDiskCacheAttributes();
      assertNotNull(jDBCDiskCache6.getStatus());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jDBCDiskCacheAttributes0.setTestBeforeInsert(false);
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<ForkJoinTask<String>, Integer> jDBCDiskCache0 = new JDBCDiskCache<ForkJoinTask<String>, Integer>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache0.setTableState(tableState0);
      jDBCDiskCacheAttributes0.setMaxTotal(553);
      jDBCDiskCache0.getJdbcDiskCacheAttributes();
      JDBCDiskCache<Integer, Callable<String>> jDBCDiskCache1 = new JDBCDiskCache<Integer, Callable<String>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache1.getKeySet();
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
         //
         // Groups not implemented.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<JDBCDiskCache<Callable<String>, Object>, Delayed> jDBCDiskCache0 = new JDBCDiskCache<JDBCDiskCache<Callable<String>, Object>, Delayed>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache0.getAuxiliaryCacheAttributes();
      JDBCDiskCache<Integer, Object> jDBCDiskCache1 = new JDBCDiskCache<Integer, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes1 = jDBCDiskCache1.getJdbcDiskCacheAttributes();
      JDBCDiskCache<String, String> jDBCDiskCache2 = new JDBCDiskCache<String, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCacheAttributes1.setUrl("jcs");
      jDBCDiskCache2.getDiskLocation();
      JDBCDiskCache<Integer, String> jDBCDiskCache3 = new JDBCDiskCache<Integer, String>(jDBCDiskCacheAttributes1, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache3.getDiskLocation();
      JDBCDiskCache<Integer, Delayed> jDBCDiskCache4 = new JDBCDiskCache<Integer, Delayed>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache4.getSize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.dsfactory.JndiDataSourceFactory", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      System.setCurrentTimeMillis(0L);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      jDBCDiskCacheAttributes0.setUseDiskShrinker(false);
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<Callable<Delayed>, String> jDBCDiskCache0 = new JDBCDiskCache<Callable<Delayed>, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache0.processDispose();
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      JDBCDiskCache<String, CacheElementSerialized<Object, Object>> jDBCDiskCache1 = new JDBCDiskCache<String, CacheElementSerialized<Object, Object>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, (TableState) null);
      jDBCDiskCache1.processGetMatching("iI9L1NNI8=i[v&V");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JDBCDiskCache<Callable<String>, Object> jDBCDiskCache2 = new JDBCDiskCache<Callable<String>, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache2.getJdbcDiskCacheAttributes();
      assertNotNull(jDBCDiskCache2.getStatus());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState(":.tZ-3");
      tableState0.setState((-1461));
      JDBCDiskCache<Integer, Object> jDBCDiskCache0 = new JDBCDiskCache<Integer, Object>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache0.toString();
      sharedPoolDataSourceFactory0.close();
      JDBCDiskCache<Object, String> jDBCDiskCache1 = new JDBCDiskCache<Object, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache1.getTableName();
      JDBCDiskCache<String, CacheElementSerialized<Integer, String>> jDBCDiskCache2 = new JDBCDiskCache<String, CacheElementSerialized<Integer, String>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache2.getAuxiliaryCacheAttributes();
      tableState0.setState((-1643));
      jDBCDiskCacheAttributes0.setCacheName(", validationQuery=");
      JDBCDiskCache<CacheElement<Integer, Object>, String> jDBCDiskCache3 = new JDBCDiskCache<CacheElement<Integer, Object>, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes1 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory1 = new SharedPoolDataSourceFactory();
      JDBCDiskCache<String, Object> jDBCDiskCache4 = new JDBCDiskCache<String, Object>(jDBCDiskCacheAttributes1, sharedPoolDataSourceFactory1, tableState0);
      jDBCDiskCache4.getTableState();
      JDBCDiskCache<Integer, Delayed> jDBCDiskCache5 = new JDBCDiskCache<Integer, Delayed>(jDBCDiskCacheAttributes1, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache5.getAuxiliaryCacheAttributes();
      JDBCDiskCache<Integer, Integer> jDBCDiskCache6 = new JDBCDiskCache<Integer, Integer>(jDBCDiskCacheAttributes1, sharedPoolDataSourceFactory0, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache6.get((Integer) 300);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis(0L);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      jDBCDiskCacheAttributes0.setShutdownSpoolTimeLimit(0);
      JDBCDiskCache<ForkJoinTask<Object>, CacheElementSerialized<String, Object>> jDBCDiskCache0 = new JDBCDiskCache<ForkJoinTask<Object>, CacheElementSerialized<String, Object>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache0.getDiskLocation();
      JDBCDiskCache<Object, ForkJoinTask<Delayed>> jDBCDiskCache1 = new JDBCDiskCache<Object, ForkJoinTask<Delayed>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache1.getJdbcDiskCacheAttributes();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("");
      JDBCDiskCache<Object, JDBCDiskCache<Object, Integer>> jDBCDiskCache0 = new JDBCDiskCache<Object, JDBCDiskCache<Object, Integer>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      CompressingSerializer compressingSerializer0 = new CompressingSerializer();
      EncryptingSerializer encryptingSerializer0 = new EncryptingSerializer(compressingSerializer0);
      CompressingSerializer compressingSerializer1 = new CompressingSerializer(encryptingSerializer0);
      jDBCDiskCache0.setElementSerializer(compressingSerializer1);
      jDBCDiskCache0.getTableName();
      JDBCDiskCache<String, Object> jDBCDiskCache1 = new JDBCDiskCache<String, Object>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      CacheElement<String, Object> cacheElement0 = new CacheElement<String, Object>("org.apache.commons.jcs3.engine.AbstractCacheEventQueue", "jcs", encryptingSerializer0);
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      // Undeclared exception!
      try { 
        jDBCDiskCache1.doesElementExist(cacheElement0, jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcPreparedStatement", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<Object, ForkJoinTask<Object>> jDBCDiskCache0 = new JDBCDiskCache<Object, ForkJoinTask<Object>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      Integer integer0 = new Integer(2);
      jDBCDiskCache0.get(integer0);
      jDBCDiskCache0.reset();
      JndiDataSourceFactory jndiDataSourceFactory1 = new JndiDataSourceFactory();
      JDBCDiskCache<JDBCDiskCache<Integer, Object>, Delayed> jDBCDiskCache1 = new JDBCDiskCache<JDBCDiskCache<Integer, Object>, Delayed>(jDBCDiskCacheAttributes0, jndiDataSourceFactory1, tableState0);
      jDBCDiskCache1.processDispose();
      JDBCDiskCache<Integer, ForkJoinTask<Object>> jDBCDiskCache2 = new JDBCDiskCache<Integer, ForkJoinTask<Object>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache2.getDiskLocation();
      JDBCDiskCache<Object, String> jDBCDiskCache3 = new JDBCDiskCache<Object, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory1, tableState0);
      jDBCDiskCache3.constructLikeParameterFromPattern("F");
      JDBCDiskCache<Delayed, ForkJoinTask<String>> jDBCDiskCache4 = new JDBCDiskCache<Delayed, ForkJoinTask<String>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache4.processGetMatching("jcs");
      JDBCDiskCache<CacheElement<String, Integer>, Object> jDBCDiskCache5 = new JDBCDiskCache<CacheElement<String, Integer>, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory1, tableState0);
      TableState tableState1 = jDBCDiskCache5.getTableState();
      JDBCDiskCache<Integer, String> jDBCDiskCache6 = new JDBCDiskCache<Integer, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache6.processDispose();
      JDBCDiskCache<JDBCDiskCache<String, String>, Integer> jDBCDiskCache7 = new JDBCDiskCache<JDBCDiskCache<String, String>, Integer>(jDBCDiskCacheAttributes0, jndiDataSourceFactory1, tableState1);
      // Undeclared exception!
      try { 
        jDBCDiskCache7.getKeySet();
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
         //
         // Groups not implemented.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<ForkJoinTask<Integer>, Integer> jDBCDiskCache0 = new JDBCDiskCache<ForkJoinTask<Integer>, Integer>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes1 = jDBCDiskCache0.getJdbcDiskCacheAttributes();
      JDBCDiskCache<Delayed, String> jDBCDiskCache1 = new JDBCDiskCache<Delayed, String>(jDBCDiskCacheAttributes1, jndiDataSourceFactory0, tableState0);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes2 = new JDBCDiskCacheAttributes();
      JDBCDiskCache<String, Object> jDBCDiskCache2 = new JDBCDiskCache<String, Object>(jDBCDiskCacheAttributes2, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache2.getJdbcDiskCacheAttributes();
      System.setCurrentTimeMillis(2);
      System.setCurrentTimeMillis(1631L);
      JDBCDiskCache<JDBCDiskCache<String, Object>, Object> jDBCDiskCache3 = new JDBCDiskCache<JDBCDiskCache<String, Object>, Object>(jDBCDiskCacheAttributes1, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache3.constructLikeParameterFromPattern("m.W:g|=.O}?,");
      TableState tableState1 = new TableState("sXM Ec");
      JDBCDiskCache<Object, Delayed> jDBCDiskCache4 = new JDBCDiskCache<Object, Delayed>(jDBCDiskCacheAttributes1, jndiDataSourceFactory0, tableState1);
      Object object0 = new Object();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)113;
      Integer integer0 = new Integer(2);
      CacheElement<Integer, String> cacheElement0 = new CacheElement<Integer, String>("g$aV", integer0, "jcs");
      IElementAttributes iElementAttributes0 = cacheElement0.getElementAttributes();
      CacheElementSerialized<Object, Delayed> cacheElementSerialized0 = new CacheElementSerialized<Object, Delayed>("jcs", object0, byteArray0, iElementAttributes0);
      // Undeclared exception!
      try { 
        jDBCDiskCache4.processUpdate(cacheElementSerialized0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.dsfactory.JndiDataSourceFactory", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      jDBCDiskCacheAttributes0.setUserName("");
      TableState tableState0 = new TableState(":KR0j &{'c;");
      JDBCDiskCache<Integer, ForkJoinTask<Object>> jDBCDiskCache0 = new JDBCDiskCache<Integer, ForkJoinTask<Object>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache0.toString();
      TableState tableState1 = new TableState("^6{RMJF^+/[d</J");
      tableState1.setState(2551);
      JDBCDiskCache<CacheElement<Integer, Object>, String> jDBCDiskCache1 = new JDBCDiskCache<CacheElement<Integer, Object>, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState1);
      jDBCDiskCache1.getTableState();
      JDBCDiskCache<Delayed, JDBCDiskCache<Object, Object>> jDBCDiskCache2 = new JDBCDiskCache<Delayed, JDBCDiskCache<Object, Object>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState1);
      jDBCDiskCache2.processDispose();
      JDBCDiskCache<CacheElement<Object, String>, CacheElement<Object, String>> jDBCDiskCache3 = new JDBCDiskCache<CacheElement<Object, String>, CacheElement<Object, String>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState1);
      // Undeclared exception!
      try { 
        jDBCDiskCache3.getSize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jDBCDiskCacheAttributes0.setPassword("");
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<JDBCDiskCache<String, String>, String> jDBCDiskCache0 = new JDBCDiskCache<JDBCDiskCache<String, String>, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes1 = jDBCDiskCache0.getJdbcDiskCacheAttributes();
      jDBCDiskCacheAttributes1.setUrl("(OcZ0Y21mVq$tmrO");
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes1);
      jDBCDiskCacheAttributes0.setJndiTTL((-3320L));
      JDBCDiskCache<Object, Object> jDBCDiskCache1 = new JDBCDiskCache<Object, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache1.getSize();
      JDBCDiskCache<Object, CacheElement<Object, Delayed>> jDBCDiskCache2 = new JDBCDiskCache<Object, CacheElement<Object, Delayed>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      int int0 = jDBCDiskCache2.getSize();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jDBCDiskCacheAttributes0.setPassword("");
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<JDBCDiskCache<String, String>, String> jDBCDiskCache0 = new JDBCDiskCache<JDBCDiskCache<String, String>, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes1 = jDBCDiskCache0.getJdbcDiskCacheAttributes();
      jDBCDiskCacheAttributes1.setUrl("(OcZ0Y21mVq$tmrO");
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes1);
      jDBCDiskCacheAttributes0.setJndiTTL((-3320L));
      JDBCDiskCache<Object, Object> jDBCDiskCache1 = new JDBCDiskCache<Object, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache1.getSize();
      JDBCDiskCache<Object, CacheElement<Object, Delayed>> jDBCDiskCache2 = new JDBCDiskCache<Object, CacheElement<Object, Delayed>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      int int0 = jDBCDiskCache2.getSize();
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jDBCDiskCacheAttributes0.setPassword("");
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<JDBCDiskCache<String, String>, String> jDBCDiskCache0 = new JDBCDiskCache<JDBCDiskCache<String, String>, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes1 = jDBCDiskCache0.getJdbcDiskCacheAttributes();
      jDBCDiskCacheAttributes1.setUrl("(OcZ0Y21mVq$tmrO");
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes1);
      jDBCDiskCacheAttributes0.setJndiTTL((-3320L));
      JDBCDiskCache<Object, Object> jDBCDiskCache1 = new JDBCDiskCache<Object, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache1.getSize();
      JDBCDiskCache<Object, CacheElement<Object, Delayed>> jDBCDiskCache2 = new JDBCDiskCache<Object, CacheElement<Object, Delayed>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      int int0 = jDBCDiskCache2.getSize();
      JndiDataSourceFactory jndiDataSourceFactory1 = new JndiDataSourceFactory();
      JDBCDiskCache<Integer, String> jDBCDiskCache3 = new JDBCDiskCache<Integer, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory1, tableState0);
      jDBCDiskCache3.getJdbcDiskCacheAttributes();
      assertNotNull(jDBCDiskCache3.getStatus());
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      TableState tableState0 = new TableState("_");
      tableState0.setTableName("_");
      JDBCDiskCache<Integer, String> jDBCDiskCache0 = new JDBCDiskCache<Integer, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      tableState0.setState(0);
      jDBCDiskCache0.processGetMatching("_");
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes1 = new JDBCDiskCacheAttributes();
      JDBCDiskCache<ForkJoinTask<Integer>, Object> jDBCDiskCache1 = new JDBCDiskCache<ForkJoinTask<Integer>, Object>(jDBCDiskCacheAttributes1, jndiDataSourceFactory0, (TableState) null);
      assertNotNull(jDBCDiskCache1.getStatus());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      TableState tableState0 = new TableState("DB URL");
      JDBCDiskCache<Delayed, String> jDBCDiskCache0 = new JDBCDiskCache<Delayed, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache0.processRemoveAll();
      JDBCDiskCache<CacheElement<Integer, String>, Object> jDBCDiskCache1 = new JDBCDiskCache<CacheElement<Integer, String>, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache1.reset();
      JDBCDiskCache<Object, Object> jDBCDiskCache2 = new JDBCDiskCache<Object, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache2.processRemove(tableState0);
      JDBCDiskCache<ForkJoinTask<Object>, String> jDBCDiskCache3 = new JDBCDiskCache<ForkJoinTask<Object>, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      IStats iStats0 = jDBCDiskCache3.getStatistics();
      assertNotNull(iStats0.getTypeName());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      TableState tableState0 = new TableState("DB URL");
      JDBCDiskCache<Delayed, String> jDBCDiskCache0 = new JDBCDiskCache<Delayed, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache0.processRemoveAll();
      JDBCDiskCache<CacheElement<Integer, String>, Object> jDBCDiskCache1 = new JDBCDiskCache<CacheElement<Integer, String>, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache1.reset();
      JDBCDiskCache<Object, Object> jDBCDiskCache2 = new JDBCDiskCache<Object, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache2.processRemove(tableState0);
      JDBCDiskCache<ForkJoinTask<Object>, String> jDBCDiskCache3 = new JDBCDiskCache<ForkJoinTask<Object>, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      IStats iStats0 = jDBCDiskCache3.getStatistics();
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<CacheElement<Object, String>, CacheElement<String, Object>> jDBCDiskCache0 = new JDBCDiskCache<CacheElement<Object, String>, CacheElement<String, Object>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1);
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread((ThreadGroup) null, mockThread0, "jcs");
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      ScheduledFuture<?> scheduledFuture0 = scheduledThreadPoolExecutor0.scheduleWithFixedDelay(mockThread1, 1000L, 1, timeUnit0);
      CacheElement<Object, String> cacheElement0 = new CacheElement<Object, String>("|AK0BdcU4|>9(_", scheduledFuture0, "|AK0BdcU4|>9(_");
      byte[] byteArray0 = new byte[6];
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-58);
      MockThread.interrupted();
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)28;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-59);
      Integer integer0 = new Integer((byte)28);
      CacheElement<Integer, String> cacheElement1 = new CacheElement<Integer, String>("v8aWmMjN}", integer0, "|AK0BdcU4|>9(_", (IElementAttributes) null);
      IElementAttributes iElementAttributes0 = cacheElement1.getElementAttributes();
      CacheElementSerialized<CacheElement<Object, String>, CacheElement<String, Object>> cacheElementSerialized0 = new CacheElementSerialized<CacheElement<Object, String>, CacheElement<String, Object>>("v8aWmMjN}", cacheElement0, byteArray0, iElementAttributes0);
      jDBCDiskCache0.processUpdate(cacheElementSerialized0);
      assertNotNull(jDBCDiskCache0.getStatus());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)5;
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)5;
      String string0 = "7~m<la6i3q";
      jDBCDiskCacheAttributes0.setUserName("7~m<la6i3q");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TableState tableState0 = null;
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      JDBCDiskCache<Object, String> jDBCDiskCache0 = new JDBCDiskCache<Object, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, (TableState) null);
      jDBCDiskCache0.processGet((Object) null);
      jDBCDiskCache0.processRemoveAll();
      try { 
        jDBCDiskCache0.getDataSource();
        fail("Expecting exception: SQLException");
      } catch(SQLException e) {
         //
         // javax.naming.NamingException: Null name
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.dsfactory.JndiDataSourceFactory", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-8);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TableState tableState0 = new TableState("DB URL");
      JDBCDiskCache<Delayed, String> jDBCDiskCache0 = new JDBCDiskCache<Delayed, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      JDBCDiskCache<CacheElementSerialized<Object, String>, ForkJoinTask<Object>> jDBCDiskCache1 = new JDBCDiskCache<CacheElementSerialized<Object, String>, ForkJoinTask<Object>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache1.toString();
      jDBCDiskCache0.processRemoveAll();
      JDBCDiskCache<CacheElement<Integer, String>, Object> jDBCDiskCache2 = new JDBCDiskCache<CacheElement<Integer, String>, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache2.reset();
      JDBCDiskCache<Object, Object> jDBCDiskCache3 = new JDBCDiskCache<Object, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache3.processRemove(tableState0);
      JDBCDiskCache<ForkJoinTask<Object>, String> jDBCDiskCache4 = new JDBCDiskCache<ForkJoinTask<Object>, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      IStats iStats0 = jDBCDiskCache4.getStatistics();
      assertNotNull(jDBCDiskCache4.getStatus());
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-8);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TableState tableState0 = new TableState("DB URL");
      JDBCDiskCache<Delayed, String> jDBCDiskCache0 = new JDBCDiskCache<Delayed, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      JDBCDiskCache<CacheElementSerialized<Object, String>, ForkJoinTask<Object>> jDBCDiskCache1 = new JDBCDiskCache<CacheElementSerialized<Object, String>, ForkJoinTask<Object>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache1.toString();
      jDBCDiskCache0.processRemoveAll();
      JDBCDiskCache<CacheElement<Integer, String>, Object> jDBCDiskCache2 = new JDBCDiskCache<CacheElement<Integer, String>, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache2.reset();
      JDBCDiskCache<Object, Object> jDBCDiskCache3 = new JDBCDiskCache<Object, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache3.processRemove(tableState0);
      JDBCDiskCache<ForkJoinTask<Object>, String> jDBCDiskCache4 = new JDBCDiskCache<ForkJoinTask<Object>, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      IStats iStats0 = jDBCDiskCache4.getStatistics();
      assertNotNull(iStats0.getTypeName());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      DataSourceFactory dataSourceFactory0 = null;
      TableState tableState0 = new TableState("h|");
      JDBCDiskCache<JDBCDiskCache<String, String>, String> jDBCDiskCache0 = new JDBCDiskCache<JDBCDiskCache<String, String>, String>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, tableState0);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes1 = jDBCDiskCache0.getJdbcDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      tableState0.setTableName("jcs");
      JDBCDiskCache<String, Integer> jDBCDiskCache1 = new JDBCDiskCache<String, Integer>(jDBCDiskCacheAttributes1, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache1.setAlive(false);
      TableState tableState1 = new TableState("jcs");
      JDBCDiskCache<JDBCDiskCache<String, Object>, CacheElement<Integer, Object>> jDBCDiskCache2 = new JDBCDiskCache<JDBCDiskCache<String, Object>, CacheElement<Integer, Object>>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, tableState1);
      jDBCDiskCache2.toString();
      String string0 = null;
      JDBCDiskCache<Integer, CacheElementSerialized<Object, String>> jDBCDiskCache3 = new JDBCDiskCache<Integer, CacheElementSerialized<Object, String>>(jDBCDiskCacheAttributes1, (DataSourceFactory) null, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache3.processDispose();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JDBCDiskCache<Delayed, Object> jDBCDiskCache0 = new JDBCDiskCache<Delayed, Object>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      jDBCDiskCache0.getTableState();
      JDBCDiskCache<Delayed, Delayed> jDBCDiskCache1 = new JDBCDiskCache<Delayed, Delayed>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes1 = jDBCDiskCache1.getJdbcDiskCacheAttributes();
      JDBCDiskCache<Integer, Object> jDBCDiskCache2 = new JDBCDiskCache<Integer, Object>(jDBCDiskCacheAttributes1, (DataSourceFactory) null, (TableState) null);
      Integer integer0 = new Integer(10);
      byte[] byteArray0 = new byte[0];
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementAttributes iElementAttributes0 = elementAttributes0.clone();
      CacheElementSerialized<Integer, Object> cacheElementSerialized0 = new CacheElementSerialized<Integer, Object>("", integer0, byteArray0, iElementAttributes0);
      // Undeclared exception!
      try { 
        jDBCDiskCache2.doesElementExist(cacheElementSerialized0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = new TableState("_");
      tableState0.setTableName("_");
      JDBCDiskCache<Integer, String> jDBCDiskCache0 = new JDBCDiskCache<Integer, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache0.dispose();
      tableState0.setState(0);
      Map<Integer, ICacheElement<Integer, String>> map0 = jDBCDiskCache0.processGetMatching("_");
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      String string0 = "?mrUe<TPC_";
      jDBCDiskCacheAttributes0.setTableName("?mrUe<TPC_");
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<String, String> jDBCDiskCache0 = new JDBCDiskCache<String, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      TableState tableState1 = jDBCDiskCache0.getTableState();
      tableState1.toString();
      JDBCDiskCache<JDBCDiskCache<Object, Object>, JDBCDiskCache<Object, Integer>> jDBCDiskCache1 = new JDBCDiskCache<JDBCDiskCache<Object, Object>, JDBCDiskCache<Object, Integer>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState1);
      // Undeclared exception!
      try { 
        jDBCDiskCache1.getKeySet();
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
         //
         // Groups not implemented.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      String string0 = "";
      jDBCDiskCacheAttributes0.setDriverClassName("");
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jDBCDiskCacheAttributes0.setTableName("");
      TableState tableState0 = new TableState("jcs");
      tableState0.toString();
      JDBCDiskCache<JDBCDiskCache<Object, Object>, Object> jDBCDiskCache0 = new JDBCDiskCache<JDBCDiskCache<Object, Object>, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache0.getEventLoggingExtraInfo();
      jDBCDiskCacheAttributes0.toString();
      tableState0.toString();
      jDBCDiskCache0.toString();
      jDBCDiskCache0.getTableName();
      LogManager.setLogSystem("");
      JDBCDiskCache<Object, Integer> jDBCDiskCache1 = new JDBCDiskCache<Object, Integer>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache1.getDataSource();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.dsfactory.JndiDataSourceFactory", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      DataSourceFactory dataSourceFactory0 = null;
      TableState tableState0 = null;
      JDBCDiskCache<String, String> jDBCDiskCache0 = new JDBCDiskCache<String, String>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      jDBCDiskCache0.getTableState();
      // Undeclared exception!
      try { 
        jDBCDiskCache0.processRemoveAll();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<Integer, JDBCDiskCache<Object, String>> jDBCDiskCache0 = new JDBCDiskCache<Integer, JDBCDiskCache<Object, String>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache0.getDataSource();
      jDBCDiskCache0.getDiskLocation();
      assertNotNull(jDBCDiskCache0.getStatus());
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      TableState tableState0 = new TableState((String) null);
      jDBCDiskCacheAttributes0.setJndiTTL(0);
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      JDBCDiskCache<Object, Object> jDBCDiskCache0 = new JDBCDiskCache<Object, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache0.getTableState();
      // Undeclared exception!
      try { 
        jDBCDiskCache0.constructLikeParameterFromPattern((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<Integer, Object> jDBCDiskCache0 = new JDBCDiskCache<Integer, Object>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      TableState tableState1 = new TableState("jcs");
      tableState1.setTableName("X`N_b5g[9{e25*{C/");
      jDBCDiskCacheAttributes0.toString();
      JDBCDiskCache<CacheElementSerialized<Object, Object>, JDBCDiskCache<Object, String>> jDBCDiskCache1 = new JDBCDiskCache<CacheElementSerialized<Object, Object>, JDBCDiskCache<Object, String>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState1);
      jDBCDiskCache1.getTableState();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory1 = new SharedPoolDataSourceFactory();
      JDBCDiskCache<Object, CacheElementSerialized<Object, Integer>> jDBCDiskCache2 = new JDBCDiskCache<Object, CacheElementSerialized<Object, Integer>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory1, tableState1);
      jDBCDiskCache2.reset();
      JDBCDiskCache<Integer, CacheElementSerialized<Integer, Object>> jDBCDiskCache3 = new JDBCDiskCache<Integer, CacheElementSerialized<Integer, Object>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory1, tableState1);
      jDBCDiskCache3.toString();
      JDBCDiskCache<String, JDBCDiskCache<Object, Integer>> jDBCDiskCache4 = new JDBCDiskCache<String, JDBCDiskCache<Object, Integer>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory1, tableState1);
      // Undeclared exception!
      try { 
        jDBCDiskCache4.processRemove("org.apache.commons.jcs3.engine.stats.Stats@0000000050");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("");
      JDBCDiskCache<Integer, Object> jDBCDiskCache0 = new JDBCDiskCache<Integer, Object>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.deleteExpired();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = new TableState("Tr%H+g%+;~Gl})");
      JDBCDiskCache<Object, String> jDBCDiskCache0 = new JDBCDiskCache<Object, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache0.getJdbcDiskCacheAttributes();
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = null;
      JDBCDiskCache<CacheElement<String, Integer>, Integer> jDBCDiskCache0 = new JDBCDiskCache<CacheElement<String, Integer>, Integer>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, (TableState) null);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.processGetMatching("jcs");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.dsfactory.JndiDataSourceFactory", e);
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<CacheElement<String, Object>, Object> jDBCDiskCache0 = new JDBCDiskCache<CacheElement<String, Object>, Object>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.getSize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      JDBCDiskCache<Object, Object> jDBCDiskCache0 = new JDBCDiskCache<Object, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, (TableState) null);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.processGetMatching("jcs");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.dsfactory.JndiDataSourceFactory", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<CacheElement<Object, String>, CacheElementSerialized<Object, Delayed>> jDBCDiskCache0 = new JDBCDiskCache<CacheElement<Object, String>, CacheElementSerialized<Object, Delayed>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      Object object0 = new Object();
      EncryptingSerializer encryptingSerializer0 = new EncryptingSerializer();
      jDBCDiskCache0.setElementSerializer(encryptingSerializer0);
      CacheElement<Object, String> cacheElement0 = new CacheElement<Object, String>("0_>wj", object0, "0_>wj");
      // Undeclared exception!
      try { 
        jDBCDiskCache0.processRemove(cacheElement0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("DROP SCHEMA ");
      JDBCDiskCache<Object, String> jDBCDiskCache0 = new JDBCDiskCache<Object, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.getSize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      jDBCDiskCacheAttributes0.setJndiPath(", dataSourceName=");
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = null;
      JDBCDiskCache<Object, JDBCDiskCache<Object, String>> jDBCDiskCache0 = new JDBCDiskCache<Object, JDBCDiskCache<Object, String>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, (TableState) null);
      JDBCDiskCache<JDBCDiskCache<Object, Integer>, Object> jDBCDiskCache1 = new JDBCDiskCache<JDBCDiskCache<Object, Integer>, Object>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, (TableState) null);
      // Undeclared exception!
      try { 
        jDBCDiskCache1.deleteExpired();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      sharedPoolDataSourceFactory0.close();
      TableState tableState0 = new TableState("-| ");
      JDBCDiskCache<CacheElement<Object, Object>, String> jDBCDiskCache0 = new JDBCDiskCache<CacheElement<Object, Object>, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-63);
      byteArray0[1] = (byte) (-42);
      ElementAttributes elementAttributes0 = new ElementAttributes();
      CacheElementSerialized<Object, String> cacheElementSerialized0 = new CacheElementSerialized<Object, String>("Problem getting items for pattern [{0}]", jDBCDiskCacheAttributes0, byteArray0, elementAttributes0);
      IElementAttributes iElementAttributes0 = cacheElementSerialized0.getElementAttributes();
      CacheElement<Object, Object> cacheElement0 = new CacheElement<Object, Object>("jcs", (Object) null, "Problem getting items for pattern [{0}]", iElementAttributes0);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.processGet(cacheElement0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<Object, Delayed> jDBCDiskCache0 = new JDBCDiskCache<Object, Delayed>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      LinkedHashSet<Delayed> linkedHashSet0 = new LinkedHashSet<Delayed>();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>(linkedHashSet0);
      delayQueue0.peek();
      // Undeclared exception!
      try { 
        jDBCDiskCache0.processGet((Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.dsfactory.JndiDataSourceFactory", e);
      }
  }
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<String, Integer> jDBCDiskCache0 = new JDBCDiskCache<String, Integer>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.processRemoveAll();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.dsfactory.JndiDataSourceFactory", e);
      }
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<Object, Object> jDBCDiskCache0 = new JDBCDiskCache<Object, Object>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache0.getDataSource();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      JDBCDiskCache<String, String> jDBCDiskCache1 = new JDBCDiskCache<String, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      IStats iStats0 = jDBCDiskCache1.getStatistics();
      assertNotNull(iStats0.getTypeName());
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<Object, Object> jDBCDiskCache0 = new JDBCDiskCache<Object, Object>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache0.getDataSource();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      JDBCDiskCache<String, String> jDBCDiskCache1 = new JDBCDiskCache<String, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      IStats iStats0 = jDBCDiskCache1.getStatistics();
      jDBCDiskCache1.processDispose();
      JDBCDiskCache<CacheElement<Integer, String>, Object> jDBCDiskCache2 = new JDBCDiskCache<CacheElement<Integer, String>, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      TableState tableState1 = jDBCDiskCache2.getTableState();
      JDBCDiskCache<Delayed, Object> jDBCDiskCache3 = new JDBCDiskCache<Delayed, Object>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState1);
      jDBCDiskCache3.getTableState();
      assertNotNull(jDBCDiskCache3.getStatus());
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      JDBCDiskCache<String, Integer> jDBCDiskCache0 = new JDBCDiskCache<String, Integer>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      jDBCDiskCacheAttributes0.clone();
      cacheEventLoggerDebugLogger0.logApplicationEvent("J\"", "J\"", "Problem creating statement. sql [{0}]");
      tableState0.setTableName("jcs");
      jDBCDiskCache0.setCacheEventLogger(cacheEventLoggerDebugLogger0);
      jDBCDiskCache0.processRemoveAll();
      JDBCDiskCache<String, ForkJoinTask<Integer>> jDBCDiskCache1 = new JDBCDiskCache<String, ForkJoinTask<Integer>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache1.getAuxiliaryCacheAttributes();
      assertNotNull(jDBCDiskCache1.getStatus());
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<Object, CacheElement<Integer, Object>> jDBCDiskCache0 = new JDBCDiskCache<Object, CacheElement<Integer, Object>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      String string0 = jDBCDiskCache0.getTableName();
      ;
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<Object, CacheElement<Integer, Object>> jDBCDiskCache0 = new JDBCDiskCache<Object, CacheElement<Integer, Object>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      String string0 = jDBCDiskCache0.getTableName();
      assertNotNull(jDBCDiskCache0.getStatus());
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JDBCDiskCache<Object, CacheElement<Object, Integer>> jDBCDiskCache0 = new JDBCDiskCache<Object, CacheElement<Object, Integer>>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      jDBCDiskCache0.setTableState((TableState) null);
      JDBCDiskCache<CacheElement<String, String>, JDBCDiskCache<Integer, Integer>> jDBCDiskCache1 = new JDBCDiskCache<CacheElement<String, String>, JDBCDiskCache<Integer, Integer>>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      jDBCDiskCacheAttributes0.setShrinkerIntervalSeconds(0);
      jDBCDiskCacheAttributes0.setUserName("dFq^nzf%");
      jDBCDiskCache1.constructLikeParameterFromPattern("");
      JDBCDiskCache<JDBCDiskCache<Object, Object>, String> jDBCDiskCache2 = new JDBCDiskCache<JDBCDiskCache<Object, Object>, String>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      jDBCDiskCache2.setTableState((TableState) null);
      JDBCDiskCache<JDBCDiskCache<Integer, String>, Object> jDBCDiskCache3 = new JDBCDiskCache<JDBCDiskCache<Integer, String>, Object>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      String string0 = jDBCDiskCache3.constructLikeParameterFromPattern("dFq^nzf%");
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JDBCDiskCache<Object, CacheElement<Object, Integer>> jDBCDiskCache0 = new JDBCDiskCache<Object, CacheElement<Object, Integer>>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      jDBCDiskCache0.setTableState((TableState) null);
      JDBCDiskCache<CacheElement<String, String>, JDBCDiskCache<Integer, Integer>> jDBCDiskCache1 = new JDBCDiskCache<CacheElement<String, String>, JDBCDiskCache<Integer, Integer>>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      jDBCDiskCacheAttributes0.setShrinkerIntervalSeconds(0);
      jDBCDiskCacheAttributes0.setUserName("dFq^nzf%");
      jDBCDiskCache1.constructLikeParameterFromPattern("");
      JDBCDiskCache<JDBCDiskCache<Object, Object>, String> jDBCDiskCache2 = new JDBCDiskCache<JDBCDiskCache<Object, Object>, String>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      jDBCDiskCache2.setTableState((TableState) null);
      JDBCDiskCache<JDBCDiskCache<Integer, String>, Object> jDBCDiskCache3 = new JDBCDiskCache<JDBCDiskCache<Integer, String>, Object>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      String string0 = jDBCDiskCache3.constructLikeParameterFromPattern("dFq^nzf%");
      assertNotNull(jDBCDiskCache3.getStatus());
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      DataSourceFactory dataSourceFactory0 = null;
      TableState tableState0 = null;
      IDiskCacheAttributes.DiskLimitType iDiskCacheAttributes_DiskLimitType0 = IDiskCacheAttributes.DiskLimitType.COUNT;
      jDBCDiskCacheAttributes0.setDiskLimitType(iDiskCacheAttributes_DiskLimitType0);
      JDBCDiskCache<String, Integer> jDBCDiskCache0 = new JDBCDiskCache<String, Integer>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.processDispose();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = null;
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = new TableState("SYSTEM_VIEW_ROUTINE_USAGE");
      JDBCDiskCache<String, Object> jDBCDiskCache0 = null;
      try {
        jDBCDiskCache0 = new JDBCDiskCache<String, Object>((JDBCDiskCacheAttributes) null, jndiDataSourceFactory0, tableState0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.AbstractDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      jDBCDiskCacheAttributes0.setTestBeforeInsert(false);
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<CacheElement<Object, Object>, Integer> jDBCDiskCache0 = new JDBCDiskCache<CacheElement<Object, Object>, Integer>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.processUpdate((ICacheElement<CacheElement<Object, Object>, Integer>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<Object, Integer> jDBCDiskCache0 = new JDBCDiskCache<Object, Integer>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.getDataSource();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("RESTRICT");
      JDBCDiskCache<JDBCDiskCache<Object, String>, Object> jDBCDiskCache0 = new JDBCDiskCache<JDBCDiskCache<Object, String>, Object>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache0.reset();
      jDBCDiskCacheAttributes0.setShrinkerIntervalSeconds(724);
      JDBCDiskCache<String, JDBCDiskCache<String, Object>> jDBCDiskCache1 = new JDBCDiskCache<String, JDBCDiskCache<String, Object>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache1.constructLikeParameterFromPattern("i}:~{Mi#\",");
      jDBCDiskCache1.setTableState(tableState0);
      JDBCDiskCache<Object, Object> jDBCDiskCache2 = new JDBCDiskCache<Object, Object>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache2.processRemoveAll();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<ForkJoinTask<Object>, Object> jDBCDiskCache0 = new JDBCDiskCache<ForkJoinTask<Object>, Object>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache0.processDispose();
      assertFalse(jDBCDiskCache0.isAlive());
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      JDBCDiskCache<CacheElementSerialized<Delayed, Object>, Integer> jDBCDiskCache0 = new JDBCDiskCache<CacheElementSerialized<Delayed, Object>, Integer>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, (TableState) null);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.processUpdate((ICacheElement<CacheElementSerialized<Delayed, Object>, Integer>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      TableState tableState0 = new TableState("?+YF_I+");
      JDBCDiskCache<String, JDBCDiskCache<Object, Integer>> jDBCDiskCache0 = new JDBCDiskCache<String, JDBCDiskCache<Object, Integer>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache0.toString();
      jDBCDiskCache0.deleteExpired();
      TableState tableState1 = new TableState("jcs");
      tableState1.setState(0);
      JDBCDiskCache<CacheElement<Object, Object>, String> jDBCDiskCache1 = new JDBCDiskCache<CacheElement<Object, Object>, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState1);
      jDBCDiskCache1.deleteExpired();
      JDBCDiskCache<Object, Object> jDBCDiskCache2 = new JDBCDiskCache<Object, Object>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache2.deleteExpired();
      jDBCDiskCache2.setJdbcDiskCacheAttributes(jDBCDiskCacheAttributes0);
      TableState tableState2 = new TableState("org.apache.commons.jcs3.engine.stats.Stats@0000000015");
      JDBCDiskCache<CacheElement<Object, Object>, CacheElement<Integer, Integer>> jDBCDiskCache3 = new JDBCDiskCache<CacheElement<Object, Object>, CacheElement<Integer, Integer>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState2);
      // Undeclared exception!
      try { 
        jDBCDiskCache3.getKeySet();
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
         //
         // Groups not implemented.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<Object, String> jDBCDiskCache0 = new JDBCDiskCache<Object, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.deleteExpired();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<ForkJoinTask<String>, ForkJoinTask<Object>> jDBCDiskCache0 = new JDBCDiskCache<ForkJoinTask<String>, ForkJoinTask<Object>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      assertTrue(jDBCDiskCache0.isAlive());
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JDBCDiskCache<String, String> jDBCDiskCache0 = new JDBCDiskCache<String, String>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      jDBCDiskCacheAttributes0.setAllowRemoveAll(false);
      jDBCDiskCache0.processRemoveAll();
      jDBCDiskCache0.getTableState();
      byte[] byteArray0 = new byte[1];
      ElementAttributes elementAttributes0 = new ElementAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      assertNotNull(sharedPoolDataSourceFactory0.getName());
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = new TableState("_");
      JDBCDiskCache<Integer, String> jDBCDiskCache0 = new JDBCDiskCache<Integer, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache0.dispose();
      Integer integer0 = new Integer(300);
      jDBCDiskCache0.processGet(integer0);
      Map<Integer, ICacheElement<Integer, String>> map0 = jDBCDiskCache0.processGetMatching("_");
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      jndiDataSourceFactory0.initialize(jDBCDiskCacheAttributes0);
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<Object, ForkJoinTask<Object>> jDBCDiskCache0 = new JDBCDiskCache<Object, ForkJoinTask<Object>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      Integer integer0 = new Integer(2);
      jDBCDiskCache0.get(integer0);
      jDBCDiskCache0.reset();
      JndiDataSourceFactory jndiDataSourceFactory1 = new JndiDataSourceFactory();
      JDBCDiskCache<Integer, ForkJoinTask<Object>> jDBCDiskCache1 = new JDBCDiskCache<Integer, ForkJoinTask<Object>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache1.getDiskLocation();
      JDBCDiskCache<Object, String> jDBCDiskCache2 = new JDBCDiskCache<Object, String>(jDBCDiskCacheAttributes0, jndiDataSourceFactory1, tableState0);
      jDBCDiskCache2.constructLikeParameterFromPattern("F");
      JDBCDiskCache<Delayed, ForkJoinTask<String>> jDBCDiskCache3 = new JDBCDiskCache<Delayed, ForkJoinTask<String>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      jDBCDiskCache3.processGetMatching("jcs");
      JDBCDiskCache<JDBCDiskCache<String, String>, Integer> jDBCDiskCache4 = new JDBCDiskCache<JDBCDiskCache<String, String>, Integer>(jDBCDiskCacheAttributes0, jndiDataSourceFactory1, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache4.getKeySet();
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
         //
         // Groups not implemented.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      TableState tableState0 = new TableState("jcs");
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      JDBCDiskCache<Object, ForkJoinTask<String>> jDBCDiskCache0 = new JDBCDiskCache<Object, ForkJoinTask<String>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.deleteExpired();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.dsfactory.JndiDataSourceFactory", e);
      }
  }
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("");
      JDBCDiskCache<Object, JDBCDiskCache<Object, Integer>> jDBCDiskCache0 = new JDBCDiskCache<Object, JDBCDiskCache<Object, Integer>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache0.getTableName();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory1 = new SharedPoolDataSourceFactory();
      JDBCDiskCache<Integer, String> jDBCDiskCache1 = new JDBCDiskCache<Integer, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory1, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache1.processRemove((Integer) 10);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JndiDataSourceFactory jndiDataSourceFactory0 = new JndiDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<CacheElement<Object, String>, CacheElement<String, Object>> jDBCDiskCache0 = new JDBCDiskCache<CacheElement<Object, String>, CacheElement<String, Object>>(jDBCDiskCacheAttributes0, jndiDataSourceFactory0, tableState0);
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1);
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread((ThreadGroup) null, mockThread0, "jcs");
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      ScheduledFuture<?> scheduledFuture0 = scheduledThreadPoolExecutor0.scheduleWithFixedDelay(mockThread1, 1000L, 1, timeUnit0);
      CacheElement<Object, String> cacheElement0 = new CacheElement<Object, String>("jcs", scheduledFuture0, "jcs");
      byte[] byteArray0 = new byte[6];
      byteArray0[4] = (byte)0;
      CacheElement<Integer, String> cacheElement1 = new CacheElement<Integer, String>("jcs", (Integer) 2, "jcs", (IElementAttributes) null);
      IElementAttributes iElementAttributes0 = cacheElement1.getElementAttributes();
      CacheElementSerialized<CacheElement<Object, String>, CacheElement<String, Object>> cacheElementSerialized0 = new CacheElementSerialized<CacheElement<Object, String>, CacheElement<String, Object>>("jcs", cacheElement0, byteArray0, iElementAttributes0);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.processUpdate(cacheElementSerialized0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.dsfactory.JndiDataSourceFactory", e);
      }
  }
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      JDBCDiskCache<Integer, Object> jDBCDiskCache0 = new JDBCDiskCache<Integer, Object>(jDBCDiskCacheAttributes0, (DataSourceFactory) null, (TableState) null);
      byte[] byteArray0 = new byte[8];
      CacheElementSerialized<Integer, Object> cacheElementSerialized0 = new CacheElementSerialized<Integer, Object>("^p2Ex1Kwy=^", (Integer) 300, byteArray0, (IElementAttributes) null);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.doesElementExist(cacheElementSerialized0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      jDBCDiskCacheAttributes0.setUserName("jcs");
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<CacheElement<Object, String>, CacheElement<Object, String>> jDBCDiskCache0 = new JDBCDiskCache<CacheElement<Object, String>, CacheElement<Object, String>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      // Undeclared exception!
      try { 
        jDBCDiskCache0.getSize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes0 = new JDBCDiskCacheAttributes();
      SharedPoolDataSourceFactory sharedPoolDataSourceFactory0 = new SharedPoolDataSourceFactory();
      TableState tableState0 = new TableState("jcs");
      JDBCDiskCache<Integer, Object> jDBCDiskCache0 = new JDBCDiskCache<Integer, Object>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache0.toString();
      JDBCDiskCache<Object, String> jDBCDiskCache1 = new JDBCDiskCache<Object, String>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      jDBCDiskCache1.getTableName();
      JDBCDiskCache<String, CacheElementSerialized<Integer, String>> jDBCDiskCache2 = new JDBCDiskCache<String, CacheElementSerialized<Integer, String>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes1 = (JDBCDiskCacheAttributes)jDBCDiskCache2.getAuxiliaryCacheAttributes();
      JDBCDiskCacheAttributes jDBCDiskCacheAttributes2 = new JDBCDiskCacheAttributes();
      JDBCDiskCache<Object, JDBCDiskCache<String, Object>> jDBCDiskCache3 = new JDBCDiskCache<Object, JDBCDiskCache<String, Object>>(jDBCDiskCacheAttributes0, sharedPoolDataSourceFactory0, tableState0);
      TableState tableState1 = new TableState("org.apache.commons.jcs3.engine.stats.Stats@0000000015");
      JDBCDiskCache<String, Callable<String>> jDBCDiskCache4 = new JDBCDiskCache<String, Callable<String>>(jDBCDiskCacheAttributes1, sharedPoolDataSourceFactory0, tableState1);
      jDBCDiskCache4.toString();
      // Undeclared exception!
      try { 
        jDBCDiskCache3.processRemoveAll();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.JDBCDiskCache", e);
      }
  }
