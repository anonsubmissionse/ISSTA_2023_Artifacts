/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 22:04:36 GMT 2022
 */

package org.apache.commons.jcs3.auxiliary.remote;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.file.OpenOption;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.concurrent.Delayed;
import java.util.concurrent.ForkJoinTask;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheAttributes;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheFactory;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheFailoverRunner;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheNoWait;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheNoWaitFacade;
import org.apache.commons.jcs3.auxiliary.remote.behavior.IRemoteCacheAttributes;
import org.apache.commons.jcs3.engine.logging.CacheEventLoggerDebugLogger;
import org.apache.commons.jcs3.utils.serialization.CompressingSerializer;
import org.apache.commons.jcs3.utils.serialization.EncryptingSerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RemoteCacheFailoverRunner_ESTest extends RemoteCacheFailoverRunner_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      CompressingSerializer compressingSerializer0 = new CompressingSerializer();
      RemoteCacheFactory remoteCacheFactory0 = new RemoteCacheFactory();
      LinkedList<RemoteCacheNoWait<String, Delayed>> linkedList0 = new LinkedList<RemoteCacheNoWait<String, Delayed>>();
      RemoteCacheNoWaitFacade<String, Delayed> remoteCacheNoWaitFacade0 = new RemoteCacheNoWaitFacade<String, Delayed>(linkedList0, (IRemoteCacheAttributes) null, cacheEventLoggerDebugLogger0, compressingSerializer0, remoteCacheFactory0);
      RemoteCacheFailoverRunner<String, Delayed> remoteCacheFailoverRunner0 = new RemoteCacheFailoverRunner<String, Delayed>(remoteCacheNoWaitFacade0, remoteCacheFactory0);
      // Undeclared exception!
      try { 
        remoteCacheFailoverRunner0.run();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.RemoteCacheNoWaitFacade", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      CompressingSerializer compressingSerializer0 = new CompressingSerializer();
      EncryptingSerializer encryptingSerializer0 = new EncryptingSerializer(compressingSerializer0);
      ArrayList<RemoteCacheNoWait<String, ForkJoinTask<Integer>>> arrayList0 = new ArrayList<RemoteCacheNoWait<String, ForkJoinTask<Integer>>>();
      RemoteCacheNoWaitFacade<String, ForkJoinTask<Integer>> remoteCacheNoWaitFacade0 = new RemoteCacheNoWaitFacade<String, ForkJoinTask<Integer>>(arrayList0, remoteCacheAttributes0, cacheEventLoggerDebugLogger0, encryptingSerializer0, (RemoteCacheFactory) null);
      RemoteCacheFailoverRunner<String, ForkJoinTask<Integer>> remoteCacheFailoverRunner0 = new RemoteCacheFailoverRunner<String, ForkJoinTask<Integer>>(remoteCacheNoWaitFacade0, (RemoteCacheFactory) null);
      remoteCacheFailoverRunner0.run();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      CompressingSerializer compressingSerializer0 = new CompressingSerializer();
      ArrayList<RemoteCacheNoWait<Object, OpenOption>> arrayList0 = new ArrayList<RemoteCacheNoWait<Object, OpenOption>>();
      RemoteCacheNoWaitFacade<Object, OpenOption> remoteCacheNoWaitFacade0 = new RemoteCacheNoWaitFacade<Object, OpenOption>(arrayList0, remoteCacheAttributes0, cacheEventLoggerDebugLogger0, compressingSerializer0, (RemoteCacheFactory) null);
      RemoteCacheFailoverRunner<Object, OpenOption> remoteCacheFailoverRunner0 = new RemoteCacheFailoverRunner<Object, OpenOption>(remoteCacheNoWaitFacade0, (RemoteCacheFactory) null);
      remoteCacheFailoverRunner0.doWork();
      assertFalse(remoteCacheFailoverRunner0.isDaemon());
}
}
