/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 22:04:27 GMT 2022
 */

package org.apache.commons.jcs3.auxiliary.disk.indexed;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.jcs3.auxiliary.disk.indexed.IndexedDiskCacheAttributes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IndexedDiskCacheAttributes_ESTest extends IndexedDiskCacheAttributes_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      assertFalse(indexedDiskCacheAttributes0.isClearDiskOnStartup());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setClearDiskOnStartup(true);
      indexedDiskCacheAttributes0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      assertFalse(indexedDiskCacheAttributes0.isOptimizeOnShutdown());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setOptimizeOnShutdown(false);
      indexedDiskCacheAttributes0.toString();
      assertFalse(indexedDiskCacheAttributes0.isOptimizeOnShutdown());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      assertFalse(indexedDiskCacheAttributes0.isOptimizeOnShutdown());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setOptimizeOnShutdown(false);
      boolean boolean0 = indexedDiskCacheAttributes0.isOptimizeOnShutdown();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      assertTrue(indexedDiskCacheAttributes0.isClearDiskOnStartup());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setClearDiskOnStartup(true);
      boolean boolean0 = indexedDiskCacheAttributes0.isClearDiskOnStartup();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setOptimizeAtRemoveCount(0);
      int int0 = indexedDiskCacheAttributes0.getOptimizeAtRemoveCount();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setOptimizeAtRemoveCount(760);
      int int0 = indexedDiskCacheAttributes0.getOptimizeAtRemoveCount();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      assertEquals(0, indexedDiskCacheAttributes0.getMaxKeySize());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setMaxKeySize(0);
      int int0 = indexedDiskCacheAttributes0.getMaxKeySize();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setMaxKeySize((-465));
      int int0 = indexedDiskCacheAttributes0.getMaxKeySize();
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setClearDiskOnStartup(false);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setClearDiskOnStartup(false);
      assertEquals(0, indexedDiskCacheAttributes0.getMaxKeySize());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setClearDiskOnStartup(false);
      assertFalse(indexedDiskCacheAttributes0.isOptimizeOnShutdown());
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setClearDiskOnStartup(false);
      assertFalse(indexedDiskCacheAttributes0.isClearDiskOnStartup());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      int int0 = indexedDiskCacheAttributes0.getMaxKeySize();
      assertFalse(indexedDiskCacheAttributes0.isOptimizeOnShutdown());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      int int0 = indexedDiskCacheAttributes0.getMaxKeySize();
      assertFalse(indexedDiskCacheAttributes0.isClearDiskOnStartup());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      int int0 = indexedDiskCacheAttributes0.getMaxKeySize();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      int int0 = indexedDiskCacheAttributes0.getMaxKeySize();
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      int int0 = indexedDiskCacheAttributes0.getOptimizeAtRemoveCount();
      assertEquals(0, indexedDiskCacheAttributes0.getMaxKeySize());
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      int int0 = indexedDiskCacheAttributes0.getOptimizeAtRemoveCount();
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      int int0 = indexedDiskCacheAttributes0.getOptimizeAtRemoveCount();
      assertTrue(indexedDiskCacheAttributes0.isClearDiskOnStartup());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      int int0 = indexedDiskCacheAttributes0.getOptimizeAtRemoveCount();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setMaxKeySize(1713);
      indexedDiskCacheAttributes0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      boolean boolean0 = indexedDiskCacheAttributes0.isOptimizeOnShutdown();
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      boolean boolean0 = indexedDiskCacheAttributes0.isOptimizeOnShutdown();
      assertFalse(indexedDiskCacheAttributes0.isClearDiskOnStartup());
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      boolean boolean0 = indexedDiskCacheAttributes0.isOptimizeOnShutdown();
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      boolean boolean0 = indexedDiskCacheAttributes0.isOptimizeOnShutdown();
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      boolean boolean0 = indexedDiskCacheAttributes0.isClearDiskOnStartup();
      assertEquals(0, indexedDiskCacheAttributes0.getOptimizeAtRemoveCount());
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      boolean boolean0 = indexedDiskCacheAttributes0.isClearDiskOnStartup();
      assertFalse(indexedDiskCacheAttributes0.isOptimizeOnShutdown());
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      boolean boolean0 = indexedDiskCacheAttributes0.isClearDiskOnStartup();
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      boolean boolean0 = indexedDiskCacheAttributes0.isClearDiskOnStartup();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setOptimizeOnShutdown(true);
      assertFalse(indexedDiskCacheAttributes0.isOptimizeOnShutdown());
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setOptimizeOnShutdown(true);
      assertEquals(0, indexedDiskCacheAttributes0.getMaxKeySize());
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setOptimizeOnShutdown(true);
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IndexedDiskCacheAttributes indexedDiskCacheAttributes0 = new IndexedDiskCacheAttributes();
      indexedDiskCacheAttributes0.setOptimizeOnShutdown(true);
      ;
}
}
