 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("-Cr#Civ_Iu$", true, "-Cr#Civ_Iu$", (-2210L), (-2210L));
      boolean boolean0 = cacheElementInfo0.isEternal();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("-Cr#Civ_Iu$", true, "-Cr#Civ_Iu$", (-2210L), (-2210L));
      boolean boolean0 = cacheElementInfo0.isEternal();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("-Cr#Civ_Iu$", true, "-Cr#Civ_Iu$", (-2210L), (-2210L));
      boolean boolean0 = cacheElementInfo0.isEternal();
      assertEquals(0, cacheElementInfo0.getMaxLifeSeconds());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("\u000194_", false, "\u000194_", 0L, 0L);
      cacheElementInfo0.getMaxLifeSeconds();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("wy", false, "wy", 2703L, 2703L);
      long long0 = cacheElementInfo0.getMaxLifeSeconds();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("wy", false, "wy", 2703L, 2703L);
      long long0 = cacheElementInfo0.getMaxLifeSeconds();
      assertEquals(0, cacheElementInfo0.getExpiresInSeconds());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("wy", false, "wy", 2703L, 2703L);
      long long0 = cacheElementInfo0.getMaxLifeSeconds();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("}A8 VYIbKGk;HNC", true, "}A8 VYIbKGk;HNC", (-1L), (-1L));
      cacheElementInfo0.getKey();
      assertEquals(1, cacheElementInfo0.getExpiresInSeconds());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("}A8 VYIbKGk;HNC", true, "}A8 VYIbKGk;HNC", (-1L), (-1L));
      cacheElementInfo0.getKey();
      assertEquals(1, cacheElementInfo0.getMaxLifeSeconds());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("}A8 VYIbKGk;HNC", true, "}A8 VYIbKGk;HNC", (-1L), (-1L));
      cacheElementInfo0.getKey();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", true, "", 324L, 0L);
      cacheElementInfo0.getKey();
      assertEquals(0, cacheElementInfo0.getExpiresInSeconds());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", true, "", 324L, 0L);
      cacheElementInfo0.getKey();
      assertEquals(1, cacheElementInfo0.getMaxLifeSeconds());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", true, "", 324L, 0L);
      cacheElementInfo0.getKey();
      assertTrue(cacheElementInfo0.isEternal());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", true, "", 0L, 0L);
      cacheElementInfo0.getExpiresInSeconds();
      assertTrue(cacheElementInfo0.isEternal());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo((String) null, false, "\n ExpiresInSeconds [", (-1494L), (-1494L));
      long long0 = cacheElementInfo0.getExpiresInSeconds();
      assertTrue(cacheElementInfo0.isEternal());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo((String) null, false, "\n ExpiresInSeconds [", (-1494L), (-1494L));
      long long0 = cacheElementInfo0.getExpiresInSeconds();
      assertEquals(0, cacheElementInfo0.getMaxLifeSeconds());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo((String) null, false, "\n ExpiresInSeconds [", (-1494L), (-1494L));
      long long0 = cacheElementInfo0.getExpiresInSeconds();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo((String) null, false, (String) null, (-1788L), (-1788L));
      cacheElementInfo0.getCreateTime();
      assertEquals(0, cacheElementInfo0.getExpiresInSeconds());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo((String) null, false, (String) null, (-1788L), (-1788L));
      cacheElementInfo0.getCreateTime();
      assertEquals(0, cacheElementInfo0.getMaxLifeSeconds());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo((String) null, false, (String) null, (-1788L), (-1788L));
      cacheElementInfo0.getCreateTime();
      assertFalse(cacheElementInfo0.isEternal());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("XR\"by", false, "XR\"by", 0L, 0L);
      cacheElementInfo0.getCreateTime();
      assertFalse(cacheElementInfo0.isEternal());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", false, "", (-1L), 3926L);
      long long0 = cacheElementInfo0.getMaxLifeSeconds();
      assertTrue(cacheElementInfo0.isEternal());
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", false, "", (-1L), 3926L);
      long long0 = cacheElementInfo0.getMaxLifeSeconds();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", false, "", (-1L), 3926L);
      long long0 = cacheElementInfo0.getMaxLifeSeconds();
      assertEquals(1, cacheElementInfo0.getExpiresInSeconds());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", false, "", (-1L), 3926L);
      cacheElementInfo0.getCreateTime();
      assertEquals(0, cacheElementInfo0.getExpiresInSeconds());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", false, "", (-1L), 3926L);
      cacheElementInfo0.getCreateTime();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", false, "", (-1L), 3926L);
      cacheElementInfo0.getCreateTime();
      assertEquals(1, cacheElementInfo0.getMaxLifeSeconds());
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", false, "", (-1L), 3926L);
      boolean boolean0 = cacheElementInfo0.isEternal();
      assertEquals(0, cacheElementInfo0.getExpiresInSeconds());
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", false, "", (-1L), 3926L);
      boolean boolean0 = cacheElementInfo0.isEternal();
      assertEquals(0, cacheElementInfo0.getMaxLifeSeconds());
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", false, "", (-1L), 3926L);
      boolean boolean0 = cacheElementInfo0.isEternal();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", false, "", (-1L), 3926L);
      long long0 = cacheElementInfo0.getExpiresInSeconds();
      assertTrue(cacheElementInfo0.isEternal());
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", false, "", (-1L), 3926L);
      long long0 = cacheElementInfo0.getExpiresInSeconds();
      assertEquals(1, cacheElementInfo0.getMaxLifeSeconds());
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("", false, "", (-1L), 3926L);
      long long0 = cacheElementInfo0.getExpiresInSeconds();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo((String) null, false, (String) null, (-1788L), (-1788L));
      cacheElementInfo0.getKey();
      assertEquals(0, cacheElementInfo0.getMaxLifeSeconds());
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo((String) null, false, (String) null, (-1788L), (-1788L));
      cacheElementInfo0.getKey();
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo((String) null, false, (String) null, (-1788L), (-1788L));
      cacheElementInfo0.getKey();
      assertEquals(0, cacheElementInfo0.getExpiresInSeconds());
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CacheElementInfo cacheElementInfo0 = new CacheElementInfo("ZqOp}", false, "ZqOp}", (-610L), (-610L));
      String string0 = cacheElementInfo0.toString();
      ;
}
