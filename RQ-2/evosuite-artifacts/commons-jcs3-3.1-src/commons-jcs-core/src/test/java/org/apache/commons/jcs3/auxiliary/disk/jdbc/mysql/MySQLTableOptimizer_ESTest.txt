 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      TableState tableState0 = new TableState("jcs");
      tableState0.setState(1717);
      jdbcDataSource jdbcDataSource0 = new jdbcDataSource();
      MySQLTableOptimizer mySQLTableOptimizer0 = new MySQLTableOptimizer(mySQLDiskCacheAttributes0, tableState0, jdbcDataSource0);
      // Undeclared exception!
      try { 
        mySQLTableOptimizer0.optimizeTable();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.mysql.MySQLTableOptimizer", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      jdbcDataSource jdbcDataSource0 = new jdbcDataSource();
      MySQLTableOptimizer mySQLTableOptimizer0 = new MySQLTableOptimizer(mySQLDiskCacheAttributes0, (TableState) null, jdbcDataSource0);
      mySQLTableOptimizer0.setTableName((String) null);
      String string0 = mySQLTableOptimizer0.getTableName();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      TableState tableState0 = new TableState("");
      jdbcDataSource jdbcDataSource0 = new jdbcDataSource();
      MySQLTableOptimizer mySQLTableOptimizer0 = new MySQLTableOptimizer(mySQLDiskCacheAttributes0, tableState0, jdbcDataSource0);
      mySQLTableOptimizer0.setTableName("");
      String string0 = mySQLTableOptimizer0.getTableName();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      jdbcDataSource jdbcDataSource0 = new jdbcDataSource();
      MySQLTableOptimizer mySQLTableOptimizer0 = new MySQLTableOptimizer(mySQLDiskCacheAttributes0, (TableState) null, jdbcDataSource0);
      // Undeclared exception!
      try { 
        mySQLTableOptimizer0.optimizeTable();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.mysql.MySQLTableOptimizer", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      TableState tableState0 = new TableState("`U\\YS1YPux");
      jdbcDataSource jdbcDataSource0 = new jdbcDataSource();
      MySQLTableOptimizer mySQLTableOptimizer0 = new MySQLTableOptimizer(mySQLDiskCacheAttributes0, tableState0, jdbcDataSource0);
      // Undeclared exception!
      try { 
        mySQLTableOptimizer0.getTableStatus((Statement) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.mysql.MySQLTableOptimizer", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TableState tableState0 = new TableState("Skipping optimization. Optimize was called, but the table state indicates that an optimization is currently running.");
      jdbcDataSource jdbcDataSource0 = new jdbcDataSource();
      MySQLTableOptimizer mySQLTableOptimizer0 = null;
      try {
        mySQLTableOptimizer0 = new MySQLTableOptimizer((MySQLDiskCacheAttributes) null, tableState0, jdbcDataSource0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.mysql.MySQLTableOptimizer", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      jdbcDataSource jdbcDataSource0 = new jdbcDataSource();
      MySQLTableOptimizer mySQLTableOptimizer0 = new MySQLTableOptimizer(mySQLDiskCacheAttributes0, (TableState) null, jdbcDataSource0);
      String string0 = mySQLTableOptimizer0.getTableName();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      TableState tableState0 = new TableState("jcs");
      tableState0.setState(2);
      MySQLTableOptimizer mySQLTableOptimizer0 = new MySQLTableOptimizer(mySQLDiskCacheAttributes0, tableState0, (DataSource) null);
      boolean boolean0 = mySQLTableOptimizer0.optimizeTable();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      TableState tableState0 = new TableState("org.hsqldb.lib.StringInputStream");
      jdbcDataSource jdbcDataSource0 = new jdbcDataSource();
      MySQLTableOptimizer mySQLTableOptimizer0 = new MySQLTableOptimizer(mySQLDiskCacheAttributes0, tableState0, jdbcDataSource0);
      // Undeclared exception!
      try { 
        mySQLTableOptimizer0.optimizeTable();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.mysql.MySQLTableOptimizer", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      MySQLTableOptimizer mySQLTableOptimizer0 = new MySQLTableOptimizer(mySQLDiskCacheAttributes0, (TableState) null, (DataSource) null);
      // Undeclared exception!
      try { 
        mySQLTableOptimizer0.repairTable((Statement) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.jdbc.mysql.MySQLTableOptimizer", e);
      }
  }
