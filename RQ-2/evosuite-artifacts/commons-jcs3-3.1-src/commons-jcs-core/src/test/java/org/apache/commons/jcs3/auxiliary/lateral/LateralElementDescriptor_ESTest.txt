 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LateralElementDescriptor<String, Integer> lateralElementDescriptor0 = new LateralElementDescriptor<String, Integer>();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LateralElementDescriptor<String, Integer> lateralElementDescriptor0 = new LateralElementDescriptor<String, Integer>();
      lateralElementDescriptor0.valHashCode = 0;
      int int0 = lateralElementDescriptor0.getValHashCode();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LateralElementDescriptor<Integer, Object> lateralElementDescriptor0 = new LateralElementDescriptor<Integer, Object>();
      lateralElementDescriptor0.valHashCode = 2557;
      int int0 = lateralElementDescriptor0.getValHashCode();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      CacheElement<Integer, Object> cacheElement0 = new CacheElement<Integer, Object>("/GCBW'Z+(ed[=f#", (Integer) null, "REMOVE");
      IElementAttributes iElementAttributes0 = cacheElement0.getElementAttributes();
      CacheElementSerialized<Object, String> cacheElementSerialized0 = new CacheElementSerialized<Object, String>("REMOVE", "REMOVE", byteArray0, iElementAttributes0);
      LateralCommand lateralCommand0 = LateralCommand.REMOVEALL;
      LateralElementDescriptor<Object, String> lateralElementDescriptor0 = new LateralElementDescriptor<Object, String>(cacheElementSerialized0, lateralCommand0, (byte)1);
      long long0 = lateralElementDescriptor0.getRequesterId();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      CacheElement<Integer, Object> cacheElement0 = new CacheElement<Integer, Object>("/GCBW'Z+(ed[=f#", (Integer) null, "REMOVE");
      IElementAttributes iElementAttributes0 = cacheElement0.getElementAttributes();
      CacheElementSerialized<Object, String> cacheElementSerialized0 = new CacheElementSerialized<Object, String>("REMOVE", "REMOVE", byteArray0, iElementAttributes0);
      LateralCommand lateralCommand0 = LateralCommand.REMOVEALL;
      LateralElementDescriptor<Object, String> lateralElementDescriptor0 = new LateralElementDescriptor<Object, String>(cacheElementSerialized0, lateralCommand0, (byte)1);
      long long0 = lateralElementDescriptor0.getRequesterId();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      CacheElement<Integer, Object> cacheElement0 = new CacheElement<Integer, Object>("/GCBW'Z+(ed[=f#", (Integer) null, "REMOVE");
      IElementAttributes iElementAttributes0 = cacheElement0.getElementAttributes();
      CacheElementSerialized<Object, String> cacheElementSerialized0 = new CacheElementSerialized<Object, String>("REMOVE", "REMOVE", byteArray0, iElementAttributes0);
      LateralCommand lateralCommand0 = LateralCommand.REMOVEALL;
      LateralElementDescriptor<Object, String> lateralElementDescriptor0 = new LateralElementDescriptor<Object, String>(cacheElementSerialized0, lateralCommand0, (byte)1);
      long long0 = lateralElementDescriptor0.getRequesterId();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LateralElementDescriptor<String, Integer> lateralElementDescriptor0 = new LateralElementDescriptor<String, Integer>();
      LateralElementDescriptor<Integer, String> lateralElementDescriptor1 = new LateralElementDescriptor<Integer, String>((ICacheElement<Integer, String>) null, lateralElementDescriptor0.command, (-1L));
      long long0 = lateralElementDescriptor1.getRequesterId();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LateralElementDescriptor<String, Integer> lateralElementDescriptor0 = new LateralElementDescriptor<String, Integer>();
      LateralElementDescriptor<Integer, String> lateralElementDescriptor1 = new LateralElementDescriptor<Integer, String>((ICacheElement<Integer, String>) null, lateralElementDescriptor0.command, (-1L));
      long long0 = lateralElementDescriptor1.getRequesterId();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LateralElementDescriptor<String, Integer> lateralElementDescriptor0 = new LateralElementDescriptor<String, Integer>();
      LateralElementDescriptor<Integer, String> lateralElementDescriptor1 = new LateralElementDescriptor<Integer, String>((ICacheElement<Integer, String>) null, lateralElementDescriptor0.command, (-1L));
      long long0 = lateralElementDescriptor1.getRequesterId();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      LateralElementDescriptor<Object, Object> lateralElementDescriptor0 = new LateralElementDescriptor<Object, Object>();
      lateralElementDescriptor0.getRequesterId();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LateralElementDescriptor<String, Object> lateralElementDescriptor0 = new LateralElementDescriptor<String, Object>();
      lateralElementDescriptor0.getCommand();
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LateralElementDescriptor<String, Object> lateralElementDescriptor0 = new LateralElementDescriptor<String, Object>();
      int int0 = lateralElementDescriptor0.getValHashCode();
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LateralElementDescriptor<Object, Object> lateralElementDescriptor0 = new LateralElementDescriptor<Object, Object>();
      lateralElementDescriptor0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LateralElementDescriptor<Object, Object> lateralElementDescriptor0 = new LateralElementDescriptor<Object, Object>();
      lateralElementDescriptor0.getPayload();
      ;
}
