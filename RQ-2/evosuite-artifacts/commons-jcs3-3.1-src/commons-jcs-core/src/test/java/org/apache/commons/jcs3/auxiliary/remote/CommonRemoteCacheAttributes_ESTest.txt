 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteTypeName("LOCAL");
      assertFalse(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteTypeName("LOCAL");
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setLocalClusterConsistency(true);
      boolean boolean0 = commonRemoteCacheAttributes0.isLocalClusterConsistency();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRmiSocketFactoryTimeoutMillis(0);
      int int0 = commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRmiSocketFactoryTimeoutMillis((-1));
      int int0 = commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteType((RemoteType) null);
      commonRemoteCacheAttributes0.getRemoteType();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteType((RemoteType) null);
      commonRemoteCacheAttributes0.getRemoteType();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteServiceName((String) null);
      commonRemoteCacheAttributes0.getRemoteServiceName();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteServiceName((String) null);
      commonRemoteCacheAttributes0.getRemoteServiceName();
      assertFalse(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteServiceName("");
      commonRemoteCacheAttributes0.getRemoteServiceName();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteServiceName("");
      commonRemoteCacheAttributes0.getRemoteServiceName();
      assertTrue(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteLocation((String) null, 0);
      RemoteLocation remoteLocation0 = commonRemoteCacheAttributes0.getRemoteLocation();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteLocation((String) null, 0);
      RemoteLocation remoteLocation0 = commonRemoteCacheAttributes0.getRemoteLocation();
      assertEquals(0, remoteLocation0.getPort());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteLocation((String) null, 0);
      RemoteLocation remoteLocation0 = commonRemoteCacheAttributes0.getRemoteLocation();
      assertFalse(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteLocation("", 3);
      RemoteLocation remoteLocation0 = commonRemoteCacheAttributes0.getRemoteLocation();
      assertTrue(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteLocation("", 3);
      RemoteLocation remoteLocation0 = commonRemoteCacheAttributes0.getRemoteLocation();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteLocation("", 3);
      RemoteLocation remoteLocation0 = commonRemoteCacheAttributes0.getRemoteLocation();
      assertEquals(0, remoteLocation0.getPort());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteLocation("", (-2824));
      RemoteLocation remoteLocation0 = commonRemoteCacheAttributes0.getRemoteLocation();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteLocation("", (-2824));
      RemoteLocation remoteLocation0 = commonRemoteCacheAttributes0.getRemoteLocation();
      assertFalse(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteLocation("", (-2824));
      RemoteLocation remoteLocation0 = commonRemoteCacheAttributes0.getRemoteLocation();
      assertEquals(0, remoteLocation0.getPort());
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setGetOnly(true);
      boolean boolean0 = commonRemoteCacheAttributes0.getGetOnly();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setClusterServers((String) null);
      commonRemoteCacheAttributes0.getClusterServers();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setClusterServers((String) null);
      commonRemoteCacheAttributes0.getClusterServers();
      assertTrue(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setClusterServers("LOCAL");
      commonRemoteCacheAttributes0.getClusterServers();
      assertTrue(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setClusterServers("LOCAL");
      commonRemoteCacheAttributes0.getClusterServers();
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      String string0 = commonRemoteCacheAttributes0.toString();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      String string0 = commonRemoteCacheAttributes0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.getRemoteTypeName();
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.getRemoteTypeName();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.getRemoteServiceName();
      assertTrue(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.getRemoteServiceName();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteType((RemoteType) null);
      commonRemoteCacheAttributes0.getRemoteTypeName();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteType((RemoteType) null);
      commonRemoteCacheAttributes0.getRemoteTypeName();
      assertFalse(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.getGetOnly();
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.getGetOnly();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.isLocalClusterConsistency();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.isLocalClusterConsistency();
      assertFalse(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      int int0 = commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      int int0 = commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis();
      assertFalse(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteLocation("", 3);
      String string0 = commonRemoteCacheAttributes0.toString();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoteLocation("", 3);
      String string0 = commonRemoteCacheAttributes0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      assertTrue(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.setRemoveUponRemotePut(false);
      boolean boolean0 = commonRemoteCacheAttributes0.getRemoveUponRemotePut();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      RemoteLocation remoteLocation0 = commonRemoteCacheAttributes0.getRemoteLocation();
      commonRemoteCacheAttributes0.setRemoteLocation(remoteLocation0);
      assertFalse(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      RemoteLocation remoteLocation0 = commonRemoteCacheAttributes0.getRemoteLocation();
      commonRemoteCacheAttributes0.setRemoteLocation(remoteLocation0);
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      boolean boolean0 = commonRemoteCacheAttributes0.getRemoveUponRemotePut();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      boolean boolean0 = commonRemoteCacheAttributes0.getRemoveUponRemotePut();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.getRemoteType();
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.getRemoteType();
      assertTrue(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.getClusterServers();
      assertTrue(commonRemoteCacheAttributes0.getRemoveUponRemotePut());
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CommonRemoteCacheAttributes commonRemoteCacheAttributes0 = new CommonRemoteCacheAttributes();
      commonRemoteCacheAttributes0.getClusterServers();
      assertEquals(0, commonRemoteCacheAttributes0.getRmiSocketFactoryTimeoutMillis());
}
