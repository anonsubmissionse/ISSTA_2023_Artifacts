 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      assertTrue(remoteCacheServerAttributes0.isStartRegistry());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setStartRegistry(false);
      boolean boolean0 = remoteCacheServerAttributes0.isStartRegistry();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setServicePort(1455);
      int int0 = remoteCacheServerAttributes0.getServicePort();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setServicePort((-1));
      int int0 = remoteCacheServerAttributes0.getServicePort();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setRegistryKeepAliveDelayMillis(0);
      remoteCacheServerAttributes0.getRegistryKeepAliveDelayMillis();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setRegistryKeepAliveDelayMillis((-943L));
      long long0 = remoteCacheServerAttributes0.getRegistryKeepAliveDelayMillis();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setConfigFileName((String) null);
      remoteCacheServerAttributes0.getConfigFileName();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setConfigFileName((String) null);
      remoteCacheServerAttributes0.getConfigFileName();
      assertTrue(remoteCacheServerAttributes0.isAllowClusterGet());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setConfigFileName((String) null);
      remoteCacheServerAttributes0.getConfigFileName();
      assertEquals(0, remoteCacheServerAttributes0.getRegistryKeepAliveDelayMillis());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setConfigFileName((String) null);
      remoteCacheServerAttributes0.getConfigFileName();
      assertFalse(remoteCacheServerAttributes0.isUseRegistryKeepAlive());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setConfigFileName("\"BH5yu~&U9)HT8hLn");
      remoteCacheServerAttributes0.getConfigFileName();
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setConfigFileName("\"BH5yu~&U9)HT8hLn");
      remoteCacheServerAttributes0.getConfigFileName();
      assertFalse(remoteCacheServerAttributes0.isUseRegistryKeepAlive());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setConfigFileName("\"BH5yu~&U9)HT8hLn");
      remoteCacheServerAttributes0.getConfigFileName();
      assertEquals(0, remoteCacheServerAttributes0.getRegistryKeepAliveDelayMillis());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setConfigFileName("\"BH5yu~&U9)HT8hLn");
      remoteCacheServerAttributes0.getConfigFileName();
      assertTrue(remoteCacheServerAttributes0.isAllowClusterGet());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.getConfigFileName();
      assertTrue(remoteCacheServerAttributes0.isAllowClusterGet());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.getConfigFileName();
      assertEquals(0, remoteCacheServerAttributes0.getRegistryKeepAliveDelayMillis());
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.getConfigFileName();
      assertFalse(remoteCacheServerAttributes0.isStartRegistry());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.getConfigFileName();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      boolean boolean0 = remoteCacheServerAttributes0.isAllowClusterGet();
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      boolean boolean0 = remoteCacheServerAttributes0.isAllowClusterGet();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      boolean boolean0 = remoteCacheServerAttributes0.isAllowClusterGet();
      assertFalse(remoteCacheServerAttributes0.isUseRegistryKeepAlive());
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      boolean boolean0 = remoteCacheServerAttributes0.isAllowClusterGet();
      assertEquals(0, remoteCacheServerAttributes0.getRegistryKeepAliveDelayMillis());
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      boolean boolean0 = remoteCacheServerAttributes0.isUseRegistryKeepAlive();
      assertTrue(remoteCacheServerAttributes0.isStartRegistry());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      boolean boolean0 = remoteCacheServerAttributes0.isUseRegistryKeepAlive();
      assertTrue(remoteCacheServerAttributes0.isAllowClusterGet());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      boolean boolean0 = remoteCacheServerAttributes0.isUseRegistryKeepAlive();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      boolean boolean0 = remoteCacheServerAttributes0.isUseRegistryKeepAlive();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      int int0 = remoteCacheServerAttributes0.getServicePort();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      int int0 = remoteCacheServerAttributes0.getServicePort();
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      int int0 = remoteCacheServerAttributes0.getServicePort();
      assertEquals(0, remoteCacheServerAttributes0.getRegistryKeepAliveDelayMillis());
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      int int0 = remoteCacheServerAttributes0.getServicePort();
      assertTrue(remoteCacheServerAttributes0.isStartRegistry());
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      int int0 = remoteCacheServerAttributes0.getServicePort();
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      long long0 = remoteCacheServerAttributes0.getRegistryKeepAliveDelayMillis();
      assertTrue(remoteCacheServerAttributes0.isUseRegistryKeepAlive());
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      long long0 = remoteCacheServerAttributes0.getRegistryKeepAliveDelayMillis();
      assertTrue(remoteCacheServerAttributes0.isAllowClusterGet());
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      long long0 = remoteCacheServerAttributes0.getRegistryKeepAliveDelayMillis();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      long long0 = remoteCacheServerAttributes0.getRegistryKeepAliveDelayMillis();
      assertTrue(remoteCacheServerAttributes0.isStartRegistry());
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      assertTrue(remoteCacheServerAttributes0.isAllowClusterGet());
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setAllowClusterGet(false);
      boolean boolean0 = remoteCacheServerAttributes0.isAllowClusterGet();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      boolean boolean0 = remoteCacheServerAttributes0.isStartRegistry();
      assertTrue(remoteCacheServerAttributes0.isAllowClusterGet());
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      boolean boolean0 = remoteCacheServerAttributes0.isStartRegistry();
      assertFalse(remoteCacheServerAttributes0.isUseRegistryKeepAlive());
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      boolean boolean0 = remoteCacheServerAttributes0.isStartRegistry();
      assertEquals(0, remoteCacheServerAttributes0.getRegistryKeepAliveDelayMillis());
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      boolean boolean0 = remoteCacheServerAttributes0.isStartRegistry();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      assertFalse(remoteCacheServerAttributes0.isUseRegistryKeepAlive());
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      remoteCacheServerAttributes0.setUseRegistryKeepAlive(false);
      boolean boolean0 = remoteCacheServerAttributes0.isUseRegistryKeepAlive();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      String string0 = remoteCacheServerAttributes0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RemoteCacheServerAttributes remoteCacheServerAttributes0 = new RemoteCacheServerAttributes();
      String string0 = remoteCacheServerAttributes0.toString();
      assertFalse(remoteCacheServerAttributes0.isStartRegistry());
}
