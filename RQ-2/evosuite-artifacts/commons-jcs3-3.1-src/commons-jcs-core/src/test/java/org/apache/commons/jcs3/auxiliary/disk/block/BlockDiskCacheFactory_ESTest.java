/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 22:04:10 GMT 2022
 */

package org.apache.commons.jcs3.auxiliary.disk.block;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jcs3.auxiliary.AuxiliaryCacheAttributes;
import org.apache.commons.jcs3.auxiliary.disk.block.BlockDiskCacheAttributes;
import org.apache.commons.jcs3.auxiliary.disk.block.BlockDiskCacheFactory;
import org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.TCPLateralCacheAttributes;
import org.apache.commons.jcs3.engine.behavior.ICompositeCacheManager;
import org.apache.commons.jcs3.engine.behavior.IElementSerializer;
import org.apache.commons.jcs3.engine.control.CompositeCacheManager;
import org.apache.commons.jcs3.engine.logging.behavior.ICacheEventLogger;
import org.apache.commons.jcs3.utils.serialization.CompressingSerializer;
import org.apache.commons.jcs3.utils.serialization.StandardSerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BlockDiskCacheFactory_ESTest extends BlockDiskCacheFactory_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BlockDiskCacheFactory blockDiskCacheFactory0 = new BlockDiskCacheFactory();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      StandardSerializer standardSerializer0 = new StandardSerializer();
      // Undeclared exception!
      try { 
        blockDiskCacheFactory0.createCache((AuxiliaryCacheAttributes) tCPLateralCacheAttributes0, (ICompositeCacheManager) compositeCacheManager0, (ICacheEventLogger) null, (IElementSerializer) standardSerializer0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.TCPLateralCacheAttributes cannot be cast to org.apache.commons.jcs3.auxiliary.disk.block.BlockDiskCacheAttributes
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.block.BlockDiskCacheFactory", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BlockDiskCacheAttributes blockDiskCacheAttributes0 = new BlockDiskCacheAttributes();
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      BlockDiskCacheFactory blockDiskCacheFactory0 = new BlockDiskCacheFactory();
      CompressingSerializer compressingSerializer0 = new CompressingSerializer();
      // Undeclared exception!
      try { 
        blockDiskCacheFactory0.createCache((AuxiliaryCacheAttributes) blockDiskCacheAttributes0, (ICompositeCacheManager) compositeCacheManager0, (ICacheEventLogger) null, (IElementSerializer) compressingSerializer0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.disk.block.BlockDiskCache", e);
      }
  }
}
