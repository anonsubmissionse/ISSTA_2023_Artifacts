/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 21:54:15 GMT 2022
 */

package org.apache.commons.jcs3.auxiliary.disk.indexed;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.jcs3.auxiliary.disk.indexed.IndexedDiskElementDescriptor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IndexedDiskElementDescriptor_ESTest extends IndexedDiskElementDescriptor_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor((-1L), (-1105));
      IndexedDiskElementDescriptor indexedDiskElementDescriptor1 = new IndexedDiskElementDescriptor((-1105), 0);
      int int0 = indexedDiskElementDescriptor0.compareTo(indexedDiskElementDescriptor1);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor(1L, 1907);
      IndexedDiskElementDescriptor indexedDiskElementDescriptor1 = new IndexedDiskElementDescriptor(1L, 0);
      boolean boolean0 = indexedDiskElementDescriptor0.equals(indexedDiskElementDescriptor1);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor(1L, 1907);
      IndexedDiskElementDescriptor indexedDiskElementDescriptor1 = new IndexedDiskElementDescriptor(1L, 0);
      boolean boolean0 = indexedDiskElementDescriptor0.equals(indexedDiskElementDescriptor1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor((-1L), 5);
      IndexedDiskElementDescriptor indexedDiskElementDescriptor1 = new IndexedDiskElementDescriptor(5, 5);
      boolean boolean0 = indexedDiskElementDescriptor0.equals(indexedDiskElementDescriptor1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor((-1L), 5);
      IndexedDiskElementDescriptor indexedDiskElementDescriptor1 = new IndexedDiskElementDescriptor(5, 5);
      boolean boolean0 = indexedDiskElementDescriptor0.equals(indexedDiskElementDescriptor1);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor((-1403L), 1388);
      indexedDiskElementDescriptor0.hashCode();
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor(217L, (-362));
      IndexedDiskElementDescriptor indexedDiskElementDescriptor1 = new IndexedDiskElementDescriptor((-362), (-362));
      int int0 = indexedDiskElementDescriptor0.compareTo(indexedDiskElementDescriptor1);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor(1782L, (-4));
      IndexedDiskElementDescriptor indexedDiskElementDescriptor1 = new IndexedDiskElementDescriptor((-4), (-191));
      int int0 = indexedDiskElementDescriptor0.compareTo(indexedDiskElementDescriptor1);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor((-1716), (-1716));
      int int0 = indexedDiskElementDescriptor0.compareTo((IndexedDiskElementDescriptor) null);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor((-1716), (-1716));
      int int0 = indexedDiskElementDescriptor0.compareTo(indexedDiskElementDescriptor0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor((-4), (-4));
      IndexedDiskElementDescriptor indexedDiskElementDescriptor1 = new IndexedDiskElementDescriptor((-4), (-191));
      boolean boolean0 = indexedDiskElementDescriptor1.equals(indexedDiskElementDescriptor0);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor((-4), (-4));
      IndexedDiskElementDescriptor indexedDiskElementDescriptor1 = new IndexedDiskElementDescriptor((-4), (-191));
      boolean boolean0 = indexedDiskElementDescriptor1.equals(indexedDiskElementDescriptor0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor(1782L, (-4));
      IndexedDiskElementDescriptor indexedDiskElementDescriptor1 = new IndexedDiskElementDescriptor((-4), (-4));
      boolean boolean0 = indexedDiskElementDescriptor0.equals(indexedDiskElementDescriptor1);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor(1782L, (-4));
      IndexedDiskElementDescriptor indexedDiskElementDescriptor1 = new IndexedDiskElementDescriptor((-4), (-4));
      boolean boolean0 = indexedDiskElementDescriptor0.equals(indexedDiskElementDescriptor1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor((-1716), (-1716));
      boolean boolean0 = indexedDiskElementDescriptor0.equals(indexedDiskElementDescriptor0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor((-1716), (-1716));
      boolean boolean0 = indexedDiskElementDescriptor0.equals((Object) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor((-1716), (-1716));
      boolean boolean0 = indexedDiskElementDescriptor0.equals("[DED:  pos = -1716 len = -1716]");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IndexedDiskElementDescriptor indexedDiskElementDescriptor0 = new IndexedDiskElementDescriptor((-1716), (-1716));
      String string0 = indexedDiskElementDescriptor0.toString();
      assertNotNull(string0);
}
}
