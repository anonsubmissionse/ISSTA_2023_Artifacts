 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 1150, 1150, (-1176), (-1176), poolConfiguration_WhenBlockedPolicy0, 1150);
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 1150, 1150, (-1176), (-1176), poolConfiguration_WhenBlockedPolicy0, 1150);
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 1150, 1150, (-1176), (-1176), poolConfiguration_WhenBlockedPolicy0, 1150);
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 1150, 1150, (-1176), (-1176), poolConfiguration_WhenBlockedPolicy0, 1150);
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 1150, 1150, (-1176), (-1176), poolConfiguration_WhenBlockedPolicy0, 1150);
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      assertNotNull(poolConfiguration0.getWhenBlockedPolicy());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 1150, 1150, (-1176), (-1176), poolConfiguration_WhenBlockedPolicy0, 1150);
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      assertEquals(0, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 1150, 1150, (-1176), (-1176), poolConfiguration_WhenBlockedPolicy0, 1150);
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getStartUpSize();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getStartUpSize();
      assertNotNull(poolConfiguration0.getWhenBlockedPolicy());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 0, 0, (-135), (-3196), poolConfiguration_WhenBlockedPolicy0, (-1585));
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 0, 0, (-135), (-3196), poolConfiguration_WhenBlockedPolicy0, (-1585));
      int int0 = poolConfiguration0.getStartUpSize();
      assertNotNull(poolConfiguration0.getWhenBlockedPolicy());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 0, 0, (-135), (-3196), poolConfiguration_WhenBlockedPolicy0, (-1585));
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 0, 0, (-135), (-3196), poolConfiguration_WhenBlockedPolicy0, (-1585));
      int int0 = poolConfiguration0.getStartUpSize();
      assertTrue(poolConfiguration0.isUseBoundary());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 0, 0, (-135), (-3196), poolConfiguration_WhenBlockedPolicy0, (-1585));
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 0, 0, (-135), (-3196), poolConfiguration_WhenBlockedPolicy0, (-1585));
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 0, 0, (-135), (-3196), poolConfiguration_WhenBlockedPolicy0, (-1585));
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.RUN;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 814, 0, 0, 0, poolConfiguration_WhenBlockedPolicy0, 300000);
      int int0 = poolConfiguration0.getMinimumPoolSize();
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.RUN;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 814, 0, 0, 0, poolConfiguration_WhenBlockedPolicy0, 300000);
      int int0 = poolConfiguration0.getMinimumPoolSize();
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.RUN;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 814, 0, 0, 0, poolConfiguration_WhenBlockedPolicy0, 300000);
      int int0 = poolConfiguration0.getMinimumPoolSize();
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.RUN;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 814, 0, 0, 0, poolConfiguration_WhenBlockedPolicy0, 300000);
      int int0 = poolConfiguration0.getMinimumPoolSize();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.RUN;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 814, 0, 0, 0, poolConfiguration_WhenBlockedPolicy0, 300000);
      int int0 = poolConfiguration0.getMinimumPoolSize();
      assertEquals(1, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.RUN;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 814, 0, 0, 0, poolConfiguration_WhenBlockedPolicy0, 300000);
      int int0 = poolConfiguration0.getMinimumPoolSize();
      assertEquals(0, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setMinimumPoolSize((-809));
      int int0 = poolConfiguration0.getMinimumPoolSize();
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 2297, 2297, poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getMaximumPoolSize();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 2297, 2297, poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getMaximumPoolSize();
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 2297, 2297, poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getMaximumPoolSize();
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 2297, 2297, poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getMaximumPoolSize();
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 2297, 2297, poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getMaximumPoolSize();
      assertNotNull(poolConfiguration0.getWhenBlockedPolicy());
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 2297, 2297, poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getMaximumPoolSize();
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 2297, 2297, poolConfiguration_WhenBlockedPolicy0, 0);
      int int0 = poolConfiguration0.getMaximumPoolSize();
      assertTrue(poolConfiguration0.isUseBoundary());
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 0, 0, 0, (-3650), poolConfiguration_WhenBlockedPolicy0, (-1));
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 0, 0, 0, (-3650), poolConfiguration_WhenBlockedPolicy0, (-1));
      poolConfiguration0.setKeepAliveTime(0);
      int int0 = poolConfiguration0.getKeepAliveTime();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1569), 0, (-641), poolConfiguration_WhenBlockedPolicy0, (-641));
      int int0 = poolConfiguration0.getKeepAliveTime();
      assertNotNull(poolConfiguration0.getWhenBlockedPolicy());
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1569), 0, (-641), poolConfiguration_WhenBlockedPolicy0, (-641));
      int int0 = poolConfiguration0.getKeepAliveTime();
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1569), 0, (-641), poolConfiguration_WhenBlockedPolicy0, (-641));
      int int0 = poolConfiguration0.getKeepAliveTime();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1569), 0, (-641), poolConfiguration_WhenBlockedPolicy0, (-641));
      int int0 = poolConfiguration0.getKeepAliveTime();
      assertTrue(poolConfiguration0.isUseBoundary());
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1569), 0, (-641), poolConfiguration_WhenBlockedPolicy0, (-641));
      int int0 = poolConfiguration0.getKeepAliveTime();
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1569), 0, (-641), poolConfiguration_WhenBlockedPolicy0, (-641));
      int int0 = poolConfiguration0.getKeepAliveTime();
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1569), 0, (-641), poolConfiguration_WhenBlockedPolicy0, (-641));
      int int0 = poolConfiguration0.getKeepAliveTime();
      assertEquals(1, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setBoundarySize((-2712));
      int int0 = poolConfiguration0.getBoundarySize();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setKeepAliveTime(0);
      poolConfiguration0.clone();
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), (-1), poolConfiguration_WhenBlockedPolicy0, 1859);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertEquals(0, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), (-1), poolConfiguration_WhenBlockedPolicy0, 1859);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), (-1), poolConfiguration_WhenBlockedPolicy0, 1859);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), (-1), poolConfiguration_WhenBlockedPolicy0, 1859);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), (-1), poolConfiguration_WhenBlockedPolicy0, 1859);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertTrue(poolConfiguration0.isUseBoundary());
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), (-1), poolConfiguration_WhenBlockedPolicy0, 1859);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), (-1), poolConfiguration_WhenBlockedPolicy0, 1859);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), (-1), poolConfiguration_WhenBlockedPolicy0, 1859);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), (-1), poolConfiguration_WhenBlockedPolicy0, 1859);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), (-1), poolConfiguration_WhenBlockedPolicy0, 1859);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), (-1), poolConfiguration_WhenBlockedPolicy0, 1859);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), (-1), poolConfiguration_WhenBlockedPolicy0, 1859);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertNotNull(poolConfiguration1.getWhenBlockedPolicy());
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 0, 1, poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 0, 1, poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 0, 1, poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 0, 1, poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 0, 1, poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertEquals(0, poolConfiguration1.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 0, 1, poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 0, 1, poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertNotNull(poolConfiguration1.getWhenBlockedPolicy());
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.ABORT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, 0, 0, 0, 1, poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), 4, poolConfiguration_WhenBlockedPolicy0, (-1));
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), 4, poolConfiguration_WhenBlockedPolicy0, (-1));
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), 4, poolConfiguration_WhenBlockedPolicy0, (-1));
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertEquals(1, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), 4, poolConfiguration_WhenBlockedPolicy0, (-1));
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertEquals(0, poolConfiguration1.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), 4, poolConfiguration_WhenBlockedPolicy0, (-1));
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertEquals(1, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), 4, poolConfiguration_WhenBlockedPolicy0, (-1));
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), 4, poolConfiguration_WhenBlockedPolicy0, (-1));
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertFalse(poolConfiguration0.isUseBoundary());
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), 4, poolConfiguration_WhenBlockedPolicy0, (-1));
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), 4, poolConfiguration_WhenBlockedPolicy0, (-1));
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), 4, poolConfiguration_WhenBlockedPolicy0, (-1));
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertNotNull(poolConfiguration1.getWhenBlockedPolicy());
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), 4, poolConfiguration_WhenBlockedPolicy0, (-1));
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      assertEquals(1, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.BLOCK;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(false, (-1), (-1), (-1), 4, poolConfiguration_WhenBlockedPolicy0, (-1));
      PoolConfiguration poolConfiguration1 = poolConfiguration0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.RUN;
      poolConfiguration0.setWhenBlockedPolicy(poolConfiguration_WhenBlockedPolicy0);
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.RUN;
      poolConfiguration0.setWhenBlockedPolicy(poolConfiguration_WhenBlockedPolicy0);
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.RUN;
      poolConfiguration0.setWhenBlockedPolicy(poolConfiguration_WhenBlockedPolicy0);
      ;
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.RUN;
      poolConfiguration0.setWhenBlockedPolicy(poolConfiguration_WhenBlockedPolicy0);
      assertEquals(0, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.RUN;
      poolConfiguration0.setWhenBlockedPolicy(poolConfiguration_WhenBlockedPolicy0);
      assertFalse(poolConfiguration0.isUseBoundary());
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.RUN;
      poolConfiguration0.setWhenBlockedPolicy(poolConfiguration_WhenBlockedPolicy0);
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      assertTrue(poolConfiguration0.isUseBoundary());
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setUseBoundary(false);
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setMaximumPoolSize((-545));
      int int0 = poolConfiguration0.getMaximumPoolSize();
      ;
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy1 = poolConfiguration0.getWhenBlockedPolicy();
      ;
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy1 = poolConfiguration0.getWhenBlockedPolicy();
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy1 = poolConfiguration0.getWhenBlockedPolicy();
      ;
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy1 = poolConfiguration0.getWhenBlockedPolicy();
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy1 = poolConfiguration0.getWhenBlockedPolicy();
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy1 = poolConfiguration0.getWhenBlockedPolicy();
      assertNotNull(poolConfiguration_WhenBlockedPolicy1);
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy1 = poolConfiguration0.getWhenBlockedPolicy();
      assertEquals(0, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      poolConfiguration0.setStartUpSize(0);
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      poolConfiguration0.setStartUpSize(0);
      assertEquals(0, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      poolConfiguration0.setStartUpSize(0);
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      poolConfiguration0.setStartUpSize(0);
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      poolConfiguration0.setStartUpSize(0);
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      poolConfiguration0.setStartUpSize(0);
      assertNotNull(poolConfiguration0.getWhenBlockedPolicy());
}
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      poolConfiguration0.setStartUpSize(0);
      assertTrue(poolConfiguration0.isUseBoundary());
}
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.WAIT;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, (-3135), 0, (-3135), (-3135), poolConfiguration_WhenBlockedPolicy0, 0);
      poolConfiguration0.setBoundarySize(0);
      int int0 = poolConfiguration0.getBoundarySize();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 2, 2, 2, (-1125), poolConfiguration_WhenBlockedPolicy0, (-1125));
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 2, 2, 2, (-1125), poolConfiguration_WhenBlockedPolicy0, (-1125));
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 2, 2, 2, (-1125), poolConfiguration_WhenBlockedPolicy0, (-1125));
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      assertEquals(0, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 2, 2, 2, (-1125), poolConfiguration_WhenBlockedPolicy0, (-1125));
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      assertNotNull(poolConfiguration0.getWhenBlockedPolicy());
}
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 2, 2, 2, (-1125), poolConfiguration_WhenBlockedPolicy0, (-1125));
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 2, 2, 2, (-1125), poolConfiguration_WhenBlockedPolicy0, (-1125));
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      PoolConfiguration.WhenBlockedPolicy poolConfiguration_WhenBlockedPolicy0 = PoolConfiguration.WhenBlockedPolicy.DISCARDOLDEST;
      PoolConfiguration poolConfiguration0 = new PoolConfiguration(true, 2, 2, 2, (-1125), poolConfiguration_WhenBlockedPolicy0, (-1125));
      boolean boolean0 = poolConfiguration0.isUseBoundary();
      assertEquals(1, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setWhenBlockedPolicy((PoolConfiguration.WhenBlockedPolicy) null);
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setWhenBlockedPolicy((PoolConfiguration.WhenBlockedPolicy) null);
      ;
}
 @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setWhenBlockedPolicy((PoolConfiguration.WhenBlockedPolicy) null);
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setWhenBlockedPolicy((PoolConfiguration.WhenBlockedPolicy) null);
      ;
}
 @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setWhenBlockedPolicy((PoolConfiguration.WhenBlockedPolicy) null);
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setWhenBlockedPolicy((PoolConfiguration.WhenBlockedPolicy) null);
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setWhenBlockedPolicy("BLOCK");
      assertNotNull(poolConfiguration0.getWhenBlockedPolicy());
}
 @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setWhenBlockedPolicy((String) null);
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setWhenBlockedPolicy((String) null);
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setWhenBlockedPolicy((String) null);
      assertEquals(0, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setWhenBlockedPolicy((String) null);
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setWhenBlockedPolicy((String) null);
      assertTrue(poolConfiguration0.isUseBoundary());
}
 @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      poolConfiguration0.setWhenBlockedPolicy((String) null);
      assertEquals(1, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getStartUpSize();
      assertTrue(poolConfiguration0.isUseBoundary());
}
 @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getStartUpSize();
      ;
}
 @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getStartUpSize();
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getKeepAliveTime();
      assertEquals(0, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getKeepAliveTime();
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getKeepAliveTime();
      ;
}
 @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getKeepAliveTime();
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getKeepAliveTime();
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getKeepAliveTime();
      ;
}
 @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getMaximumPoolSize();
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
 @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getMaximumPoolSize();
      ;
}
 @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getMaximumPoolSize();
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getMaximumPoolSize();
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getMaximumPoolSize();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getMaximumPoolSize();
      assertEquals(0, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      String string0 = poolConfiguration0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getMinimumPoolSize();
      ;
}
 @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getMinimumPoolSize();
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getMinimumPoolSize();
      ;
}
 @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getMinimumPoolSize();
      assertEquals(0, poolConfiguration0.getBoundarySize());
}
 @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getMinimumPoolSize();
      ;
}
 @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getMinimumPoolSize();
      assertFalse(poolConfiguration0.isUseBoundary());
}
 @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getBoundarySize();
      assertFalse(poolConfiguration0.isUseBoundary());
}
 @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getBoundarySize();
      assertEquals(1, poolConfiguration0.getKeepAliveTime());
}
 @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getBoundarySize();
      assertEquals(0, poolConfiguration0.getMaximumPoolSize());
}
 @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getBoundarySize();
      assertEquals(0, poolConfiguration0.getStartUpSize());
}
 @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getBoundarySize();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      PoolConfiguration poolConfiguration0 = new PoolConfiguration();
      int int0 = poolConfiguration0.getBoundarySize();
      assertEquals(0, poolConfiguration0.getMinimumPoolSize());
}
