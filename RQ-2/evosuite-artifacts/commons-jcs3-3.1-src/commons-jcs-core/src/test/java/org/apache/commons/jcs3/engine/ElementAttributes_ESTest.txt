 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setTimeFactorForMilliseconds(0L);
      long long0 = elementAttributes0.getTimeToLiveSeconds();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setTimeFactorForMilliseconds((-3266L));
      long long0 = elementAttributes0.getTimeToLiveSeconds();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setTimeFactorForMilliseconds((-3266L));
      long long0 = elementAttributes0.getTimeToLiveSeconds();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      assertEquals(0, elementAttributes0.getTimeFactorForMilliseconds());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setTimeFactorForMilliseconds(0L);
      elementAttributes0.getTimeFactorForMilliseconds();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setTimeFactorForMilliseconds((-901));
      long long0 = elementAttributes0.getTimeFactorForMilliseconds();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setSize(1578);
      int int0 = elementAttributes0.getSize();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setSize((-901));
      int int0 = elementAttributes0.getSize();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setMaxLife(0L);
      elementAttributes0.getMaxLife();
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setMaxLife(929L);
      long long0 = elementAttributes0.getMaxLife();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setMaxLife(929L);
      long long0 = elementAttributes0.getMaxLife();
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getLastAccessTime();
      assertFalse(elementAttributes1.getIsLateral());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getLastAccessTime();
      assertFalse(elementAttributes1.getIsSpool());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getLastAccessTime();
      assertEquals(0, elementAttributes1.getMaxLife());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getLastAccessTime();
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getLastAccessTime();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getLastAccessTime();
      assertFalse(elementAttributes1.getIsRemote());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getLastAccessTime();
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getLastAccessTime();
      assertEquals(0, elementAttributes1.getSize());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getLastAccessTime();
      assertEquals(0, elementAttributes0.getTimeFactorForMilliseconds());
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getLastAccessTime();
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getLastAccessTime();
      assertEquals(0, elementAttributes1.getIdleTime());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setLastAccessTime((-1043L));
      long long0 = elementAttributes0.getLastAccessTime();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      assertTrue(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setIsSpool(false);
      boolean boolean0 = elementAttributes0.getIsSpool();
      assertFalse(boolean0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setIsRemote(false);
      boolean boolean0 = elementAttributes0.getIsRemote();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setIsLateral(false);
      boolean boolean0 = elementAttributes0.getIsLateral();
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      assertTrue(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setIsEternal(false);
      boolean boolean0 = elementAttributes0.getIsEternal();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      assertEquals(0, elementAttributes0.getIdleTime());
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setIdleTime(0L);
      elementAttributes0.getIdleTime();
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setIdleTime(281L);
      long long0 = elementAttributes0.getIdleTime();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getCreateTime();
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getCreateTime();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getCreateTime();
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getCreateTime();
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getCreateTime();
      assertFalse(elementAttributes1.getIsEternal());
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getCreateTime();
      assertEquals(0, elementAttributes1.getIdleTime());
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getCreateTime();
      assertFalse(elementAttributes1.getIsLateral());
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getCreateTime();
      assertTrue(elementAttributes1.getIsSpool());
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getCreateTime();
      assertEquals(0, elementAttributes0.getTimeFactorForMilliseconds());
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getCreateTime();
      assertFalse(elementAttributes1.getIsRemote());
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      elementAttributes1.getCreateTime();
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      ;
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      assertTrue(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      assertTrue(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      assertEquals(0, elementAttributes0.getTimeFactorForMilliseconds());
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      assertTrue(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      assertTrue(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      ;
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setTimeFactorForMilliseconds(0L);
      elementAttributes0.clone();
      assertFalse(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setTimeFactorForMilliseconds((-3266L));
      elementAttributes0.clone();
      assertEquals(1, elementAttributes0.getTimeFactorForMilliseconds());
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setSize(1578);
      elementAttributes0.clone();
      assertEquals(0, elementAttributes0.getSize());
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setSize((-901));
      elementAttributes0.clone();
      assertEquals(0, elementAttributes0.getSize());
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      assertEquals(0, elementAttributes0.getMaxLife());
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setMaxLife(0L);
      elementAttributes0.clone();
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setMaxLife(1392409281320L);
      elementAttributes0.clone();
      assertEquals(0, elementAttributes0.getMaxLife());
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setLastAccessTime((-1L));
      elementAttributes0.clone();
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      assertTrue(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setIsSpool(false);
      elementAttributes0.clone();
      assertFalse(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      assertTrue(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setIsRemote(false);
      elementAttributes0.clone();
      assertFalse(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      assertEquals(0, elementAttributes0.getIdleTime());
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setIdleTime(0L);
      elementAttributes0.clone();
      assertEquals(0, elementAttributes0.getTimeFactorForMilliseconds());
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setIdleTime(2340L);
      elementAttributes0.clone();
      assertEquals(0, elementAttributes0.getIdleTime());
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      System.setCurrentTimeMillis(0L);
      elementAttributes0.clone();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      System.setCurrentTimeMillis((-1184L));
      elementAttributes0.clone();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ElementAttributes elementAttributes0 = null;
      try {
        elementAttributes0 = new ElementAttributes((ElementAttributes) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.engine.ElementAttributes", e);
      }
  }
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getIdleTime();
      ;
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getIdleTime();
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getIdleTime();
      ;
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getIdleTime();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getIdleTime();
      assertFalse(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getIdleTime();
      assertTrue(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getIdleTime();
      ;
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getIdleTime();
      assertTrue(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeToLiveSeconds();
      assertTrue(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeToLiveSeconds();
      ;
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeToLiveSeconds();
      ;
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeToLiveSeconds();
      ;
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeToLiveSeconds();
      assertEquals(0, elementAttributes0.getIdleTime());
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeToLiveSeconds();
      ;
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeToLiveSeconds();
      assertFalse(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeToLiveSeconds();
      ;
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeFactorForMilliseconds();
      ;
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeFactorForMilliseconds();
      assertFalse(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeFactorForMilliseconds();
      assertTrue(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeFactorForMilliseconds();
      assertTrue(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeFactorForMilliseconds();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeFactorForMilliseconds();
      assertTrue(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeFactorForMilliseconds();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getTimeFactorForMilliseconds();
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getLastAccessTime();
      ;
}
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getLastAccessTime();
      ;
}
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getLastAccessTime();
      ;
}
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getLastAccessTime();
      assertTrue(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getLastAccessTime();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getLastAccessTime();
      assertTrue(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getLastAccessTime();
      ;
}
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getLastAccessTime();
      assertTrue(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getMaxLife();
      ;
}
 @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getMaxLife();
      assertTrue(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getMaxLife();
      assertEquals(1, elementAttributes0.getTimeFactorForMilliseconds());
}
 @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getMaxLife();
      assertTrue(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getMaxLife();
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getMaxLife();
      assertTrue(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getMaxLife();
      assertTrue(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getMaxLife();
      ;
}
 @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getMaxLife();
      ;
}
 @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      ;
}
 @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      assertTrue(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      ;
}
 @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      ;
}
 @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      assertTrue(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      assertTrue(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      long long0 = elementAttributes0.getCreateTime();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setCreateTime();
      assertTrue(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setCreateTime();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setCreateTime();
      assertTrue(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setCreateTime();
      assertTrue(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setCreateTime();
      ;
}
 @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setCreateTime();
      ;
}
 @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setCreateTime();
      assertEquals(0, elementAttributes0.getIdleTime());
}
 @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setCreateTime();
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementEventHandler iElementEventHandler0 = mock(IElementEventHandler.class, new ViolatedAssumptionAnswer());
      doReturn("a").when(iElementEventHandler0).toString();
      elementAttributes0.addElementEventHandler(iElementEventHandler0);
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      ArrayList<IElementEventHandler> arrayList0 = elementAttributes0.getElementEventHandlers();
      elementAttributes1.addElementEventHandlers(arrayList0);
      assertEquals(0, elementAttributes1.getIdleTime());
}
 @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementEventHandler iElementEventHandler0 = mock(IElementEventHandler.class, new ViolatedAssumptionAnswer());
      doReturn("a").when(iElementEventHandler0).toString();
      elementAttributes0.addElementEventHandler(iElementEventHandler0);
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      ArrayList<IElementEventHandler> arrayList0 = elementAttributes0.getElementEventHandlers();
      elementAttributes1.addElementEventHandlers(arrayList0);
      assertEquals(0, elementAttributes1.getMaxLife());
}
 @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementEventHandler iElementEventHandler0 = mock(IElementEventHandler.class, new ViolatedAssumptionAnswer());
      doReturn("a").when(iElementEventHandler0).toString();
      elementAttributes0.addElementEventHandler(iElementEventHandler0);
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      ArrayList<IElementEventHandler> arrayList0 = elementAttributes0.getElementEventHandlers();
      elementAttributes1.addElementEventHandlers(arrayList0);
      assertTrue(elementAttributes1.getIsSpool());
}
 @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementEventHandler iElementEventHandler0 = mock(IElementEventHandler.class, new ViolatedAssumptionAnswer());
      doReturn("a").when(iElementEventHandler0).toString();
      elementAttributes0.addElementEventHandler(iElementEventHandler0);
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      ArrayList<IElementEventHandler> arrayList0 = elementAttributes0.getElementEventHandlers();
      elementAttributes1.addElementEventHandlers(arrayList0);
      ;
}
 @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementEventHandler iElementEventHandler0 = mock(IElementEventHandler.class, new ViolatedAssumptionAnswer());
      doReturn("a").when(iElementEventHandler0).toString();
      elementAttributes0.addElementEventHandler(iElementEventHandler0);
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      ArrayList<IElementEventHandler> arrayList0 = elementAttributes0.getElementEventHandlers();
      elementAttributes1.addElementEventHandlers(arrayList0);
      assertEquals(0, elementAttributes1.getSize());
}
 @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementEventHandler iElementEventHandler0 = mock(IElementEventHandler.class, new ViolatedAssumptionAnswer());
      doReturn("a").when(iElementEventHandler0).toString();
      elementAttributes0.addElementEventHandler(iElementEventHandler0);
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      ArrayList<IElementEventHandler> arrayList0 = elementAttributes0.getElementEventHandlers();
      elementAttributes1.addElementEventHandlers(arrayList0);
      assertTrue(elementAttributes1.getIsEternal());
}
 @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementEventHandler iElementEventHandler0 = mock(IElementEventHandler.class, new ViolatedAssumptionAnswer());
      doReturn("a").when(iElementEventHandler0).toString();
      elementAttributes0.addElementEventHandler(iElementEventHandler0);
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      ArrayList<IElementEventHandler> arrayList0 = elementAttributes0.getElementEventHandlers();
      elementAttributes1.addElementEventHandlers(arrayList0);
      assertFalse(elementAttributes1.getIsRemote());
}
 @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementEventHandler iElementEventHandler0 = mock(IElementEventHandler.class, new ViolatedAssumptionAnswer());
      doReturn("a").when(iElementEventHandler0).toString();
      elementAttributes0.addElementEventHandler(iElementEventHandler0);
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      ArrayList<IElementEventHandler> arrayList0 = elementAttributes0.getElementEventHandlers();
      elementAttributes1.addElementEventHandlers(arrayList0);
      assertEquals(0, elementAttributes0.getTimeFactorForMilliseconds());
}
 @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementEventHandler iElementEventHandler0 = mock(IElementEventHandler.class, new ViolatedAssumptionAnswer());
      doReturn("a").when(iElementEventHandler0).toString();
      elementAttributes0.addElementEventHandler(iElementEventHandler0);
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      ArrayList<IElementEventHandler> arrayList0 = elementAttributes0.getElementEventHandlers();
      elementAttributes1.addElementEventHandlers(arrayList0);
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementEventHandler iElementEventHandler0 = mock(IElementEventHandler.class, new ViolatedAssumptionAnswer());
      doReturn("a").when(iElementEventHandler0).toString();
      elementAttributes0.addElementEventHandler(iElementEventHandler0);
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      ArrayList<IElementEventHandler> arrayList0 = elementAttributes0.getElementEventHandlers();
      elementAttributes1.addElementEventHandlers(arrayList0);
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementEventHandler iElementEventHandler0 = mock(IElementEventHandler.class, new ViolatedAssumptionAnswer());
      doReturn("a").when(iElementEventHandler0).toString();
      elementAttributes0.addElementEventHandler(iElementEventHandler0);
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      ArrayList<IElementEventHandler> arrayList0 = elementAttributes0.getElementEventHandlers();
      elementAttributes1.addElementEventHandlers(arrayList0);
      ;
}
 @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandlers((List<IElementEventHandler>) null);
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandlers((List<IElementEventHandler>) null);
      assertTrue(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandlers((List<IElementEventHandler>) null);
      assertFalse(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandlers((List<IElementEventHandler>) null);
      assertTrue(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandlers((List<IElementEventHandler>) null);
      assertEquals(0, elementAttributes0.getTimeFactorForMilliseconds());
}
 @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandlers((List<IElementEventHandler>) null);
      ;
}
 @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandlers((List<IElementEventHandler>) null);
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandlers((List<IElementEventHandler>) null);
      assertTrue(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      IElementEventHandler iElementEventHandler0 = mock(IElementEventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(iElementEventHandler0).toString();
      elementAttributes0.addElementEventHandler(iElementEventHandler0);
      ArrayList<IElementEventHandler> arrayList0 = elementAttributes0.getElementEventHandlers();
      // Undeclared exception!
      try { 
        elementAttributes0.addElementEventHandlers(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }
 @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      ;
}
 @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      ;
}
 @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      assertTrue(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      ;
}
 @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      assertEquals(0, elementAttributes0.getTimeFactorForMilliseconds());
}
 @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      assertTrue(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      elementAttributes0.addElementEventHandler((IElementEventHandler) null);
      assertTrue(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      IElementAttributes iElementAttributes0 = elementAttributes1.clone();
      assertEquals(0, iElementAttributes0.getIdleTime());
}
 @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      IElementAttributes iElementAttributes0 = elementAttributes1.clone();
      assertTrue(iElementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      IElementAttributes iElementAttributes0 = elementAttributes1.clone();
      assertTrue(iElementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      IElementAttributes iElementAttributes0 = elementAttributes1.clone();
      ;
}
 @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      IElementAttributes iElementAttributes0 = elementAttributes1.clone();
      assertTrue(iElementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      IElementAttributes iElementAttributes0 = elementAttributes1.clone();
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      IElementAttributes iElementAttributes0 = elementAttributes1.clone();
      ;
}
 @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      IElementAttributes iElementAttributes0 = elementAttributes1.clone();
      assertEquals(0, iElementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      IElementAttributes iElementAttributes0 = elementAttributes1.clone();
      assertTrue(iElementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ElementAttributes elementAttributes1 = new ElementAttributes(elementAttributes0);
      IElementAttributes iElementAttributes0 = elementAttributes1.clone();
      assertEquals(0, iElementAttributes0.getSize());
}
 @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsRemote();
      ;
}
 @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsRemote();
      ;
}
 @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsRemote();
      assertFalse(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsRemote();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsRemote();
      ;
}
 @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsRemote();
      assertEquals(0, elementAttributes0.getIdleTime());
}
 @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsRemote();
      ;
}
 @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsRemote();
      assertFalse(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.getElementEventHandlers();
      assertFalse(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.getElementEventHandlers();
      ;
}
 @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.getElementEventHandlers();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.getElementEventHandlers();
      assertFalse(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.getElementEventHandlers();
      assertTrue(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.getElementEventHandlers();
      ;
}
 @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.getElementEventHandlers();
      ;
}
 @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.getElementEventHandlers();
      ;
}
 @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsSpool();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsSpool();
      ;
}
 @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsSpool();
      assertFalse(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsSpool();
      ;
}
 @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsSpool();
      assertTrue(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsSpool();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsSpool();
      assertTrue(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsSpool();
      assertEquals(1, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      ;
}
 @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setLastAccessTimeNow();
      assertEquals(0, elementAttributes0.getTimeFactorForMilliseconds());
}
 @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setLastAccessTimeNow();
      assertEquals(0, elementAttributes0.getIdleTime());
}
 @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setLastAccessTimeNow();
      assertFalse(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setLastAccessTimeNow();
      assertTrue(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setLastAccessTimeNow();
      assertEquals(0, elementAttributes0.getTimeToLiveSeconds());
}
 @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setLastAccessTimeNow();
      assertTrue(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setLastAccessTimeNow();
      assertFalse(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsLateral();
      assertEquals(1, elementAttributes0.getTimeFactorForMilliseconds());
}
 @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsLateral();
      assertEquals(0, elementAttributes0.getIdleTime());
}
 @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsLateral();
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsLateral();
      assertFalse(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsLateral();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsLateral();
      ;
}
 @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsLateral();
      assertTrue(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsLateral();
      ;
}
 @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsEternal();
      assertFalse(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsEternal();
      assertFalse(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsEternal();
      assertFalse(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsEternal();
      ;
}
 @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsEternal();
      assertEquals(0, elementAttributes0.getIdleTime());
}
 @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsEternal();
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsEternal();
      ;
}
 @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      boolean boolean0 = elementAttributes0.getIsEternal();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      String string0 = elementAttributes0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      String string0 = elementAttributes0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      assertTrue(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setIsEternal(false);
      elementAttributes0.clone();
      assertFalse(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      assertTrue(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      elementAttributes0.setIsLateral(false);
      elementAttributes0.clone();
      assertFalse(elementAttributes0.getIsLateral());
}
 @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      int int0 = elementAttributes0.getSize();
      assertEquals(0, elementAttributes0.getIdleTime());
}
 @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      int int0 = elementAttributes0.getSize();
      assertFalse(elementAttributes0.getIsSpool());
}
 @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      int int0 = elementAttributes0.getSize();
      assertFalse(elementAttributes0.getIsRemote());
}
 @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      int int0 = elementAttributes0.getSize();
      assertFalse(elementAttributes0.getIsEternal());
}
 @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      int int0 = elementAttributes0.getSize();
      ;
}
 @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      int int0 = elementAttributes0.getSize();
      ;
}
 @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      int int0 = elementAttributes0.getSize();
      assertEquals(0, elementAttributes0.getLastAccessTime());
}
 @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      int int0 = elementAttributes0.getSize();
      ;
}
 @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      ElementAttributes elementAttributes0 = new ElementAttributes();
      int int0 = elementAttributes0.getSize();
      ;
}
