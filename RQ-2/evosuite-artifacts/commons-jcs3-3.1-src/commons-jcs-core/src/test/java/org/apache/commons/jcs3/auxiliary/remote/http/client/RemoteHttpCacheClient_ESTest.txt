 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RemoteHttpCacheClient<String, Object> remoteHttpCacheClient0 = new RemoteHttpCacheClient<String, Object>();
      remoteHttpCacheClient0.setInitialized(true);
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.getMatching("", ":aSu+8@|ZQm_u`4w");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RemoteHttpCacheClient<String, Object> remoteHttpCacheClient0 = new RemoteHttpCacheClient<String, Object>();
      try { 
        remoteHttpCacheClient0.getMatching("\"0CD'B\"aoAH .Rj\"h", (String) null);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized. Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RemoteHttpCacheClient<CacheElement<Object, Locale.LanguageRange>, List<Integer>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<CacheElement<Object, Locale.LanguageRange>, List<Integer>>();
      remoteHttpCacheClient0.setInitialized(true);
      boolean boolean0 = remoteHttpCacheClient0.isInitialized();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RemoteHttpCacheClient<LinkedHashSet<Integer>, Object> remoteHttpCacheClient0 = new RemoteHttpCacheClient<LinkedHashSet<Integer>, Object>();
      boolean boolean0 = remoteHttpCacheClient0.isInitialized();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RemoteHttpCacheClient<RemoteHttpCacheClient<String, Object>, String> remoteHttpCacheClient0 = new RemoteHttpCacheClient<RemoteHttpCacheClient<String, Object>, String>();
      remoteHttpCacheClient0.setInitialized(true);
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.removeAll("\"");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RemoteHttpCacheClient<Integer, RemoteHttpCacheClient<Integer, Integer>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<Integer, RemoteHttpCacheClient<Integer, Integer>>();
      remoteHttpCacheClient0.setInitialized(true);
      Integer integer0 = new Integer((-2863));
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.remove("", integer0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RemoteHttpCacheClient<Object, Integer> remoteHttpCacheClient0 = new RemoteHttpCacheClient<Object, Integer>();
      RemoteHttpCacheAttributes remoteHttpCacheAttributes0 = new RemoteHttpCacheAttributes();
      // Undeclared exception!
      remoteHttpCacheClient0.initialize(remoteHttpCacheAttributes0);
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RemoteHttpCacheAttributes remoteHttpCacheAttributes0 = new RemoteHttpCacheAttributes();
      RemoteHttpCacheClient<Object, String> remoteHttpCacheClient0 = new RemoteHttpCacheClient<Object, String>(remoteHttpCacheAttributes0);
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RemoteHttpCacheClient<String, Locale> remoteHttpCacheClient0 = new RemoteHttpCacheClient<String, Locale>();
      remoteHttpCacheClient0.setInitialized(true);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      CacheElement<String, Locale> cacheElement0 = new CacheElement<String, Locale>("VwN", "VwN", locale0);
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.update((ICacheElement<String, Locale>) cacheElement0, 585L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      RemoteHttpCacheClient<LinkedHashSet<Object>, Integer> remoteHttpCacheClient0 = new RemoteHttpCacheClient<LinkedHashSet<Object>, Integer>();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      ElementAttributes elementAttributes0 = new ElementAttributes();
      CacheElement<LinkedHashSet<Object>, Integer> cacheElement0 = new CacheElement<LinkedHashSet<Object>, Integer>((String) null, linkedHashSet0, (Integer) null, elementAttributes0);
      try { 
        remoteHttpCacheClient0.update((ICacheElement<LinkedHashSet<Object>, Integer>) cacheElement0, 0L);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized.  Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RemoteHttpCacheClient<String, Integer> remoteHttpCacheClient0 = new RemoteHttpCacheClient<String, Integer>();
      try { 
        remoteHttpCacheClient0.removeAll("", (-1793L));
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized.  Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RemoteHttpCacheClient<Integer, RemoteHttpCacheClient<Integer, String>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<Integer, RemoteHttpCacheClient<Integer, String>>();
      Integer integer0 = new Integer((-1250));
      try { 
        remoteHttpCacheClient0.remove("o{S>Zv28+/1c", integer0, 0L);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized.  Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RemoteHttpCacheClient<Integer, Integer> remoteHttpCacheClient0 = new RemoteHttpCacheClient<Integer, Integer>();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      try { 
        remoteHttpCacheClient0.getMultiple("org.apache.http.impl.conn.DefaultManagedHttpClientConnection", (Set<Integer>) linkedHashSet0, (-1097L));
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized.  Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RemoteHttpCacheClient<CacheElementSerialized<Integer, Locale>, CacheElementSerialized<Object, Integer>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<CacheElementSerialized<Integer, Locale>, CacheElementSerialized<Object, Integer>>();
      remoteHttpCacheClient0.setInitialized(true);
      LinkedHashSet<CacheElementSerialized<Integer, Locale>> linkedHashSet0 = new LinkedHashSet<CacheElementSerialized<Integer, Locale>>();
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.getMultiple("", (Set<CacheElementSerialized<Integer, Locale>>) linkedHashSet0, (-2L));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RemoteHttpCacheClient<Integer, LinkedHashSet<Object>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<Integer, LinkedHashSet<Object>>();
      remoteHttpCacheClient0.setInitialized(true);
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.getMatching("\r\n", "\r\n", 2048L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RemoteHttpCacheClient<LinkedHashSet<Object>, CacheElementSerialized<Integer, Locale>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<LinkedHashSet<Object>, CacheElementSerialized<Integer, Locale>>();
      remoteHttpCacheClient0.setInitialized(true);
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.get("00uI`+v9vib.NV990M6", (LinkedHashSet<Object>) null, (-1L));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RemoteHttpCacheClient<HashMap<Object, Object>, Object> remoteHttpCacheClient0 = new RemoteHttpCacheClient<HashMap<Object, Object>, Object>();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      try { 
        remoteHttpCacheClient0.get((String) null, hashMap0, 0L);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized. Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RemoteHttpCacheClient<LinkedHashSet<Integer>, CacheElement<String, Object>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<LinkedHashSet<Integer>, CacheElement<String, Object>>();
      RemoteHttpCacheAttributes remoteHttpCacheAttributes0 = new RemoteHttpCacheAttributes();
      remoteHttpCacheClient0.setRemoteHttpCacheAttributes(remoteHttpCacheAttributes0);
      RemoteHttpCacheAttributes remoteHttpCacheAttributes1 = remoteHttpCacheClient0.getRemoteHttpCacheAttributes();
      assertFalse(remoteHttpCacheAttributes1.isIncludeCacheNameAsParameter());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RemoteHttpCacheClient<HashMap<String, Integer>, Object> remoteHttpCacheClient0 = new RemoteHttpCacheClient<HashMap<String, Integer>, Object>();
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.initialize((RemoteHttpCacheAttributes) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.AbstractHttpClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RemoteHttpCacheClient<RemoteHttpCacheClient<Locale.LanguageRange, RemoteLocation>, Header> remoteHttpCacheClient0 = new RemoteHttpCacheClient<RemoteHttpCacheClient<Locale.LanguageRange, RemoteLocation>, Header>();
      try { 
        remoteHttpCacheClient0.isAlive();
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized.  Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RemoteHttpCacheClient<Integer, LinkedHashSet<Integer>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<Integer, LinkedHashSet<Integer>>();
      remoteHttpCacheClient0.setInitialized(true);
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.isAlive();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RemoteHttpCacheClient<RemoteHttpCacheClient<String, Object>, CacheElement<String, Object>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<RemoteHttpCacheClient<String, Object>, CacheElement<String, Object>>();
      try { 
        remoteHttpCacheClient0.getKeySet("R\"Fc]G");
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized.  Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RemoteHttpCacheClient<String, Locale> remoteHttpCacheClient0 = new RemoteHttpCacheClient<String, Locale>();
      remoteHttpCacheClient0.setInitialized(true);
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.getKeySet("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RemoteHttpCacheClient<LinkedHashSet<Integer>, List<String>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<LinkedHashSet<Integer>, List<String>>();
      try { 
        remoteHttpCacheClient0.dispose("*;R%dPGA7&<B?MFr");
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized.  Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RemoteHttpCacheClient<String, CacheElement<Locale, Object>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<String, CacheElement<Locale, Object>>();
      remoteHttpCacheClient0.setInitialized(true);
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.dispose("Get [{0}] = {1}");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RemoteHttpCacheClient<String, Locale> remoteHttpCacheClient0 = new RemoteHttpCacheClient<String, Locale>();
      remoteHttpCacheClient0.setInitialized(true);
      Locale locale0 = Locale.JAPANESE;
      CacheElement<String, Locale> cacheElement0 = new CacheElement<String, Locale>("Session output buffer", "Session output buffer", locale0);
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.update((ICacheElement<String, Locale>) cacheElement0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RemoteHttpCacheClient<String, Object> remoteHttpCacheClient0 = new RemoteHttpCacheClient<String, Object>();
      remoteHttpCacheClient0.setInitialized(true);
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.removeAll("Connection is clos<d", 0L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RemoteHttpCacheClient<Object, Object> remoteHttpCacheClient0 = new RemoteHttpCacheClient<Object, Object>();
      remoteHttpCacheClient0.setInitialized(true);
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.remove("'UG+z1M/3UU", (Object) "'UG+z1M/3UU", (-16L));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RemoteHttpCacheClient<CacheElementSerialized<Integer, Locale>, CacheElementSerialized<Object, Integer>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<CacheElementSerialized<Integer, Locale>, CacheElementSerialized<Object, Integer>>();
      remoteHttpCacheClient0.setInitialized(true);
      LinkedHashSet<CacheElementSerialized<Integer, Locale>> linkedHashSet0 = new LinkedHashSet<CacheElementSerialized<Integer, Locale>>();
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.getMultiple("", (Set<CacheElementSerialized<Integer, Locale>>) linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RemoteHttpCacheClient<CacheElementSerialized<Integer, Locale>, CacheElementSerialized<Object, Integer>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<CacheElementSerialized<Integer, Locale>, CacheElementSerialized<Object, Integer>>();
      LinkedHashSet<CacheElementSerialized<Integer, Locale>> linkedHashSet0 = new LinkedHashSet<CacheElementSerialized<Integer, Locale>>();
      try { 
        remoteHttpCacheClient0.getMultiple("", (Set<CacheElementSerialized<Integer, Locale>>) linkedHashSet0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized.  Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RemoteHttpCacheClient<String, LinkedHashSet<Object>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<String, LinkedHashSet<Object>>();
      remoteHttpCacheClient0.release();
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RemoteHttpCacheClient<LinkedHashSet<Object>, Locale> remoteHttpCacheClient0 = new RemoteHttpCacheClient<LinkedHashSet<Object>, Locale>();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      try { 
        remoteHttpCacheClient0.remove("5", linkedHashSet0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized.  Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RemoteHttpCacheClient<String, Locale> remoteHttpCacheClient0 = new RemoteHttpCacheClient<String, Locale>();
      remoteHttpCacheClient0.setInitialized(true);
      // Undeclared exception!
      try { 
        remoteHttpCacheClient0.get("[`S_Xs~vX", "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RemoteHttpCacheClient<CacheElementSerialized<String, String>, Integer> remoteHttpCacheClient0 = new RemoteHttpCacheClient<CacheElementSerialized<String, String>, Integer>();
      remoteHttpCacheClient0.setRemoteDispatcher((IRemoteCacheDispatcher) null);
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RemoteHttpCacheClient<String, Locale> remoteHttpCacheClient0 = new RemoteHttpCacheClient<String, Locale>();
      Locale locale0 = Locale.JAPANESE;
      CacheElement<String, Locale> cacheElement0 = new CacheElement<String, Locale>("Session output buffer", "Session output buffer", locale0);
      try { 
        remoteHttpCacheClient0.update((ICacheElement<String, Locale>) cacheElement0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized.  Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RemoteHttpCacheClient<LinkedHashSet<Integer>, CacheElement<String, Object>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<LinkedHashSet<Integer>, CacheElement<String, Object>>();
      RemoteHttpCacheAttributes remoteHttpCacheAttributes0 = remoteHttpCacheClient0.getRemoteHttpCacheAttributes();
      assertNotNull(remoteHttpCacheAttributes0);
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RemoteHttpCacheClient<String, Locale> remoteHttpCacheClient0 = new RemoteHttpCacheClient<String, Locale>();
      try { 
        remoteHttpCacheClient0.get("[`S_Xs~vX", "");
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized. Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RemoteHttpCacheClient<String, String> remoteHttpCacheClient0 = null;
      try {
        remoteHttpCacheClient0 = new RemoteHttpCacheClient<String, String>((RemoteHttpCacheAttributes) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.AbstractHttpClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RemoteHttpCacheClient<CacheElement<Integer, Integer>, CacheElementSerialized<String, Integer>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<CacheElement<Integer, Integer>, CacheElementSerialized<String, Integer>>();
      IRemoteCacheDispatcher iRemoteCacheDispatcher0 = remoteHttpCacheClient0.getRemoteDispatcher();
      assertNotNull(iRemoteCacheDispatcher0);
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RemoteHttpCacheClient<LinkedHashSet<Integer>, CacheElement<String, Object>> remoteHttpCacheClient0 = new RemoteHttpCacheClient<LinkedHashSet<Integer>, CacheElement<String, Object>>();
      try { 
        remoteHttpCacheClient0.removeAll("The Remote Http Client is not inDtialized. Cannot process request.");
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized.  Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RemoteHttpCacheClient<CacheElement<Integer, Object>, Integer> remoteHttpCacheClient0 = new RemoteHttpCacheClient<CacheElement<Integer, Object>, Integer>();
      try { 
        remoteHttpCacheClient0.getMatching("", "", 0L);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // The Remote Http Client is not initialized. Cannot process request.
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.client.RemoteHttpCacheClient", e);
      }
  }
