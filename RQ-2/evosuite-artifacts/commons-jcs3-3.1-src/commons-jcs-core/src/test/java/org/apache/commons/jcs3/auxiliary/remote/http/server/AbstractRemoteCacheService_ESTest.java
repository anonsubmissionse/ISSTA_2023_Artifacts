/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 21:54:41 GMT 2022
 */

package org.apache.commons.jcs3.auxiliary.remote.http.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.Callable;
import java.util.concurrent.Delayed;
import java.util.concurrent.ForkJoinTask;
import java.util.regex.PatternSyntaxException;
import org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.LateralTCPCacheFactory;
import org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.TCPLateralCacheAttributes;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCache;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheAttributes;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheMonitor;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheNoWait;
import org.apache.commons.jcs3.auxiliary.remote.behavior.IRemoteCacheListener;
import org.apache.commons.jcs3.auxiliary.remote.http.server.RemoteHttpCacheServerAttributes;
import org.apache.commons.jcs3.auxiliary.remote.http.server.RemoteHttpCacheService;
import org.apache.commons.jcs3.engine.CacheElement;
import org.apache.commons.jcs3.engine.CacheElementSerialized;
import org.apache.commons.jcs3.engine.ElementAttributes;
import org.apache.commons.jcs3.engine.ZombieCacheServiceNonLocal;
import org.apache.commons.jcs3.engine.behavior.ICacheElement;
import org.apache.commons.jcs3.engine.behavior.ICacheType;
import org.apache.commons.jcs3.engine.behavior.ICompositeCacheManager;
import org.apache.commons.jcs3.engine.behavior.IElementAttributes;
import org.apache.commons.jcs3.engine.control.CompositeCacheManager;
import org.apache.commons.jcs3.engine.logging.CacheEventLoggerDebugLogger;
import org.apache.commons.jcs3.engine.logging.behavior.ICacheEvent;
import org.apache.commons.jcs3.engine.logging.behavior.ICacheEventLogger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractRemoteCacheService_ESTest extends AbstractRemoteCacheService_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<Object, ForkJoinTask<Delayed>> remoteHttpCacheService0 = new RemoteHttpCacheService<Object, ForkJoinTask<Delayed>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      CacheElement<Object, ForkJoinTask<Delayed>> cacheElement0 = new CacheElement<Object, ForkJoinTask<Delayed>>("Gs+uBAo74SQ*", cacheEventLoggerDebugLogger0, (ForkJoinTask<Delayed>) null);
      remoteHttpCacheService0.update((ICacheElement<Object, ForkJoinTask<Delayed>>) cacheElement0, (-372L));
      assertNotNull(cacheElement0.getCacheName());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheService<ForkJoinTask<Integer>, ForkJoinTask<Object>> remoteHttpCacheService0 = new RemoteHttpCacheService<ForkJoinTask<Integer>, ForkJoinTask<Object>>(compositeCacheManager0, (RemoteHttpCacheServerAttributes) null, (ICacheEventLogger) null);
      remoteHttpCacheService0.setEventLogSourceName(";5<Tz:T");
      assertNotNull(remoteHttpCacheService0.getStats());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      RemoteHttpCacheService<CacheElement<Delayed, String>, Object> remoteHttpCacheService0 = new RemoteHttpCacheService<CacheElement<Delayed, String>, Object>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      ICacheEvent<Object> iCacheEvent0 = cacheEventLoggerDebugLogger0.createICacheEvent("#OaA.XMD(", "", "", "[Ow~<\"y", (Object) tCPLateralCacheAttributes0);
      remoteHttpCacheService0.logICacheEvent(iCacheEvent0);
      assertNotNull(iCacheEvent0.getOptionalDetails());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<Callable<Object>, Callable<Object>> remoteHttpCacheService0 = new RemoteHttpCacheService<Callable<Object>, Callable<Object>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      CacheElement<Callable<Object>, Callable<Object>> cacheElement0 = new CacheElement<Callable<Object>, Callable<Object>>("", callable0, callable0);
      remoteHttpCacheService0.update((ICacheElement<Callable<Object>, Callable<Object>>) cacheElement0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<CacheElement<String, Integer>, RemoteCacheNoWait<Integer, Integer>> remoteHttpCacheService0 = new RemoteHttpCacheService<CacheElement<String, Integer>, RemoteCacheNoWait<Integer, Integer>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      CacheElement<String, Integer> cacheElement0 = new CacheElement<String, Integer>("org.apache.commons.jcs3:type=JCSAdminBean", "org.apache.commons.jcs3:type=JCSAdminBean", (Integer) null);
      remoteHttpCacheService0.remove("org.apache.commons.jcs3:type=JCSAdminBean", cacheElement0);
      assertNotNull(cacheElement0.getCacheName());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<Callable<Delayed>, Delayed> remoteHttpCacheService0 = new RemoteHttpCacheService<Callable<Delayed>, Delayed>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      String string0 = remoteHttpCacheService0.getStats();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<Object, CacheElementSerialized<Object, Object>> remoteHttpCacheService0 = new RemoteHttpCacheService<Object, CacheElementSerialized<Object, Object>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      String string0 = remoteHttpCacheService0.getEventLogSourceName();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<ForkJoinTask<Delayed>, CacheElement<String, Integer>> remoteHttpCacheService0 = new RemoteHttpCacheService<ForkJoinTask<Delayed>, CacheElement<String, Integer>>((ICompositeCacheManager) null, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      ICompositeCacheManager iCompositeCacheManager0 = remoteHttpCacheService0.getCacheManager();
      assertNotNull(iCompositeCacheManager0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<RemoteCacheNoWait<Integer, Integer>, Integer> remoteHttpCacheService0 = new RemoteHttpCacheService<RemoteCacheNoWait<Integer, Integer>, Integer>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      ICompositeCacheManager iCompositeCacheManager0 = remoteHttpCacheService0.getCacheManager();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheService<Object, CacheElement<Object, String>> remoteHttpCacheService0 = new RemoteHttpCacheService<Object, CacheElement<Object, String>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      remoteHttpCacheService0.get("org.apache.commons.jcs3:type=JCSAdminBean", (Object) "org.apache.commons.jcs3:type=JCSAdminBean", (-1L));
      RemoteHttpCacheService<String, CacheElement<String, String>> remoteHttpCacheService1 = new RemoteHttpCacheService<String, CacheElement<String, String>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      String string0 = remoteHttpCacheService1.getStats();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<Integer, String> remoteHttpCacheService0 = new RemoteHttpCacheService<Integer, String>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      Integer integer0 = new Integer((-1171));
      ICacheElement<Integer, String> iCacheElement0 = remoteHttpCacheService0.get("", integer0);
      assertNotNull(iCacheElement0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<ForkJoinTask<Object>, String> remoteHttpCacheService0 = new RemoteHttpCacheService<ForkJoinTask<Object>, String>(compositeCacheManager0, (RemoteHttpCacheServerAttributes) null, cacheEventLoggerDebugLogger0);
      CacheElement<ForkJoinTask<Object>, String> cacheElement0 = new CacheElement<ForkJoinTask<Object>, String>((String) null, (ForkJoinTask<Object>) null, "ZBs/B<w+X\">\"");
      ICacheEvent<ICacheElement<ForkJoinTask<Object>, String>> iCacheEvent0 = remoteHttpCacheService0.createICacheEvent(cacheElement0, (-204), "ZBs/B<w+X\">\"");
      assertNotNull(iCacheEvent0.getEventName());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<ForkJoinTask<Object>, String> remoteHttpCacheService0 = new RemoteHttpCacheService<ForkJoinTask<Object>, String>(compositeCacheManager0, (RemoteHttpCacheServerAttributes) null, cacheEventLoggerDebugLogger0);
      CacheElement<ForkJoinTask<Object>, String> cacheElement0 = new CacheElement<ForkJoinTask<Object>, String>((String) null, (ForkJoinTask<Object>) null, "ZBs/B<w+X\">\"");
      ICacheEvent<ICacheElement<ForkJoinTask<Object>, String>> iCacheEvent0 = remoteHttpCacheService0.createICacheEvent(cacheElement0, (-204), "ZBs/B<w+X\">\"");
      assertNotNull(iCacheEvent0.getOptionalDetails());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<CacheElement<RemoteCacheNoWait<Integer, Integer>, Object>, String> remoteHttpCacheService0 = new RemoteHttpCacheService<CacheElement<RemoteCacheNoWait<Integer, Integer>, Object>, String>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      Integer integer0 = new Integer(592);
      ICacheEvent<Integer> iCacheEvent0 = remoteHttpCacheService0.createICacheEvent("verifycache[{0}]: key not found in list : {1}", integer0, 0L, "verifycache[{0}]: key not found in list : {1}");
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<RemoteCacheNoWait<String, Object>, Object> remoteHttpCacheService0 = new RemoteHttpCacheService<RemoteCacheNoWait<String, Object>, Object>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.removeAll("org.apache.commons.jcs3:type=JCSAdminBean", 0L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.config.OptionConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<String, RemoteHttpCacheService<Object, Object>> remoteHttpCacheService0 = new RemoteHttpCacheService<String, RemoteHttpCacheService<Object, Object>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.remove(".;FX9dR>:v)yP!NI", (String) null, (-5027L));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<String, Delayed> remoteHttpCacheService0 = new RemoteHttpCacheService<String, Delayed>(compositeCacheManager0, (RemoteHttpCacheServerAttributes) null, cacheEventLoggerDebugLogger0);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.processGetKeySet("4PGZmzOTZE");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.config.OptionConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<Integer, RemoteHttpCacheService<String, RemoteCacheNoWait<Integer, Integer>>> remoteHttpCacheService0 = new RemoteHttpCacheService<Integer, RemoteHttpCacheService<String, RemoteCacheNoWait<Integer, Integer>>>(compositeCacheManager0, (RemoteHttpCacheServerAttributes) null, cacheEventLoggerDebugLogger0);
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.getMultiple("aA2ZX6W&X+PA<Fd", (Set<Integer>) linkedHashSet0, (long) (-204));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.config.OptionConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<RemoteHttpCacheService<Object, String>, Integer> remoteHttpCacheService0 = new RemoteHttpCacheService<RemoteHttpCacheService<Object, String>, Integer>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      LinkedHashSet<RemoteHttpCacheService<Object, String>> linkedHashSet0 = new LinkedHashSet<RemoteHttpCacheService<Object, String>>();
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.getMultiple("org.apache.commons.jcs3:type=JCSAdminBean", (Set<RemoteHttpCacheService<Object, String>>) linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.config.OptionConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<String, Integer> remoteHttpCacheService0 = new RemoteHttpCacheService<String, Integer>((ICompositeCacheManager) null, (RemoteHttpCacheServerAttributes) null, cacheEventLoggerDebugLogger0);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.getMatching("OER7fP6;n-K", "", 1342L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.server.RemoteHttpCacheService", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<Delayed, CacheElementSerialized<String, Object>> remoteHttpCacheService0 = new RemoteHttpCacheService<Delayed, CacheElementSerialized<String, Object>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.getMatching("yjOWd_\"DA", "yjOWd_\"DA");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.config.OptionConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<Object, Integer> remoteHttpCacheService0 = new RemoteHttpCacheService<Object, Integer>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.getKeySet("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.config.OptionConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<Integer, CacheElementSerialized<String, Object>> remoteHttpCacheService0 = new RemoteHttpCacheService<Integer, CacheElementSerialized<String, Object>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.dispose("a7C", (-2091L));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.config.OptionConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<Delayed, CacheElementSerialized<Object, Object>> remoteHttpCacheService0 = new RemoteHttpCacheService<Delayed, CacheElementSerialized<Object, Object>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.dispose("In update, put [{0}] in [{1}]");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.config.OptionConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<Delayed, CacheElement<String, Object>> remoteHttpCacheService0 = new RemoteHttpCacheService<Delayed, CacheElement<String, Object>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      remoteHttpCacheService0.removeAll("", (-337L));
      assertNotNull(remoteHttpCacheService0.getStats());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<CacheElement<Object, Object>, CacheElementSerialized<Object, RemoteCacheNoWait<Integer, Integer>>> remoteHttpCacheService0 = new RemoteHttpCacheService<CacheElement<Object, Object>, CacheElementSerialized<Object, RemoteCacheNoWait<Integer, Integer>>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      Set<CacheElement<Object, Object>> set0 = remoteHttpCacheService0.processGetKeySet("");
      assertTrue(set0.isEmpty());
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<RemoteCacheNoWait<Integer, Integer>, String> remoteHttpCacheService0 = new RemoteHttpCacheService<RemoteCacheNoWait<Integer, Integer>, String>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      ZombieCacheServiceNonLocal<Integer, Integer> zombieCacheServiceNonLocal0 = new ZombieCacheServiceNonLocal<Integer, Integer>();
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      RemoteCache<Integer, Integer> remoteCache0 = new RemoteCache<Integer, Integer>(remoteCacheAttributes0, zombieCacheServiceNonLocal0, (IRemoteCacheListener<Integer, Integer>) null, remoteCacheMonitor0);
      RemoteCacheNoWait<Integer, Integer> remoteCacheNoWait0 = new RemoteCacheNoWait<Integer, Integer>(remoteCache0);
      remoteHttpCacheService0.remove("", remoteCacheNoWait0, 3064L);
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<CacheElement<Object, Object>, CacheElementSerialized<Object, RemoteCacheNoWait<Integer, Integer>>> remoteHttpCacheService0 = new RemoteHttpCacheService<CacheElement<Object, Object>, CacheElementSerialized<Object, RemoteCacheNoWait<Integer, Integer>>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      remoteHttpCacheService0.dispose("", (-2336L));
      assertNotNull(remoteHttpCacheService0.getStats());
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<CacheElement<RemoteCacheNoWait<Integer, Integer>, RemoteCacheNoWait<Integer, Integer>>, Object> remoteHttpCacheService0 = new RemoteHttpCacheService<CacheElement<RemoteCacheNoWait<Integer, Integer>, RemoteCacheNoWait<Integer, Integer>>, Object>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      LinkedHashSet<CacheElement<RemoteCacheNoWait<Integer, Integer>, RemoteCacheNoWait<Integer, Integer>>> linkedHashSet0 = new LinkedHashSet<CacheElement<RemoteCacheNoWait<Integer, Integer>, RemoteCacheNoWait<Integer, Integer>>>();
      Map<CacheElement<RemoteCacheNoWait<Integer, Integer>, RemoteCacheNoWait<Integer, Integer>>, ICacheElement<CacheElement<RemoteCacheNoWait<Integer, Integer>, RemoteCacheNoWait<Integer, Integer>>, Object>> map0 = remoteHttpCacheService0.getMultiple("dispose", (Set<CacheElement<RemoteCacheNoWait<Integer, Integer>, RemoteCacheNoWait<Integer, Integer>>>) linkedHashSet0, (-981L));
      assertTrue(map0.isEmpty());
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheService<CacheElement<Object, Object>, RemoteCacheNoWait<String, String>> remoteHttpCacheService0 = new RemoteHttpCacheService<CacheElement<Object, Object>, RemoteCacheNoWait<String, String>>(compositeCacheManager0, (RemoteHttpCacheServerAttributes) null, (ICacheEventLogger) null);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.get("org.apache.commons.jcs3:type=JCSAdminBean", (CacheElement<Object, Object>) null, 0L);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.config.OptionConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<ForkJoinTask<Delayed>, ForkJoinTask<Delayed>> remoteHttpCacheService0 = new RemoteHttpCacheService<ForkJoinTask<Delayed>, ForkJoinTask<Delayed>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      remoteHttpCacheService0.logApplicationEvent("!&zo^,? <w8", "[8J", "+Kom");
      assertNotNull(remoteHttpCacheService0.getStats());
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<RemoteCacheNoWait<Integer, Integer>, CacheElement<String, Integer>> remoteHttpCacheService0 = new RemoteHttpCacheService<RemoteCacheNoWait<Integer, Integer>, CacheElement<String, Integer>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      remoteHttpCacheService0.logApplicationEvent("yY|+Q", "~3%Z>`", "yY|+Q");
      assertNotNull(remoteHttpCacheService0.getStats());
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<ForkJoinTask<Delayed>, Object> remoteHttpCacheService0 = new RemoteHttpCacheService<ForkJoinTask<Delayed>, Object>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      remoteHttpCacheService0.getMatching("", "getMultiple");
      assertNotNull(remoteHttpCacheService0.getStats());
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      LateralTCPCacheFactory lateralTCPCacheFactory0 = new LateralTCPCacheFactory();
      RemoteHttpCacheService<CacheElementSerialized<Object, Object>, String> remoteHttpCacheService0 = new RemoteHttpCacheService<CacheElementSerialized<Object, Object>, String>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      byte[] byteArray0 = new byte[7];
      ElementAttributes elementAttributes0 = new ElementAttributes();
      CacheElementSerialized<Object, Object> cacheElementSerialized0 = new CacheElementSerialized<Object, Object>("org.apache.commons.jcs3:type=JCSAdminBean", lateralTCPCacheFactory0, byteArray0, elementAttributes0);
      CacheElement<CacheElementSerialized<Object, Object>, String> cacheElement0 = new CacheElement<CacheElementSerialized<Object, Object>, String>("org.apache.commons.jcs3:type=JCSAdminBean", cacheElementSerialized0, "org.apache.commons.jcs3:type=JCSAdminBean", elementAttributes0);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.update((ICacheElement<CacheElementSerialized<Object, Object>, String>) cacheElement0, (-1L));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.config.OptionConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<CacheElementSerialized<Object, String>, RemoteCacheNoWait<String, Object>> remoteHttpCacheService0 = new RemoteHttpCacheService<CacheElementSerialized<Object, String>, RemoteCacheNoWait<String, Object>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      remoteHttpCacheService0.setCacheManager(compositeCacheManager0);
      assertTrue(compositeCacheManager0.isConfigured());
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<CacheElement<Object, Object>, CacheElementSerialized<Object, RemoteCacheNoWait<Integer, Integer>>> remoteHttpCacheService0 = new RemoteHttpCacheService<CacheElement<Object, Object>, CacheElementSerialized<Object, RemoteCacheNoWait<Integer, Integer>>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.getMatching("getMatching", "a+6,cy)0SG$");
        fail("Expecting exception: PatternSyntaxException");
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')' near index 5
         // a+6,cy)0SG$
         //      ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<Delayed, CacheElement<String, Object>> remoteHttpCacheService0 = new RemoteHttpCacheService<Delayed, CacheElement<String, Object>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      remoteHttpCacheService0.dispose("");
      assertNotNull(remoteHttpCacheService0.getStats());
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<RemoteCacheNoWait<String, Object>, ForkJoinTask<Integer>> remoteHttpCacheService0 = new RemoteHttpCacheService<RemoteCacheNoWait<String, Object>, ForkJoinTask<Integer>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      Set<RemoteCacheNoWait<String, Object>> set0 = remoteHttpCacheService0.getKeySet("");
      assertTrue(set0.isEmpty());
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<CacheElement<String, Integer>, RemoteCacheNoWait<Integer, Integer>> remoteHttpCacheService0 = new RemoteHttpCacheService<CacheElement<String, Integer>, RemoteCacheNoWait<Integer, Integer>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      CacheElement<String, Integer> cacheElement0 = new CacheElement<String, Integer>("org.apache.commons.jcs3:type=JCSAdminBean", "org.apache.commons.jcs3:type=JCSAdminBean", (Integer) null);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.remove("org.apache.commons.jcs3:type=JCSAdminBean", cacheElement0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.config.OptionConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<CacheElement<Object, Object>, CacheElementSerialized<Object, RemoteCacheNoWait<Integer, Integer>>> remoteHttpCacheService0 = new RemoteHttpCacheService<CacheElement<Object, Object>, CacheElementSerialized<Object, RemoteCacheNoWait<Integer, Integer>>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      remoteHttpCacheService0.getMatching(".;FX9dR>:v)yP!NI", "handleGet> cacheName={0}, key={1}", (-2336L));
      assertNotNull(remoteHttpCacheService0.getStats());
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<RemoteCacheNoWait<Integer, Integer>, Integer> remoteHttpCacheService0 = new RemoteHttpCacheService<RemoteCacheNoWait<Integer, Integer>, Integer>((ICompositeCacheManager) null, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      remoteHttpCacheService0.setCacheEventLogger((ICacheEventLogger) null);
  }
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      RemoteHttpCacheService<Integer, String> remoteHttpCacheService0 = new RemoteHttpCacheService<Integer, String>((ICompositeCacheManager) null, remoteHttpCacheServerAttributes0, (ICacheEventLogger) null);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.getStats();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.http.server.AbstractRemoteCacheService", e);
      }
  }
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<Delayed, Object> remoteHttpCacheService0 = new RemoteHttpCacheService<Delayed, Object>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.get("jcs.system.", (Delayed) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<Delayed, ForkJoinTask<RemoteCacheNoWait<Integer, Integer>>> remoteHttpCacheService0 = new RemoteHttpCacheService<Delayed, ForkJoinTask<RemoteCacheNoWait<Integer, Integer>>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.removeAll("K)\\H^,2\"!PXkyJ*");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.config.OptionConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<Object, String> remoteHttpCacheService0 = new RemoteHttpCacheService<Object, String>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      IElementAttributes iElementAttributes0 = compositeCacheManager0.getDefaultElementAttributes();
      CacheElement<Object, String> cacheElement0 = new CacheElement<Object, String>("}s!>2nZhi6nQI`8", (Object) null, "org.apache.commons.jcs3:type=JCSAdminBean", iElementAttributes0);
      // Undeclared exception!
      try { 
        remoteHttpCacheService0.update((ICacheElement<Object, String>) cacheElement0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.config.OptionConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getInstance("");
      RemoteHttpCacheServerAttributes remoteHttpCacheServerAttributes0 = new RemoteHttpCacheServerAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteHttpCacheService<CacheElement<Object, Object>, CacheElementSerialized<Object, RemoteCacheNoWait<Integer, Integer>>> remoteHttpCacheService0 = new RemoteHttpCacheService<CacheElement<Object, Object>, CacheElementSerialized<Object, RemoteCacheNoWait<Integer, Integer>>>(compositeCacheManager0, remoteHttpCacheServerAttributes0, cacheEventLoggerDebugLogger0);
      LinkedHashSet<CacheElement<Object, Object>> linkedHashSet0 = new LinkedHashSet<CacheElement<Object, Object>>();
      Map<CacheElement<Object, Object>, ICacheElement<CacheElement<Object, Object>, CacheElementSerialized<Object, RemoteCacheNoWait<Integer, Integer>>>> map0 = remoteHttpCacheService0.getMultiple("", (Set<CacheElement<Object, Object>>) linkedHashSet0);
      assertTrue(map0.isEmpty());
}
}
