 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JDKHttpFuture<Integer> jDKHttpFuture0 = new JDKHttpFuture<Integer>((Exception) null);
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      Integer integer0 = jDKHttpFuture0.get(2258L, timeUnit0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JDKHttpFuture<String> jDKHttpFuture0 = new JDKHttpFuture<String>("");
      String string0 = jDKHttpFuture0.get();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockException mockException0 = new MockException("?O6?Oz.9a");
      JDKHttpFuture<Integer> jDKHttpFuture0 = new JDKHttpFuture<Integer>((Exception) mockException0);
      try { 
        jDKHttpFuture0.get();
        fail("Expecting exception: ExecutionException");
      } catch(ExecutionException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: ?O6?Oz.9a
         //
         verifyException("com.github.scribejava.core.httpclient.jdk.JDKHttpFuture", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JDKHttpFuture<Object> jDKHttpFuture0 = new JDKHttpFuture<Object>((Exception) null);
      Object object0 = jDKHttpFuture0.get();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      MockException mockException0 = new MockException("");
      JDKHttpFuture<Object> jDKHttpFuture0 = new JDKHttpFuture<Object>((Exception) mockException0);
      try { 
        jDKHttpFuture0.get(137L, timeUnit0);
        fail("Expecting exception: ExecutionException");
      } catch(ExecutionException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: 
         //
         verifyException("com.github.scribejava.core.httpclient.jdk.JDKHttpFuture", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JDKHttpFuture<Object> jDKHttpFuture0 = new JDKHttpFuture<Object>((Exception) null);
      boolean boolean0 = jDKHttpFuture0.cancel(false);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JDKHttpFuture<Object> jDKHttpFuture0 = new JDKHttpFuture<Object>((Exception) null);
      boolean boolean0 = jDKHttpFuture0.isCancelled();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      JDKHttpFuture<String> jDKHttpFuture0 = new JDKHttpFuture<String>("");
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      String string0 = jDKHttpFuture0.get(1044L, timeUnit0);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      JDKHttpFuture<String> jDKHttpFuture0 = new JDKHttpFuture<String>("yCEsV&^vZ");
      boolean boolean0 = jDKHttpFuture0.isDone();
      assertTrue(boolean0);
}
