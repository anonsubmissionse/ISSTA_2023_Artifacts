 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Parameter parameter0 = new Parameter("Cannot encode null object", "Cannot encode null object");
      Parameter parameter1 = new Parameter("Cannot encode null object", "%7E");
      int int0 = parameter0.compareTo(parameter1);
      assertNotNull(parameter1.getKey());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Parameter parameter0 = new Parameter("Cannot encode null object", "Cannot encode null object");
      Parameter parameter1 = new Parameter("Cannot encode null object", "%7E");
      int int0 = parameter0.compareTo(parameter1);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Parameter parameter0 = new Parameter("0", "0");
      parameter0.hashCode();
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Parameter parameter0 = new Parameter((String) null, (String) null);
      String string0 = parameter0.getValue();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Parameter parameter0 = new Parameter("meHNXP%2Cd.-41%28%5ER%26=", ">O>rxUwj:]a !aT%0");
      String string0 = parameter0.getValue();
      assertNotNull(parameter0.getKey());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Parameter parameter0 = new Parameter("meHNXP%2Cd.-41%28%5ER%26=", ">O>rxUwj:]a !aT%0");
      String string0 = parameter0.getValue();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Parameter parameter0 = new Parameter((String) null, (String) null);
      String string0 = parameter0.getKey();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Parameter parameter0 = new Parameter("meHNXP,d.-41(^R&", "");
      String string0 = parameter0.getKey();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Parameter parameter0 = new Parameter("meHNXP,d.-41(^R&", "");
      String string0 = parameter0.getKey();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      Parameter parameter1 = new Parameter("=", "");
      int int0 = parameter1.compareTo(parameter0);
      assertNotNull(parameter1.getValue());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      Parameter parameter1 = new Parameter("=", "");
      int int0 = parameter1.compareTo(parameter0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Parameter parameter0 = new Parameter((String) null, "");
      // Undeclared exception!
      try { 
        parameter0.hashCode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.model.Parameter", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Parameter parameter0 = new Parameter("IFrzxRJ|", "IFrzxRJ|");
      // Undeclared exception!
      try { 
        parameter0.compareTo((Parameter) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.model.Parameter", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Parameter parameter0 = new Parameter((String) null, "S$E$f AWB");
      // Undeclared exception!
      try { 
        parameter0.asUrlEncodedPair();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Cannot encode null object
         //
         verifyException("com.github.scribejava.core.utils.Preconditions", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      String string0 = parameter0.getValue();
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      String string0 = parameter0.getKey();
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      Parameter parameter1 = new Parameter("=", "");
      int int0 = parameter0.compareTo(parameter1);
      assertNotNull(parameter1.getValue());
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      Parameter parameter1 = new Parameter("=", "");
      int int0 = parameter0.compareTo(parameter1);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Parameter parameter0 = new Parameter("Cannot decode null object", "`}{RCJq0");
      Parameter parameter1 = new Parameter("Cannot decode null object", "`}{RCJq0");
      boolean boolean0 = parameter0.equals(parameter1);
      assertNotNull(parameter1.getValue());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Parameter parameter0 = new Parameter("Cannot decode null object", "`}{RCJq0");
      Parameter parameter1 = new Parameter("Cannot decode null object", "`}{RCJq0");
      boolean boolean0 = parameter0.equals(parameter1);
      assertNotNull(parameter1.getKey());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Parameter parameter0 = new Parameter("Cannot decode null object", "`}{RCJq0");
      Parameter parameter1 = new Parameter("Cannot decode null object", "`}{RCJq0");
      boolean boolean0 = parameter0.equals(parameter1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Parameter parameter0 = new Parameter("0", "0");
      Parameter parameter1 = new Parameter("0", "1");
      boolean boolean0 = parameter0.equals(parameter1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Parameter parameter0 = new Parameter("0", "0");
      Parameter parameter1 = new Parameter("0", "1");
      boolean boolean0 = parameter0.equals(parameter1);
      assertNotNull(parameter1.getKey());
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      Parameter parameter1 = new Parameter("", (String) null);
      // Undeclared exception!
      try { 
        parameter0.equals(parameter1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      Parameter parameter1 = new Parameter("=", "");
      boolean boolean0 = parameter0.equals(parameter1);
      assertNotNull(parameter1.getValue());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      Parameter parameter1 = new Parameter("=", "");
      boolean boolean0 = parameter0.equals(parameter1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Parameter parameter0 = new Parameter("meHNXP,d.-41(^R&", "");
      boolean boolean0 = parameter0.equals(parameter0);
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Parameter parameter0 = new Parameter("meHNXP,d.-41(^R&", "");
      boolean boolean0 = parameter0.equals(parameter0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Parameter parameter0 = new Parameter("meHNXP,d.-41(^R&", "");
      boolean boolean0 = parameter0.equals(parameter0);
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Parameter parameter0 = new Parameter("+", "+");
      boolean boolean0 = parameter0.equals((Object) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      Object object0 = new Object();
      boolean boolean0 = parameter0.equals(object0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      String string0 = parameter0.asUrlEncodedPair();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      int int0 = parameter0.compareTo(parameter0);
      assertEquals(0, int0);
}
