/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 03:10:42 GMT 2022
 */

package com.github.scribejava.core.extractors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.core.extractors.OAuth1RequestTokenExtractor;
import com.github.scribejava.core.model.OAuth1RequestToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OAuth1RequestTokenExtractor_ESTest extends OAuth1RequestTokenExtractor_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OAuth1RequestTokenExtractor oAuth1RequestTokenExtractor0 = new OAuth1RequestTokenExtractor();
      OAuth1RequestToken oAuth1RequestToken0 = oAuth1RequestTokenExtractor0.createToken("JKux}?<>.V", "JKux}?<>.V", "|)H1.");
      assertNotNull(oAuth1RequestToken0.getTokenSecret());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OAuth1RequestTokenExtractor oAuth1RequestTokenExtractor0 = new OAuth1RequestTokenExtractor();
      OAuth1RequestToken oAuth1RequestToken0 = oAuth1RequestTokenExtractor0.createToken("JKux}?<>.V", "JKux}?<>.V", "|)H1.");
      assertNotNull(oAuth1RequestToken0.getToken());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OAuth1RequestTokenExtractor oAuth1RequestTokenExtractor0 = new OAuth1RequestTokenExtractor();
      OAuth1RequestToken oAuth1RequestToken0 = oAuth1RequestTokenExtractor0.createToken("", "", "");
      assertNotNull(oAuth1RequestToken0.getToken());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OAuth1RequestTokenExtractor oAuth1RequestTokenExtractor0 = new OAuth1RequestTokenExtractor();
      // Undeclared exception!
      try { 
        oAuth1RequestTokenExtractor0.createToken("com.github.scribejava.core.extractors.OAuth1RequestTokenExtractor", (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // oauth_token_secret can't be null
         //
         verifyException("com.github.scribejava.core.utils.Preconditions", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OAuth1RequestTokenExtractor oAuth1RequestTokenExtractor0 = OAuth1RequestTokenExtractor.instance();
      assertNotNull(oAuth1RequestTokenExtractor0);
}
}
