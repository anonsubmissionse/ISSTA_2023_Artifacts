 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CommonsCodecBase64 commonsCodecBase64_0 = new CommonsCodecBase64();
      Base64.init(commonsCodecBase64_0);
      String string0 = Base64.encodeUrlWithoutPadding((byte[]) null);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = Base64.encodeUrlWithoutPadding(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CommonsCodecBase64 commonsCodecBase64_0 = new CommonsCodecBase64();
      Base64.init(commonsCodecBase64_0);
      String string0 = Base64.encode((byte[]) null);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = Base64.encode(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.encode((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Base64.encodeUrlWithoutPadding(byteArray0);
      Base64 base64_0 = Base64.getInstance();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      String string0 = Base64.encode(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        Base64.encodeUrlWithoutPadding((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Base64 base64_0 = Base64.getInstance();
      Base64.init(base64_0);
  }
