/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 03:11:07 GMT 2022
 */

package com.github.scribejava.core.pkce;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.core.pkce.PKCE;
import com.github.scribejava.core.pkce.PKCECodeChallengeMethod;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PKCE_ESTest extends PKCE_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PKCE pKCE0 = new PKCE();
      pKCE0.setCodeVerifier("com.github.scribejava.core.pkce.PKCE");
      String string0 = pKCE0.getCodeVerifier();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PKCE pKCE0 = new PKCE();
      pKCE0.setCodeVerifier("");
      String string0 = pKCE0.getCodeVerifier();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PKCE pKCE0 = new PKCE();
      pKCE0.setCodeChallengeMethod((PKCECodeChallengeMethod) null);
      pKCE0.getCodeChallengeMethod();
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PKCE pKCE0 = new PKCE();
      pKCE0.setCodeChallenge("");
      String string0 = pKCE0.getCodeChallenge();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PKCE pKCE0 = new PKCE();
      pKCE0.setCodeChallengeMethod((PKCECodeChallengeMethod) null);
      // Undeclared exception!
      try { 
        pKCE0.getAuthorizationUrlParams();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.pkce.PKCE", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PKCE pKCE0 = new PKCE();
      String string0 = pKCE0.getCodeChallenge();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PKCE pKCE0 = new PKCE();
      pKCE0.setCodeChallenge("code_challenge");
      String string0 = pKCE0.getCodeChallenge();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PKCE pKCE0 = new PKCE();
      pKCE0.getCodeChallengeMethod();
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PKCE pKCE0 = new PKCE();
      String string0 = pKCE0.getCodeVerifier();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PKCE pKCE0 = new PKCE();
      Map<String, String> map0 = pKCE0.getAuthorizationUrlParams();
      ;
}
}
