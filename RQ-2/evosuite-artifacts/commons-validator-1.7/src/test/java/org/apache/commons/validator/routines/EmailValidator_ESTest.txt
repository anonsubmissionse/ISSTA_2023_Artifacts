 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator(false, false);
      boolean boolean0 = emailValidator0.isValidUser("(((\\.)|[^sp{Cntrl}()<>@,;:'\\\".[]]|')+|(\"(\\\"|[^\"])*\"))");
      assertFalse(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator(false, false);
      boolean boolean0 = emailValidator0.isValidUser("beats");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator(true, false);
      // Undeclared exception!
      try { 
        emailValidator0.isValidDomain((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance(false, false);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance(true, false);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator(true);
      boolean boolean0 = emailValidator0.isValidUser("");
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance(true, true);
      boolean boolean0 = emailValidator0.isValidUser((String) null);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance(false, true);
      boolean boolean0 = emailValidator0.isValidDomain("N9=}.rXY");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance(false, true);
      boolean boolean0 = emailValidator0.isValidDomain(".");
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance(false, true);
      boolean boolean0 = emailValidator0.isValidDomain("dance");
      assertFalse(boolean0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DomainValidator domainValidator0 = DomainValidator.getInstance();
      EmailValidator emailValidator0 = null;
      try {
        emailValidator0 = new EmailValidator(true, true, domainValidator0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // DomainValidator must agree with allowLocal setting
         //
         verifyException("org.apache.commons.validator.routines.EmailValidator", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EmailValidator emailValidator0 = null;
      try {
        emailValidator0 = new EmailValidator(false, false, (DomainValidator) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // DomainValidator cannot be null
         //
         verifyException("org.apache.commons.validator.routines.EmailValidator", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DomainValidator domainValidator0 = DomainValidator.getInstance();
      EmailValidator emailValidator0 = new EmailValidator(false, false, domainValidator0);
      boolean boolean0 = emailValidator0.isValid("8KG]/");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance(false);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance(true, true);
      boolean boolean0 = emailValidator0.isValidDomain("Lo");
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance(false, true);
      boolean boolean0 = emailValidator0.isValid((String) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance(true);
      boolean boolean0 = emailValidator0.isValidUser("^(((\\.)|[^sp{Cntrl}()<>@,;:'\\\\.\\]|')+|(\"(\\\"|[^\"])*\"))(.(((\\.)|[^sp{Cntrl}()<>@,;:'\\\"\\[]]|')+|(\"(\\\"|[^\"])*\")))*$");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance();
      String string0 = "V\\\\.)|[^\\s\\p{kntl}\\(\\)<>@,;:\\%\\u\\.\\[\\]..";
      boolean boolean0 = emailValidator0.isValid(string0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator(true);
      boolean boolean0 = emailValidator0.isValidDomain("");
      assertTrue(boolean0);
}
