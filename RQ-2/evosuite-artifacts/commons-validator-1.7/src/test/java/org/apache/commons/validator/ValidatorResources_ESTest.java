/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 15:36:17 GMT 2022
 */

package org.apache.commons.validator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.net.URL;
import java.util.ConcurrentModificationException;
import java.util.Locale;
import java.util.Map;
import org.apache.commons.collections.FastHashMap;
import org.apache.commons.validator.Field;
import org.apache.commons.validator.Form;
import org.apache.commons.validator.FormSet;
import org.apache.commons.validator.ValidatorAction;
import org.apache.commons.validator.ValidatorResources;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ValidatorResources_ESTest extends ValidatorResources_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("FormSet: language=null  country=null  variant=null\n");
      validatorResources0.addFormSet(formSet0);
      // Undeclared exception!
      try { 
        validatorResources0.getForm("FormSet: language=null  country=null  variant=null\n", "", "8*$C#~uc", "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      ValidatorAction validatorAction0 = new ValidatorAction();
      validatorAction0.setJavascript("http://www.w3.org/2001/XMLSchema");
      validatorResources0.addValidatorAction(validatorAction0);
      ValidatorAction validatorAction1 = validatorResources0.getValidatorAction((String) null);
      assertNotNull(validatorAction1.getJavascript());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.hFormSets = null;
      Map<String, FormSet> map0 = validatorResources0.getFormSets();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Map<String, FormSet> map0 = validatorResources0.getFormSets();
      assertEquals(0, map0.size());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FastHashMap fastHashMap0 = validatorResources0.hFormSets;
      Integer integer0 = new Integer(58);
      Object object0 = new Object();
      fastHashMap0.put(integer0, object0);
      Map<String, FormSet> map0 = validatorResources0.getFormSets();
      assertTrue(map0.isEmpty());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.process();
      FormSet formSet0 = validatorResources0.getFormSet("", "", "");
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      validatorResources0.defaultFormSet = formSet0;
      FormSet formSet1 = validatorResources0.getFormSet("", "", "");
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      validatorResources0.defaultFormSet = formSet0;
      Form form0 = new Form();
      formSet0.addForm(form0);
      validatorResources0.process();
      Locale locale0 = Locale.ENGLISH;
      Form form1 = validatorResources0.getForm(locale0, (String) null);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      validatorResources0.defaultFormSet = formSet0;
      Form form0 = new Form();
      formSet0.addForm(form0);
      Locale locale0 = Locale.ENGLISH;
      Form form1 = validatorResources0.getForm(locale0, (String) null);
      assertTrue(form1.isProcessed());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      formSet0.addForm(form0);
      validatorResources0.addFormSet(formSet0);
      validatorResources0.process();
      Form form1 = validatorResources0.getForm("FormSet: language=null  country=null  variant=null\n", "FormSet: language=null  country=null  variant=null\n", "FormSet: language=null  country=null  variant=null\n", (String) null);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      validatorResources0.defaultFormSet = formSet0;
      Form form0 = new Form();
      form0.inherit = "FormSet: language=null  country=null  variant=null\n";
      formSet0.addForm(form0);
      Form form1 = validatorResources0.getForm("", "FormSet: language=null  country=null  variant=null\n", "Error parsing Arg position: ", (String) null);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Map<String, String> map0 = validatorResources0.getConstants();
      assertTrue(map0.isEmpty());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.addConstant("", "Add ValidatorAction: ");
      Map<String, String> map0 = validatorResources0.getConstants();
      assertEquals(1, map0.size());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.hActions = null;
      Map<String, ValidatorAction> map0 = validatorResources0.getActions();
      assertNotNull(map0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Map<String, ValidatorAction> map0 = validatorResources0.getActions();
      assertTrue(map0.isEmpty());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      ValidatorAction validatorAction0 = new ValidatorAction();
      validatorAction0.setJavascript("");
      validatorResources0.addValidatorAction(validatorAction0);
      Map<String, ValidatorAction> map0 = validatorResources0.getActions();
      assertTrue(map0.isEmpty());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      String string0 = validatorResources0.buildKey(formSet0);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      validatorResources0.defaultFormSet = formSet0;
      formSet0.setLanguage("FormSet: language=null  country=null  variant=null\n");
      Form form0 = new Form();
      Field field0 = new Field();
      form0.addField(field0);
      formSet0.addForm(form0);
      validatorResources0.addFormSet(formSet0);
      // Undeclared exception!
      try { 
        validatorResources0.process();
        fail("Expecting exception: ConcurrentModificationException");
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.hActions = null;
      // Undeclared exception!
      try { 
        validatorResources0.process();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("org.apache.commons.digester.xmlrules.DigesterRuleParser$ObjectParamRuleFactory");
      validatorResources0.addFormSet(formSet0);
      // Undeclared exception!
      try { 
        validatorResources0.process();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // When variant is specified, country and language must be specified.
         //
         verifyException("org.apache.commons.validator.FormSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FastHashMap fastHashMap0 = validatorResources0.hFormSets;
      validatorResources0.hConstants = fastHashMap0;
      validatorResources0.addConstant((String) null, "(%eR&J@9,O<");
      // Undeclared exception!
      try { 
        validatorResources0.process();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.apache.commons.validator.FormSet
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.hActions = null;
      // Undeclared exception!
      try { 
        validatorResources0.getValidatorActions();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.hActions = null;
      // Undeclared exception!
      try { 
        validatorResources0.getValidatorAction("org.apache.commons.validator.Validator");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.hFormSets = null;
      // Undeclared exception!
      try { 
        validatorResources0.getFormSet("P", "P", "P");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FastHashMap fastHashMap0 = validatorResources0.hFormSets;
      Object object0 = new Object();
      fastHashMap0.put("Z/UK4\"4Kw4n)~+zIq=", object0);
      // Undeclared exception!
      try { 
        validatorResources0.getForm("Z/UK4\"4Kw4n)~+zIq=", "csEB(Xr@0", "3js <", "1:GV,|,n]~`,%p");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to org.apache.commons.validator.FormSet
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      // Undeclared exception!
      try { 
        validatorResources0.buildKey((FormSet) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      ValidatorAction validatorAction0 = new ValidatorAction();
      validatorAction0.setJsFunction("");
      // Undeclared exception!
      try { 
        validatorResources0.addValidatorAction(validatorAction0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      ValidatorAction validatorAction0 = new ValidatorAction();
      // Undeclared exception!
      try { 
        validatorResources0.addValidatorAction(validatorAction0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorAction", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      // Undeclared exception!
      try { 
        validatorResources0.addFormSet((FormSet) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.hConstants = null;
      // Undeclared exception!
      try { 
        validatorResources0.addConstant("(,AU%'8`m", "-&Xc*\"BHJZK>{Q73(");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      ValidatorResources validatorResources0 = null;
      try {
        validatorResources0 = new ValidatorResources(uRLArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.digester.xmlrules.FromXmlRuleSet$URLXMLRulesLoader", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ValidatorResources validatorResources0 = null;
      try {
        validatorResources0 = new ValidatorResources(stringArray0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.digester.xmlrules.FromXmlRuleSet$URLXMLRulesLoader", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ValidatorResources validatorResources0 = null;
      try {
        validatorResources0 = new ValidatorResources((InputStream[]) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.digester.xmlrules.FromXmlRuleSet$URLXMLRulesLoader", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = validatorResources0.getFormSet("", "", "");
      assertNotNull(formSet0);
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("<\"ot?HW");
      validatorResources0.addFormSet(formSet0);
      formSet0.setCountry("<\"ot?HW");
      formSet0.setVariant("<\"ot?HW");
      validatorResources0.process();
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("FormSet: language=null  country=null  variant=null\n");
      formSet0.setCountry("FormSet: language=null  country=null  variant=null\n");
      formSet0.setLanguage("FormSet: language=null  country=null  variant=null\n");
      validatorResources0.addFormSet(formSet0);
      validatorResources0.process();
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("P");
      validatorResources0.addFormSet(formSet0);
      formSet0.setLanguage((String) null);
      validatorResources0.process();
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("P");
      validatorResources0.addFormSet(formSet0);
      formSet0.setCountry("P");
      validatorResources0.process();
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("wTw4 #");
      formSet0.setLanguage("FormSet: language=null  country=null  variant=null\n");
      validatorResources0.addFormSet(formSet0);
      formSet0.setVariant("' found in formset '");
      validatorResources0.process();
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("FormSet: language=null  country=null  variant=null\n");
      formSet0.setLanguage("FormSet: language=null  country=null  variant=null\n");
      validatorResources0.addFormSet(formSet0);
      validatorResources0.process();
  }
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      validatorResources0.defaultFormSet = formSet0;
      formSet0.setLanguage("FormSet: language=null  country=null  variant=null\n");
      validatorResources0.addFormSet(formSet0);
      validatorResources0.process();
  }
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      validatorResources0.defaultFormSet = formSet0;
      Locale locale0 = Locale.CHINA;
      Form form0 = validatorResources0.getForm(locale0, "FormSet: language=null  country=null  variant=null\n");
      assertNotNull(form0);
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("FormSet: language=null  country=null  variant=null\n");
      formSet0.setLanguage("FormSet: language=null  country=null  variant=null\n");
      Form form0 = new Form();
      formSet0.addForm(form0);
      validatorResources0.addFormSet(formSet0);
      Form form1 = validatorResources0.getForm("FormSet: language=null  country=null  variant=null\n", "FormSet: language=null  country=null  variant=null\n", "", (String) null);
      assertFalse(form1.isExtending());
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("' found in formset '");
      String string0 = validatorResources0.buildKey(formSet0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      // Undeclared exception!
      try { 
        validatorResources0.getForm("", "", "", "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("P");
      validatorResources0.addFormSet(formSet0);
      validatorResources0.addFormSet(formSet0);
      ;
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ValidatorResources validatorResources0 = null;
      try {
        validatorResources0 = new ValidatorResources(uRL0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.digester.xmlrules.FromXmlRuleSet$URLXMLRulesLoader", e);
      }
  }
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ValidatorResources validatorResources0 = null;
      try {
        validatorResources0 = new ValidatorResources(".J");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.digester.xmlrules.FromXmlRuleSet$URLXMLRulesLoader", e);
      }
  }
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ValidatorResources validatorResources0 = null;
      try {
        validatorResources0 = new ValidatorResources(pipedInputStream0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.digester.xmlrules.FromXmlRuleSet$URLXMLRulesLoader", e);
      }
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Locale locale0 = Locale.KOREAN;
      // Undeclared exception!
      try { 
        validatorResources0.getForm(locale0, "FormSet: language=null  country=null  variant=null\n");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      ValidatorAction validatorAction0 = validatorResources0.getValidatorAction("RRj'&\"i,<dh");
      assertNotNull(validatorAction0);
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      validatorResources0.addFormSet(formSet0);
      validatorResources0.addFormSet(formSet0);
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Map<String, ValidatorAction> map0 = validatorResources0.getValidatorActions();
      assertTrue(map0.isEmpty());
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      validatorResources0.process();
      Form form0 = validatorResources0.getForm("FormSet: language=null  country=null  variant=null\n_wTw4 #_' found in formset '", "", "", "FormSet: language=null  country=null  variant=null\n_wTw4 #_' found in formset '");
      assertNotNull(form0);
}
}
