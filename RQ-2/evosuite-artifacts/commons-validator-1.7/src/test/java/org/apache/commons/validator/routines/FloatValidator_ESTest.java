/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 15:48:29 GMT 2022
 */

package org.apache.commons.validator.routines;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DateFormat;
import java.text.Format;
import java.util.Locale;
import org.apache.commons.validator.routines.FloatValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FloatValidator_ESTest extends FloatValidator_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      Double double0 = new Double(3.4028234663852886E38);
      Object object0 = floatValidator0.processParsedValue(double0, mockSimpleDateFormat0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      Double double0 = new Double(3.4028234663852886E38);
      Object object0 = floatValidator0.processParsedValue(double0, mockSimpleDateFormat0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      DateFormat dateFormat0 = DateFormat.getInstance();
      Double double0 = new Double(1.401298464324817E-45);
      Object object0 = floatValidator0.processParsedValue(double0, dateFormat0);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      DateFormat dateFormat0 = DateFormat.getInstance();
      Double double0 = new Double(1.401298464324817E-45);
      Object object0 = floatValidator0.processParsedValue(double0, dateFormat0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Double double0 = new Double(1);
      DateFormat dateFormat0 = DateFormat.getInstance();
      Float float0 = (Float)floatValidator0.processParsedValue(double0, dateFormat0);
      assertNotNull(float0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Double double0 = new Double(1);
      DateFormat dateFormat0 = DateFormat.getInstance();
      Float float0 = (Float)floatValidator0.processParsedValue(double0, dateFormat0);
      boolean boolean0 = floatValidator0.minValue(float0, (float) 0);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Locale locale0 = Locale.ENGLISH;
      Float float0 = floatValidator0.validate("Vo{&aD]|ag", locale0);
      assertNotNull(float0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Locale locale0 = new Locale("0", "0");
      Float float0 = floatValidator0.validate("0", locale0);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Locale locale0 = Locale.PRC;
      Float float0 = floatValidator0.validate("-1,447", locale0);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Locale locale0 = Locale.PRC;
      Float float0 = floatValidator0.validate("-1,447", locale0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Locale locale0 = Locale.JAPANESE;
      Float float0 = floatValidator0.validate("", "", locale0);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Locale locale0 = Locale.FRANCE;
      Float float0 = floatValidator0.validate("18446744073709551600", "18446744073709551600", locale0);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Locale locale0 = Locale.FRANCE;
      Float float0 = floatValidator0.validate("18446744073709551600", "18446744073709551600", locale0);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Locale locale0 = new Locale("0", "0");
      Float float0 = floatValidator0.validate("0", "0", locale0);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Locale locale0 = Locale.KOREA;
      Float float0 = floatValidator0.validate("1", "", locale0);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Locale locale0 = Locale.KOREA;
      Float float0 = floatValidator0.validate("1", "", locale0);
      assertNotNull(float0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, (-1));
      Locale locale0 = Locale.KOREA;
      Float float0 = floatValidator0.validate("18446744073709551615", (String) null, locale0);
      assertNotNull(float0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, (-1));
      Locale locale0 = Locale.KOREA;
      Float float0 = floatValidator0.validate("18446744073709551615", (String) null, locale0);
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Float float0 = floatValidator0.validate("", "org.apache.commons.validator.routines.AbstractFormatValidator");
      assertNotNull(float0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, (-562));
      Float float0 = floatValidator0.validate("25_dE8@D6;zRR1,", "");
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, (-562));
      Float float0 = floatValidator0.validate("25_dE8@D6;zRR1,", "");
      assertNotNull(float0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Float float0 = floatValidator0.validate("-1,579", "");
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Float float0 = floatValidator0.validate("-1,579", "");
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, (-1385));
      Float float0 = floatValidator0.validate("0p-?_dA");
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Float float0 = floatValidator0.validate("1");
      assertNotNull(float0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Float float0 = floatValidator0.validate("1");
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, (-1));
      Float float0 = floatValidator0.validate("18446744073709551615");
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, (-1));
      Float float0 = floatValidator0.validate("18446744073709551615");
      assertNotNull(float0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, 0);
      Float float0 = new Float((double) 0);
      boolean boolean0 = floatValidator0.isInRange(float0, (-1.0F), 1.0F);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, (-774));
      Locale locale0 = Locale.FRENCH;
      // Undeclared exception!
      try { 
        floatValidator0.validate("org.apache.commons.validator.routines.FloatValidator", "org.apache.commons.validator.routines.FloatValidator", locale0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Multiple decimal separators in pattern \"org.apache.commons.validator.routines.FloatValidator\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      // Undeclared exception!
      try { 
        floatValidator0.validate("org.apache.commons.validator.routines.AbstractFormatValidator", "o:W8%u,h=c[zYj_}");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Malformed pattern \"o:W8%u,h=c[zYj_}\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Locale locale0 = Locale.JAPANESE;
      Format format0 = floatValidator0.getFormat("4cV4*", locale0);
      // Undeclared exception!
      try { 
        floatValidator0.processParsedValue((Object) null, format0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.FloatValidator", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Locale locale0 = Locale.US;
      Format format0 = floatValidator0.getFormat(locale0);
      // Undeclared exception!
      try { 
        floatValidator0.processParsedValue(floatValidator0, format0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.commons.validator.routines.FloatValidator cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.validator.routines.FloatValidator", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      // Undeclared exception!
      try { 
        floatValidator0.minValue((Float) null, 1736.5167F);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.FloatValidator", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      // Undeclared exception!
      try { 
        floatValidator0.isInRange((Float) null, 1164.92F, (float) 2);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.FloatValidator", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      boolean boolean0 = floatValidator0.maxValue(0.0F, 0.0F);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      boolean boolean0 = floatValidator0.maxValue(1284.692F, (-2501.0F));
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(true, 1192);
      boolean boolean0 = floatValidator0.minValue((float) 1192, (float) 1192);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      boolean boolean0 = floatValidator0.minValue((-89.67F), 0.0F);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      boolean boolean0 = floatValidator0.isInRange((-900.8161F), 0.0F, 0.0F);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, 562);
      Float float0 = floatValidator0.validate("-2Pd?@1;`uT?");
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator(false, 562);
      Float float0 = floatValidator0.validate("-2Pd?@1;`uT?");
      assertNotNull(float0);
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Double double0 = new Double(0);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      Float float0 = (Float)floatValidator0.processParsedValue(double0, mockSimpleDateFormat0);
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Double double0 = new Double(0);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      Float float0 = (Float)floatValidator0.processParsedValue(double0, mockSimpleDateFormat0);
      boolean boolean0 = floatValidator0.maxValue(float0, (float) 2);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Float float0 = new Float((double) 2);
      boolean boolean0 = floatValidator0.maxValue(float0, 0.0F);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FloatValidator floatValidator0 = FloatValidator.getInstance();
      Float float0 = new Float((double) 0);
      boolean boolean0 = floatValidator0.minValue(float0, (float) 1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      boolean boolean0 = floatValidator0.isInRange(0.0F, 0.0F, 0.0F);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      boolean boolean0 = floatValidator0.isInRange((float) 1331, (float) 2, (float) 2);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Float float0 = floatValidator0.validate("732.103", (Locale) null);
      ;
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Float float0 = floatValidator0.validate("732.103", (Locale) null);
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Float float0 = floatValidator0.validate("");
      ;
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      // Undeclared exception!
      try { 
        floatValidator0.maxValue((Float) null, 494.0F);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.FloatValidator", e);
      }
  }
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Float float0 = floatValidator0.validate("0aG[N(u{G5+Y", "0aG[N(u{G5+Y");
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Float float0 = floatValidator0.validate("0aG[N(u{G5+Y", "0aG[N(u{G5+Y");
      assertNotNull(float0);
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FloatValidator floatValidator0 = new FloatValidator();
      Float float0 = floatValidator0.validate("0aG[N(u{G5+Y", "0aG[N(u{G5+Y");
      boolean boolean0 = floatValidator0.isInRange(float0, (float) 1331, (float) 1331);
      assertTrue(boolean0);
}
}
