 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.addConstant("", "BwJXEH,7b2QX2{[");
      formSet0.addConstant("", "'B{-Qx");
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("31>a[5a>]");
      formSet0.getVariant();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("");
      formSet0.getVariant();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("yfzf?x*V]+h\"N:3s");
      formSet0.getLanguage();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("");
      formSet0.getLanguage();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Form form0 = new Form();
      formSet0.addForm(form0);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Form form0 = new Form();
      formSet0.addForm(form0);
      formSet0.process(hashMap0);
      formSet0.getForm((String) null);
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      form0.setExtends("FormSet: language=null  country=lG09~Oi7VK   variant=lG09~Oi7VK \n");
      form0.setName("Sn;Wj<gV)V");
      formSet0.addForm(form0);
      Form form1 = formSet0.getForm("Sn;Wj<gV)V");
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      form0.setExtends("FormSet: language=null  country=lG09~Oi7VK   variant=lG09~Oi7VK \n");
      form0.setName("Sn;Wj<gV)V");
      formSet0.addForm(form0);
      Form form1 = formSet0.getForm("Sn;Wj<gV)V");
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("!f2.6T#5:t");
      formSet0.getCountry();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("");
      formSet0.getCountry();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      form0.lFields = null;
      formSet0.addForm(form0);
      // Undeclared exception!
      try { 
        formSet0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.Form", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      form0.setName("sUb");
      form0.inherit = "sUb";
      formSet0.addForm(form0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        formSet0.process(hashMap0);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      form0.lFields = null;
      formSet0.addForm(form0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        formSet0.process(hashMap0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      formSet0.addForm(form0);
      Field field0 = new Field();
      form0.addField(field0);
      // Undeclared exception!
      try { 
        formSet0.merge(formSet0);
        fail("Expecting exception: ConcurrentModificationException");
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      List<Field> list0 = form0.getFields();
      form0.lFields = list0;
      formSet0.addForm(form0);
      // Undeclared exception!
      try { 
        formSet0.merge(formSet0);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      formSet0.addForm(form0);
      form0.lFields = null;
      // Undeclared exception!
      try { 
        formSet0.merge(formSet0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      // Undeclared exception!
      try { 
        formSet0.addForm((Form) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.FormSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("se{'|T`Ia_^G");
      formSet0.setCountry("se{'|T`Ia_^G");
      String string0 = formSet0.displayKey();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("se{'|T`Ia_^G");
      formSet0.setCountry("se{'|T`Ia_^G");
      String string0 = formSet0.displayKey();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("Arg: name=");
      String string0 = formSet0.displayKey();
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("Arg: name=");
      String string0 = formSet0.displayKey();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.getCountry();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.getVariant();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.getLanguage();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      formSet0.addForm(form0);
      String string0 = formSet0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      formSet0.addForm(form0);
      String string0 = formSet0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("Tg5TaeY0");
      formSet0.setVariant("Tg5TaeY0");
      String string0 = formSet0.displayKey();
      assertFalse(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("Tg5TaeY0");
      formSet0.setVariant("Tg5TaeY0");
      String string0 = formSet0.displayKey();
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("Tg5TaeY0");
      String string0 = formSet0.displayKey();
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("Tg5TaeY0");
      String string0 = formSet0.displayKey();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage(" u: ");
      Form form0 = new Form();
      formSet0.addForm(form0);
      formSet0.setCountry(" u: ");
      formSet0.addForm(form0);
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("");
      String string0 = formSet0.displayKey();
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("");
      String string0 = formSet0.displayKey();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("");
      String string0 = formSet0.displayKey();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("");
      String string0 = formSet0.displayKey();
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      formSet0.process(hashMap0);
      boolean boolean0 = formSet0.isProcessed();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      FormSet formSet1 = new FormSet();
      Form form0 = new Form();
      formSet0.addForm(form0);
      formSet1.merge(formSet0);
      assertFalse(formSet1.isProcessed());
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.merge((FormSet) null);
      boolean boolean0 = formSet0.isMerged();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.merge((FormSet) null);
      boolean boolean0 = formSet0.isMerged();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage(" u: ");
      int int0 = formSet0.getType();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage(" u: ");
      int int0 = formSet0.getType();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage(" u: ");
      formSet0.setCountry(" u: ");
      int int0 = formSet0.getType();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage(" u: ");
      formSet0.setCountry(" u: ");
      int int0 = formSet0.getType();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("Vc\"E[q(2OQCxwQU&'nxV");
      formSet0.setVariant("Vc\"E[q(2OQCxwQU&'nxV");
      formSet0.setCountry("");
      int int0 = formSet0.getType();
      ;
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("Vc\"E[q(2OQCxwQU&'nxV");
      formSet0.setVariant("Vc\"E[q(2OQCxwQU&'nxV");
      formSet0.setCountry("");
      int int0 = formSet0.getType();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setVariant(" u: ");
      // Undeclared exception!
      try { 
        formSet0.getType();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // When variant is specified, country and language must be specified.
         //
         verifyException("org.apache.commons.validator.FormSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry(" u: ");
      // Undeclared exception!
      try { 
        formSet0.getType();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // When country is specified, language must be specified.
         //
         verifyException("org.apache.commons.validator.FormSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      boolean boolean0 = formSet0.isProcessed();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage(" u: ");
      formSet0.setVariant(" u: ");
      // Undeclared exception!
      try { 
        formSet0.getType();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // When variant is specified, country and language must be specified.
         //
         verifyException("org.apache.commons.validator.FormSet", e);
      }
  }
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.isMerged();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.getForm(" u: ");
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      int int0 = formSet0.getType();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      int int0 = formSet0.getType();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.getForms();
      assertTrue(formSet0.isProcessed());
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("");
      String string0 = formSet0.displayKey();
      ;
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("");
      String string0 = formSet0.displayKey();
      assertFalse(formSet0.isProcessed());
}
