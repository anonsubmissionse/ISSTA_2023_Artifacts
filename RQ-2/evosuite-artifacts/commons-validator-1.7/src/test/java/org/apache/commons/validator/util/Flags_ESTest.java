/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 15:50:58 GMT 2022
 */

package org.apache.commons.validator.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.validator.util.Flags;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Flags_ESTest extends Flags_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Flags flags0 = new Flags();
      Flags flags1 = new Flags((-646L));
      boolean boolean0 = flags0.equals(flags1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Flags flags0 = new Flags();
      Flags flags1 = new Flags((-646L));
      boolean boolean0 = flags0.equals(flags1);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Flags flags0 = new Flags();
      Flags flags1 = new Flags((-646L));
      boolean boolean0 = flags0.equals(flags1);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Flags flags0 = new Flags();
      Flags flags1 = new Flags((-646L));
      boolean boolean0 = flags0.equals(flags1);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Flags flags0 = new Flags();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Flags flags0 = new Flags();
      flags0.turnOnAll();
      flags0.turnOn((-2321L));
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Flags flags0 = new Flags();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Flags flags0 = new Flags();
      flags0.turnOnAll();
      boolean boolean0 = flags0.isOff(16L);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Flags flags0 = new Flags();
      flags0.turnOnAll();
      boolean boolean0 = flags0.isOff(16L);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Flags flags0 = new Flags();
      boolean boolean0 = flags0.isOn((-510L));
      assertEquals(0, flags0.getFlags());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Flags flags0 = new Flags();
      boolean boolean0 = flags0.isOn((-510L));
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Flags flags0 = new Flags(1L);
      long long0 = flags0.getFlags();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Flags flags0 = new Flags();
      flags0.turnOn((-88L));
      long long0 = flags0.getFlags();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Flags flags0 = new Flags();
      String string0 = flags0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Flags flags0 = new Flags();
      Flags flags1 = (Flags)flags0.clone();
      boolean boolean0 = flags0.equals(flags1);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Flags flags0 = new Flags();
      Flags flags1 = (Flags)flags0.clone();
      boolean boolean0 = flags0.equals(flags1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Flags flags0 = new Flags();
      Object object0 = new Object();
      boolean boolean0 = flags0.equals(object0);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Flags flags0 = new Flags();
      Object object0 = new Object();
      boolean boolean0 = flags0.equals(object0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Flags flags0 = new Flags();
      boolean boolean0 = flags0.equals(flags0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Flags flags0 = new Flags();
      boolean boolean0 = flags0.equals(flags0);
      assertEquals(0, flags0.getFlags());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Flags flags0 = new Flags(77L);
      flags0.clear();
      boolean boolean0 = flags0.isOff(77L);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Flags flags0 = new Flags(77L);
      flags0.clear();
      boolean boolean0 = flags0.isOff(77L);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Flags flags0 = new Flags();
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Flags flags0 = new Flags();
      flags0.turnOnAll();
      boolean boolean0 = flags0.isOff((-3126L));
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Flags flags0 = new Flags();
      flags0.turnOnAll();
      boolean boolean0 = flags0.isOff((-3126L));
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Flags flags0 = new Flags();
      flags0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Flags flags0 = new Flags();
      Object object0 = flags0.clone();
      flags0.turnOn((-25L));
      boolean boolean0 = flags0.equals(object0);
      assertEquals(0, flags0.getFlags());
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Flags flags0 = new Flags();
      Object object0 = flags0.clone();
      flags0.turnOn((-25L));
      boolean boolean0 = flags0.equals(object0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Flags flags0 = new Flags();
      assertEquals(0, flags0.getFlags());
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Flags flags0 = new Flags();
      flags0.turnOnAll();
      boolean boolean0 = flags0.isOn((-3126L));
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Flags flags0 = new Flags();
      flags0.turnOnAll();
      boolean boolean0 = flags0.isOn((-3126L));
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Flags flags0 = new Flags();
      flags0.turnOffAll();
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Flags flags0 = new Flags();
      long long0 = flags0.getFlags();
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Flags flags0 = new Flags(77L);
      flags0.clear();
      boolean boolean0 = flags0.isOn(77L);
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Flags flags0 = new Flags(77L);
      flags0.clear();
      boolean boolean0 = flags0.isOn(77L);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Flags flags0 = new Flags();
      flags0.turnOff((-3126L));
      assertEquals(0, flags0.getFlags());
}
}
