 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = (SedolCheckDigit)SedolCheckDigit.SEDOL_CHECK_DIGIT;
      int int0 = sedolCheckDigit0.toInt('Z', 0, (-324));
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = new SedolCheckDigit();
      int int0 = sedolCheckDigit0.weightedValue(0, 7, 1287);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = (SedolCheckDigit)SedolCheckDigit.SEDOL_CHECK_DIGIT;
      int int0 = sedolCheckDigit0.weightedValue(3, 3, 3);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = (SedolCheckDigit)SedolCheckDigit.SEDOL_CHECK_DIGIT;
      int int0 = sedolCheckDigit0.weightedValue((-960), 6, 0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = (SedolCheckDigit)SedolCheckDigit.SEDOL_CHECK_DIGIT;
      int int0 = sedolCheckDigit0.toInt('0', 10, 4255);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = new SedolCheckDigit();
      int int0 = sedolCheckDigit0.calculateModulus("wQ", false);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = new SedolCheckDigit();
      int int0 = sedolCheckDigit0.calculateModulus("1", false);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = new SedolCheckDigit();
      // Undeclared exception!
      try { 
        sedolCheckDigit0.weightedValue(0, 0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.SedolCheckDigit", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = new SedolCheckDigit();
      try { 
        sedolCheckDigit0.toInt('*', 0, (-287));
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Invalid Character[0,-287] = '-1' out of range 0 to 35
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.SedolCheckDigit", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = (SedolCheckDigit)SedolCheckDigit.SEDOL_CHECK_DIGIT;
      try { 
        sedolCheckDigit0.calculateModulus("U&*l25OhD", false);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Invalid Code Length = 9
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.SedolCheckDigit", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = (SedolCheckDigit)SedolCheckDigit.SEDOL_CHECK_DIGIT;
      // Undeclared exception!
      try { 
        sedolCheckDigit0.calculateModulus((String) null, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.checkdigit.SedolCheckDigit", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SedolCheckDigit sedolCheckDigit0 = new SedolCheckDigit();
      boolean boolean0 = sedolCheckDigit0.isValid("E7mVtQf");
      assertTrue(boolean0);
}
