/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 04:19:39 GMT 2022
 */

package org.apache.commons.vfs2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.SQLDataException;
import java.sql.SQLException;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLNonTransientConnectionException;
import java.sql.SQLNonTransientException;
import java.sql.SQLTransactionRollbackException;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.impl.Jdk13LumberjackLogger;
import org.apache.commons.logging.impl.Jdk14Logger;
import org.apache.commons.logging.impl.Log4JLogger;
import org.apache.commons.logging.impl.NoOpLog;
import org.apache.commons.logging.impl.SimpleLog;
import org.apache.commons.vfs2.VfsLog;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockIOException;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VfsLog_ESTest extends VfsLog_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Jdk14Logger jdk14Logger0 = new Jdk14Logger(")qyTvK-YWNFB(HIz|");
      Log4JLogger log4JLogger0 = new Log4JLogger();
      VfsLog.fatal((Log) jdk14Logger0, (Log) log4JLogger0, "dirFilter");
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Log4JLogger log4JLogger0 = new Log4JLogger("");
      MockThrowable mockThrowable0 = new MockThrowable();
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("");
      VfsLog.fatal((Log) log4JLogger0, (Log) jdk14Logger0, "", (Throwable) mockThrowable0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NoOpLog noOpLog0 = new NoOpLog();
      Log4JLogger log4JLogger0 = new Log4JLogger("");
      VfsLog.error((Log) log4JLogger0, (Log) noOpLog0, "");
      assertTrue(noOpLog0.isDebugEnabled());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("MLFDS^Qr1{");
      VfsLog.info((Log) jdk14Logger0, (Log) null, "tb");
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NoOpLog noOpLog0 = new NoOpLog("");
      NoOpLog noOpLog1 = new NoOpLog("");
      VfsLog.info((Log) noOpLog1, (Log) noOpLog0, "", (Throwable) null);
      assertTrue(noOpLog0.isTraceEnabled());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NoOpLog noOpLog0 = new NoOpLog("");
      NoOpLog noOpLog1 = new NoOpLog("");
      VfsLog.debug((Log) noOpLog1, (Log) noOpLog0, "_*;H+@`HqA3=~IH", (Throwable) null);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("rg.apache.commonsNvfs2.VfsLog");
      VfsLog.debug((Log) jdk13LumberjackLogger0, (Log) null, (String) null);
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SimpleLog simpleLog0 = new SimpleLog((String) null);
      SQLDataException sQLDataException0 = new SQLDataException("[3eMD", (String) null, 5);
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException(sQLDataException0);
      // Undeclared exception!
      try { 
        VfsLog.warn((Log) simpleLog0, (Log) simpleLog0, (String) null, (Throwable) sQLNonTransientConnectionException0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.logging.impl.SimpleLog", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Log4JLogger log4JLogger0 = new Log4JLogger();
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException();
      // Undeclared exception!
      try { 
        VfsLog.warn((Log) log4JLogger0, (Log) log4JLogger0, "", (Throwable) sQLNonTransientConnectionException0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.log4j.CategoryKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Log4JLogger log4JLogger0 = new Log4JLogger();
      // Undeclared exception!
      try { 
        VfsLog.warn((Log) log4JLogger0, (Log) log4JLogger0, ")qyTvK-YWNFB(HIz|");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.log4j.CategoryKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Log4JLogger log4JLogger0 = new Log4JLogger();
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException("", ".v<xuN:dz", (Throwable) null);
      // Undeclared exception!
      try { 
        VfsLog.info((Log) log4JLogger0, (Log) log4JLogger0, "", (Throwable) sQLNonTransientException0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.log4j.CategoryKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Log4JLogger log4JLogger0 = new Log4JLogger();
      // Undeclared exception!
      try { 
        VfsLog.info((Log) log4JLogger0, (Log) log4JLogger0, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.log4j.CategoryKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Log4JLogger log4JLogger0 = new Log4JLogger();
      // Undeclared exception!
      try { 
        VfsLog.fatal((Log) null, (Log) log4JLogger0, "oLzwbI;71)ch", (Throwable) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.log4j.CategoryKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleLog simpleLog0 = new SimpleLog((String) null);
      NoOpLog noOpLog0 = new NoOpLog("");
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException(":an attempt to override final parameter: ", "");
      // Undeclared exception!
      try { 
        VfsLog.error((Log) simpleLog0, (Log) noOpLog0, (String) null, (Throwable) sQLTransactionRollbackException0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.logging.impl.SimpleLog", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Log4JLogger log4JLogger0 = new Log4JLogger();
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException((String) null);
      // Undeclared exception!
      try { 
        VfsLog.error((Log) log4JLogger0, (Log) log4JLogger0, (String) null, (Throwable) sQLNonTransientException0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.log4j.CategoryKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleLog simpleLog0 = new SimpleLog((String) null);
      // Undeclared exception!
      try { 
        VfsLog.error((Log) null, (Log) simpleLog0, "REQUIRE");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.logging.impl.SimpleLog", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Log4JLogger log4JLogger0 = new Log4JLogger();
      // Undeclared exception!
      try { 
        VfsLog.error((Log) log4JLogger0, (Log) log4JLogger0, "org.apache.commons.vfs2.VfsLog");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.log4j.CategoryKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("Hm4Q^n=S\"`4");
      SimpleLog simpleLog0 = new SimpleLog((String) null);
      simpleLog0.setLevel((-514));
      // Undeclared exception!
      try { 
        VfsLog.debug((Log) null, (Log) simpleLog0, "Hm4Q^n=S\"`4", (Throwable) sQLFeatureNotSupportedException0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.logging.impl.SimpleLog", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Log4JLogger log4JLogger0 = new Log4JLogger();
      SQLException sQLException0 = new SQLException("", "");
      // Undeclared exception!
      try { 
        VfsLog.debug((Log) log4JLogger0, (Log) log4JLogger0, "", (Throwable) sQLException0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.log4j.CategoryKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleLog simpleLog0 = new SimpleLog((String) null);
      simpleLog0.setLevel(0);
      // Undeclared exception!
      try { 
        VfsLog.debug((Log) null, (Log) simpleLog0, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.logging.impl.SimpleLog", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Log4JLogger log4JLogger0 = new Log4JLogger();
      // Undeclared exception!
      try { 
        VfsLog.debug((Log) log4JLogger0, (Log) log4JLogger0, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.log4j.CategoryKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VfsLog.fatal((Log) null, (Log) null, "sR+4bq/;T%0i54");
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Log4JLogger log4JLogger0 = new Log4JLogger();
      // Undeclared exception!
      try { 
        VfsLog.fatal((Log) null, (Log) log4JLogger0, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.log4j.CategoryKey", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VfsLog.fatal((Log) null, (Log) null, "", (Throwable) null);
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VfsLog.error((Log) null, (Log) null, "MLFDS^Qr1{");
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException((String) null);
      MockException mockException0 = new MockException((String) null, sQLFeatureNotSupportedException0);
      VfsLog.error((Log) null, (Log) null, "REQUIRE", (Throwable) mockException0);
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Jdk13LumberjackLogger jdk13LumberjackLogger0 = new Jdk13LumberjackLogger("rg.apache.commonsNvfs2.VfsLog");
      MockIOException mockIOException0 = new MockIOException((Throwable) null);
      VfsLog.error((Log) null, (Log) jdk13LumberjackLogger0, (String) null, (Throwable) mockIOException0);
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Log4JLogger log4JLogger0 = new Log4JLogger(">l|'+'`1*A58V?");
      VfsLog.info((Log) null, (Log) log4JLogger0, ">l|'+'`1*A58V?");
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VfsLog.info((Log) null, (Log) null, "");
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException();
      NoOpLog noOpLog0 = new NoOpLog("sR+4bq/;T%0i54");
      VfsLog.info((Log) null, (Log) noOpLog0, "sR+4bq/;T%0i54", (Throwable) sQLTransactionRollbackException0);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VfsLog.info((Log) null, (Log) null, "qIX7}", (Throwable) null);
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException((String) null);
      VfsLog.debug((Log) null, (Log) null, "MFR68XP", (Throwable) sQLNonTransientConnectionException0);
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VfsLog.debug((Log) null, (Log) null, "");
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VfsLog.warn((Log) null, (Log) null, "org.eclipse.jetty.util.Uptime");
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("MLFDS^Qr1{");
      VfsLog.warn((Log) jdk14Logger0, (Log) null, (String) null);
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      NoOpLog noOpLog0 = new NoOpLog("9t5,L");
      VfsLog.warn((Log) null, (Log) noOpLog0, "9t5,L");
      assertTrue(noOpLog0.isDebugEnabled());
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VfsLog.warn((Log) null, (Log) null, "qIX7}", (Throwable) null);
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("SgO:LK{<%Gp6?@;");
      MockException mockException0 = new MockException();
      VfsLog.warn((Log) jdk14Logger0, (Log) null, (String) null, (Throwable) mockException0);
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Jdk14Logger jdk14Logger0 = new Jdk14Logger("SgO:LK{<%Gp6?@;");
      MockException mockException0 = new MockException();
      VfsLog.warn((Log) null, (Log) jdk14Logger0, "SgO:LK{<%Gp6?@;", (Throwable) mockException0);
  }
}
