 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UserAuthenticationData userAuthenticationData0 = new UserAuthenticationData();
      int int0 = userAuthenticationData0.USERNAME.compareTo(userAuthenticationData0.DOMAIN);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UserAuthenticationData userAuthenticationData0 = new UserAuthenticationData();
      char[] charArray0 = userAuthenticationData0.getData(userAuthenticationData0.PASSWORD);
      assertNotNull(charArray0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UserAuthenticationData.Type userAuthenticationData_Type0 = UserAuthenticationData.USERNAME;
      UserAuthenticationData userAuthenticationData0 = new UserAuthenticationData();
      char[] charArray0 = new char[2];
      userAuthenticationData0.setData(userAuthenticationData_Type0, charArray0);
      char[] charArray1 = userAuthenticationData0.getData(userAuthenticationData_Type0);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UserAuthenticationData.Type userAuthenticationData_Type0 = new UserAuthenticationData.Type("~P");
      UserAuthenticationData userAuthenticationData0 = new UserAuthenticationData();
      char[] charArray0 = new char[0];
      userAuthenticationData0.setData(userAuthenticationData_Type0, charArray0);
      char[] charArray1 = userAuthenticationData0.getData(userAuthenticationData_Type0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UserAuthenticationData userAuthenticationData0 = new UserAuthenticationData();
      char[] charArray0 = new char[9];
      // Undeclared exception!
      try { 
        userAuthenticationData0.setData((UserAuthenticationData.Type) null, charArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UserAuthenticationData.Type userAuthenticationData_Type0 = new UserAuthenticationData.Type("");
      UserAuthenticationData userAuthenticationData0 = new UserAuthenticationData();
      char[] charArray0 = new char[5];
      userAuthenticationData0.setData(userAuthenticationData_Type0, charArray0);
      userAuthenticationData0.cleanup();
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      UserAuthenticationData userAuthenticationData0 = new UserAuthenticationData();
      userAuthenticationData0.setData(userAuthenticationData0.DOMAIN, (char[]) null);
      userAuthenticationData0.cleanup();
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      UserAuthenticationData.Type userAuthenticationData_Type0 = new UserAuthenticationData.Type("H");
      UserAuthenticationData userAuthenticationData0 = new UserAuthenticationData();
      boolean boolean0 = userAuthenticationData0.DOMAIN.equals(userAuthenticationData_Type0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      UserAuthenticationData.Type userAuthenticationData_Type0 = new UserAuthenticationData.Type("");
      boolean boolean0 = userAuthenticationData_Type0.equals((Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      UserAuthenticationData.Type userAuthenticationData_Type0 = UserAuthenticationData.DOMAIN;
      boolean boolean0 = userAuthenticationData_Type0.equals(userAuthenticationData_Type0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserAuthenticationData.Type userAuthenticationData_Type0 = new UserAuthenticationData.Type("H");
      boolean boolean0 = userAuthenticationData_Type0.equals("H");
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserAuthenticationData.Type userAuthenticationData_Type0 = new UserAuthenticationData.Type("H");
      String string0 = userAuthenticationData_Type0.toString();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserAuthenticationData userAuthenticationData0 = new UserAuthenticationData();
      // Undeclared exception!
      try { 
        userAuthenticationData0.getData((UserAuthenticationData.Type) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }
