/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 04:57:31 GMT 2022
 */

package org.apache.commons.vfs2.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.vfs2.FileSystemOptions;
import org.apache.commons.vfs2.UserAuthenticationData;
import org.apache.commons.vfs2.UserAuthenticator;
import org.apache.commons.vfs2.auth.StaticUserAuthenticator;
import org.apache.commons.vfs2.util.UserAuthenticatorUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserAuthenticatorUtils_ESTest extends UserAuthenticatorUtils_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      char[] charArray0 = UserAuthenticatorUtils.toChar("");
      String string0 = UserAuthenticatorUtils.toString(charArray0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UserAuthenticationData.Type userAuthenticationData_Type0 = UserAuthenticationData.DOMAIN;
      char[] charArray0 = UserAuthenticatorUtils.toChar("");
      char[] charArray1 = UserAuthenticatorUtils.getData((UserAuthenticationData) null, userAuthenticationData_Type0, charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UserAuthenticationData.Type[] userAuthenticationData_TypeArray0 = new UserAuthenticationData.Type[8];
      UserAuthenticationData userAuthenticationData0 = new UserAuthenticationData();
      // Undeclared exception!
      try { 
        UserAuthenticatorUtils.getData(userAuthenticationData0, userAuthenticationData_TypeArray0[1], (char[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StaticUserAuthenticator staticUserAuthenticator0 = new StaticUserAuthenticator("org.apache.commons.vfs2.util.UserAuthenticatorUtils", "org.apache.commons.vfs2.util.UserAuthenticatorUtils", "z)");
      // Undeclared exception!
      try { 
        UserAuthenticatorUtils.authenticate((UserAuthenticator) staticUserAuthenticator0, (UserAuthenticationData.Type[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.auth.StaticUserAuthenticator", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      char[] charArray0 = UserAuthenticatorUtils.toChar((String) null);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UserAuthenticationData.Type[] userAuthenticationData_TypeArray0 = new UserAuthenticationData.Type[5];
      UserAuthenticationData userAuthenticationData0 = UserAuthenticatorUtils.authenticate((UserAuthenticator) null, userAuthenticationData_TypeArray0);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String string0 = UserAuthenticatorUtils.toString((char[]) null);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      char[] charArray0 = new char[6];
      String string0 = UserAuthenticatorUtils.toString(charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      UserAuthenticationData userAuthenticationData0 = new UserAuthenticationData();
      UserAuthenticatorUtils.cleanup(userAuthenticationData0);
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      UserAuthenticatorUtils.cleanup((UserAuthenticationData) null);
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = UserAuthenticatorUtils.toChar("\u0000\u0000\u0000\u0000\u0000\u0000");
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StaticUserAuthenticator staticUserAuthenticator0 = new StaticUserAuthenticator("\u0000\u0000\u0000\u0000\u0000\u0000", "\u0000\u0000\u0000\u0000\u0000\u0000", "\u0000\u0000\u0000\u0000\u0000\u0000");
      UserAuthenticationData.Type[] userAuthenticationData_TypeArray0 = new UserAuthenticationData.Type[9];
      UserAuthenticationData userAuthenticationData0 = UserAuthenticatorUtils.authenticate((UserAuthenticator) staticUserAuthenticator0, userAuthenticationData_TypeArray0);
      assertNotNull(userAuthenticationData0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StaticUserAuthenticator staticUserAuthenticator0 = new StaticUserAuthenticator((String) null, (String) null, (String) null);
      UserAuthenticationData.Type[] userAuthenticationData_TypeArray0 = new UserAuthenticationData.Type[8];
      UserAuthenticationData userAuthenticationData0 = staticUserAuthenticator0.requestAuthentication(userAuthenticationData_TypeArray0);
      char[] charArray0 = UserAuthenticatorUtils.getData(userAuthenticationData0, userAuthenticationData0.PASSWORD, (char[]) null);
      assertNotNull(charArray0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[6];
      UserAuthenticationData.Type[] userAuthenticationData_TypeArray0 = new UserAuthenticationData.Type[9];
      UserAuthenticationData userAuthenticationData0 = new UserAuthenticationData();
      char[] charArray1 = UserAuthenticatorUtils.getData(userAuthenticationData0, userAuthenticationData_TypeArray0[1], charArray0);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemOptions fileSystemOptions0 = new FileSystemOptions();
      UserAuthenticationData.Type[] userAuthenticationData_TypeArray0 = new UserAuthenticationData.Type[6];
      UserAuthenticationData userAuthenticationData0 = UserAuthenticatorUtils.authenticate(fileSystemOptions0, userAuthenticationData_TypeArray0);
      char[] charArray0 = UserAuthenticatorUtils.getData((UserAuthenticationData) null, userAuthenticationData0.USERNAME, (char[]) null);
      assertNotNull(charArray0);
}
}
