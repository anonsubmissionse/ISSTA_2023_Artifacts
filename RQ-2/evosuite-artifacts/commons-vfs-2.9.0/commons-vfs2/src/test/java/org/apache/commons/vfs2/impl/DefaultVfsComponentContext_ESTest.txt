 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultFileSystemManager defaultFileSystemManager0 = mock(DefaultFileSystemManager.class, new ViolatedAssumptionAnswer());
      doReturn((FileObject) null).when(defaultFileSystemManager0).toFileObject(any(java.io.File.class));
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext(defaultFileSystemManager0);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      defaultVfsComponentContext0.toFileObject(file0);
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultFileSystemManager defaultFileSystemManager0 = mock(DefaultFileSystemManager.class, new ViolatedAssumptionAnswer());
      doReturn((FileName) null).when(defaultFileSystemManager0).resolveURI(anyString());
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext(defaultFileSystemManager0);
      FileName fileName0 = defaultVfsComponentContext0.parseURI(";*5g8Uan)wpI {");
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TemporaryFileStore temporaryFileStore0 = mock(TemporaryFileStore.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(temporaryFileStore0).toString();
      DefaultFileSystemManager defaultFileSystemManager0 = mock(DefaultFileSystemManager.class, new ViolatedAssumptionAnswer());
      doReturn(temporaryFileStore0).when(defaultFileSystemManager0).getTemporaryFileStore();
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext(defaultFileSystemManager0);
      TemporaryFileStore temporaryFileStore1 = defaultVfsComponentContext0.getTemporaryFileStore();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultFileSystemManager defaultFileSystemManager0 = mock(DefaultFileSystemManager.class, new ViolatedAssumptionAnswer());
      doReturn((FileReplicator) null).when(defaultFileSystemManager0).getReplicator();
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext(defaultFileSystemManager0);
      FileReplicator fileReplicator0 = defaultVfsComponentContext0.getReplicator();
      assertNotNull(fileReplicator0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileReplicator fileReplicator0 = mock(FileReplicator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(fileReplicator0).toString();
      DefaultFileSystemManager defaultFileSystemManager0 = mock(DefaultFileSystemManager.class, new ViolatedAssumptionAnswer());
      doReturn(fileReplicator0).when(defaultFileSystemManager0).getReplicator();
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext(defaultFileSystemManager0);
      FileReplicator fileReplicator1 = defaultVfsComponentContext0.getReplicator();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DefaultFileSystemManager defaultFileSystemManager0 = mock(DefaultFileSystemManager.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(defaultFileSystemManager0).toString();
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext(defaultFileSystemManager0);
      FileSystemManager fileSystemManager0 = defaultVfsComponentContext0.getFileSystemManager();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext((DefaultFileSystemManager) null);
      // Undeclared exception!
      try { 
        defaultVfsComponentContext0.getTemporaryFileStore();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DefaultVfsComponentContext", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext((DefaultFileSystemManager) null);
      // Undeclared exception!
      try { 
        defaultVfsComponentContext0.parseURI("5sh");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DefaultVfsComponentContext", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext((DefaultFileSystemManager) null);
      FileSystemOptions fileSystemOptions0 = mock(FileSystemOptions.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        defaultVfsComponentContext0.resolveFile((FileObject) null, "", fileSystemOptions0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DefaultVfsComponentContext", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext((DefaultFileSystemManager) null);
      // Undeclared exception!
      try { 
        defaultVfsComponentContext0.getReplicator();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DefaultVfsComponentContext", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultFileSystemManager defaultFileSystemManager0 = mock(DefaultFileSystemManager.class, new ViolatedAssumptionAnswer());
      doReturn((TemporaryFileStore) null).when(defaultFileSystemManager0).getTemporaryFileStore();
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext(defaultFileSystemManager0);
      TemporaryFileStore temporaryFileStore0 = defaultVfsComponentContext0.getTemporaryFileStore();
      assertNotNull(temporaryFileStore0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext((DefaultFileSystemManager) null);
      FileSystemOptions fileSystemOptions0 = mock(FileSystemOptions.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        defaultVfsComponentContext0.resolveFile("w", fileSystemOptions0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DefaultVfsComponentContext", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext((DefaultFileSystemManager) null);
      File file0 = mock(File.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        defaultVfsComponentContext0.toFileObject(file0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DefaultVfsComponentContext", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultVfsComponentContext defaultVfsComponentContext0 = new DefaultVfsComponentContext((DefaultFileSystemManager) null);
      FileSystemManager fileSystemManager0 = defaultVfsComponentContext0.getFileSystemManager();
      assertNotNull(fileSystemManager0);
}
