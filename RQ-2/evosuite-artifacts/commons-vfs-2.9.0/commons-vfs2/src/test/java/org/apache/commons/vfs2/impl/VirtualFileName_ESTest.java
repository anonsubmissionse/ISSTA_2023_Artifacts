/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 05:24:27 GMT 2022
 */

package org.apache.commons.vfs2.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.vfs2.FileName;
import org.apache.commons.vfs2.FileType;
import org.apache.commons.vfs2.impl.VirtualFileName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VirtualFileName_ESTest extends VirtualFileName_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileType fileType0 = FileType.FOLDER;
      VirtualFileName virtualFileName0 = new VirtualFileName("zMt}r[", "zMt}r[", fileType0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "zMt}r[");
      virtualFileName0.appendRootUri(stringBuilder0, false);
      assertNotNull(virtualFileName0.getScheme());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileType fileType0 = FileType.FILE_OR_FOLDER;
      VirtualFileName virtualFileName0 = new VirtualFileName("MxKc", "MxKc", fileType0);
      // Undeclared exception!
      try { 
        virtualFileName0.appendRootUri((StringBuilder) null, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.VirtualFileName", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileType fileType0 = FileType.IMAGINARY;
      VirtualFileName virtualFileName0 = new VirtualFileName("org.^pache.log4j.helpers.Loader", "org.^pache.log4j.helpers.Loader", fileType0);
      FileName fileName0 = virtualFileName0.createName("org.^pache.log4j.helpers.Loader", fileType0);
      ;
}
}
