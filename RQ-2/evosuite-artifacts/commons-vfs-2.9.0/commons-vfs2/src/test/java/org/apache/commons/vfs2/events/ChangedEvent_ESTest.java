/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 05:22:41 GMT 2022
 */

package org.apache.commons.vfs2.events;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.vfs2.FileListener;
import org.apache.commons.vfs2.FileObject;
import org.apache.commons.vfs2.events.ChangedEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChangedEvent_ESTest extends ChangedEvent_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileObject fileObject0 = mock(FileObject.class, new ViolatedAssumptionAnswer());
      ChangedEvent changedEvent0 = new ChangedEvent(fileObject0);
      try { 
        changedEvent0.notify((FileListener) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.events.ChangedEvent", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileObject fileObject0 = mock(FileObject.class, new ViolatedAssumptionAnswer());
      ChangedEvent changedEvent0 = new ChangedEvent(fileObject0);
      FileListener fileListener0 = mock(FileListener.class, new ViolatedAssumptionAnswer());
      changedEvent0.notify(fileListener0);
  }
}
