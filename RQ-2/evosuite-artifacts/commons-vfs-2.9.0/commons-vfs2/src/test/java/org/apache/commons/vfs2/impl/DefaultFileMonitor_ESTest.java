/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 04:21:20 GMT 2022
 */

package org.apache.commons.vfs2.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import org.apache.commons.vfs2.FileListener;
import org.apache.commons.vfs2.FileObject;
import org.apache.commons.vfs2.FileSystemOptions;
import org.apache.commons.vfs2.FileType;
import org.apache.commons.vfs2.cache.OnCallRefreshFileObject;
import org.apache.commons.vfs2.impl.DefaultFileMonitor;
import org.apache.commons.vfs2.impl.DefaultFileSystemManager;
import org.apache.commons.vfs2.impl.VirtualFileName;
import org.apache.commons.vfs2.impl.VirtualFileSystem;
import org.apache.commons.vfs2.provider.AbstractFileObject;
import org.apache.commons.vfs2.provider.DelegateFileObject;
import org.apache.commons.vfs2.provider.GenericURLFileName;
import org.apache.commons.vfs2.provider.LayeredFileName;
import org.apache.commons.vfs2.provider.http.HttpFileSystem;
import org.apache.commons.vfs2.provider.local.DefaultLocalFileProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultFileMonitor_ESTest extends DefaultFileMonitor_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertTrue(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      genericURLFileName0.getBaseName();
      FileObject fileObject0 = virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(fileObject0);
      defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(fileObject0);
      // Undeclared exception!
      try { 
        defaultFileMonitor0.run();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DefaultFileMonitor", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      genericURLFileName0.getBaseName();
      FileObject fileObject0 = virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(fileObject0);
      defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.start();
      defaultFileMonitor0.run();
      long long0 = defaultFileMonitor0.getDelay();
      long long1 = 1000L;
      defaultFileMonitor0.setDelay(long1);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      defaultFileMonitor0.setDelay(long0);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setRecursive(boolean0);
      defaultFileMonitor0.stop();
      int int0 = 1000;
      defaultFileMonitor0.setChecksPerRun(int0);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.getDelay();
      defaultFileMonitor0.getDelay();
      defaultFileMonitor0.isRecursive();
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      String string0 = "";
      FileObject fileObject0 = null;
      defaultFileMonitor0.queueAddFile((FileObject) null);
      FileType fileType0 = FileType.FOLDER;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", (-4376), (-4376), "bYbC)", "bYbC)", "bYbC)", fileType0, "");
      FileType fileType1 = FileType.FOLDER;
      LayeredFileName layeredFileName0 = new LayeredFileName("", genericURLFileName0, "", fileType1);
      HttpFileSystem httpFileSystem0 = mock(HttpFileSystem.class, new ViolatedAssumptionAnswer());
      DefaultLocalFileProvider defaultLocalFileProvider0 = new DefaultLocalFileProvider();
      String string1 = "}\"'T{J,%I9}=";
      URI uRI0 = MockURI.URI("com.jcraft.jsch.JSch");
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // URI is not absolute
         //
         verifyException("java.io.File", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.start();
      defaultFileMonitor0.run();
      long long0 = defaultFileMonitor0.getDelay();
      long long1 = 1000L;
      defaultFileMonitor0.setDelay(long1);
      defaultFileMonitor0.setDelay(long0);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      int int0 = 1000;
      defaultFileMonitor0.setChecksPerRun(int0);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.getDelay();
      defaultFileMonitor0.getDelay();
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay((-40L));
      defaultFileMonitor0.setRecursive(false);
      // Undeclared exception!
      try { 
        defaultFileMonitor0.run();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DefaultFileMonitor", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.start();
      defaultFileMonitor0.getDelay();
      defaultFileMonitor0.setDelay(1000L);
      defaultFileMonitor0.setDelay(1000L);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(1000);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.getDelay();
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.isRecursive();
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.start();
      defaultFileMonitor0.getDelay();
      defaultFileMonitor0.setDelay(1000L);
      // Undeclared exception!
      try { 
        defaultFileMonitor0.start();
        fail("Expecting exception: IllegalThreadStateException");
      } catch(IllegalThreadStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Thread", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      OnCallRefreshFileObject onCallRefreshFileObject0 = new OnCallRefreshFileObject((FileObject) null);
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      OnCallRefreshFileObject onCallRefreshFileObject0 = new OnCallRefreshFileObject((FileObject) null);
      defaultFileMonitor0.start();
      assertTrue(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      OnCallRefreshFileObject onCallRefreshFileObject0 = new OnCallRefreshFileObject((FileObject) null);
      defaultFileMonitor0.start();
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      OnCallRefreshFileObject onCallRefreshFileObject0 = new OnCallRefreshFileObject((FileObject) null);
      defaultFileMonitor0.start();
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setDelay(1565L);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setDelay(1565L);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setDelay(1565L);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertTrue(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun((-508));
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun((-508));
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun((-508));
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.setChecksPerRun((-508));
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.setChecksPerRun((-508));
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.setChecksPerRun((-508));
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.start();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.start();
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.start();
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.start();
      FileObject fileObject0 = null;
      defaultFileMonitor0.queueRemoveFile((FileObject) null);
      assertTrue(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.start();
      FileObject fileObject0 = null;
      defaultFileMonitor0.queueRemoveFile((FileObject) null);
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.setChecksPerRun((-508));
      defaultFileMonitor0.start();
      FileObject fileObject0 = null;
      defaultFileMonitor0.queueRemoveFile((FileObject) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertTrue(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.start();
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.start();
      ;
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.start();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(0L);
      ;
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(0L);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(0L);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(0L);
      defaultFileMonitor0.setRecursive(false);
      ;
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(0L);
      defaultFileMonitor0.setRecursive(false);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(0L);
      defaultFileMonitor0.setRecursive(false);
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      ;
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      ;
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      ;
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      ;
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      ;
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      ;
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      assertNotNull(fileListener0);
}
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      ;
}
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      ;
}
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      URI uRI0 = MockURI.aFileURI;
      ;
}
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      URI uRI0 = MockURI.aFileURI;
      ;
}
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      URI uRI0 = MockURI.aFileURI;
      ;
}
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      URI uRI0 = MockURI.aFileURI;
      assertNotNull(uRI0.toString());
}
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      URI uRI0 = MockURI.aFileURI;
      assertEquals(0, uRI0.getPort());
}
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      URI uRI0 = MockURI.aFileURI;
      ;
}
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      URI uRI0 = MockURI.aFileURI;
      ;
}
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      URI uRI0 = MockURI.aFileURI;
      ;
}
 @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      URI uRI0 = MockURI.aFileURI;
      assertNotNull(uRI0.getRawPath());
}
 @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      URI uRI0 = MockURI.aFileURI;
      ;
}
 @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      URI uRI0 = MockURI.aFileURI;
      assertNotNull(uRI0.getScheme());
}
 @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(0);
      defaultFileMonitor0.stop();
      FileListener fileListener0 = defaultFileMonitor0.getFileListener();
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      URI uRI0 = MockURI.aFileURI;
      assertEquals(fileListener0, uRI0);
}
 @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      assertNotNull(genericURLFileName0.getUserName());
}
 @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      assertEquals(0, genericURLFileName0.getPort());
}
 @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      ;
}
 @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      assertNotNull(genericURLFileName0.getScheme());
}
 @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      assertNotNull(genericURLFileName0.getPassword());
}
 @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      assertEquals(0, genericURLFileName0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      assertNotNull(genericURLFileName0.getHostName());
}
 @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      assertNotNull(genericURLFileName0.getQueryString());
}
 @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      assertEquals(defaultFileMonitor0, genericURLFileName0);
}
 @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertNotNull(genericURLFileName0.getUserName());
}
 @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertEquals(0, genericURLFileName0.getPort());
}
 @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      ;
}
 @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertNotNull(genericURLFileName0.getScheme());
}
 @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertNotNull(genericURLFileName0.getPassword());
}
 @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertEquals(0, genericURLFileName0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertNotNull(genericURLFileName0.getHostName());
}
 @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertNotNull(genericURLFileName0.getQueryString());
}
 @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertNotNull(virtualFileSystem0.getRootURI());
}
 @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      ;
}
 @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      ;
}
 @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertFalse(virtualFileSystem0.isReleaseable());
}
 @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertEquals(defaultFileMonitor0, virtualFileSystem0);
}
 @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      assertNotNull(genericURLFileName0.getUserName());
}
 @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      assertEquals(0, genericURLFileName0.getPort());
}
 @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      ;
}
 @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      assertNotNull(genericURLFileName0.getScheme());
}
 @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      assertNotNull(genericURLFileName0.getPassword());
}
 @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      ;
}
 @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      assertNotNull(genericURLFileName0.getHostName());
}
 @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      ;
}
 @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      ;
}
 @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      ;
}
 @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertNotNull(genericURLFileName0.getUserName());
}
 @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertEquals(0, genericURLFileName0.getPort());
}
 @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      ;
}
 @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertNotNull(genericURLFileName0.getScheme());
}
 @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertNotNull(genericURLFileName0.getPassword());
}
 @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertEquals(0, genericURLFileName0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertNotNull(genericURLFileName0.getHostName());
}
 @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      ;
}
 @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertNotNull(virtualFileSystem0.getRootURI());
}
 @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      ;
}
 @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertTrue(virtualFileSystem0.isOpen());
}
 @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      ;
}
 @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      ;
}
 @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertFalse(delegateFileObject0.isContentOpen());
}
 @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      ;
}
 @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      ;
}
 @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertTrue(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getUserName());
}
 @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertEquals(0, genericURLFileName0.getPort());
}
 @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getScheme());
}
 @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getPassword());
}
 @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertEquals(1, genericURLFileName0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getHostName());
}
 @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getQueryString());
}
 @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(virtualFileSystem0.getRootURI());
}
 @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertFalse(virtualFileSystem0.isOpen());
}
 @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertFalse(delegateFileObject0.isContentOpen());
}
 @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      ;
}
 @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      ;
}
 @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "PJ:EGuUKePv*`2:", "=$oPj:P2", fileType0, "");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      ;
}
 @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      assertNotNull(genericURLFileName0.getHostName());
}
 @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      assertNotNull(genericURLFileName0.getQueryString());
}
 @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      assertNotNull(genericURLFileName0.getScheme());
}
 @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      assertNotNull(genericURLFileName0.getUserName());
}
 @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      ;
}
 @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      assertEquals(0, genericURLFileName0.getPort());
}
 @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      assertNotNull(genericURLFileName0.getPassword());
}
 @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      assertEquals(0, genericURLFileName0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      ;
}
 @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertNotNull(genericURLFileName0.getHostName());
}
 @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertNotNull(genericURLFileName0.getQueryString());
}
 @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertNotNull(genericURLFileName0.getScheme());
}
 @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertNotNull(genericURLFileName0.getUserName());
}
 @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      ;
}
 @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertEquals(0, genericURLFileName0.getPort());
}
 @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertNotNull(genericURLFileName0.getPassword());
}
 @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertEquals(0, genericURLFileName0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertTrue(virtualFileSystem0.isOpen());
}
 @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertNotNull(virtualFileSystem0.getRootURI());
}
 @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      ;
}
 @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      assertTrue(virtualFileSystem0.isReleaseable());
}
 @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      ;
}
 @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      ;
}
 @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      assertNotNull(genericURLFileName0.getQueryString());
}
 @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      assertNotNull(genericURLFileName0.getScheme());
}
 @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      assertNotNull(genericURLFileName0.getUserName());
}
 @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      ;
}
 @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      assertEquals(0, genericURLFileName0.getPort());
}
 @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      assertNotNull(genericURLFileName0.getPassword());
}
 @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      assertEquals(0, genericURLFileName0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      ;
}
 @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertNotNull(genericURLFileName0.getHostName());
}
 @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertNotNull(genericURLFileName0.getQueryString());
}
 @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertNotNull(genericURLFileName0.getScheme());
}
 @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertNotNull(genericURLFileName0.getUserName());
}
 @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      ;
}
 @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertEquals(0, genericURLFileName0.getPort());
}
 @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertNotNull(genericURLFileName0.getPassword());
}
 @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertEquals(0, genericURLFileName0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertFalse(virtualFileSystem0.isReleaseable());
}
 @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertTrue(virtualFileSystem0.isOpen());
}
 @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertNotNull(virtualFileSystem0.getRootURI());
}
 @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      ;
}
 @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      assertTrue(delegateFileObject0.isAttached());
}
 @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      ;
}
 @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      ;
}
 @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      ;
}
 @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getHostName());
}
 @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getQueryString());
}
 @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getScheme());
}
 @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getUserName());
}
 @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertEquals(1, genericURLFileName0.getPort());
}
 @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getPassword());
}
 @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertEquals(1, genericURLFileName0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertTrue(virtualFileSystem0.isReleaseable());
}
 @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertTrue(delegateFileObject0.isAttached());
}
 @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      assertTrue(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      ;
}
 @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      ;
}
 @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      ;
}
 @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getHostName());
}
 @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getQueryString());
}
 @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getScheme());
}
 @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getUserName());
}
 @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertEquals(1, genericURLFileName0.getPort());
}
 @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(genericURLFileName0.getPassword());
}
 @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertEquals(1, genericURLFileName0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertNotNull(virtualFileSystem0.getRootURI());
}
 @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertTrue(delegateFileObject0.isAttached());
}
 @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      assertTrue(delegateFileObject0.isContentOpen());
}
 @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(1611L);
      FileType fileType0 = FileType.IMAGINARY;
      GenericURLFileName genericURLFileName0 = new GenericURLFileName("", "", 3830, 3830, "=$oPj:P2", "=$oPj:P2", "=$oPj:P2", fileType0, "=$oPj:P2");
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VirtualFileSystem virtualFileSystem0 = new VirtualFileSystem(genericURLFileName0, (FileSystemOptions) null);
      String string0 = genericURLFileName0.getBaseName();
      DelegateFileObject delegateFileObject0 = (DelegateFileObject)virtualFileSystem0.createFile(genericURLFileName0);
      defaultFileMonitor0.addFile(delegateFileObject0);
      int int0 = defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.addFile(delegateFileObject0);
      ;
}
 @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      assertEquals(1, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      ;
}
 @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.start();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.start();
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.start();
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertEquals(0, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      ;
}
 @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      assertEquals(0, defaultFileMonitor0.getChecksPerRun());
}
 @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      assertEquals(1, defaultFileMonitor0.getDelay());
}
 @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.start();
      assertFalse(defaultFileMonitor0.isRecursive());
}
 @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.start();
      long long0 = defaultFileMonitor0.getDelay();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.start();
      long long0 = defaultFileMonitor0.getDelay();
      defaultFileMonitor0.run();
      defaultFileMonitor0.queueAddFile((FileObject) null);
      defaultFileMonitor0.setDelay(1000L);
      defaultFileMonitor0.stop();
      ;
}
 @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.stop();
      defaultFileMonitor0.start();
      long long0 = defaultFileMonitor0.getDelay();
      defaultFileMonitor0.run();
      defaultFileMonitor0.queueAddFile((FileObject) null);
      defaultFileMonitor0.setDelay(1000L);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.setChecksPerRun(1000);
      defaultFileMonitor0.stop();
      defaultFileMonitor0.getChecksPerRun();
      defaultFileMonitor0.getChecksPerRun();
      long long1 = defaultFileMonitor0.getDelay();
      assertEquals(0, long1);
}
 @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      HttpFileSystem httpFileSystem0 = mock(HttpFileSystem.class, new ViolatedAssumptionAnswer());
      DefaultLocalFileProvider defaultLocalFileProvider0 = new DefaultLocalFileProvider();
      // Undeclared exception!
      try { 
        defaultLocalFileProvider0.findLocalFile((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.provider.local.DefaultLocalFileProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      DefaultFileMonitor defaultFileMonitor0 = new DefaultFileMonitor((FileListener) null);
      defaultFileMonitor0.setDelay(0L);
      defaultFileMonitor0.getFileListener();
      defaultFileMonitor0.setRecursive(false);
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      FileSystemOptions fileSystemOptions0 = new FileSystemOptions();
      try { 
        defaultFileSystemManager0.resolveFile("%", fileSystemOptions0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Invalid URI escape sequence \"%\".
         //
         verifyException("org.apache.commons.vfs2.provider.UriParser", e);
      }
  }
}
