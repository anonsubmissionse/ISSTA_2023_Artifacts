/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 04:34:24 GMT 2022
 */

package org.apache.commons.vfs2.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.vfs2.filter.IOCase;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOCase_ESTest extends IOCase_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      iOCase0.checkIndexOf("", 0, "");
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      iOCase0.checkEquals("f`t)Vo", "og5q|z*E'a");
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IOCase.values();
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IOCase.valueOf("SENSITIVE");
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IOCase.valueOf("INSENSITIVE");
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IOCase iOCase0 = IOCase.forName("Insensitive");
      iOCase0.isCaseSensitive();
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      iOCase0.checkStartsWith("XJot20r_~5", "Ts1S");
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      iOCase0.checkIndexOf("lter.i", 1, "");
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      iOCase0.checkEndsWith("{-m}Qd]`S=h$*[s\"", "f`t)Vo");
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      iOCase0.checkCompareTo(";)mFc", ";)mFc");
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      // Undeclared exception!
      try { 
        iOCase0.checkStartsWith((String) null, "k 6jF`$7aDD+lLxsK");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      // Undeclared exception!
      try { 
        iOCase0.checkRegionMatches((String) null, 0, "INSENSITIVE");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      // Undeclared exception!
      iOCase0.checkIndexOf("Om1$u^kbPFciUHv", (-1734307956), "Om1$u^kbPFciUHv");
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      // Undeclared exception!
      try { 
        iOCase0.checkIndexOf((String) null, 0, "TIR@PN[t/1tuvN");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      // Undeclared exception!
      try { 
        iOCase0.checkEndsWith((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.filter.IOCase", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkRegionMatches("D#Ic'lN#V76%", (-23), "");
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      boolean boolean0 = iOCase0.checkRegionMatches("SENSITIVE", 0, "");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      String string0 = iOCase0.getName();
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      int int0 = iOCase0.checkIndexOf("org.apache.commons.vfs2.filter.IOCase", 0, "5VMqth");
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      int int0 = iOCase0.checkIndexOf("", (-2276), "");
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      int int0 = iOCase0.checkIndexOf("I?Mxlm^o3", 10, "I?Mxlm^o3");
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkEndsWith(";&4ZX2HL*=", ";&4ZX2HL*=");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      boolean boolean0 = iOCase0.checkEndsWith("Sensitive", "Sensitive");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkStartsWith("{=N$0i<w", "{=N$0i<w");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkEquals(";&4ZX2HL*=", ";&4ZX2HL*=");
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      // Undeclared exception!
      try { 
        iOCase0.checkEquals("c\"", (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // The strings must not be null
         //
         verifyException("org.apache.commons.vfs2.filter.IOCase", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      boolean boolean0 = iOCase0.checkEquals("zl+~{@\"TXO", "");
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      // Undeclared exception!
      try { 
        iOCase0.checkEquals((String) null, "{=N$0i<w");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // The strings must not be null
         //
         verifyException("org.apache.commons.vfs2.filter.IOCase", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      int int0 = iOCase0.checkCompareTo("SYSTEM", "I?Mxlm^o3");
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      // Undeclared exception!
      try { 
        iOCase0.checkCompareTo("org.apache.commons.vfs2.filter.IOCase", (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // The strings must not be null
         //
         verifyException("org.apache.commons.vfs2.filter.IOCase", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      int int0 = iOCase0.checkCompareTo("", "mh31t@RYscAZC,");
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      // Undeclared exception!
      try { 
        iOCase0.checkCompareTo((String) null, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // The strings must not be null
         //
         verifyException("org.apache.commons.vfs2.filter.IOCase", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOCase.forName("insensitive");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid IOCase name: insensitive
         //
         verifyException("org.apache.commons.vfs2.filter.IOCase", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      boolean boolean0 = iOCase0.isCaseSensitive();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IOCase iOCase0 = IOCase.forName("Sensitive");
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      String string0 = iOCase0.toString();
      ;
}
}
