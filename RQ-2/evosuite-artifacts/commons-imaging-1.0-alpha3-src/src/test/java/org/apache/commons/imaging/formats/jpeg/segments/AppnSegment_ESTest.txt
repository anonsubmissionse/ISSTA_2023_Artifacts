 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AppnSegment appnSegment0 = null;
      try {
        appnSegment0 = new AppnSegment(65479, 65479, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      AppnSegment appnSegment0 = null;
      try {
        appnSegment0 = new AppnSegment((-1241), (-1241), sequenceInputStream0);
        fail("Expecting exception: IOException");
      } catch(Throwable e) {
         //
         // Invalid Segment: insufficient data, invalid length: -1241
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      AppnSegment appnSegment0 = new AppnSegment((-966), 1, byteArrayInputStream0);
      String string0 = appnSegment0.getDescription();
      ;
}
