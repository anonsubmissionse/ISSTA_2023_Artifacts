/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:42:47 GMT 2022
 */

package org.apache.commons.imaging.formats.tiff.write;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.ByteOrder;
import java.util.LinkedList;
import java.util.List;
import org.apache.commons.imaging.common.BinaryOutputStream;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputField;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputItem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffOutputField_ESTest extends TiffOutputField_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      List<FieldType> list0 = FieldType.ASCII_OR_RATIONAL;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfo tagInfo0 = new TagInfo("org.apache.commons.imaging.formats.tiff.write.TiffOutputField", 2142, list0, (-405), tiffDirectoryType0, false);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      TiffOutputField tiffOutputField0 = new TiffOutputField(2142, tagInfo0, fieldTypeLong0, 2142, byteArray0);
      MockFile mockFile0 = new MockFile("The magic number cannot be null");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      BinaryOutputStream binaryOutputStream0 = new BinaryOutputStream(mockPrintStream0);
      tiffOutputField0.writeField(binaryOutputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      List<FieldType> list0 = FieldType.ASCII_OR_RATIONAL;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfo tagInfo0 = new TagInfo("org.apache.commons.imaging.formats.tiff.write.TiffOutputField", 2142, list0, (-405), tiffDirectoryType0, false);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      TiffOutputField tiffOutputField0 = new TiffOutputField(2142, tagInfo0, fieldTypeLong0, 2142, byteArray0);
      MockFile mockFile0 = new MockFile("The magic number cannot be null");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      BinaryOutputStream binaryOutputStream0 = new BinaryOutputStream(mockPrintStream0);
      tiffOutputField0.writeField(binaryOutputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TagInfo tagInfo0 = new TagInfo(" ", 2301, fieldTypeByte0);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffOutputField tiffOutputField0 = TiffOutputField.createOffsetField(tagInfo0, byteOrder0);
      boolean boolean0 = tiffOutputField0.isLocalValue();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TagInfo tagInfo0 = new TagInfo(" ", 2301, fieldTypeByte0);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffOutputField tiffOutputField0 = TiffOutputField.createOffsetField(tagInfo0, byteOrder0);
      boolean boolean0 = tiffOutputField0.isLocalValue();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TagInfo tagInfo0 = new TagInfo(" ", 2301, fieldTypeByte0);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffOutputField tiffOutputField0 = TiffOutputField.createOffsetField(tagInfo0, byteOrder0);
      boolean boolean0 = tiffOutputField0.isLocalValue();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TagInfo tagInfo0 = new TagInfo(" ", 2301, fieldTypeByte0);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffOutputField tiffOutputField0 = TiffOutputField.createOffsetField(tagInfo0, byteOrder0);
      boolean boolean0 = tiffOutputField0.isLocalValue();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 9, fieldTypeByte0, 4, (-1L), byteArray0, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      TiffOutputField tiffOutputField0 = new TiffOutputField(4, tagInfo0, fieldTypeByte0, (byte) (-1), byteArray0);
      tiffOutputField0.isLocalValue();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 9, fieldTypeByte0, 4, (-1L), byteArray0, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      TiffOutputField tiffOutputField0 = new TiffOutputField(4, tagInfo0, fieldTypeByte0, (byte) (-1), byteArray0);
      tiffOutputField0.isLocalValue();
      assertEquals(0, tiffOutputField0.getSortHint());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 9, fieldTypeByte0, 4, (-1L), byteArray0, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      TiffOutputField tiffOutputField0 = new TiffOutputField(4, tagInfo0, fieldTypeByte0, (byte) (-1), byteArray0);
      tiffOutputField0.isLocalValue();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 9, fieldTypeByte0, 4, (-1L), byteArray0, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      TiffOutputField tiffOutputField0 = new TiffOutputField(4, tagInfo0, fieldTypeByte0, (byte) (-1), byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 9, fieldTypeByte0, 4, (-1L), byteArray0, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      TiffOutputField tiffOutputField0 = new TiffOutputField(4, tagInfo0, fieldTypeByte0, (byte) (-1), byteArray0);
      tiffOutputField0.setSortHint(0);
      int int0 = tiffOutputField0.getSortHint();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      List<FieldType> list0 = FieldType.SHORT_OR_LONG_OR_RATIONAL;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfo tagInfo0 = new TagInfo((String) null, (-2130), list0, 1668, tiffDirectoryType0, true);
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-5659), "Ub/IT]g}YCs");
      byte[] byteArray0 = new byte[6];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1085, tagInfo0, fieldTypeLong0, 1643, byteArray0);
      tiffOutputField0.setSortHint((byte)6);
      int int0 = tiffOutputField0.getSortHint();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2025, "");
      TagInfo tagInfo0 = new TagInfo("", 2025, fieldTypeRational0, 1616);
      byte[] byteArray0 = new byte[8];
      TiffOutputField tiffOutputField0 = new TiffOutputField(2025, tagInfo0, fieldTypeRational0, (-1), byteArray0);
      TiffOutputItem tiffOutputItem0 = tiffOutputField0.getSeperateValue();
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2025, "");
      TagInfo tagInfo0 = new TagInfo("", 2025, fieldTypeRational0, 1616);
      byte[] byteArray0 = new byte[8];
      TiffOutputField tiffOutputField0 = new TiffOutputField(2025, tagInfo0, fieldTypeRational0, (-1), byteArray0);
      TiffOutputItem tiffOutputItem0 = tiffOutputField0.getSeperateValue();
      assertNotNull(tiffOutputItem0.getItemDescription());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2025, "");
      TagInfo tagInfo0 = new TagInfo("", 2025, fieldTypeRational0, 1616);
      byte[] byteArray0 = new byte[8];
      TiffOutputField tiffOutputField0 = new TiffOutputField(2025, tagInfo0, fieldTypeRational0, (-1), byteArray0);
      TiffOutputItem tiffOutputItem0 = tiffOutputField0.getSeperateValue();
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2025, "");
      TagInfo tagInfo0 = new TagInfo("", 2025, fieldTypeRational0, 1616);
      byte[] byteArray0 = new byte[8];
      TiffOutputField tiffOutputField0 = new TiffOutputField(2025, tagInfo0, fieldTypeRational0, (-1), byteArray0);
      TiffOutputItem tiffOutputItem0 = tiffOutputField0.getSeperateValue();
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TagInfo tagInfo0 = new TagInfo("[", 3, fieldTypeShort0);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputField tiffOutputField0 = TiffOutputField.createOffsetField(tagInfo0, byteOrder0);
      byte[] byteArray0 = new byte[2];
      tiffOutputField0.bytesEqual(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TagInfo tagInfo0 = new TagInfo("[", 3, fieldTypeShort0);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputField tiffOutputField0 = TiffOutputField.createOffsetField(tagInfo0, byteOrder0);
      byte[] byteArray0 = new byte[2];
      tiffOutputField0.bytesEqual(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TagInfo tagInfo0 = new TagInfo("[", 3, fieldTypeShort0);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputField tiffOutputField0 = TiffOutputField.createOffsetField(tagInfo0, byteOrder0);
      byte[] byteArray0 = new byte[2];
      tiffOutputField0.bytesEqual(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfo tagInfo0 = new TagInfo("org.apache.commons.io.file.Counters$BigIntegerPathCounters", 1592, fieldTypeRational0, 0, tiffDirectoryType0);
      byte[] byteArray0 = new byte[2];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1592, tagInfo0, fieldTypeRational0, (-1), byteArray0);
      MockFile mockFile0 = new MockFile("org.apache.commons.io.file.Counters$BigIntegerPathCounters");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      mockFile0.delete();
      BinaryOutputStream binaryOutputStream0 = new BinaryOutputStream(mockFileOutputStream0, byteOrder0);
      try { 
        tiffOutputField0.writeField(binaryOutputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2005, "fI1?x7,T.0|:$n`&T");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2502), (-2502), fieldTypeShort0, 2005, 2005, byteArray0, byteOrder0, (-2561));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      TiffOutputField tiffOutputField0 = TiffOutputField.createOffsetField(tagInfo0, byteOrder0);
      // Undeclared exception!
      try { 
        tiffOutputField0.setData((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputField", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        TiffOutputField.createOffsetField((TagInfo) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputField", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      TiffOutputField tiffOutputField0 = null;
      try {
        tiffOutputField0 = new TiffOutputField((TagInfo) null, fieldTypeLong0, 408, byteArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputField", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      List<FieldType> list0 = FieldType.SHORT_OR_LONG;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfo tagInfo0 = new TagInfo("", (-2922), list0, 3, tiffDirectoryType0, true);
      TiffOutputField tiffOutputField0 = null;
      try {
        tiffOutputField0 = new TiffOutputField((-2922), tagInfo0, (FieldType) null, (-1292), (byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputField", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TagInfo tagInfo0 = new TagInfo((String) null, 0, (FieldType) null, (-679));
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffOutputField tiffOutputField0 = TiffOutputField.createOffsetField(tagInfo0, byteOrder0);
      tiffOutputField0.toString((String) null);
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TagInfo tagInfo0 = new TagInfo((String) null, 0, (FieldType) null, (-679));
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffOutputField tiffOutputField0 = TiffOutputField.createOffsetField(tagInfo0, byteOrder0);
      tiffOutputField0.toString((String) null);
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TagInfo tagInfo0 = new TagInfo((String) null, 0, (FieldType) null, (-679));
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffOutputField tiffOutputField0 = TiffOutputField.createOffsetField(tagInfo0, byteOrder0);
      tiffOutputField0.toString((String) null);
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfo tagInfo0 = new TagInfo("org.apache.commons.io.filefilter.AndFileFilter", (-896), (FieldType) null, (-896), tiffDirectoryType0);
      byte[] byteArray0 = new byte[8];
      TiffOutputField tiffOutputField0 = new TiffOutputField(tagInfo0, (FieldType) null, (-1), byteArray0);
      BinaryOutputStream binaryOutputStream0 = new BinaryOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        tiffOutputField0.writeField(binaryOutputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-630), (-630), fieldTypeLong0, (-630), (-630), byteArray0, (ByteOrder) null, (-630));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      TiffOutputField tiffOutputField0 = new TiffOutputField((-1), tagInfo0, fieldTypeLong0, (-1), byteArray0);
      tiffOutputField0.toString("Unknown Tag");
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-630), (-630), fieldTypeLong0, (-630), (-630), byteArray0, (ByteOrder) null, (-630));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      TiffOutputField tiffOutputField0 = new TiffOutputField((-1), tagInfo0, fieldTypeLong0, (-1), byteArray0);
      tiffOutputField0.toString("Unknown Tag");
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-630), (-630), fieldTypeLong0, (-630), (-630), byteArray0, (ByteOrder) null, (-630));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      TiffOutputField tiffOutputField0 = new TiffOutputField((-1), tagInfo0, fieldTypeLong0, (-1), byteArray0);
      tiffOutputField0.toString("Unknown Tag");
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      List<FieldType> list0 = FieldType.SHORT_OR_RATIONAL;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfo tagInfo0 = new TagInfo(" ", 6, list0, 6, tiffDirectoryType0);
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffOutputField tiffOutputField0 = new TiffOutputField(6, tagInfo0, fieldTypeRational0, 6, byteArray0);
      tiffOutputField0.setData(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      List<FieldType> list0 = FieldType.SHORT_OR_RATIONAL;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfo tagInfo0 = new TagInfo(" ", 6, list0, 6, tiffDirectoryType0);
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffOutputField tiffOutputField0 = new TiffOutputField(6, tagInfo0, fieldTypeRational0, 6, byteArray0);
      tiffOutputField0.setData(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      List<FieldType> list0 = FieldType.SHORT_OR_RATIONAL;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfo tagInfo0 = new TagInfo(" ", 6, list0, 6, tiffDirectoryType0);
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffOutputField tiffOutputField0 = new TiffOutputField(6, tagInfo0, fieldTypeRational0, 6, byteArray0);
      tiffOutputField0.setData(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      List<FieldType> list0 = FieldType.SHORT_OR_RATIONAL;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfo tagInfo0 = new TagInfo(" ", 6, list0, 6, tiffDirectoryType0);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputField tiffOutputField0 = TiffOutputField.createOffsetField(tagInfo0, byteOrder0);
      try { 
        tiffOutputField0.setData(byteArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Cannot change size of value.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputField", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<FieldType> linkedList0 = new LinkedList<FieldType>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfo tagInfo0 = new TagInfo((String) null, 1064, linkedList0, 1064, tiffDirectoryType0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[19];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1064, tagInfo0, fieldTypeLong0, 1064, byteArray0);
      tiffOutputField0.setData(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<FieldType> linkedList0 = new LinkedList<FieldType>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfo tagInfo0 = new TagInfo((String) null, 1064, linkedList0, 1064, tiffDirectoryType0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[19];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1064, tagInfo0, fieldTypeLong0, 1064, byteArray0);
      tiffOutputField0.setData(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<FieldType> linkedList0 = new LinkedList<FieldType>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfo tagInfo0 = new TagInfo((String) null, 1064, linkedList0, 1064, tiffDirectoryType0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[19];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1064, tagInfo0, fieldTypeLong0, 1064, byteArray0);
      tiffOutputField0.setData(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<FieldType> linkedList0 = new LinkedList<FieldType>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfo tagInfo0 = new TagInfo((String) null, 1064, linkedList0, 1064, tiffDirectoryType0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[19];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1064, tagInfo0, fieldTypeLong0, 1064, byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1064);
      BinaryOutputStream binaryOutputStream0 = new BinaryOutputStream(byteArrayOutputStream0, (ByteOrder) null);
      TiffOutputField tiffOutputField1 = TiffOutputField.createOffsetField(tiffOutputField0.tagInfo, (ByteOrder) null);
      tiffOutputField1.writeField(binaryOutputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<FieldType> linkedList0 = new LinkedList<FieldType>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfo tagInfo0 = new TagInfo((String) null, 1064, linkedList0, 1064, tiffDirectoryType0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[19];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1064, tagInfo0, fieldTypeLong0, 1064, byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1064);
      BinaryOutputStream binaryOutputStream0 = new BinaryOutputStream(byteArrayOutputStream0, (ByteOrder) null);
      TiffOutputField tiffOutputField1 = TiffOutputField.createOffsetField(tiffOutputField0.tagInfo, (ByteOrder) null);
      tiffOutputField1.writeField(binaryOutputStream0);
      assertNotNull(byteArrayOutputStream0.toString());
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedList<FieldType> linkedList0 = new LinkedList<FieldType>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfo tagInfo0 = new TagInfo((String) null, 1064, linkedList0, 1064, tiffDirectoryType0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[19];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1064, tagInfo0, fieldTypeLong0, 1064, byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1064);
      BinaryOutputStream binaryOutputStream0 = new BinaryOutputStream(byteArrayOutputStream0, (ByteOrder) null);
      tiffOutputField0.writeField(binaryOutputStream0);
      assertNotNull(byteArrayOutputStream0.toString());
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      List<FieldType> list0 = FieldType.SHORT_OR_RATIONAL;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfo tagInfo0 = new TagInfo(" ", 6, list0, 6, tiffDirectoryType0);
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffOutputField tiffOutputField0 = new TiffOutputField(6, tagInfo0, fieldTypeRational0, 6, byteArray0);
      TiffOutputItem tiffOutputItem0 = tiffOutputField0.getSeperateValue();
      assertNotNull(tiffOutputItem0);
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      List<FieldType> list0 = FieldType.SHORT_OR_RATIONAL;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfo tagInfo0 = new TagInfo(" ", 6, list0, 6, tiffDirectoryType0);
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffOutputField tiffOutputField0 = new TiffOutputField(6, tagInfo0, fieldTypeRational0, 6, byteArray0);
      TiffOutputItem tiffOutputItem0 = tiffOutputField0.getSeperateValue();
      assertEquals(0, tiffOutputField0.getSortHint());
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      List<FieldType> list0 = FieldType.SHORT_OR_RATIONAL;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfo tagInfo0 = new TagInfo(" ", 6, list0, 6, tiffDirectoryType0);
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffOutputField tiffOutputField0 = new TiffOutputField(6, tagInfo0, fieldTypeRational0, 6, byteArray0);
      TiffOutputItem tiffOutputItem0 = tiffOutputField0.getSeperateValue();
      ;
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      List<FieldType> list0 = FieldType.SHORT_OR_RATIONAL;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfo tagInfo0 = new TagInfo(" ", 6, list0, 6, tiffDirectoryType0);
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffOutputField tiffOutputField0 = new TiffOutputField(6, tagInfo0, fieldTypeRational0, 6, byteArray0);
      TiffOutputItem tiffOutputItem0 = tiffOutputField0.getSeperateValue();
      ;
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-630), (-630), fieldTypeLong0, (-630), (-630), byteArray0, (ByteOrder) null, (-630));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      TiffOutputField tiffOutputField0 = new TiffOutputField((-1), tagInfo0, fieldTypeLong0, (-1), byteArray0);
      tiffOutputField0.bytesEqual(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-630), (-630), fieldTypeLong0, (-630), (-630), byteArray0, (ByteOrder) null, (-630));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      TiffOutputField tiffOutputField0 = new TiffOutputField((-1), tagInfo0, fieldTypeLong0, (-1), byteArray0);
      tiffOutputField0.bytesEqual(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-630), (-630), fieldTypeLong0, (-630), (-630), byteArray0, (ByteOrder) null, (-630));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      TiffOutputField tiffOutputField0 = new TiffOutputField((-1), tagInfo0, fieldTypeLong0, (-1), byteArray0);
      tiffOutputField0.bytesEqual(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LinkedList<FieldType> linkedList0 = new LinkedList<FieldType>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfo tagInfo0 = new TagInfo((String) null, 1064, linkedList0, 1064, tiffDirectoryType0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[19];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1064, tagInfo0, fieldTypeLong0, 1064, byteArray0);
      int int0 = tiffOutputField0.getSortHint();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LinkedList<FieldType> linkedList0 = new LinkedList<FieldType>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfo tagInfo0 = new TagInfo((String) null, 1064, linkedList0, 1064, tiffDirectoryType0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[19];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1064, tagInfo0, fieldTypeLong0, 1064, byteArray0);
      int int0 = tiffOutputField0.getSortHint();
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LinkedList<FieldType> linkedList0 = new LinkedList<FieldType>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfo tagInfo0 = new TagInfo((String) null, 1064, linkedList0, 1064, tiffDirectoryType0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[19];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1064, tagInfo0, fieldTypeLong0, 1064, byteArray0);
      int int0 = tiffOutputField0.getSortHint();
      ;
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LinkedList<FieldType> linkedList0 = new LinkedList<FieldType>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfo tagInfo0 = new TagInfo((String) null, 1064, linkedList0, 1064, tiffDirectoryType0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[19];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1064, tagInfo0, fieldTypeLong0, 1064, byteArray0);
      tiffOutputField0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LinkedList<FieldType> linkedList0 = new LinkedList<FieldType>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfo tagInfo0 = new TagInfo((String) null, 1064, linkedList0, 1064, tiffDirectoryType0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[19];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1064, tagInfo0, fieldTypeLong0, 1064, byteArray0);
      tiffOutputField0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LinkedList<FieldType> linkedList0 = new LinkedList<FieldType>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfo tagInfo0 = new TagInfo((String) null, 1064, linkedList0, 1064, tiffDirectoryType0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[19];
      TiffOutputField tiffOutputField0 = new TiffOutputField(1064, tagInfo0, fieldTypeLong0, 1064, byteArray0);
      tiffOutputField0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "r");
      TagInfo tagInfo0 = new TagInfo("^+", 0, fieldTypeAscii0);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputField tiffOutputField0 = TiffOutputField.createOffsetField(tagInfo0, byteOrder0);
      byte[] byteArray0 = new byte[8];
      try { 
        tiffOutputField0.setData(byteArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Cannot change size of value.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputField", e);
      }
  }
}
