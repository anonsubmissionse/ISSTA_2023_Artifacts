/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:42:47 GMT 2022
 */

package org.apache.commons.imaging;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.PixelDensity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PixelDensity_ESTest extends PixelDensity_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(0.0, 0.0);
      double double0 = pixelDensity0.verticalDensityMetres();
      assertTrue(pixelDensity0.isInMetres());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(0.0, 0.0);
      double double0 = pixelDensity0.verticalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(0.0, 0.0);
      double double0 = pixelDensity0.verticalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(739.2731325087, 739.2731325087);
      double double0 = pixelDensity0.verticalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(739.2731325087, 739.2731325087);
      double double0 = pixelDensity0.verticalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless(16.84797294065, 453.082432003624);
      double double0 = pixelDensity0.verticalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless(16.84797294065, 453.082432003624);
      double double0 = pixelDensity0.verticalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless(16.84797294065, 453.082432003624);
      double double0 = pixelDensity0.verticalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(533.29516, 533.29516);
      double double0 = pixelDensity0.verticalDensityCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(533.29516, 533.29516);
      double double0 = pixelDensity0.verticalDensityCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch(0.0, (-1714.002421521));
      double double0 = pixelDensity0.horizontalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch(0.0, (-1714.002421521));
      double double0 = pixelDensity0.horizontalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless((-2693.532795744246), (-2693.532795744246));
      double double0 = pixelDensity0.horizontalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless((-2693.532795744246), (-2693.532795744246));
      double double0 = pixelDensity0.horizontalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(0.0, 562.48);
      double double0 = pixelDensity0.horizontalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(0.0, 562.48);
      double double0 = pixelDensity0.horizontalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(0.0, 1.0);
      double double0 = pixelDensity0.horizontalDensityCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(0.0, 1.0);
      double double0 = pixelDensity0.horizontalDensityCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      double double0 = pixelDensity0.getRawVerticalDensity();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      double double0 = pixelDensity0.getRawVerticalDensity();
      assertTrue(pixelDensity0.isInCentimetres());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      double double0 = pixelDensity0.getRawVerticalDensity();
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre((-1665.68635695), 1.0);
      double double0 = pixelDensity0.getRawVerticalDensity();
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre((-1665.68635695), 1.0);
      double double0 = pixelDensity0.getRawVerticalDensity();
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre((-1665.68635695), 1.0);
      double double0 = pixelDensity0.getRawVerticalDensity();
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      double double0 = pixelDensity0.getRawHorizontalDensity();
      assertTrue(pixelDensity0.isInCentimetres());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      double double0 = pixelDensity0.getRawHorizontalDensity();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      double double0 = pixelDensity0.getRawHorizontalDensity();
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(533.29516, 533.29516);
      double double0 = pixelDensity0.getRawHorizontalDensity();
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(533.29516, 533.29516);
      double double0 = pixelDensity0.getRawHorizontalDensity();
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless(0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless(0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless(0.0, 0.0);
      assertTrue(pixelDensity0.isUnitless());
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(0.0, 0.0);
      double double0 = pixelDensity0.verticalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(0.0, 0.0);
      double double0 = pixelDensity0.verticalDensityInches();
      assertTrue(pixelDensity0.isInInches());
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(0.0, 0.0);
      double double0 = pixelDensity0.verticalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(0.0, 0.0);
      double double0 = pixelDensity0.verticalDensityInches();
      assertTrue(pixelDensity0.isInMetres());
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(0.0, (-3455.94));
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(0.0, (-3455.94));
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch(0.0, 0.0);
      double double0 = pixelDensity0.verticalDensityCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch(0.0, 0.0);
      double double0 = pixelDensity0.verticalDensityCentimetres();
      assertTrue(pixelDensity0.isInCentimetres());
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch(0.0, 0.0);
      double double0 = pixelDensity0.verticalDensityCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch(0.0, 0.0);
      double double0 = pixelDensity0.verticalDensityCentimetres();
      assertTrue(pixelDensity0.isInInches());
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-133779.52755905513), 10000.0);
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-133779.52755905513), 10000.0);
      ;
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch(9.92370061, (-628.456177760115));
      ;
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch(9.92370061, (-628.456177760115));
      ;
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      boolean boolean0 = pixelDensity0.isInMetres();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      boolean boolean0 = pixelDensity0.isInMetres();
      assertTrue(pixelDensity0.isInCentimetres());
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      boolean boolean0 = pixelDensity0.isInMetres();
      ;
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      boolean boolean0 = pixelDensity0.isInMetres();
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre((-1186.0), (-1186.0));
      boolean boolean0 = pixelDensity0.isInMetres();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre((-1186.0), (-1186.0));
      boolean boolean0 = pixelDensity0.isInMetres();
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre((-1186.0), (-1186.0));
      boolean boolean0 = pixelDensity0.isInMetres();
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(1.0, (-901.839));
      boolean boolean0 = pixelDensity0.isInCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(1.0, (-901.839));
      boolean boolean0 = pixelDensity0.isInCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(1.0, (-901.839));
      boolean boolean0 = pixelDensity0.isInCentimetres();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless(16.84797294065, 453.082432003624);
      boolean boolean0 = pixelDensity0.isInCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless(16.84797294065, 453.082432003624);
      boolean boolean0 = pixelDensity0.isInCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless(16.84797294065, 453.082432003624);
      boolean boolean0 = pixelDensity0.isInCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless(16.84797294065, 453.082432003624);
      boolean boolean0 = pixelDensity0.isInCentimetres();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      boolean boolean0 = pixelDensity0.isInInches();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      boolean boolean0 = pixelDensity0.isInInches();
      ;
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      boolean boolean0 = pixelDensity0.isInInches();
      assertTrue(pixelDensity0.isInCentimetres());
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(0.0, 0.0);
      boolean boolean0 = pixelDensity0.isInInches();
      ;
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch(0.0, (-1714.002421521));
      boolean boolean0 = pixelDensity0.isInInches();
      ;
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch(0.0, (-1714.002421521));
      boolean boolean0 = pixelDensity0.isInInches();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch(0.0, (-1714.002421521));
      boolean boolean0 = pixelDensity0.isInInches();
      ;
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(1756.1788589260354, 1756.1788589260354);
      double double0 = pixelDensity0.horizontalDensityCentimetres();
      assertTrue(pixelDensity0.isInCentimetres());
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(1756.1788589260354, 1756.1788589260354);
      double double0 = pixelDensity0.horizontalDensityCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(1756.1788589260354, 1756.1788589260354);
      double double0 = pixelDensity0.horizontalDensityCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-17.2005701622491), (-17.2005701622491));
      double double0 = pixelDensity0.horizontalDensityCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-17.2005701622491), (-17.2005701622491));
      double double0 = pixelDensity0.horizontalDensityCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(4460.694301672131, 4460.694301672131);
      double double0 = pixelDensity0.horizontalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(4460.694301672131, 4460.694301672131);
      double double0 = pixelDensity0.horizontalDensityMetres();
      assertTrue(pixelDensity0.isInMetres());
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre(4460.694301672131, 4460.694301672131);
      double double0 = pixelDensity0.horizontalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(1756.1788589260354, 1756.1788589260354);
      double double0 = pixelDensity0.horizontalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(1756.1788589260354, 1756.1788589260354);
      double double0 = pixelDensity0.horizontalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-17.2005701622491), (-17.2005701622491));
      double double0 = pixelDensity0.verticalDensityInches();
      assertTrue(pixelDensity0.isInInches());
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-17.2005701622491), (-17.2005701622491));
      double double0 = pixelDensity0.verticalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-17.2005701622491), (-17.2005701622491));
      double double0 = pixelDensity0.verticalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre((-3038.4813238179563), (-3038.4813238179563));
      double double0 = pixelDensity0.verticalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre((-3038.4813238179563), (-3038.4813238179563));
      double double0 = pixelDensity0.verticalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-17.2005701622491), (-17.2005701622491));
      double double0 = pixelDensity0.verticalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-17.2005701622491), (-17.2005701622491));
      double double0 = pixelDensity0.verticalDensityMetres();
      ;
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre((-11.77158225997451), (-11.77158225997451));
      double double0 = pixelDensity0.verticalDensityCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre((-11.77158225997451), (-11.77158225997451));
      double double0 = pixelDensity0.verticalDensityCentimetres();
      assertTrue(pixelDensity0.isInCentimetres());
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre((-11.77158225997451), (-11.77158225997451));
      double double0 = pixelDensity0.verticalDensityCentimetres();
      ;
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-17.2005701622491), (-17.2005701622491));
      double double0 = pixelDensity0.horizontalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-17.2005701622491), (-17.2005701622491));
      double double0 = pixelDensity0.horizontalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-17.2005701622491), (-17.2005701622491));
      double double0 = pixelDensity0.horizontalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(1756.1788589260354, 1756.1788589260354);
      double double0 = pixelDensity0.horizontalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre(1756.1788589260354, 1756.1788589260354);
      double double0 = pixelDensity0.horizontalDensityInches();
      ;
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre((-11.77158225997451), (-11.77158225997451));
      boolean boolean0 = pixelDensity0.isUnitless();
      ;
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre((-11.77158225997451), (-11.77158225997451));
      boolean boolean0 = pixelDensity0.isUnitless();
      ;
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre((-11.77158225997451), (-11.77158225997451));
      boolean boolean0 = pixelDensity0.isUnitless();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless((-17.2005701622491), (-17.2005701622491));
      boolean boolean0 = pixelDensity0.isUnitless();
      ;
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless((-17.2005701622491), (-17.2005701622491));
      boolean boolean0 = pixelDensity0.isUnitless();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createUnitless((-17.2005701622491), (-17.2005701622491));
      boolean boolean0 = pixelDensity0.isUnitless();
      ;
}
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-17.2005701622491), (-17.2005701622491));
      double double0 = pixelDensity0.getRawHorizontalDensity();
      ;
}
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-17.2005701622491), (-17.2005701622491));
      double double0 = pixelDensity0.getRawHorizontalDensity();
      ;
}
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch((-17.2005701622491), (-17.2005701622491));
      double double0 = pixelDensity0.getRawHorizontalDensity();
      ;
}
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre((-11.77158225997451), (-11.77158225997451));
      double double0 = pixelDensity0.getRawVerticalDensity();
      ;
}
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre((-11.77158225997451), (-11.77158225997451));
      double double0 = pixelDensity0.getRawVerticalDensity();
      ;
}
}
