 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 1923, fieldTypeRational0, 0L, (-5272L), byteArray0, byteOrder0, 8);
      Object object0 = fieldTypeRational0.getValue(tiffField0);
      assertNotNull(object0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2121610351, 2121610351, fieldTypeRational0, 2121610351, 2884L, (byte[]) null, byteOrder0, (-705));
      // Undeclared exception!
      try { 
        fieldTypeRational0.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2145508042, 0, fieldTypeRational0, 2145508042, 2145508042, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        fieldTypeRational0.SRATIONAL.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2020), 1022, fieldTypeRational0, 1L, 4L, byteArray0, byteOrder0, (byte) (-103));
      // Undeclared exception!
      try { 
        fieldTypeRational0.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3093, 3093, fieldTypeRational0.BYTE, 3093, 1L, (byte[]) null, byteOrder0, 3093);
      // Undeclared exception!
      try { 
        fieldTypeRational0.getValue(tiffField0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1036, (-653), fieldTypeRational0, (-104L), 376L, byteArray0, byteOrder0, (-823));
      // Undeclared exception!
      try { 
        fieldTypeRational0.getValue(tiffField0);
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1485, 1485, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)8);
      // Undeclared exception!
      try { 
        fieldTypeRational0.RATIONAL.getValue(tiffField0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1634, "GD5'BMLI");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(142, 1634, fieldTypeRational0, 2085L, 2085L, byteArray0, byteOrder0, 6);
      Object object0 = fieldTypeRational0.getValue(tiffField0);
      assertNotNull(object0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-16.3023));
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = fieldTypeRational0.writeData(rationalNumber0, byteOrder0);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      Short short0 = new Short((short)1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = fieldTypeRational0.writeData(short0, byteOrder0);
      TiffField tiffField0 = new TiffField((byte) (-88), (byte) (-88), fieldTypeRational0, (short)1, (short)1, byteArray0, byteOrder0, (short)1);
      try { 
        fieldTypeRational0.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Invalid data: -88 (0xffffffa8: Unknown Tag): org.apache.commons.imaging.common.RationalNumber@0000000006 (1 Rational) (org.apache.commons.imaging.formats.tiff.TiffField)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField('8', 7, fieldTypeRational0, 7, 7, byteArray0, byteOrder0, '8');
      Object object0 = fieldTypeRational0.getValue(tiffField0);
      byte[] byteArray1 = fieldTypeRational0.writeData(object0, byteOrder0);
      ;
}
