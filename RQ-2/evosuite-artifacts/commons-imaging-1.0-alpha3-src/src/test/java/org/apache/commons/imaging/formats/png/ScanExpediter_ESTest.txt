 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR_WITH_ALPHA;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-994));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(0, (-2059), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 1, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      try { 
        scanExpediterInterlaced0.getNextScanline(pushbackInputStream0, 292, byteArray0, 102);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // PNG: missing image data count: -1 read: 4 length: 292
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), (-6), byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-994));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterSimple scanExpediterSimple0 = new ScanExpediterSimple((-2059), 15, byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte)0, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      try { 
        scanExpediterSimple0.drive();
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // PNG: unknown filterType: 5
         //
         verifyException("org.apache.commons.imaging.formats.png.ScanExpediter", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR_WITH_ALPHA;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-994));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterSimple scanExpediterSimple0 = new ScanExpediterSimple(24, (byte)20, byteArrayInputStream0, (BufferedImage) null, pngColorType0, 1, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      // Undeclared exception!
      try { 
        scanExpediterSimple0.getNextScanline((InputStream) null, 1257, byteArray0, 1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.ScanExpediter", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-994));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(0, (-2059), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 1, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      FilterType filterType0 = FilterType.SUB;
      ScanlineFilter scanlineFilter0 = scanExpediterInterlaced0.getScanlineFilter(filterType0, (byte)120);
      assertNotNull(scanlineFilter0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)20;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, 0, 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (byte)0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)0, 8);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(1, (-2059), byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte)20, 5, pngChunkPlte0, gammaCorrection0, (TransparencyFilter) null);
      int int0 = scanExpediterInterlaced0.getRGB(bitParser0, (byte)0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)120;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, 0, 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (byte)0);
      ScanExpediterSimple scanExpediterSimple0 = new ScanExpediterSimple((byte)20, 356, byteArrayInputStream0, (BufferedImage) null, pngColorType0, 8, 1, pngChunkPlte0, gammaCorrection0, (TransparencyFilter) null);
      // Undeclared exception!
      try { 
        scanExpediterSimple0.drive();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.ScanExpediterSimple", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, 0, 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (byte)0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)0, 1);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(1, (-2059), byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte)20, 5, pngChunkPlte0, gammaCorrection0, (TransparencyFilter) null);
      int int0 = scanExpediterInterlaced0.getRGB(bitParser0, 1);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-994));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(0, (-2059), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 1, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)0, (-27));
      try { 
        scanExpediterInterlaced0.getRGB(bitParser0, 5);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // TransparencyFilterIndexedColor index: -1, bytes.length: 5
         //
         verifyException("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterIndexedColor", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, 0, 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (byte)0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)0, 1);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(1, (-2059), byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte)20, 5, pngChunkPlte0, gammaCorrection0, (TransparencyFilter) null);
      int int0 = scanExpediterInterlaced0.getRGB(bitParser0, 102);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (byte) (-13), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte) (-13), (-12));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced((-12), (-12), byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte) (-13), (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      scanExpediterInterlaced0.drive();
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.INDEXED_COLOR;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-994));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(0, (-2059), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 1, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)0, 1);
      try { 
        scanExpediterInterlaced0.getRGB(bitParser0, (-472));
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // PNG: unknown Palette reference: 0
         //
         verifyException("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, 3, 8, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR;
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)120, (-597.239230199));
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(2026, (-543), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 0, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      FilterType filterType0 = FilterType.AVERAGE;
      byte[] byteArray1 = scanExpediterInterlaced0.getNextScanline(byteArrayInputStream0, 0, byteArray0, 3796);
      byte[] byteArray2 = scanExpediterInterlaced0.unfilterScanline(filterType0, byteArray1, byteArray0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)120, (-597.239230199));
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR_WITH_ALPHA;
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced((byte)0, (byte)120, byteArrayInputStream0, (BufferedImage) null, pngColorType0, 2026, 8, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      int int0 = scanExpediterInterlaced0.getPixelRGB(2026, 1357, 20);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, 3, 8, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)120, 0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(2026, (byte)0, byteArrayInputStream0, (BufferedImage) null, pngColorType0, 0, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      int int0 = scanExpediterInterlaced0.getPixelARGB(0, 0, 0, (byte)0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE_WITH_ALPHA;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 0, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced((byte)20, 0, byteArrayInputStream0, (BufferedImage) null, pngColorType0, 7, 104, pngChunkPlte0, (GammaCorrection) null, transparencyFilterIndexedColor0);
      int int0 = scanExpediterInterlaced0.getPixelARGB((byte)0, 0, (byte)20, (-1));
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-994));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterSimple scanExpediterSimple0 = new ScanExpediterSimple(24, (byte)20, byteArrayInputStream0, (BufferedImage) null, pngColorType0, 1, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      int int0 = scanExpediterSimple0.getPixelARGB((-1065), 1257, (byte)0, 24);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, 3, 8, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR;
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)120, (-597.239230199));
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(8, (-543), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 0, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      byte[] byteArray1 = scanExpediterInterlaced0.getNextScanline(byteArrayInputStream0, 4, byteArray0, 3796);
      assertEquals(0, byteArrayInputStream0.available());
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, 3, 8, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR;
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)120, (-597.239230199));
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(8, (-543), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 0, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      byte[] byteArray1 = scanExpediterInterlaced0.getNextScanline(byteArrayInputStream0, 4, byteArray0, 3796);
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-994));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(0, (-2059), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 1, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      int int0 = scanExpediterInterlaced0.getBitsToBytesRoundingUp((byte)0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-994));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterSimple scanExpediterSimple0 = new ScanExpediterSimple((byte)0, (-2059), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 0, 5, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      int int0 = scanExpediterSimple0.getBitsToBytesRoundingUp((byte)20);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR_WITH_ALPHA;
      GammaCorrection gammaCorrection0 = new GammaCorrection(8, (-2966.36563042));
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced((byte)0, (byte)120, byteArrayInputStream0, (BufferedImage) null, pngColorType0, (-543), (-3801), pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      int int0 = scanExpediterInterlaced0.getBitsToBytesRoundingUp((-2632));
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR_WITH_ALPHA;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-994));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(0, (-2059), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 1, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      FilterType filterType0 = FilterType.UP;
      // Undeclared exception!
      try { 
        scanExpediterInterlaced0.unfilterScanline(filterType0, (byte[]) null, byteArray0, (byte)20);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.ScanExpediter", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, 3, 8, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR;
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)120, (-597.239230199));
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(2026, (-543), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 0, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      FilterType filterType0 = FilterType.AVERAGE;
      // Undeclared exception!
      try { 
        scanExpediterInterlaced0.unfilterScanline(filterType0, byteArray0, byteArray0, (-1441));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1441
         //
         verifyException("org.apache.commons.imaging.formats.png.scanlinefilters.ScanlineFilterAverage", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, 3, 8, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)120, (-597.239230199));
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(2026, (byte)0, byteArrayInputStream0, (BufferedImage) null, pngColorType0, 0, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      // Undeclared exception!
      try { 
        scanExpediterInterlaced0.getScanlineFilter((FilterType) null, (-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.ScanExpediter", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR;
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)120, (-597.239230199));
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(2026, (-543), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 0, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      // Undeclared exception!
      try { 
        scanExpediterInterlaced0.getRGB((BitParser) null, 4);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.ScanExpediter", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)22, (-994));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(0, (-2059), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 1, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)0, (-27));
      // Undeclared exception!
      try { 
        scanExpediterInterlaced0.getRGB(bitParser0, 5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4
         //
         verifyException("org.apache.commons.imaging.formats.png.BitParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (byte)20, 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (byte)20);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterSimple scanExpediterSimple0 = new ScanExpediterSimple(24, (byte)20, byteArrayInputStream0, (BufferedImage) null, pngColorType0, 0, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)20, 0);
      // Undeclared exception!
      try { 
        scanExpediterSimple0.getRGB(bitParser0, (byte)0);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.formats.png.BitParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)20;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE_WITH_ALPHA;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 25, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-994));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(25, 25, byteArrayInputStream0, (BufferedImage) null, pngColorType0, 1, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      try { 
        scanExpediterInterlaced0.drive();
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // PNG: unknown filterType: 20
         //
         verifyException("org.apache.commons.imaging.formats.png.ScanExpediter", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR_WITH_ALPHA;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-992), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-992));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(31, 31, byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte)0, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      // Undeclared exception!
      try { 
        scanExpediterInterlaced0.drive();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.png.BitParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR_WITH_ALPHA;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-992), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-992));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(13, 13, byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte)20, (byte)20, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      try { 
        scanExpediterInterlaced0.drive();
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // PNG: missing image data count: -1 read: 4 length: 5
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)20;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE_WITH_ALPHA;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (byte)0, 0, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (byte)20);
      byteArrayInputStream0.read();
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(0, 0, byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte)0, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      try { 
        scanExpediterInterlaced0.getNextScanline(byteArrayInputStream0, (byte)20, byteArray0, 10);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // PNG: unknown filterType: 20
         //
         verifyException("org.apache.commons.imaging.formats.png.ScanExpediter", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (byte)0, 0, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte) (-105), 0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced((byte)0, (byte)0, byteArrayInputStream0, (BufferedImage) null, pngColorType0, 0, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      FilterType filterType0 = FilterType.PAETH;
      ScanlineFilter scanlineFilter0 = scanExpediterInterlaced0.getScanlineFilter(filterType0, (byte) (-105));
      assertNotNull(scanlineFilter0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, 0, 0, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (byte)0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced((byte)0, 0, byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte)20, 0, pngChunkPlte0, gammaCorrection0, (TransparencyFilter) null);
      FilterType filterType0 = FilterType.UP;
      byte[] byteArray1 = scanExpediterInterlaced0.unfilterScanline(filterType0, byteArray0, byteArray0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR_WITH_ALPHA;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (byte)20, (byte)0, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (byte)20);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterSimple scanExpediterSimple0 = new ScanExpediterSimple((-2090), 47, byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte)1, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      try { 
        scanExpediterSimple0.drive();
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // PNG: missing filter type
         //
         verifyException("org.apache.commons.imaging.formats.png.ScanExpediter", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR_WITH_ALPHA;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (byte)0, 10, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)0, 1);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced((byte)20, 0, byteArrayInputStream0, (BufferedImage) null, pngColorType0, 7, 104, pngChunkPlte0, (GammaCorrection) null, transparencyFilterIndexedColor0);
      int int0 = scanExpediterInterlaced0.getRGB(bitParser0, (byte)20);
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE_WITH_ALPHA;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (byte)0, 0, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (byte)20);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(0, 0, byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte)0, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)0, 1);
      int int0 = scanExpediterInterlaced0.getRGB(bitParser0, 1);
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, 0, (byte)20, byteArray0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)0, 2);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced((byte)20, 0, byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte)20, 5, pngChunkPlte0, (GammaCorrection) null, (TransparencyFilter) null);
      int int0 = scanExpediterInterlaced0.getRGB(bitParser0, (byte)0);
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (byte) (-13), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte) (-13), (-12));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced((-12), (-12), byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte) (-13), (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)0, 8);
      try { 
        scanExpediterInterlaced0.getRGB(bitParser0, (byte)0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // TransparencyFilterIndexedColor index: -1, bytes.length: 5
         //
         verifyException("org.apache.commons.imaging.formats.png.transparencyfilters.TransparencyFilterIndexedColor", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)0, (-27));
      ScanExpediterSimple scanExpediterSimple0 = new ScanExpediterSimple((-3271), 8, byteArrayInputStream0, (BufferedImage) null, pngColorType0, 4, 1, pngChunkPlte0, (GammaCorrection) null, transparencyFilterIndexedColor0);
      int int0 = scanExpediterSimple0.getRGB(bitParser0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR_WITH_ALPHA;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (-994), 8, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection((byte)20, (-994));
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(0, (-2059), byteArrayInputStream0, (BufferedImage) null, pngColorType0, 1, (byte)0, pngChunkPlte0, gammaCorrection0, transparencyFilterIndexedColor0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)0, 1);
      int int0 = scanExpediterInterlaced0.getRGB(bitParser0, 5);
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PngColorType pngColorType0 = PngColorType.GREYSCALE_WITH_ALPHA;
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte((byte)0, (byte)0, 14, byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      BitParser bitParser0 = new BitParser(byteArray0, (byte)0, 1);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced((byte)20, 0, byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte)0, (byte)0, pngChunkPlte0, (GammaCorrection) null, transparencyFilterIndexedColor0);
      int int0 = scanExpediterInterlaced0.getRGB(bitParser0, (byte)20);
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TransparencyFilterIndexedColor transparencyFilterIndexedColor0 = new TransparencyFilterIndexedColor(byteArray0);
      PngColorType pngColorType0 = PngColorType.INDEXED_COLOR;
      GammaCorrection gammaCorrection0 = new GammaCorrection(0, 0);
      ScanExpediterInterlaced scanExpediterInterlaced0 = new ScanExpediterInterlaced(0, 95, byteArrayInputStream0, (BufferedImage) null, pngColorType0, (byte)0, 95, (PngChunkPlte) null, gammaCorrection0, transparencyFilterIndexedColor0);
      BitParser bitParser0 = new BitParser(byteArray0, 0, (byte)95);
      try { 
        scanExpediterInterlaced0.getRGB(bitParser0, (byte)95);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // A PLTE chunk is required for an indexed color type.
         //
         verifyException("org.apache.commons.imaging.formats.png.ScanExpediter", e);
      }
  }
