 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      XbmImagingParameters xbmImagingParameters0 = xbmImageParser0.getDefaultParameters();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(1299, 1299, false);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      // Undeclared exception!
      xbmImageParser0.writeImage(bufferedImage0, (OutputStream) byteArrayOutputStream0, xbmImagingParameters0);
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockPrintStream mockPrintStream0 = new MockPrintStream("j?xgt<R.0vg");
      Random.setNextRandom(1010);
      XbmImagingParameters xbmImagingParameters0 = new XbmImagingParameters();
      // Undeclared exception!
      try { 
        xbmImageParser0.writeImage((BufferedImage) null, (OutputStream) mockPrintStream0, xbmImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      String[] stringArray0 = xbmImageParser0.getAcceptedExtensions();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("TQ?qft5pK", byteArray0);
      XbmImagingParameters xbmImagingParameters0 = xbmImageParser0.getDefaultParameters();
      try { 
        xbmImageParser0.getImageSize((ByteSource) byteSourceArray0, xbmImagingParameters0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      XbmImagingParameters xbmImagingParameters0 = new XbmImagingParameters();
      // Undeclared exception!
      try { 
        xbmImageParser0.getImageSize((ByteSource) null, xbmImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockFile mockFile0 = new MockFile("org.apache.commons.imaging.ImageInfo", "Bv|oK/S}(pqf<>G)/n`");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      XbmImagingParameters xbmImagingParameters0 = new XbmImagingParameters();
      try { 
        xbmImageParser0.getImageSize((ByteSource) byteSourceFile0, xbmImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      XbmImagingParameters xbmImagingParameters0 = xbmImageParser0.getDefaultParameters();
      try { 
        xbmImageParser0.getImageInfo((ByteSource) byteSourceArray0, xbmImagingParameters0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      XbmImagingParameters xbmImagingParameters0 = new XbmImagingParameters();
      // Undeclared exception!
      try { 
        xbmImageParser0.getImageInfo((ByteSource) null, xbmImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "NM#*m?? Cy");
      XbmImagingParameters xbmImagingParameters0 = new XbmImagingParameters();
      try { 
        xbmImageParser0.getImageInfo((ByteSource) byteSourceInputStream0, xbmImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockFile mockFile0 = new MockFile((File) null, "Ci/E==ko[-nY");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      XbmImagingParameters xbmImagingParameters0 = new XbmImagingParameters();
      try { 
        xbmImageParser0.getImageInfo((ByteSource) byteSourceFile0, xbmImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("R>P", byteArray0);
      XbmImagingParameters xbmImagingParameters0 = xbmImageParser0.getDefaultParameters();
      try { 
        xbmImageParser0.getBufferedImage((ByteSource) byteSourceArray0, xbmImagingParameters0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream(2228);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pipedInputStream0, (String) null);
      XbmImagingParameters xbmImagingParameters0 = new XbmImagingParameters();
      try { 
        xbmImageParser0.getBufferedImage((ByteSource) byteSourceInputStream0, xbmImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockFile mockFile0 = new MockFile("~im]rt3S=v3!Z0");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      XbmImagingParameters xbmImagingParameters0 = xbmImageParser0.getDefaultParameters();
      try { 
        xbmImageParser0.getBufferedImage((ByteSource) byteSourceFile0, xbmImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockPrintStream mockPrintStream0 = new MockPrintStream("9p,H(md)X,2J");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      // Undeclared exception!
      try { 
        xbmImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("_bits[] = {");
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "");
      try { 
        xbmImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceInputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockFile mockFile0 = new MockFile("<s?UH:7w'E-vRK,*?", "<s?UH:7w'E-vRK,*?");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      MockFile mockFile1 = new MockFile(mockFile0, "colorSpace.red.z");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile1);
      try { 
        xbmImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      XbmImagingParameters xbmImagingParameters0 = xbmImageParser0.getDefaultParameters();
      File file0 = MockFile.createTempFile("XbmHeader", "3RKrREL^,x");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(file0);
      byte[] byteArray0 = xbmImageParser0.getICCProfileBytes((ByteSource) byteSourceFile0, xbmImagingParameters0);
      assertNotNull(byteArray0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      XbmImagingParameters xbmImagingParameters0 = xbmImageParser0.getDefaultParameters();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage((byte)16, (byte)16, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      xbmImageParser0.writeImage(bufferedImage0, (OutputStream) byteArrayOutputStream0, xbmImagingParameters0);
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      XbmImagingParameters xbmImagingParameters0 = xbmImageParser0.getDefaultParameters();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage((byte)16, (byte)16, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      xbmImageParser0.writeImage(bufferedImage0, (OutputStream) byteArrayOutputStream0, xbmImagingParameters0);
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      XbmImagingParameters xbmImagingParameters0 = xbmImageParser0.getDefaultParameters();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(8, 562, true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        xbmImageParser0.writeImage(bufferedImage0, (OutputStream) pipedOutputStream0, xbmImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      ImageFormat[] imageFormatArray0 = xbmImageParser0.getAcceptedTypes();
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      byte[] byteArray0 = new byte[7];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("X BitMap", byteArray0);
      XbmImagingParameters xbmImagingParameters0 = xbmImageParser0.getDefaultParameters();
      ImageMetadata imageMetadata0 = xbmImageParser0.getMetadata((ByteSource) byteSourceArray0, xbmImagingParameters0);
      assertNotNull(imageMetadata0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "");
      XbmImagingParameters xbmImagingParameters0 = new XbmImagingParameters();
      try { 
        xbmImageParser0.getImageSize((ByteSource) byteSourceInputStream0, xbmImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      String string0 = xbmImageParser0.getName();
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockFile mockFile0 = new MockFile("<s?UH:7w'E-vRK,*?", "<s?UH:7w'E-vRK,*?");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        xbmImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceFile0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      String string0 = xbmImageParser0.getDefaultExtension();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      XbmImagingParameters xbmImagingParameters0 = new XbmImagingParameters();
      // Undeclared exception!
      try { 
        xbmImageParser0.getBufferedImage((ByteSource) null, xbmImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      XbmImagingParameters xbmImagingParameters0 = xbmImageParser0.getDefaultParameters();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2034), (byte)16);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, (String) null);
      // Undeclared exception!
      try { 
        xbmImageParser0.getImageInfo((ByteSource) byteSourceInputStream0, xbmImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
