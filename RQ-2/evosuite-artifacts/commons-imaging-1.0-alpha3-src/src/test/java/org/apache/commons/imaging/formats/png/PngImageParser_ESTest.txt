 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = PngImageParser.getChunkTypeName((-2224));
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      ImageFormat[] imageFormatArray0 = pngImageParser0.getAcceptedTypes();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      String[] stringArray0 = pngImageParser0.getAcceptedExtensions();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      // Undeclared exception!
      try { 
        pngImageParser0.readSignature((InputStream) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-12), 148642304);
      // Undeclared exception!
      try { 
        pngImageParser0.readSignature(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream(16);
      try { 
        pngImageParser0.readSignature(pipedInputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((byte[]) null);
      ChunkType chunkType0 = ChunkType.IHDR;
      // Undeclared exception!
      try { 
        pngImageParser0.hasChunkType(byteSourceArray0, chunkType0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-119), (byte)22);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "tvGk&F k:;3t0g");
      ChunkType chunkType0 = ChunkType.sPLT;
      // Undeclared exception!
      try { 
        pngImageParser0.hasChunkType(byteSourceInputStream0, chunkType0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      URI uRI0 = MockURI.aFileURI;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "YCC");
      MockFile mockFile0 = new MockFile(uRI0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      ChunkType chunkType0 = ChunkType.IEND;
      try { 
        pngImageParser0.hasChunkType(byteSourceFile0, chunkType0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      ChunkType chunkType0 = ChunkType.IEND;
      try { 
        pngImageParser0.hasChunkType(byteSourceFile0, chunkType0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      XmpImagingParameters xmpImagingParameters0 = new XmpImagingParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getXmpXml((ByteSource) null, xmpImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.PngImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "TransparencyFilterIndexedColor index: ");
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getXmpXml(byteSourceInputStream0, pngImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1953), 103);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(bufferedInputStream0, "");
      XmpImagingParameters xmpImagingParameters0 = new XmpImagingParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getXmpXml(byteSourceInputStream0, xmpImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(mockFileInputStream0, "Parsing XBM file failed, no '[' token");
      XmpImagingParameters xmpImagingParameters0 = new XmpImagingParameters();
      try { 
        pngImageParser0.getXmpXml(byteSourceInputStream0, xmpImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      MockFile mockFile0 = new MockFile("~", "\u00FF\u00FF\u00F7P");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      try { 
        pngImageParser0.getXmpXml(byteSourceFile0, pngImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[6];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      try { 
        pngImageParser0.getMetadata((ByteSource) byteSourceArray0, pngImagingParameters0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Not a Valid PNG Segment: Incorrect Signature
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getMetadata((ByteSource) null, pngImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.PngImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "");
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getMetadata((ByteSource) byteSourceInputStream0, pngImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-105), (byte)6);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "Sbum\",j>.f L_f;|Vs");
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getMetadata((ByteSource) byteSourceInputStream0, pngImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      MockFile mockFile0 = new MockFile("Png-Custom", "r#_ER>Z");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        pngImageParser0.getMetadata((ByteSource) byteSourceFile0, pngImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("p|M", byteArray0);
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      try { 
        pngImageParser0.getImageSize((ByteSource) byteSourceArray0, pngImagingParameters0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Not a Valid PNG Segment: Incorrect Signature
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getImageSize((ByteSource) null, pngImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.PngImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "BD|N@4G&$2^\"1R!");
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getImageSize((ByteSource) byteSourceInputStream0, pngImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2010), 33);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "qx>L^3bDL");
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getImageSize((ByteSource) byteSourceInputStream0, pngImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pushbackInputStream0, "\u0000\u0000\u0000\u0000");
      try { 
        pngImageParser0.getImageSize((ByteSource) byteSourceInputStream0, (PngImagingParameters) null);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockFile mockFile0 = new MockFile("^-.yTw02I<@SC*$r");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      PngImageParser pngImageParser0 = new PngImageParser();
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      try { 
        pngImageParser0.getImageSize((ByteSource) byteSourceFile0, pngImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[5];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("IJVOPT]1F+GsD}HK>", byteArray0);
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      try { 
        pngImageParser0.getImageInfo((ByteSource) byteSourceArray0, pngImagingParameters0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Not a Valid PNG Segment: Incorrect Signature
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getImageInfo((ByteSource) null, pngImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.PngImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "");
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getImageInfo((ByteSource) byteSourceInputStream0, pngImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      try { 
        pngImageParser0.getImageInfo((ByteSource) byteSourceFile0, pngImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[7];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      try { 
        pngImageParser0.getICCProfileBytes((ByteSource) byteSourceArray0, pngImagingParameters0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Not a Valid PNG Segment: Incorrect Signature
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getICCProfileBytes((ByteSource) null, pngImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.PngImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-6), (byte)126);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 108297232);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pushbackInputStream0, "fileFilters");
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getICCProfileBytes((ByteSource) byteSourceInputStream0, pngImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 4);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(bufferedInputStream0, "=LJz ");
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      try { 
        pngImageParser0.getICCProfileBytes((ByteSource) byteSourceInputStream0, pngImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      File file0 = MockFile.createTempFile("\u00FF\u00FF\u00FCL", "Could not read block (block start: ");
      MockFile mockFile0 = new MockFile(file0, "Could not read block (block start: ");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        pngImageParser0.getICCProfileBytes((ByteSource) byteSourceFile0, (PngImagingParameters) null);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      // Undeclared exception!
      try { 
        pngImageParser0.getChunkTypes((InputStream) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-587202339), 687);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      // Undeclared exception!
      try { 
        pngImageParser0.getChunkTypes(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      try { 
        pngImageParser0.getBufferedImage((ByteSource) byteSourceArray0, pngImagingParameters0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((byte[]) null);
      // Undeclared exception!
      try { 
        pngImageParser0.getBufferedImage((ByteSource) byteSourceArray0, (PngImagingParameters) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "t1Y^iQr>f");
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getBufferedImage((ByteSource) byteSourceInputStream0, pngImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-856), (byte)56);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "JUr]~&");
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getBufferedImage((ByteSource) byteSourceInputStream0, pngImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(mockFileInputStream0, "");
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      try { 
        pngImageParser0.getBufferedImage((ByteSource) byteSourceInputStream0, pngImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      MockFile mockFile0 = new MockFile("U`w7B", "U`w7B");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      try { 
        pngImageParser0.getBufferedImage((ByteSource) byteSourceFile0, pngImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[7];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("<6e=zHo])Oa[#", byteArray0);
      try { 
        pngImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Not a Valid PNG Segment: Incorrect Signature
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(698);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0, 43);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, true);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("iCCP.", (byte[]) null);
      // Undeclared exception!
      try { 
        pngImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      StringWriter stringWriter0 = new StringWriter(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "1M");
      // Undeclared exception!
      try { 
        pngImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceInputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("JUr]~&");
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-856), (byte)56);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "JUr]~&");
      // Undeclared exception!
      try { 
        pngImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      MockFileWriter mockFileWriter0 = new MockFileWriter("?8Tuk}hPda+gPFIY");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, true);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "\"Z!\"D)s)[)}bal=x/>");
      try { 
        pngImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceInputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      MockFile mockFile0 = new MockFile("", "");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        pngImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[9];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream((long) (byte)0);
      try { 
        pngImageParser0.readSignature(inputStream0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Not a Valid PNG Segment: Incorrect Signature
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[8];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("D", byteArray0);
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      try { 
        pngImageParser0.getXmpXml(byteSourceArray0, pngImagingParameters0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Not a Valid PNG Segment: Incorrect Signature
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte) (-27);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(inputStream0);
      try { 
        pngImageParser0.getChunkTypes(dataInputStream0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Invalid PNG chunk length: -452984832
         //
         verifyException("org.apache.commons.imaging.formats.png.PngImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[14];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      try { 
        pngImageParser0.getChunkTypes(inputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Not a Valid PNG File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      URI uRI0 = MockURI.aFileURI;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "YCC");
      MockFile mockFile0 = new MockFile(uRI0);
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      ChunkType chunkType0 = ChunkType.IEND;
      try { 
        pngImageParser0.hasChunkType(byteSourceFile0, chunkType0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Not a Valid PNG Segment: Incorrect Signature
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(mockFileInputStream0, "AW2p0LA- 4O");
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      try { 
        pngImageParser0.getImageInfo((ByteSource) byteSourceInputStream0, pngImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      String string0 = pngImageParser0.getDefaultExtension();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      MockPrintStream mockPrintStream0 = new MockPrintStream("png");
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.writeImage((BufferedImage) null, (OutputStream) mockPrintStream0, pngImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.PngWriter", e);
      }
  }
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      String string0 = pngImageParser0.getName();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(bufferedInputStream0, "\u0000\u0000\u0000\b");
      try { 
        pngImageParser0.getMetadata((ByteSource) byteSourceInputStream0, pngImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }
