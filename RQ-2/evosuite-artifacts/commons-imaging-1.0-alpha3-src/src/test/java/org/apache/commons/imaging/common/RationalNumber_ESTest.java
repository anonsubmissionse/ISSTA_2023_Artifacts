/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:23:24 GMT 2022
 */

package org.apache.commons.imaging.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.common.RationalNumber;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RationalNumber_ESTest extends RationalNumber_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-2.1474836676485972E9));
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-2.1474836676485972E9));
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(4294967295L);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(4294967295L);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-1784), (-1784), true);
      String string0 = rationalNumber0.toDisplayString();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-1784), (-1784), true);
      String string0 = rationalNumber0.toDisplayString();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-1784), (-1784), true);
      String string0 = rationalNumber0.toDisplayString();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-1784), (-1784), true);
      String string0 = rationalNumber0.toDisplayString();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(561L, 221L);
      String string0 = rationalNumber0.toDisplayString();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(561L, 221L);
      String string0 = rationalNumber0.toDisplayString();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(1347.1208186);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      String string0 = rationalNumber1.toString();
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(1347.1208186);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      String string0 = rationalNumber1.toString();
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-2302L), 620L);
      String string0 = rationalNumber0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-2302L), 620L);
      String string0 = rationalNumber0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(4294963308L, 1L);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(4294963308L, 1L);
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(4294963308L, 1L);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(0L, 4294967295L);
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(0L, 4294967295L);
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(0L, 4294967295L);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-2147483648L), 4294967295L);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-2147483648L), 4294967295L);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(4294967295L, (-4397877L));
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(4294967295L, (-4397877L));
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(4294967295L, (-4397877L));
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(8976L, (-2147483648L));
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(8976L, (-2147483648L));
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(8976L, (-2147483648L));
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(2147483647L, 2147483647L);
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(2147483647L, 2147483647L);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(2147483647L, 2147483647L);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-543), 2357, false);
      long long0 = rationalNumber0.longValue();
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-543), 2357, false);
      long long0 = rationalNumber0.longValue();
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-2302L), 620L);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      long long0 = rationalNumber1.longValue();
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-2302L), 620L);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      long long0 = rationalNumber1.longValue();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-2302L), 620L);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      long long0 = rationalNumber1.longValue();
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-2302L), 620L);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      long long0 = rationalNumber1.longValue();
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-2302L), 620L);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      long long0 = rationalNumber1.longValue();
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(0.0);
      int int0 = rationalNumber0.intValue();
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(0.0);
      int int0 = rationalNumber0.intValue();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(0.0);
      int int0 = rationalNumber0.intValue();
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(0.0);
      int int0 = rationalNumber0.intValue();
      ;
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-1.0));
      int int0 = rationalNumber0.intValue();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-1.0));
      int int0 = rationalNumber0.intValue();
      ;
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-1.0));
      int int0 = rationalNumber0.intValue();
      ;
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-1.0));
      int int0 = rationalNumber0.intValue();
      ;
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(0.0);
      float float0 = rationalNumber0.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(0.0);
      float float0 = rationalNumber0.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(0.0);
      float float0 = rationalNumber0.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(3325.0);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      float float0 = rationalNumber1.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(3325.0);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      float float0 = rationalNumber1.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(3325.0);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      float float0 = rationalNumber1.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-1L), (-1L));
      double double0 = rationalNumber0.doubleValue();
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-1L), (-1L));
      double double0 = rationalNumber0.doubleValue();
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-310L), 0L);
      // Undeclared exception!
      try { 
        rationalNumber0.toDisplayString();
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber(0, 0);
      // Undeclared exception!
      try { 
        rationalNumber0.longValue();
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber(0, 0);
      // Undeclared exception!
      try { 
        rationalNumber0.intValue();
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      try { 
        RationalNumber.factoryMethod(0L, 0L);
        fail("Expecting exception: ArithmeticException");
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(1716.7976012197178);
      ;
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(1716.7976012197178);
      ;
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(1.0E-8);
      ;
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(1.0E-8);
      ;
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(0.0);
      double double0 = rationalNumber0.doubleValue();
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(0.0);
      double double0 = rationalNumber0.doubleValue();
      ;
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(0.0);
      double double0 = rationalNumber0.doubleValue();
      ;
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(1.0);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      String string0 = rationalNumber1.toString();
      ;
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(1.0);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      String string0 = rationalNumber1.toString();
      ;
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(1.0);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      String string0 = rationalNumber1.toString();
      ;
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-2.147483647E9));
      ;
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-2.147483647E9));
      ;
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(2147483647L);
      ;
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf(2147483647L);
      ;
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-911));
      String string0 = rationalNumber0.toDisplayString();
      ;
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-911));
      String string0 = rationalNumber0.toDisplayString();
      ;
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(1407L, (-101L));
      String string0 = rationalNumber0.toDisplayString();
      ;
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(1407L, (-101L));
      String string0 = rationalNumber0.toDisplayString();
      ;
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(66, 0);
      String string0 = rationalNumber0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(66, 0);
      String string0 = rationalNumber0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-1784), (-1784), true);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      ;
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-1784), (-1784), true);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      ;
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-1784), (-1784), true);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      ;
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-1784), (-1784), true);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      ;
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber(0, 66, true);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      ;
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber(0, 66, true);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      ;
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber(0, 66, true);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      ;
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber(0, 66, true);
      RationalNumber rationalNumber1 = rationalNumber0.negate();
      ;
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-911), 31, true);
      // Undeclared exception!
      try { 
        rationalNumber0.negate();
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
         //
         // Unsigned numerator is too large to negate 4294966385
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      // Undeclared exception!
      try { 
        RationalNumber.factoryMethod((-2147483649L), 0L);
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
         //
         // Invalid value, numerator: -2147483649, divisor: 0
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(1L, (-2147483649L));
      ;
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(1L, (-2147483649L));
      ;
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(1L, (-2147483649L));
      ;
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-2.147483646578676E9));
      ;
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-2.147483646578676E9));
      ;
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber(445, 445, false);
      String string0 = rationalNumber0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber(445, 445, false);
      String string0 = rationalNumber0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-2302L), 620L);
      long long0 = rationalNumber0.longValue();
      ;
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-2302L), 620L);
      long long0 = rationalNumber0.longValue();
      ;
}
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-2302L), 620L);
      long long0 = rationalNumber0.longValue();
      ;
}
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod((-2302L), 620L);
      long long0 = rationalNumber0.longValue();
      ;
}
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-911), 31, true);
      int int0 = rationalNumber0.intValue();
      ;
}
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-911), 31, true);
      int int0 = rationalNumber0.intValue();
      ;
}
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-911), 31, true);
      int int0 = rationalNumber0.intValue();
      ;
}
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-911), 31, true);
      float float0 = rationalNumber0.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-911), 31, true);
      float float0 = rationalNumber0.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RationalNumber rationalNumber0 = new RationalNumber((-911), 31, true);
      float float0 = rationalNumber0.floatValue();
      ;
}
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-1.0));
      double double0 = rationalNumber0.doubleValue();
      ;
}
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-1.0));
      double double0 = rationalNumber0.doubleValue();
      ;
}
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-1.0));
      double double0 = rationalNumber0.doubleValue();
      ;
}
}
