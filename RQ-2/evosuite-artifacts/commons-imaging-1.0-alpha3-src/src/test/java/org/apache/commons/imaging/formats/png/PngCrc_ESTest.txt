 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      long long0 = 0L;
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)55;
      byteArray0[0] = (byte)55;
      long long1 = pngCrc0.start_partial_crc(byteArray0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      long long0 = 0L;
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)55;
      byteArray0[0] = (byte)55;
      long long1 = pngCrc0.start_partial_crc(byteArray0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      long long0 = 0L;
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)55;
      byteArray0[0] = (byte)55;
      long long1 = pngCrc0.start_partial_crc(byteArray0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      long long0 = 0L;
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)55;
      byteArray0[0] = (byte)55;
      long long1 = pngCrc0.start_partial_crc(byteArray0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      long long0 = pngCrc0.continue_partial_crc(0L, byteArray0, (byte)0);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      long long0 = pngCrc0.continue_partial_crc(0L, byteArray0, (byte)0);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      long long0 = pngCrc0.continue_partial_crc(0L, byteArray0, (byte)0);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)103;
      byteArray0[5] = (byte)103;
      long long0 = pngCrc0.continue_partial_crc((-901L), byteArray0, (byte) (-102));
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)103;
      byteArray0[5] = (byte)103;
      long long0 = pngCrc0.continue_partial_crc((-901L), byteArray0, (byte) (-102));
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)103;
      byteArray0[5] = (byte)103;
      long long0 = pngCrc0.continue_partial_crc((-901L), byteArray0, (byte) (-102));
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)103;
      byteArray0[5] = (byte)103;
      long long0 = pngCrc0.continue_partial_crc((-901L), byteArray0, (byte) (-102));
      long long1 = pngCrc0.finish_partial_crc(4294967295L);
      assertEquals(1, long1);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)103;
      byteArray0[5] = (byte)103;
      long long0 = pngCrc0.continue_partial_crc((-901L), byteArray0, (byte) (-102));
      long long1 = pngCrc0.finish_partial_crc(4294967295L);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-79);
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)0;
      long long0 = pngCrc0.continue_partial_crc((-3430L), byteArray0, 512);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-79);
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)0;
      long long0 = pngCrc0.continue_partial_crc((-3430L), byteArray0, 512);
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-79);
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)0;
      long long0 = pngCrc0.continue_partial_crc((-3430L), byteArray0, 512);
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-79);
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)0;
      long long0 = pngCrc0.continue_partial_crc((-3430L), byteArray0, 512);
      long long1 = pngCrc0.finish_partial_crc((-3355L));
      assertEquals(0, long1);
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-79);
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)0;
      long long0 = pngCrc0.continue_partial_crc((-3430L), byteArray0, 512);
      long long1 = pngCrc0.finish_partial_crc((-3355L));
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      long long0 = pngCrc0.finish_partial_crc(0L);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-42);
      long long0 = pngCrc0.continue_partial_crc(2985L, byteArray0, 8);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-42);
      long long0 = pngCrc0.continue_partial_crc(2985L, byteArray0, 8);
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-42);
      long long0 = pngCrc0.continue_partial_crc(2985L, byteArray0, 8);
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)105;
      byteArray0[2] = (byte)0;
      int int0 = pngCrc0.crc(byteArray0, 0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)105;
      byteArray0[2] = (byte)0;
      int int0 = pngCrc0.crc(byteArray0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)105;
      byteArray0[2] = (byte)0;
      int int0 = pngCrc0.crc(byteArray0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      long long0 = pngCrc0.finish_partial_crc(352L);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte) (-92);
      byteArray0[3] = (byte)0;
      long long0 = pngCrc0.continue_partial_crc((-2605L), byteArray0, (byte) (-72));
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte) (-92);
      byteArray0[3] = (byte)0;
      long long0 = pngCrc0.continue_partial_crc((-2605L), byteArray0, (byte) (-72));
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte) (-92);
      byteArray0[3] = (byte)0;
      long long0 = pngCrc0.continue_partial_crc((-2605L), byteArray0, (byte) (-72));
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      long long0 = pngCrc0.continue_partial_crc((-3756L), byteArray0, 0);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      long long0 = pngCrc0.continue_partial_crc((-3756L), byteArray0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      long long0 = pngCrc0.continue_partial_crc((-3756L), byteArray0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)92;
      byteArray0[0] = (byte)92;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte2 = (byte)0;
      int int0 = 0;
      long long0 = pngCrc0.start_partial_crc(byteArray0, 0);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)92;
      byteArray0[0] = (byte)92;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte2 = (byte)0;
      int int0 = 0;
      long long0 = pngCrc0.start_partial_crc(byteArray0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)92;
      byteArray0[0] = (byte)92;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte2 = (byte)0;
      int int0 = 0;
      long long0 = pngCrc0.start_partial_crc(byteArray0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)92;
      byteArray0[0] = (byte)92;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte2 = (byte)0;
      int int0 = 0;
      long long0 = pngCrc0.start_partial_crc(byteArray0, 0);
      byteArray0[2] = (byte)0;
      int int1 = pngCrc0.crc(byteArray0, (-1));
      ;
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)92;
      byteArray0[0] = (byte)92;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte2 = (byte)0;
      int int0 = 0;
      long long0 = pngCrc0.start_partial_crc(byteArray0, 0);
      byteArray0[2] = (byte)0;
      int int1 = pngCrc0.crc(byteArray0, (-1));
      ;
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)92;
      byteArray0[0] = (byte)92;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte2 = (byte)0;
      int int0 = 0;
      long long0 = pngCrc0.start_partial_crc(byteArray0, 0);
      byteArray0[2] = (byte)0;
      int int1 = pngCrc0.crc(byteArray0, (-1));
      ;
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)92;
      byteArray0[0] = (byte)92;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte2 = (byte)0;
      int int0 = 0;
      long long0 = pngCrc0.start_partial_crc(byteArray0, 0);
      byteArray0[2] = (byte)0;
      int int1 = pngCrc0.crc(byteArray0, (-1));
      ;
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[0];
      long long0 = pngCrc0.start_partial_crc(byteArray0, 563);
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[0];
      long long0 = pngCrc0.start_partial_crc(byteArray0, 563);
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[0];
      long long0 = pngCrc0.start_partial_crc(byteArray0, 563);
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      int int0 = pngCrc0.crc(byteArray0, (byte)0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      int int0 = pngCrc0.crc(byteArray0, (byte)0);
      ;
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      int int0 = pngCrc0.crc(byteArray0, (byte)0);
      ;
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      ;
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[0];
      int int0 = pngCrc0.crc(byteArray0, (-127));
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[0];
      int int0 = pngCrc0.crc(byteArray0, (-127));
      ;
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[0];
      int int0 = pngCrc0.crc(byteArray0, (-127));
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)111;
      int int0 = pngCrc0.crc(byteArray0, (byte)111);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      PngCrc pngCrc0 = new PngCrc();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)111;
      int int0 = pngCrc0.crc(byteArray0, (byte)111);
      pngCrc0.start_partial_crc(byteArray0, (byte)0);
      pngCrc0.continue_partial_crc(0L, byteArray0, (-1663799754));
      long long0 = pngCrc0.start_partial_crc(byteArray0, (byte)0);
      assertEquals(1, long0);
}
