/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:53:48 GMT 2022
 */

package org.apache.commons.imaging.color;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.color.ColorCieLab;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ColorCieLab_ESTest extends ColorCieLab_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLUE;
      colorCieLab0.hashCode();
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab((-1283.6), (-1283.6), (-1283.6));
      colorCieLab0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab((-1283.6), (-1283.6), (-1283.6));
      colorCieLab0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab((-1283.6), (-1283.6), (-1283.6));
      colorCieLab0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      ColorCieLab colorCieLab1 = ColorCieLab.BLACK;
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      ColorCieLab colorCieLab1 = ColorCieLab.BLACK;
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      ColorCieLab colorCieLab1 = ColorCieLab.BLACK;
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      ColorCieLab colorCieLab1 = ColorCieLab.BLACK;
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      ColorCieLab colorCieLab1 = ColorCieLab.BLACK;
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      ColorCieLab colorCieLab1 = ColorCieLab.BLACK;
      boolean boolean0 = colorCieLab1.equals(colorCieLab0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      ColorCieLab colorCieLab1 = ColorCieLab.BLACK;
      boolean boolean0 = colorCieLab1.equals(colorCieLab0);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      ColorCieLab colorCieLab1 = ColorCieLab.BLACK;
      boolean boolean0 = colorCieLab1.equals(colorCieLab0);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      ColorCieLab colorCieLab1 = ColorCieLab.BLACK;
      boolean boolean0 = colorCieLab1.equals(colorCieLab0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      ColorCieLab colorCieLab1 = ColorCieLab.BLACK;
      boolean boolean0 = colorCieLab1.equals(colorCieLab0);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(0.0, 79.0, 1.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(0.0, 79.0, 1.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(0.0, 79.0, 1.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(0.0, 79.0, 1.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(3420.82, 0.0, 0.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(3420.82, 0.0, 0.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(3420.82, 0.0, 0.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(3420.82, 0.0, 0.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(3420.82, 0.0, 0.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      String string0 = colorCieLab0.BLUE.toString();
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      String string0 = colorCieLab0.BLUE.toString();
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      String string0 = colorCieLab0.BLUE.toString();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      String string0 = colorCieLab0.BLUE.toString();
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(0.0, 0.0, 0.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.RED;
      ColorCieLab colorCieLab1 = new ColorCieLab(53.0, 53.0, 53.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.RED;
      ColorCieLab colorCieLab1 = new ColorCieLab(53.0, 53.0, 53.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.RED;
      ColorCieLab colorCieLab1 = new ColorCieLab(53.0, 53.0, 53.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.RED;
      ColorCieLab colorCieLab1 = new ColorCieLab(53.0, 53.0, 53.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.WHITE;
      ColorCieLab colorCieLab1 = ColorCieLab.RED;
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.WHITE;
      boolean boolean0 = colorCieLab0.equals("{L: 100.0, a: 0.0, b: 0.0}");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      boolean boolean0 = colorCieLab0.equals((Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      boolean boolean0 = colorCieLab0.equals((Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      boolean boolean0 = colorCieLab0.equals((Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, 1.0);
      boolean boolean0 = colorCieLab0.equals((Object) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.WHITE;
      boolean boolean0 = colorCieLab0.equals(colorCieLab0);
      assertTrue(boolean0);
}
}
