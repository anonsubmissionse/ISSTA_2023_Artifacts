/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:45:32 GMT 2022
 */

package org.apache.commons.imaging.formats.pnm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PushbackInputStream;
import org.apache.commons.imaging.formats.pnm.WhiteSpaceReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WhiteSpaceReader_ESTest extends WhiteSpaceReader_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)35;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader(byteArrayInputStream0);
      try { 
        whiteSpaceReader0.readLine();
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // PNM: Unexpected EOF
         //
         verifyException("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      pushbackInputStream0.unread(846);
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader(pushbackInputStream0);
      char char0 = whiteSpaceReader0.nextChar();
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1095), (byte)2);
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        whiteSpaceReader0.readtoWhiteSpace();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader((InputStream) null);
      // Undeclared exception!
      try { 
        whiteSpaceReader0.readLine();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), 1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader(dataInputStream0);
      // Undeclared exception!
      try { 
        whiteSpaceReader0.readLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)35;
      byteArray0[3] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader(byteArrayInputStream0);
      whiteSpaceReader0.nextChar();
      try { 
        whiteSpaceReader0.readLine();
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // PNM: Unexpected EOF
         //
         verifyException("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader((InputStream) null);
      // Undeclared exception!
      try { 
        whiteSpaceReader0.nextChar();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader(byteArrayInputStream0);
      char char0 = whiteSpaceReader0.nextChar();
      assertNotNull(char0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0, (byte)13);
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader(bufferedInputStream0);
      whiteSpaceReader0.readtoWhiteSpace();
      String string0 = whiteSpaceReader0.readLine();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader(byteArrayInputStream0);
      String string0 = whiteSpaceReader0.readLine();
      assertEquals(0, byteArrayInputStream0.available());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader(byteArrayInputStream0);
      String string0 = whiteSpaceReader0.readLine();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0, (byte)13);
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader(bufferedInputStream0);
      whiteSpaceReader0.readtoWhiteSpace();
      try { 
        whiteSpaceReader0.readtoWhiteSpace();
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // PNM: Unexpected EOF
         //
         verifyException("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)35;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader(byteArrayInputStream0);
      try { 
        whiteSpaceReader0.nextChar();
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // PNM: Unexpected EOF
         //
         verifyException("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      WhiteSpaceReader whiteSpaceReader0 = new WhiteSpaceReader(dataInputStream0);
      // Undeclared exception!
      try { 
        whiteSpaceReader0.readtoWhiteSpace();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterInputStream", e);
      }
  }
}
