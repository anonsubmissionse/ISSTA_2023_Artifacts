/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:56:45 GMT 2022
 */

package org.apache.commons.imaging.formats.jpeg.iptc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock;
import org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord;
import org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PhotoshopApp13Data_ESTest extends PhotoshopApp13Data_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<IptcRecord> linkedList0 = new LinkedList<IptcRecord>();
      linkedList0.add((IptcRecord) null);
      LinkedList<IptcBlock> linkedList1 = new LinkedList<IptcBlock>();
      PhotoshopApp13Data photoshopApp13Data0 = new PhotoshopApp13Data(linkedList0, linkedList1);
      List<IptcRecord> list0 = photoshopApp13Data0.getRecords();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<IptcRecord> linkedList0 = new LinkedList<IptcRecord>();
      LinkedList<IptcBlock> linkedList1 = new LinkedList<IptcBlock>();
      PhotoshopApp13Data photoshopApp13Data0 = new PhotoshopApp13Data(linkedList0, linkedList1);
      byte[] byteArray0 = new byte[8];
      IptcBlock iptcBlock0 = new IptcBlock(1028, byteArray0, byteArray0);
      linkedList1.add(iptcBlock0);
      List<IptcBlock> list0 = photoshopApp13Data0.getRawBlocks();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<IptcRecord> linkedList0 = new LinkedList<IptcRecord>();
      LinkedList<IptcBlock> linkedList1 = new LinkedList<IptcBlock>();
      PhotoshopApp13Data photoshopApp13Data0 = new PhotoshopApp13Data(linkedList0, linkedList1);
      linkedList1.add((IptcBlock) null);
      // Undeclared exception!
      try { 
        photoshopApp13Data0.getNonIptcBlocks();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<IptcRecord> linkedList0 = new LinkedList<IptcRecord>();
      LinkedList<IptcBlock> linkedList1 = new LinkedList<IptcBlock>();
      PhotoshopApp13Data photoshopApp13Data0 = new PhotoshopApp13Data(linkedList0, linkedList1);
      byte[] byteArray0 = new byte[8];
      IptcBlock iptcBlock0 = new IptcBlock(1028, byteArray0, byteArray0);
      linkedList1.add(iptcBlock0);
      List<IptcBlock> list0 = photoshopApp13Data0.getNonIptcBlocks();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<IptcRecord> linkedList0 = new LinkedList<IptcRecord>();
      LinkedList<IptcBlock> linkedList1 = new LinkedList<IptcBlock>();
      byte[] byteArray0 = new byte[0];
      IptcBlock iptcBlock0 = new IptcBlock((-500), byteArray0, byteArray0);
      linkedList1.add(iptcBlock0);
      PhotoshopApp13Data photoshopApp13Data0 = new PhotoshopApp13Data(linkedList0, linkedList1);
      List<IptcBlock> list0 = photoshopApp13Data0.getNonIptcBlocks();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PhotoshopApp13Data photoshopApp13Data0 = new PhotoshopApp13Data((List<IptcRecord>) null, (List<IptcBlock>) null);
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<IptcRecord> linkedList0 = new LinkedList<IptcRecord>();
      LinkedList<IptcBlock> linkedList1 = new LinkedList<IptcBlock>();
      PhotoshopApp13Data photoshopApp13Data0 = new PhotoshopApp13Data(linkedList0, linkedList1);
      List<IptcBlock> list0 = photoshopApp13Data0.getRawBlocks();
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LinkedList<IptcRecord> linkedList0 = new LinkedList<IptcRecord>();
      LinkedList<IptcBlock> linkedList1 = new LinkedList<IptcBlock>();
      PhotoshopApp13Data photoshopApp13Data0 = new PhotoshopApp13Data(linkedList0, linkedList1);
      List<IptcRecord> list0 = photoshopApp13Data0.getRecords();
      assertTrue(list0.isEmpty());
}
}
