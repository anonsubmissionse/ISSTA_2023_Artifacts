 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      pcxImagingParameters0.setPlanes(0);
      int int0 = pcxImagingParameters0.getPlanes();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      pcxImagingParameters0.setPlanes(100);
      int int0 = pcxImagingParameters0.getPlanes();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      pcxImagingParameters0.setCompression((-388));
      int int0 = pcxImagingParameters0.getCompression();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      assertEquals(0, pcxImagingParameters0.getBitDepth());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      pcxImagingParameters0.setBitDepth(0);
      int int0 = pcxImagingParameters0.getBitDepth();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      pcxImagingParameters0.setBitDepth(100);
      int int0 = pcxImagingParameters0.getBitDepth();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      int int0 = pcxImagingParameters0.getBitDepth();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      int int0 = pcxImagingParameters0.getBitDepth();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      int int0 = pcxImagingParameters0.getBitDepth();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      int int0 = pcxImagingParameters0.getPlanes();
      assertEquals(0, pcxImagingParameters0.getBitDepth());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      int int0 = pcxImagingParameters0.getPlanes();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      int int0 = pcxImagingParameters0.getPlanes();
      assertEquals(0, pcxImagingParameters0.getCompression());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      pcxImagingParameters0.setCompression(1066);
      int int0 = pcxImagingParameters0.getCompression();
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      int int0 = pcxImagingParameters0.getCompression();
      assertEquals(1, pcxImagingParameters0.getPlanes());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      int int0 = pcxImagingParameters0.getCompression();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      int int0 = pcxImagingParameters0.getCompression();
      assertEquals(1, pcxImagingParameters0.getBitDepth());
}
