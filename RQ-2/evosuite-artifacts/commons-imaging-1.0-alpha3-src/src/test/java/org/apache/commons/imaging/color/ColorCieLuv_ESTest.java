/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:51:26 GMT 2022
 */

package org.apache.commons.imaging.color;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.color.ColorCieLuv;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ColorCieLuv_ESTest extends ColorCieLuv_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.RED;
      colorCieLuv0.hashCode();
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-1.0), (-1.0), (-1.0));
      colorCieLuv0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-1.0), (-1.0), (-1.0));
      colorCieLuv0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-1.0), (-1.0), (-1.0));
      colorCieLuv0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-1.0), (-1.0), (-1.0));
      ColorCieLuv colorCieLuv1 = new ColorCieLuv((-1.0), 0.0, (-1.0));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-1.0), (-1.0), (-1.0));
      ColorCieLuv colorCieLuv1 = new ColorCieLuv((-1.0), 0.0, (-1.0));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-1.0), (-1.0), (-1.0));
      ColorCieLuv colorCieLuv1 = new ColorCieLuv((-1.0), 0.0, (-1.0));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-1.0), (-1.0), (-1.0));
      ColorCieLuv colorCieLuv1 = new ColorCieLuv((-1.0), 0.0, (-1.0));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-1.0), (-1.0), (-1.0));
      ColorCieLuv colorCieLuv1 = new ColorCieLuv((-1.0), 0.0, (-1.0));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLUE;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(32.303, (-9.4), 0.0);
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLUE;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(32.303, (-9.4), 0.0);
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLUE;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(32.303, (-9.4), 0.0);
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLUE;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(32.303, (-9.4), 0.0);
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLUE;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(32.303, (-9.4), 0.0);
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.RED;
      ColorCieLuv colorCieLuv1 = ColorCieLuv.BLACK;
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 0.0);
      String string0 = colorCieLuv0.BLUE.toString();
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 0.0);
      String string0 = colorCieLuv0.BLUE.toString();
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 0.0);
      String string0 = colorCieLuv0.BLUE.toString();
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 0.0);
      String string0 = colorCieLuv0.BLUE.toString();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-55.14756538419712), (-55.14756538419712), (-55.14756538419712));
      ColorCieLuv colorCieLuv1 = new ColorCieLuv((-55.14756538419712), (-55.14756538419712), (-55.14756538419712));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-55.14756538419712), (-55.14756538419712), (-55.14756538419712));
      ColorCieLuv colorCieLuv1 = new ColorCieLuv((-55.14756538419712), (-55.14756538419712), (-55.14756538419712));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-55.14756538419712), (-55.14756538419712), (-55.14756538419712));
      ColorCieLuv colorCieLuv1 = new ColorCieLuv((-55.14756538419712), (-55.14756538419712), (-55.14756538419712));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-55.14756538419712), (-55.14756538419712), (-55.14756538419712));
      ColorCieLuv colorCieLuv1 = new ColorCieLuv((-55.14756538419712), (-55.14756538419712), (-55.14756538419712));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLUE;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(32.303, 32.303, (-9.4));
      boolean boolean0 = colorCieLuv1.equals(colorCieLuv0);
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLUE;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(32.303, 32.303, (-9.4));
      boolean boolean0 = colorCieLuv1.equals(colorCieLuv0);
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLUE;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(32.303, 32.303, (-9.4));
      boolean boolean0 = colorCieLuv1.equals(colorCieLuv0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLUE;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(32.303, 32.303, (-9.4));
      boolean boolean0 = colorCieLuv1.equals(colorCieLuv0);
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.GREEN;
      ColorCieLuv colorCieLuv1 = ColorCieLuv.WHITE;
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLACK;
      boolean boolean0 = colorCieLuv0.equals("{L: 0.0, u: 0.0, v: 0.0}");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 0.0);
      boolean boolean0 = colorCieLuv0.equals((Object) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 0.0);
      boolean boolean0 = colorCieLuv0.equals((Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 0.0);
      boolean boolean0 = colorCieLuv0.equals((Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 0.0);
      boolean boolean0 = colorCieLuv0.equals((Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLACK;
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLACK;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(0.0, 0.0, (-0.4888913042222018));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLACK;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(0.0, 0.0, (-0.4888913042222018));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLACK;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(0.0, 0.0, (-0.4888913042222018));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLACK;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(0.0, 0.0, (-0.4888913042222018));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLACK;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(0.0, 0.0, (-0.4888913042222018));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      ;
}
}
