/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 00:03:14 GMT 2022
 */

package org.apache.commons.imaging.formats.pnm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.BufferedImage;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PipedOutputStream;
import org.apache.commons.imaging.common.RgbBufferedImageFactory;
import org.apache.commons.imaging.common.SimpleBufferedImageFactory;
import org.apache.commons.imaging.formats.pnm.PamWriter;
import org.apache.commons.imaging.formats.pnm.PnmImagingParameters;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PamWriter_ESTest extends PamWriter_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PamWriter pamWriter0 = new PamWriter();
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(1620, 14, false);
      MockFile mockFile0 = new MockFile("r6\f)ua", "DEPTH 4");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      PnmImagingParameters pnmImagingParameters0 = new PnmImagingParameters();
      // Undeclared exception!
      pamWriter0.writeImage(bufferedImage0, mockFileOutputStream0, pnmImagingParameters0);
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PamWriter pamWriter0 = new PamWriter();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("7|:??gK", true);
      PnmImagingParameters pnmImagingParameters0 = new PnmImagingParameters();
      // Undeclared exception!
      try { 
        pamWriter0.writeImage((BufferedImage) null, mockFileOutputStream0, pnmImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PamWriter pamWriter0 = new PamWriter();
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(2780, 2780, true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PnmImagingParameters pnmImagingParameters0 = new PnmImagingParameters();
      try { 
        pamWriter0.writeImage(bufferedImage0, pipedOutputStream0, pnmImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PamWriter pamWriter0 = new PamWriter();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(46, 46, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(24);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0, 24);
      PnmImagingParameters pnmImagingParameters0 = new PnmImagingParameters();
      pamWriter0.writeImage(bufferedImage0, bufferedOutputStream0, pnmImagingParameters0);
      ;
}
}
