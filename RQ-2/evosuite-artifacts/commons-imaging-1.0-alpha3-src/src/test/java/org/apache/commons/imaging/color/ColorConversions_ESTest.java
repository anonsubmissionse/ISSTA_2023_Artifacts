/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:15:19 GMT 2022
 */

package org.apache.commons.imaging.color;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.color.ColorCieLab;
import org.apache.commons.imaging.color.ColorCieLch;
import org.apache.commons.imaging.color.ColorCieLuv;
import org.apache.commons.imaging.color.ColorCmy;
import org.apache.commons.imaging.color.ColorCmyk;
import org.apache.commons.imaging.color.ColorConversions;
import org.apache.commons.imaging.color.ColorDin99Lab;
import org.apache.commons.imaging.color.ColorHsl;
import org.apache.commons.imaging.color.ColorHsv;
import org.apache.commons.imaging.color.ColorHunterLab;
import org.apache.commons.imaging.color.ColorXyz;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ColorConversions_ESTest extends ColorConversions_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab((-851.5305153), 0.0, (-9.4));
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab((-851.5305153), 0.0, (-9.4));
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab(100.0, (-702.3442061), (-1344.17));
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab(100.0, (-702.3442061), (-1344.17));
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(54.045715561954395, 0.0, (-1988.32167007349));
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(54.045715561954395, 0.0, (-1988.32167007349));
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(54.045715561954395, 0.0, (-1988.32167007349));
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLUE;
      ColorCieLch colorCieLch0 = ColorConversions.convertCIELabtoCIELCH(colorCieLab0);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLUE;
      ColorCieLch colorCieLch0 = ColorConversions.convertCIELabtoCIELCH(colorCieLab0);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLUE;
      ColorCieLch colorCieLch0 = ColorConversions.convertCIELabtoCIELCH(colorCieLab0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorHsv colorHsv0 = ColorConversions.convertRGBtoHSV((-16711681));
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorHsv colorHsv0 = ColorConversions.convertRGBtoHSV((-16711681));
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorHsv colorHsv0 = ColorConversions.convertRGBtoHSV((-16711681));
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = ColorConversions.convertHSLtoRGB(0.5, (double) (-65536), 53.233);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = ColorConversions.convertHSLtoRGB(1.0, (double) 1842, (-40.0318));
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.RED;
      int int0 = ColorConversions.convertHSLtoRGB(colorHsl0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL((-65281));
      int int0 = ColorConversions.convertHSLtoRGB(colorHsl0);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL((-65281));
      int int0 = ColorConversions.convertHSLtoRGB(colorHsl0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL((-65281));
      int int0 = ColorConversions.convertHSLtoRGB(colorHsl0);
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL((-16719648));
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL((-16719648));
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertRGBtoCMY((-1));
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertRGBtoCMY((-1));
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertRGBtoCMY((-1));
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertRGBtoXYZ((-16121088));
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertRGBtoXYZ((-16121088));
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertRGBtoXYZ((-16121088));
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = ColorConversions.radian_2_degree(0.888235294117647);
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double double0 = ColorConversions.radian_2_degree((-16777216));
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double double0 = ColorConversions.degree_2_radian(0.0);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double double0 = ColorConversions.degree_2_radian((-2186.0));
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertXYZtoRGB((ColorXyz) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertXYZtoHunterLab((ColorXyz) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertXYZtoCIELuv((ColorXyz) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertXYZtoCIELab((ColorXyz) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertHunterLabtoXYZ((ColorHunterLab) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertHSVtoRGB((ColorHsv) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertHSLtoRGB((ColorHsl) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertDIN99oLabToCIELab((ColorDin99Lab) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertDIN99bLabToCIELab((ColorDin99Lab) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertCMYtoRGB((ColorCmy) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertCMYtoCMYK((ColorCmy) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertCMYKtoCMY((ColorCmyk) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertCIELuvtoXYZ((ColorCieLuv) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertCIELabtoXYZ((ColorCieLab) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertCIELabtoCIELCH((ColorCieLab) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertCIELabToDIN99oLab((ColorCieLab) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertCIELabToDIN99bLab((ColorCieLab) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorConversions.convertCIELCHtoCIELab((ColorCieLch) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.color.ColorConversions", e);
      }
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab(263.3047744, 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab(263.3047744, 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab(263.3047744, 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab((-0.38), 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab((-0.38), 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab((-0.38), 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(200.0, 255.0, (-86.0));
      ;
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(200.0, 255.0, (-86.0));
      ;
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(200.0, 255.0, (-86.0));
      ;
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorConversions.convertCIELabtoCIELCH((-803.078), 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorConversions.convertCIELabtoCIELCH((-803.078), 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorConversions.convertCIELabtoCIELCH((-803.078), 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int int0 = ColorConversions.convertHSVtoRGB((-190.923), (-371.3489), (-108.0));
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      int int0 = ColorConversions.convertHSVtoRGB(0.5423548891805353, 565.2288321975, 565.2288321975);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      int int0 = ColorConversions.convertHSVtoRGB(0.2235294117647059, 1377.123442919348, 1297.0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      int int0 = ColorConversions.convertHSLtoRGB((-391.3726), 0.0, (-989.16088));
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ColorHunterLab colorHunterLab0 = ColorConversions.convertXYZtoHunterLab((-1510.22181417014), (double) (-16711826), (-420.969));
      ;
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ColorHunterLab colorHunterLab0 = ColorConversions.convertXYZtoHunterLab((-1510.22181417014), (double) (-16711826), (-420.969));
      ;
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ColorHunterLab colorHunterLab0 = ColorConversions.convertXYZtoHunterLab((-1510.22181417014), (double) (-16711826), (-420.969));
      ;
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertXYZtoCIELab(0.0, 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertXYZtoCIELab(0.0, 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertXYZtoCIELab(0.0, 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      double double0 = ColorConversions.degree_2_radian(1853.51888955692);
      ;
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ColorCmy colorCmy0 = ColorCmy.BLUE;
      int int0 = ColorConversions.convertCMYtoRGB(colorCmy0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      int int0 = ColorConversions.convertXYZtoRGB((-40.44993312344552), 79.0, 32.00000000000001);
      ;
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertCIELCHtoCIELab((-371.3489), Double.NaN, (-107.99999999999996));
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(colorCieLab0);
      ;
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertCIELCHtoCIELab((-371.3489), Double.NaN, (-107.99999999999996));
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(colorCieLab0);
      ;
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorConversions.convertXYZtoCIELuv((-451.67753), 975.0, Double.NaN);
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorConversions.convertXYZtoCIELuv((-451.67753), 975.0, Double.NaN);
      ;
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorConversions.convertXYZtoCIELuv((-451.67753), 975.0, Double.NaN);
      ;
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertCIELabtoXYZ(32.303, 128.843315811, 32.303);
      ;
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertCIELabtoXYZ(32.303, 128.843315811, 32.303);
      ;
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertCIELabtoXYZ(32.303, 128.843315811, 32.303);
      ;
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertCIELuvtoXYZ(152.79323048967973, 100.0, 240.0);
      ;
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertCIELuvtoXYZ(152.79323048967973, 100.0, 240.0);
      ;
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertCIELuvtoXYZ(152.79323048967973, 100.0, 240.0);
      ;
}
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertRGBtoXYZ(904);
      ;
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertRGBtoXYZ(904);
      ;
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertRGBtoXYZ(904);
      ;
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab(0.8660099572828743, 0.0, 0.8660099572828743);
      ;
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab(0.8660099572828743, 0.0, 0.8660099572828743);
      ;
}
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab(1.0, 21.26, (-1953.2372));
      ;
}
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab(1.0, 21.26, (-1953.2372));
      ;
}
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorConversions.convertCIELabtoCIELCH((-2439.0), 0.6666666666666666, 0.6666666666666666);
      ;
}
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorConversions.convertCIELabtoCIELCH((-2439.0), 0.6666666666666666, 0.6666666666666666);
      ;
}
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorConversions.convertCIELabtoCIELCH((-2439.0), 0.6666666666666666, 0.6666666666666666);
      ;
}
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      ColorHsv colorHsv0 = ColorHsv.GREEN;
      int int0 = ColorConversions.convertHSVtoRGB(colorHsv0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      int int0 = ColorConversions.convertHSVtoRGB(0.7254901960784313, 2334.74245, (double) 2146059904);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      int int0 = ColorConversions.convertHSVtoRGB(0.4235294117647059, (double) 508, (double) (-256));
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      int int0 = ColorConversions.convertHSVtoRGB(1.0, 99.3095907157356, 93.3599680575118);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      int int0 = ColorConversions.convertHSVtoRGB(0.0, 0.0, 0.5423548891805353);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ColorHsv colorHsv0 = ColorConversions.convertRGBtoHSV((-16777216));
      ;
}
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ColorHsv colorHsv0 = ColorConversions.convertRGBtoHSV((-16777216));
      ;
}
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ColorHsv colorHsv0 = ColorConversions.convertRGBtoHSV((-44191468));
      int int0 = ColorConversions.convertHSVtoRGB(colorHsv0);
      ;
}
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ColorHsv colorHsv0 = ColorConversions.convertRGBtoHSV((-44191468));
      int int0 = ColorConversions.convertHSVtoRGB(colorHsv0);
      ;
}
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ColorHsv colorHsv0 = ColorConversions.convertRGBtoHSV(255);
      ;
}
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ColorHsv colorHsv0 = ColorConversions.convertRGBtoHSV(255);
      ;
}
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ColorHsv colorHsv0 = ColorConversions.convertRGBtoHSV(255);
      ;
}
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ColorHsv colorHsv0 = ColorConversions.convertRGBtoHSV(1776365103);
      ;
}
 @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ColorHsv colorHsv0 = ColorConversions.convertRGBtoHSV(1776365103);
      ;
}
 @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL((-18839654));
      int int0 = ColorConversions.convertHSLtoRGB(colorHsl0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL(0);
      ;
}
 @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL(0);
      ;
}
 @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL(31);
      ;
}
 @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL(31);
      ;
}
 @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL(31);
      ;
}
 @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL(885713291);
      ;
}
 @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL(885713291);
      ;
}
 @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ColorHsl colorHsl0 = ColorConversions.convertRGBtoHSL(885713291);
      ;
}
 @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertCMYKtoCMY((-1681.4331079526576), (-6962.780646008141), (-6962.780646008141), (-6962.780646008141));
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertCMYKtoCMY((-1681.4331079526576), (-6962.780646008141), (-6962.780646008141), (-6962.780646008141));
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertCMYKtoCMY((-1681.4331079526576), (-6962.780646008141), (-6962.780646008141), (-6962.780646008141));
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertCMYKtoCMY((-1681.4331079526576), (-6962.780646008141), (-6962.780646008141), (-6962.780646008141));
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertRGBtoCMY(2146059904);
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertRGBtoCMY(2146059904);
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertRGBtoCMY(2146059904);
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertRGBtoCMY(2146059904);
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ColorCmy colorCmy0 = ColorCmy.BLUE;
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ColorCmy colorCmy0 = ColorCmy.BLUE;
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ColorCmy colorCmy0 = ColorCmy.BLUE;
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ColorCmy colorCmy0 = ColorCmy.BLUE;
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ColorHunterLab colorHunterLab0 = ColorConversions.convertXYZtoHunterLab(0.0, 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ColorHunterLab colorHunterLab0 = ColorConversions.convertXYZtoHunterLab(0.0, 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ColorHunterLab colorHunterLab0 = ColorConversions.convertXYZtoHunterLab(0.0, 0.0, 0.0);
      ;
}
 @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ColorHunterLab colorHunterLab0 = ColorHunterLab.BLUE;
      ColorXyz colorXyz0 = ColorConversions.convertHunterLabtoXYZ(colorHunterLab0);
      ;
}
 @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ColorHunterLab colorHunterLab0 = ColorHunterLab.BLUE;
      ColorXyz colorXyz0 = ColorConversions.convertHunterLabtoXYZ(colorHunterLab0);
      ;
}
 @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ColorHunterLab colorHunterLab0 = ColorHunterLab.BLUE;
      ColorXyz colorXyz0 = ColorConversions.convertHunterLabtoXYZ(colorHunterLab0);
      ;
}
 @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ColorCmyk colorCmyk0 = ColorCmyk.BLACK;
      ColorCmy colorCmy0 = ColorConversions.convertCMYKtoCMY(colorCmyk0);
      ;
}
 @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ColorCmyk colorCmyk0 = ColorCmyk.BLACK;
      ColorCmy colorCmy0 = ColorConversions.convertCMYKtoCMY(colorCmyk0);
      ;
}
 @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ColorCmyk colorCmyk0 = ColorCmyk.BLACK;
      ColorCmy colorCmy0 = ColorConversions.convertCMYKtoCMY(colorCmyk0);
      ;
}
 @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(206.0297, 0.0, 100.0);
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99oLabToCIELab(colorDin99Lab0);
      ;
}
 @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(206.0297, 0.0, 100.0);
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99oLabToCIELab(colorDin99Lab0);
      ;
}
 @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(206.0297, 0.0, 100.0);
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99oLabToCIELab(colorDin99Lab0);
      ;
}
 @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.WHITE;
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab(colorCieLab0);
      ;
}
 @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.WHITE;
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab(colorCieLab0);
      ;
}
 @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.WHITE;
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99oLab(colorCieLab0);
      ;
}
 @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertRGBtoCMY(0);
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertRGBtoCMY(0);
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertRGBtoCMY(0);
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertRGBtoCMY(0);
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertRGBtoCMY(0);
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ColorCmy colorCmy0 = ColorConversions.convertRGBtoCMY(0);
      ColorCmyk colorCmyk0 = ColorConversions.convertCMYtoCMYK(colorCmy0);
      ;
}
 @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertRGBtoXYZ(2129126759);
      ColorHunterLab colorHunterLab0 = ColorConversions.convertXYZtoHunterLab(colorXyz0);
      ;
}
 @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertRGBtoXYZ(2129126759);
      ColorHunterLab colorHunterLab0 = ColorConversions.convertXYZtoHunterLab(colorXyz0);
      ;
}
 @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertRGBtoXYZ(2129126759);
      ColorHunterLab colorHunterLab0 = ColorConversions.convertXYZtoHunterLab(colorXyz0);
      ;
}
 @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99bLabToCIELab(0.0, 0.0, 13.029619691132426);
      ColorXyz colorXyz0 = ColorConversions.convertCIELabtoXYZ(colorCieLab0);
      int int0 = ColorConversions.convertXYZtoRGB(colorXyz0);
      ;
}
 @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99bLabToCIELab(0.0, 0.0, 13.029619691132426);
      ColorXyz colorXyz0 = ColorConversions.convertCIELabtoXYZ(colorCieLab0);
      int int0 = ColorConversions.convertXYZtoRGB(colorXyz0);
      ;
}
 @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99bLabToCIELab(0.0, 0.0, 13.029619691132426);
      ColorXyz colorXyz0 = ColorConversions.convertCIELabtoXYZ(colorCieLab0);
      int int0 = ColorConversions.convertXYZtoRGB(colorXyz0);
      ;
}
 @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99bLabToCIELab(0.0, 0.0, 13.029619691132426);
      ColorXyz colorXyz0 = ColorConversions.convertCIELabtoXYZ(colorCieLab0);
      int int0 = ColorConversions.convertXYZtoRGB(colorXyz0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99bLabToCIELab(0.0, 0.0, 13.029619691132426);
      ColorXyz colorXyz0 = ColorConversions.convertCIELabtoXYZ(colorCieLab0);
      int int0 = ColorConversions.convertXYZtoRGB(colorXyz0);
      ;
}
 @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      int int0 = ColorConversions.convertCMYKtoRGB_Adobe((-16777216), (-16777216), (-16777216), 1);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.WHITE;
      ColorCieLch colorCieLch0 = ColorConversions.convertCIELabtoCIELCH(colorCieLab0);
      ColorCieLab colorCieLab1 = ColorConversions.convertCIELCHtoCIELab(colorCieLch0);
      ;
}
 @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.WHITE;
      ColorCieLch colorCieLch0 = ColorConversions.convertCIELabtoCIELCH(colorCieLab0);
      ColorCieLab colorCieLab1 = ColorConversions.convertCIELCHtoCIELab(colorCieLch0);
      ;
}
 @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.WHITE;
      ColorCieLch colorCieLch0 = ColorConversions.convertCIELabtoCIELCH(colorCieLab0);
      ColorCieLab colorCieLab1 = ColorConversions.convertCIELCHtoCIELab(colorCieLch0);
      ;
}
 @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.WHITE;
      ColorCieLch colorCieLch0 = ColorConversions.convertCIELabtoCIELCH(colorCieLab0);
      ColorCieLab colorCieLab1 = ColorConversions.convertCIELCHtoCIELab(colorCieLch0);
      ;
}
 @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      double double0 = ColorConversions.radian_2_degree(0.0);
      ;
}
 @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      int int0 = ColorConversions.convertCMYKtoRGB(1, 1, 1, 1);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99oLabToCIELab(1146.5917480562641, 395832.99480586505, 1146.5917480562641);
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(colorCieLab0);
      ColorCieLab colorCieLab1 = ColorConversions.convertDIN99bLabToCIELab(colorDin99Lab0);
      ;
}
 @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99oLabToCIELab(1146.5917480562641, 395832.99480586505, 1146.5917480562641);
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(colorCieLab0);
      ColorCieLab colorCieLab1 = ColorConversions.convertDIN99bLabToCIELab(colorDin99Lab0);
      ;
}
 @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99oLabToCIELab(1146.5917480562641, 395832.99480586505, 1146.5917480562641);
      ColorDin99Lab colorDin99Lab0 = ColorConversions.convertCIELabToDIN99bLab(colorCieLab0);
      ColorCieLab colorCieLab1 = ColorConversions.convertDIN99bLabToCIELab(colorDin99Lab0);
      ;
}
 @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      int int0 = ColorConversions.convertCIELabtoARGBTest(0, 1709, (-244));
      ;
}
 @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertHunterLabtoXYZ((-2160.954859010996), 1944.4567962939, 1944.4567962939);
      ColorCieLuv colorCieLuv0 = ColorConversions.convertXYZtoCIELuv(colorXyz0);
      ColorXyz colorXyz1 = ColorConversions.convertCIELuvtoXYZ(colorCieLuv0);
      ;
}
 @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertHunterLabtoXYZ((-2160.954859010996), 1944.4567962939, 1944.4567962939);
      ColorCieLuv colorCieLuv0 = ColorConversions.convertXYZtoCIELuv(colorXyz0);
      ColorXyz colorXyz1 = ColorConversions.convertCIELuvtoXYZ(colorCieLuv0);
      ;
}
 @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ColorXyz colorXyz0 = ColorConversions.convertHunterLabtoXYZ((-2160.954859010996), 1944.4567962939, 1944.4567962939);
      ColorCieLuv colorCieLuv0 = ColorConversions.convertXYZtoCIELuv(colorXyz0);
      ColorXyz colorXyz1 = ColorConversions.convertCIELuvtoXYZ(colorCieLuv0);
      ;
}
 @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99oLabToCIELab(0.0, 0.0, 718.72956);
      ColorXyz colorXyz0 = ColorConversions.convertCIELabtoXYZ(colorCieLab0);
      ColorCieLab colorCieLab1 = ColorConversions.convertXYZtoCIELab(colorXyz0);
      ;
}
 @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99oLabToCIELab(0.0, 0.0, 718.72956);
      ColorXyz colorXyz0 = ColorConversions.convertCIELabtoXYZ(colorCieLab0);
      ColorCieLab colorCieLab1 = ColorConversions.convertXYZtoCIELab(colorXyz0);
      ;
}
 @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99oLabToCIELab(0.0, 0.0, 718.72956);
      ColorXyz colorXyz0 = ColorConversions.convertCIELabtoXYZ(colorCieLab0);
      ColorCieLab colorCieLab1 = ColorConversions.convertXYZtoCIELab(colorXyz0);
      ;
}
 @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorConversions.convertDIN99oLabToCIELab(0.0, 0.0, 718.72956);
      ColorXyz colorXyz0 = ColorConversions.convertCIELabtoXYZ(colorCieLab0);
      ColorCieLab colorCieLab1 = ColorConversions.convertXYZtoCIELab(colorXyz0);
      ;
}
}
