/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:03:57 GMT 2022
 */

package org.apache.commons.imaging.formats.pcx;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import javax.swing.DebugGraphics;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.common.ImageMetadata;
import org.apache.commons.imaging.common.RgbBufferedImageFactory;
import org.apache.commons.imaging.common.SimpleBufferedImageFactory;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.apache.commons.imaging.formats.pcx.PcxImageParser;
import org.apache.commons.imaging.formats.pcx.PcxImagingParameters;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PcxImageParser_ESTest extends PcxImageParser_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(4, 9, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      pcxImageParser0.writeImage(bufferedImage0, (OutputStream) byteArrayOutputStream0, pcxImagingParameters0);
      assertEquals(0, pcxImagingParameters0.getPlanes());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      BufferedImage bufferedImage0 = new BufferedImage(255, 255, 2);
      MockFile mockFile0 = new MockFile("'$+");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      // Undeclared exception!
      pcxImageParser0.writeImage(bufferedImage0, (OutputStream) mockPrintStream0, pcxImagingParameters0);
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(42, 42, true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      try { 
        pcxImageParser0.writeImage(bufferedImage0, (OutputStream) pipedOutputStream0, pcxImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.getImageSize((ByteSource) null, pcxImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.pcx.PcxImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "No 256 color palette found in image that needs it");
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.getImageSize((ByteSource) byteSourceInputStream0, pcxImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      byte[] byteArray0 = new byte[2];
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-5019), (byte)3);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, (String) null);
      // Undeclared exception!
      try { 
        pcxImageParser0.getImageSize((ByteSource) byteSourceInputStream0, pcxImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("S;?", byteArray0);
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      try { 
        pcxImageParser0.getImageSize((ByteSource) byteSourceArray0, pcxImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Not a Valid PCX File count: -1 read: 4 length: 128
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      MockFile mockFile0 = new MockFile("", "");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      try { 
        pcxImageParser0.getImageSize((ByteSource) byteSourceFile0, pcxImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.getImageInfo((ByteSource) null, pcxImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.pcx.PcxImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "Pcx-Custom");
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.getImageInfo((ByteSource) byteSourceInputStream0, pcxImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1583), (byte)28);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "");
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.getImageInfo((ByteSource) byteSourceInputStream0, pcxImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("{hf)2g+2X", byteArray0);
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      try { 
        pcxImageParser0.getImageInfo((ByteSource) byteSourceArray0, pcxImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Not a Valid PCX File count: -1 read: 4 length: 128
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      MockFile mockFile0 = new MockFile((File) null, "y-_ic;+SiM(X");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        pcxImageParser0.getImageInfo((ByteSource) byteSourceFile0, pcxImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, (String) null);
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.getBufferedImage((ByteSource) byteSourceInputStream0, pcxImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("Pcx-Custom", byteArray0);
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      try { 
        pcxImageParser0.getBufferedImage((ByteSource) byteSourceArray0, pcxImagingParameters0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Not a Valid PCX File count: -1 read: 4 length: 128
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      MockFile mockFile0 = new MockFile("AZ]kOf&wXHoxH[G");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      try { 
        pcxImageParser0.getBufferedImage((ByteSource) byteSourceFile0, pcxImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      MockFile mockFile0 = new MockFile("WBMP");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        pcxImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.pcx.PcxImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "Pcx-Custom");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(5);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      // Undeclared exception!
      try { 
        pcxImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceInputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Ay!3h9;!uiR`5M");
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-22), (byte)9);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "Ay!3h9;!uiR`5M");
      // Undeclared exception!
      try { 
        pcxImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("=-n##afn0");
      MockFile mockFile0 = new MockFile("=-n##afn0", "Manufacturer: ");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        pcxImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      // Undeclared exception!
      try { 
        pcxImageParser0.getBufferedImage((ByteSource) null, (PcxImagingParameters) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.pcx.PcxImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-4816), 10);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "");
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      ImageMetadata imageMetadata0 = pcxImageParser0.getMetadata((ByteSource) byteSourceInputStream0, pcxImagingParameters0);
      assertNotNull(imageMetadata0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-4816), 10);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "");
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.getBufferedImage((ByteSource) byteSourceInputStream0, pcxImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      String string0 = pcxImageParser0.getDefaultExtension();
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("yl-Min ");
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "pcx");
      try { 
        pcxImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceInputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      ImageFormat[] imageFormatArray0 = pcxImageParser0.getAcceptedTypes();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      String[] stringArray0 = pcxImageParser0.getAcceptedExtensions();
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PrintStream printStream0 = DebugGraphics.logStream();
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.writeImage((BufferedImage) null, (OutputStream) printStream0, pcxImagingParameters0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.palette.PaletteFactory", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      String string0 = pcxImageParser0.getName();
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      byte[] byteArray0 = pcxImageParser0.getICCProfileBytes((ByteSource) null, pcxImagingParameters0);
      assertNotNull(byteArray0);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[17];
      PcxImageParser.PcxHeader pcxImageParser_PcxHeader0 = new PcxImageParser.PcxHeader(1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400, intArray0, 1400, 1400, 0, 0, 0, 1400);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("yl-Min ");
      pcxImageParser_PcxHeader0.dump(mockPrintWriter0);
  }
}
