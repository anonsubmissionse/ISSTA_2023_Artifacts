 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.BLUE;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount(0);
      ColorCount colorCount1 = new ColorCount(0);
      int int0 = colorCountComparator0.compare(colorCount1, colorCount0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.RED;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount(407);
      ColorCount colorCount1 = new ColorCount(0);
      int int0 = colorCountComparator0.compare(colorCount1, colorCount0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.ALPHA;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount((-2501));
      int int0 = colorCountComparator0.compare(colorCount0, colorCount0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.ALPHA;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount(0);
      ColorCount colorCount1 = new ColorCount(0);
      int int0 = colorCountComparator0.compare(colorCount0, colorCount1);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.GREEN;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount(4047);
      ColorCount colorCount1 = new ColorCount((-1));
      int int0 = colorCountComparator0.compare(colorCount1, colorCount0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.GREEN;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount(0);
      ColorCount colorCount1 = new ColorCount(2609);
      int int0 = colorCountComparator0.compare(colorCount0, colorCount1);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.GREEN;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount(0);
      // Undeclared exception!
      try { 
        colorCountComparator0.compare((ColorCount) null, colorCount0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.palette.ColorCountComparator", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.BLUE;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount((-2));
      int int0 = colorCountComparator0.compare(colorCount0, colorCount0);
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.RED;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount((-778));
      int int0 = colorCountComparator0.compare(colorCount0, colorCount0);
      ;
}
