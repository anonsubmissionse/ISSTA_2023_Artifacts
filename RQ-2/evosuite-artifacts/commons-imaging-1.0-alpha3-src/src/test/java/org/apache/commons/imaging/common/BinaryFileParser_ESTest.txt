 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      BinaryFileParser binaryFileParser0 = new BinaryFileParser(byteOrder0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 1940;
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockPrintWriter0, 1940);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(bufferedWriter0, false);
      binaryFileParser0.debugNumber(mockPrintWriter1, "E/g~X2WIO<GTcRW2mLy", 4588, 4588);
      bufferedWriter0.append('Z');
      int int1 = 1059;
      binaryFileParser0.debugNumber("E/g~X2WIO<GTcRW2mLy", 1059, 1935);
      ByteOrder.nativeOrder();
      binaryFileParser0.debugNumber(mockPrintWriter1, "", 0, (-1276));
      binaryFileParser0.debugNumber(mockPrintWriter0, "K>*B", 1935, 1935);
      // Undeclared exception!
      binaryFileParser0.debugNumber("E/g~X2WIO<GTcRW2mLy", (-1276), 1935);
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BinaryFileParser binaryFileParser0 = new BinaryFileParser();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" (", true);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(bufferedOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(filterOutputStream0);
      Locale locale0 = Locale.CHINESE;
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) filterOutputStream0;
      objectArray0[2] = (Object) " (";
      objectArray0[3] = (Object) binaryFileParser0;
      objectArray0[4] = (Object) mockPrintWriter0;
      objectArray0[5] = (Object) filterOutputStream0;
      Object object1 = new Object();
      objectArray0[6] = object1;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, " (", objectArray0);
      binaryFileParser0.debugNumber(printWriter0, "str1", 678, 2661);
      binaryFileParser0.debugNumber(mockPrintWriter0, "str1", 678, 2661);
      // Undeclared exception!
      binaryFileParser0.debugNumber(mockPrintWriter0, "str1", 678, 6416);
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BinaryFileParser binaryFileParser0 = new BinaryFileParser();
      MockFile mockFile0 = new MockFile("&%.'<9{p]d", "&%.'<9{p]d");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "K/-5KZ?L3FuiG*4";
      mockPrintWriter0.printf("K/-5KZ?L3FuiG*4", objectArray0);
      binaryFileParser0.debugNumber(mockPrintWriter0, "", 0, 1206);
      binaryFileParser0.setByteOrder((ByteOrder) null);
      binaryFileParser0.debugNumber(mockPrintWriter0, "&%.'<9{p]d", 3, 0);
      binaryFileParser0.getByteOrder();
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BinaryFileParser binaryFileParser0 = new BinaryFileParser();
      char[] charArray0 = new char[2];
      charArray0[0] = '[';
      charArray0[1] = '1';
      int int0 = 0;
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.codePoints();
      ByteOrder byteOrder0 = charBuffer1.order();
      charBuffer1.order();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      binaryFileParser0.setByteOrder(byteOrder0);
      String string0 = "";
      binaryFileParser0.debugNumber("", 0, 0);
      int int1 = 1;
      binaryFileParser0.debugNumber("", 0, 1);
      PrintWriter printWriter0 = null;
      // Undeclared exception!
      try { 
        binaryFileParser0.debugNumber((PrintWriter) null, "Oh!", (-1), 1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BinaryFileParser binaryFileParser0 = new BinaryFileParser((ByteOrder) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(">");
      binaryFileParser0.debugNumber(mockPrintWriter0, (String) null, (-1855), 944);
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BinaryFileParser binaryFileParser0 = new BinaryFileParser();
      // Undeclared exception!
      try { 
        binaryFileParser0.debugNumber((PrintWriter) null, "", 0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BinaryFileParser binaryFileParser0 = new BinaryFileParser();
      binaryFileParser0.getByteOrder();
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BinaryFileParser binaryFileParser0 = new BinaryFileParser((ByteOrder) null);
      binaryFileParser0.debugNumber("", (-82), (-82));
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      BinaryFileParser binaryFileParser0 = new BinaryFileParser();
      binaryFileParser0.debugNumber((String) null, 5651, 576);
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      BinaryFileParser binaryFileParser0 = new BinaryFileParser();
      binaryFileParser0.debugNumber("]", 2756, 2756);
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte) (-103);
      byte byte0 = (byte)108;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      BinaryFileParser binaryFileParser0 = new BinaryFileParser(byteOrder0);
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      binaryFileParser0.debugNumber("The wildcard must not be null", 5230, 5230);
      // Undeclared exception!
      binaryFileParser0.debugNumber("The wildcard must not be null", 358, 5230);
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      BinaryFileParser binaryFileParser0 = new BinaryFileParser(byteOrder0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, true);
      int int0 = 1940;
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockPrintWriter0, 1940);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(bufferedWriter0, false);
      binaryFileParser0.debugNumber(mockPrintWriter1, "E/g~X2WIO<GTcRW2mLy", 4588, 4588);
      bufferedWriter0.append('Z');
      binaryFileParser0.debugNumber("E/g~X2WIO<GTcRW2mLy", 'Z', 1935);
      ByteOrder.nativeOrder();
      binaryFileParser0.debugNumber(mockPrintWriter1, "", 0, (-1276));
      binaryFileParser0.debugNumber("E/g~X2WIO<GTcRW2mLy", (-1276), 1935);
      // Undeclared exception!
      binaryFileParser0.debugNumber("XVwh", 0, 1940);
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BinaryFileParser binaryFileParser0 = new BinaryFileParser();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = binaryFileParser0.getByteOrder();
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BinaryFileParser binaryFileParser0 = new BinaryFileParser((ByteOrder) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      binaryFileParser0.setByteOrder(byteOrder0);
      ;
}
