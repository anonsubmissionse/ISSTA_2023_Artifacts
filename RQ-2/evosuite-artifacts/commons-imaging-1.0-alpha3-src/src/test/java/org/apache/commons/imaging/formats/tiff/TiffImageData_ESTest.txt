 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[2];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 65000);
      // Undeclared exception!
      try { 
        tiffImageData_Strips0.getImageData(78);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 78
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 0, 0);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, (-1L), byteOrder0);
      int[] intArray0 = new int[2];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      tiffImageData_Tiles0.getDataReader(tiffDirectory0, (PhotometricInterpreter) null, (-2481), intArray0, 1886, 1, 920, 0, 1835, tiffPlanarConfiguration0, byteOrder0);
      assertEquals(0, tiffImageData_Tiles0.getTileWidth());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 0, 0);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, (-1L), byteOrder0);
      int[] intArray0 = new int[2];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      tiffImageData_Tiles0.getDataReader(tiffDirectory0, (PhotometricInterpreter) null, (-2481), intArray0, 1886, 1, 920, 0, 1835, tiffPlanarConfiguration0, byteOrder0);
      assertEquals(0, tiffImageData_Tiles0.getTileHeight());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 0, 0);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, (-1L), byteOrder0);
      int[] intArray0 = new int[2];
      PhotometricInterpreterBiLevel photometricInterpreterBiLevel0 = new PhotometricInterpreterBiLevel(0, intArray0, 0, 0, (-402), false);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      tiffImageData_Tiles0.getDataReader(tiffDirectory0, photometricInterpreterBiLevel0, 0, intArray0, (-238), 1329, 0, (-752), 111, tiffPlanarConfiguration0, byteOrder0);
      assertEquals(0, tiffImageData_Tiles0.getTileWidth());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 0, 0);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, (-1L), byteOrder0);
      int[] intArray0 = new int[2];
      PhotometricInterpreterBiLevel photometricInterpreterBiLevel0 = new PhotometricInterpreterBiLevel(0, intArray0, 0, 0, (-402), false);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      tiffImageData_Tiles0.getDataReader(tiffDirectory0, photometricInterpreterBiLevel0, 0, intArray0, (-238), 1329, 0, (-752), 111, tiffPlanarConfiguration0, byteOrder0);
      assertEquals(0, tiffImageData_Tiles0.getTileHeight());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[5];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 0);
      tiffImageData_Strips0.getImageData(0);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (-48));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, (-48), 0L, byteOrder0);
      int[] intArray0 = new int[9];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      tiffImageData_Strips0.getDataReader(tiffDirectory0, (PhotometricInterpreter) null, (-628), intArray0, 0, 0, 0, 0, 1327, tiffPlanarConfiguration0, byteOrder0);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (-1235), 0);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1545, linkedList0, 0L, (-1L), (ByteOrder) null);
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(0, (int[]) null, (-1235), 6, 1);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      // Undeclared exception!
      try { 
        tiffImageData_Tiles0.getDataReader(tiffDirectory0, photometricInterpreterCmyk0, 0, (int[]) null, 1, 103, 1, (-191), (-2572), tiffPlanarConfiguration0, (ByteOrder) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 2659);
      boolean boolean0 = tiffImageData_Strips0.stripsNotTiles();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 2659);
      boolean boolean0 = tiffImageData_Strips0.stripsNotTiles();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (byte)51, (-3481));
      boolean boolean0 = tiffImageData_Tiles0.stripsNotTiles();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (byte)51, (-3481));
      boolean boolean0 = tiffImageData_Tiles0.stripsNotTiles();
      assertEquals(1, tiffImageData_Tiles0.getTileWidth());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (byte)51, (-3481));
      boolean boolean0 = tiffImageData_Tiles0.stripsNotTiles();
      assertEquals(1, tiffImageData_Tiles0.getTileHeight());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles((TiffElement.DataElement[]) null, 1, 1);
      tiffImageData_Tiles0.getImageData();
      assertEquals(1, tiffImageData_Tiles0.getTileHeight());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles((TiffElement.DataElement[]) null, 1, 1);
      tiffImageData_Tiles0.getImageData();
      assertEquals(1, tiffImageData_Tiles0.getTileWidth());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (byte)51, (-3481));
      TiffElement.DataElement[] tiffElement_DataElementArray1 = tiffImageData_Tiles0.getImageData();
      assertEquals(1, tiffImageData_Tiles0.getTileHeight());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (byte)51, (-3481));
      TiffElement.DataElement[] tiffElement_DataElementArray1 = tiffImageData_Tiles0.getImageData();
      assertEquals(1, tiffImageData_Tiles0.getTileWidth());
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (byte)51, (-3481));
      TiffElement.DataElement[] tiffElement_DataElementArray1 = tiffImageData_Tiles0.getImageData();
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 0, 0);
      TiffElement.DataElement[] tiffElement_DataElementArray1 = tiffImageData_Tiles0.getImageData();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 0, 0);
      TiffElement.DataElement[] tiffElement_DataElementArray1 = tiffImageData_Tiles0.getImageData();
      assertEquals(1, tiffImageData_Tiles0.getTileWidth());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 0, 0);
      TiffElement.DataElement[] tiffElement_DataElementArray1 = tiffImageData_Tiles0.getImageData();
      assertEquals(1, tiffImageData_Tiles0.getTileHeight());
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 644);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1088), linkedList0, 644, (-1L), byteOrder0);
      int[] intArray0 = new int[8];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      tiffImageData_Strips0.getDataReader(tiffDirectory0, (PhotometricInterpreter) null, 6, intArray0, 55, 6, 3157, (-1088), 2330, tiffPlanarConfiguration0, byteOrder0);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (-34), (-34));
      TiffElement.DataElement[] tiffElement_DataElementArray1 = tiffImageData_Tiles0.getImageData();
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (-34), (-34));
      TiffElement.DataElement[] tiffElement_DataElementArray1 = tiffImageData_Tiles0.getImageData();
      assertEquals(1, tiffImageData_Tiles0.getTileWidth());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (-34), (-34));
      TiffElement.DataElement[] tiffElement_DataElementArray1 = tiffImageData_Tiles0.getImageData();
      assertEquals(1, tiffImageData_Tiles0.getTileHeight());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles((TiffElement.DataElement[]) null, 1, 1);
      int int0 = tiffImageData_Tiles0.getTileHeight();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles((TiffElement.DataElement[]) null, 1, 1);
      int int0 = tiffImageData_Tiles0.getTileHeight();
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[4];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 65533, 65533);
      int int0 = tiffImageData_Tiles0.getTileWidth();
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[4];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 65533, 65533);
      int int0 = tiffImageData_Tiles0.getTileWidth();
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[8];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (-1168), 4851);
      int[] intArray0 = new int[4];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(0, intArray0, (-1168), 494, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        tiffImageData_Tiles0.getDataReader((TiffDirectory) null, photometricInterpreterRgb0, 494, intArray0, 4851, (-2474), (-2474), 1, (-1061), tiffPlanarConfiguration0, byteOrder0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffImageData", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[13];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 732, 13);
      boolean boolean0 = tiffImageData_Tiles0.stripsNotTiles();
      assertEquals(1, tiffImageData_Tiles0.getTileHeight());
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[13];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 732, 13);
      boolean boolean0 = tiffImageData_Tiles0.stripsNotTiles();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[13];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 732, 13);
      boolean boolean0 = tiffImageData_Tiles0.stripsNotTiles();
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[13];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 732);
      boolean boolean0 = tiffImageData_Strips0.stripsNotTiles();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[13];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 732);
      boolean boolean0 = tiffImageData_Strips0.stripsNotTiles();
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (-34));
      tiffImageData_Strips0.getImageData();
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[17];
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int[] intArray0 = new int[6];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (-647));
      TiffDirectory tiffDirectory0 = new TiffDirectory((-647), linkedList0, (byte)0, 7L, byteOrder0);
      // Undeclared exception!
      try { 
        tiffImageData_Strips0.getDataReader(tiffDirectory0, (PhotometricInterpreter) null, 0, intArray0, (-647), (-647), (-647), 6, (-647), tiffPlanarConfiguration0, byteOrder0);
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TiffImageData.Data tiffImageData_Data0 = new TiffImageData.Data(2125L, 0, byteArray0);
      String string0 = tiffImageData_Data0.getElementDescription();
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[13];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 732);
      tiffImageData_Strips0.getImageDataLength();
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      TiffImageData.ByteSourceData tiffImageData_ByteSourceData0 = new TiffImageData.ByteSourceData(4294967295L, 732, byteSourceFile0);
      byte[] byteArray0 = tiffImageData_ByteSourceData0.getData();
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      TiffImageData.ByteSourceData tiffImageData_ByteSourceData0 = new TiffImageData.ByteSourceData(4294967295L, 732, byteSourceFile0);
      String string0 = tiffImageData_ByteSourceData0.getElementDescription();
      ;
}
