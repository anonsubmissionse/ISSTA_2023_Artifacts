 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      MockPrintStream mockPrintStream0 = new MockPrintStream("TrkI ");
      Imaging.writeImage(bufferedImage0, (OutputStream) mockPrintStream0, (ImageFormat) imageFormats0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      ImageFormat imageFormat0 = Imaging.guessFormat((File) mockFile0);
      assertNotNull(imageFormat0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      String string0 = Imaging.getXmpXml(byteArray0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      String string0 = Imaging.getXmpXml((InputStream) byteArrayInputStream0, "dib");
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockFile mockFile0 = new MockFile("xbm");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("xbm");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "xbm");
      String string0 = Imaging.getXmpXml((File) mockFile0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageMetadata imageMetadata0 = Imaging.getMetadata(byteArray0);
      assertNotNull(imageMetadata0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(7, 7, true);
      ImageFormats imageFormats0 = ImageFormats.GIF;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      GifImageMetadata gifImageMetadata0 = (GifImageMetadata)Imaging.getMetadata(byteArray0);
      assertEquals(0, gifImageMetadata0.getWidth());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("xbm");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ",{j('FISO%g!u}~]:");
      MockFile mockFile0 = new MockFile("xbm");
      ImageMetadata imageMetadata0 = Imaging.getMetadata((File) mockFile0);
      assertNotNull(imageMetadata0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(7, 7, true);
      ImageFormats imageFormats0 = ImageFormats.GIF;
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      GifImageMetadata gifImageMetadata0 = (GifImageMetadata)Imaging.getMetadata((File) mockFile0);
      assertEquals(0, gifImageMetadata0.getHeight());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Dimension dimension0 = Imaging.getImageSize((ByteSource) byteSourceArray0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Dimension dimension0 = Imaging.getImageSize((ByteSource) byteSourceArray0);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);
      Dimension dimension0 = Imaging.getImageSize((InputStream) mockFileInputStream0, ");)8%/:yJ]ShU&y{");
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dcx");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "1z:e\".H>Rrw_L*");
      MockFile mockFile0 = new MockFile("dcx");
      Dimension dimension0 = Imaging.getImageSize((File) mockFile0);
      assertNotNull(dimension0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      Dimension dimension0 = Imaging.getImageSize((File) mockFile0);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo(byteArray0);
      assertNotNull(imageInfo0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(7, 7, true);
      ImageFormats imageFormats0 = ImageFormats.GIF;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo(byteArray0);
      assertEquals(1, imageInfo0.getPhysicalWidthDpi());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.BMP;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo(byteArray0);
      assertNotNull(imageInfo0.getFormatName());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo(byteArray0);
      assertEquals(0, imageInfo0.getHeight());
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo("h\"kt?L?6qN&", byteArray0);
      assertNotNull(imageInfo0);
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(7, 7, true);
      ImageFormats imageFormats0 = ImageFormats.GIF;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo((String) null, byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.BMP;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo((String) null, byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo("m", byteArray0);
      assertEquals(0, imageInfo0.getWidth());
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("LlNWX af`^", byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      ImageInfo imageInfo0 = Imaging.getImageInfo(inputStream0, "ico");
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream(0L);
      ImageInfo imageInfo0 = Imaging.getImageInfo(inputStream0, (String) null);
      assertEquals(0, imageInfo0.getBitsPerPixel());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ImageInfo imageInfo0 = Imaging.getImageInfo((InputStream) byteArrayInputStream0, "FreeByteCounts");
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo((File) mockFile0);
      assertNotNull(imageInfo0.getFormatName());
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo((File) mockFile0);
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      byte[] byteArray1 = Imaging.getICCProfileBytes(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dcx");
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile("dcx");
      byte[] byteArray1 = Imaging.getICCProfileBytes((File) mockFile0);
      assertEquals(byteArray0, byteArray1);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ICC_Profile iCC_Profile0 = Imaging.getICCProfile(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ICC_Profile iCC_Profile0 = Imaging.getICCProfile((InputStream) byteArrayInputStream0, "hdr");
      assertNotNull(iCC_Profile0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      FormatCompliance formatCompliance0 = Imaging.getFormatCompliance(byteArray0);
      assertNotNull(formatCompliance0);
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.BMP;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      FormatCompliance formatCompliance0 = Imaging.getFormatCompliance(byteArray0);
      assertNotNull(formatCompliance0);
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(7, 7, false);
      ImageFormats imageFormats0 = ImageFormats.GIF;
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      FormatCompliance formatCompliance0 = Imaging.getFormatCompliance((File) mockFile0);
      assertNotNull(formatCompliance0);
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      BufferedImage bufferedImage1 = Imaging.getBufferedImage(byteArray0);
      assertEquals(0, bufferedImage1.getTileGridYOffset());
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream((long) 1);
      inputStream0.reset();
      BufferedImage bufferedImage1 = Imaging.getBufferedImage(inputStream0, "ppm");
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(7, 7, true);
      ImageFormats imageFormats0 = ImageFormats.GIF;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      BufferedImage bufferedImage1 = Imaging.getBufferedImage(inputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      BufferedImage bufferedImage1 = Imaging.getBufferedImage((File) mockFile0);
      assertEquals(0, bufferedImage1.getTileGridXOffset());
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      List<BufferedImage> list0 = Imaging.getAllBufferedImages((InputStream) byteArrayInputStream0, "/");
      assertEquals(1, list0.size());
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      List<BufferedImage> list0 = Imaging.getAllBufferedImages((File) mockFile0);
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(63, 73, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      String string0 = Imaging.dumpImageFile(byteArray0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.TIFF;
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      String string0 = Imaging.dumpImageFile((File) mockFile0);
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(299, 299, false);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      // Undeclared exception!
      Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.PGM;
      // Undeclared exception!
      try { 
        Imaging.writeImageToBytes((BufferedImage) null, imageFormats0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // src must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.TGA;
      // Undeclared exception!
      try { 
        Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Format: TGA
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(770, 2469, true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("format must not be null");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      ImageFormats imageFormats0 = ImageFormats.UNKNOWN;
      // Undeclared exception!
      try { 
        Imaging.writeImage(bufferedImage0, (OutputStream) bufferedOutputStream0, (ImageFormat) imageFormats0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Format: UNKNOWN
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.DCX;
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(2324, 2324, true);
      MockFile mockFile0 = new MockFile("sU|In)");
      // Undeclared exception!
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
  }
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.RGBE;
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(2324, 2324, true);
      MockFile mockFile0 = new MockFile("v,zf");
      try { 
        Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // This image format (Radiance HDR) cannot be written.
         //
         verifyException("org.apache.commons.imaging.ImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.writeImage((BufferedImage) null, (File) null, (ImageFormat) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      File file0 = MockFile.createTempFile("Invalid Byte Pair.", "Invalid Byte Pair.");
      // Undeclared exception!
      try { 
        Imaging.writeImage((BufferedImage) null, file0, (ImageFormat) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // src must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImageFormats imageFormats0 = ImageFormats.RGBE;
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(2324, 2324, true);
      MockFile mockFile0 = new MockFile("v,zf", "v,zf");
      try { 
        Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.guessFormat((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Imaging.guessFormat(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((byte[]) null);
      // Undeclared exception!
      try { 
        Imaging.guessFormat((ByteSource) byteSourceArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-37), 3);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "pcc");
      // Undeclared exception!
      try { 
        Imaging.guessFormat((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pipedInputStream0, "xjpg");
      try { 
        Imaging.guessFormat((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      MockFile mockFile0 = new MockFile("`I%GVVZ}+4UW", "BgBA%k#{F0p'F");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        Imaging.guessFormat((ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      File file0 = MockFile.createTempFile("M,.Q9hMUe", "M,.Q9hMUe");
      // Undeclared exception!
      try { 
        Imaging.guessFormat(file0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Y1u5XXs'ZC\"0)5@h");
      try { 
        Imaging.guessFormat((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      try { 
        Imaging.getXmpXml(byteArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        Imaging.getXmpXml(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      try { 
        Imaging.getXmpXml(byteArray0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("s`9u$Rr$~,H9#RTA", byteArray0);
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((byte[]) null);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("n.", byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: n.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      File file0 = MockFile.createTempFile("**v", "**v");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(file0);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceFile0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-40719215), 941);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "xoF@&h8:>k7,9");
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "%.(");
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      MockFile mockFile0 = new MockFile("i$/u7'U<9A''t", "i$/u7'U<9A''t");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0, 2);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((InputStream) bufferedInputStream0, "src must not be null");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(inputStream0);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((InputStream) dataInputStream0, "I");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: I
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((InputStream) byteArrayInputStream0, "^m3( C6^D3@/.");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-764), (byte)35);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((InputStream) byteArrayInputStream0, "mK$8:iQnQOpF");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Invalid Byte Pair.", "Invalid Byte Pair.");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Invalid Byte Pair./Invalid Byte Pair./format must not be null0Invalid Byte Pair.");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Invalid Byte Pair.");
      File file0 = MockFile.createTempFile("format must not be null", "Invalid Byte Pair.", (File) mockFile0);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml(file0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: format must not be null0Invalid Byte Pair.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      File file0 = MockFile.createTempFile("wuIaC)>HWH.fcMS", "src must not be null");
      // Undeclared exception!
      try { 
        Imaging.getXmpXml(file0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("?/F/j");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Couldn't read magic numbers to guess format.");
      MockFile mockFile0 = new MockFile("?/F/j");
      try { 
        Imaging.getXmpXml((File) mockFile0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      try { 
        Imaging.getMetadata(byteArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getMetadata((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)77);
      try { 
        Imaging.getMetadata((InputStream) byteArrayInputStream0, "ppm");
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        Imaging.getMetadata((InputStream) dataInputStream0, "I;p%n.GE%h^EVA*l");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("A", byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      // Undeclared exception!
      try { 
        Imaging.getMetadata(inputStream0, "A");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: A
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)100, 42035);
      // Undeclared exception!
      try { 
        Imaging.getMetadata((InputStream) byteArrayInputStream0, "gif");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-23), (byte)77);
      // Undeclared exception!
      try { 
        Imaging.getMetadata((InputStream) byteArrayInputStream0, "ppm");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      try { 
        Imaging.getMetadata((InputStream) null, "os must not be null");
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getMetadata((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("8fx`&`jk[jpbm");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "8fx`&`jk[jpbm");
      MockFile mockFile0 = new MockFile("8fx`&`jk[jpbm");
      // Undeclared exception!
      try { 
        Imaging.getMetadata((File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: 8fx`&`jk[jpbm
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      File file0 = MockFile.createTempFile("M,.Q9hMUe", "M,.Q9hMUe");
      // Undeclared exception!
      try { 
        Imaging.getMetadata(file0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      ImageFormats imageFormats0 = ImageFormats.GIF;
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        Imaging.getMetadata((File) mockFile0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      try { 
        Imaging.getImageSize(byteArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageSize((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        Imaging.getImageSize(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      try { 
        Imaging.getImageSize(byteArray0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        Imaging.getImageSize((ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("", byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getImageSize((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: 
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      File file0 = MockFile.createTempFile("s}7tU^@", "");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(mockFileInputStream0, "");
      // Undeclared exception!
      try { 
        Imaging.getImageSize((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-105), 77);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "MT-FsTo");
      // Undeclared exception!
      try { 
        Imaging.getImageSize((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "/media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/commons-imaging-1.0-alpha3-src/dcx");
      try { 
        Imaging.getImageSize((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      MockFile mockFile0 = new MockFile("UK!0uIyCQm&vbP$", "UK!0uIyCQm&vbP$");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        Imaging.getImageSize((ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      try { 
        Imaging.getImageSize((InputStream) pushbackInputStream0, "psd");
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Not a Valid PSD File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getImageSize((InputStream) byteArrayInputStream0, "RBceB");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: RBceB
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1431888477), 65505);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0);
      // Undeclared exception!
      try { 
        Imaging.getImageSize((InputStream) pushbackInputStream0, "9zmzW~|i?yi9SM,YI:");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.close();
      try { 
        Imaging.getImageSize((InputStream) pipedInputStream0, "");
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe closed
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      MockFile mockFile0 = new MockFile("xbm");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("xbm");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "UaP56tJ");
      try { 
        Imaging.getImageSize((File) mockFile0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageSize((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }
 @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("+%<D!S04y,IO2}y:v/+%<D!S04y,IO2}y:v");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "i_H]kiInLS:`");
      MockFile mockFile0 = new MockFile("+%<D!S04y,IO2}y:v", "+%<D!S04y,IO2}y:v");
      // Undeclared exception!
      try { 
        Imaging.getImageSize((File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: +%<D!S04y,IO2}y:v
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      File file0 = MockFile.createTempFile("org.apache.commons.imaging.Imaging", "org.apache.commons.imaging.Imaging");
      // Undeclared exception!
      try { 
        Imaging.getImageSize(file0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      try { 
        Imaging.getImageInfo(byteArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      try { 
        Imaging.getImageInfo("pbm", byteArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // PNM file has invalid prefix byte 1
         //
         verifyException("org.apache.commons.imaging.formats.pnm.PnmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((String) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        Imaging.getImageInfo("ESvVu^Qo]*8f| |{>`;", byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: ESvVu^Qo]*8f| |{>`;
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        Imaging.getImageInfo(",AQ", byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      try { 
        Imaging.getImageInfo(inputStream0, "xbm");
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((InputStream) dataInputStream0, "8fx`&`jk[jpbm");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream(0L);
      // Undeclared exception!
      try { 
        Imaging.getImageInfo(inputStream0, "os must not be null");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: os must not be null
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      inputStream0.skip(4325L);
      // Undeclared exception!
      try { 
        Imaging.getImageInfo(inputStream0, "J ~?@");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        Imaging.getImageInfo((InputStream) pipedInputStream0, "");
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      MockFile mockFile0 = new MockFile("xbm");
      byte[] byteArray0 = new byte[9];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("xbm");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      try { 
        Imaging.getImageInfo((File) mockFile0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }
 @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("k[j/k[j0Restart with modulo 8 count 6");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "k[j");
      MockFile mockFile0 = new MockFile("k[j");
      File file0 = MockFile.createTempFile("k[j", "Restart with modulo 8 count 6", (File) mockFile0);
      // Undeclared exception!
      try { 
        Imaging.getImageInfo(file0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: k[j0Restart with modulo 8 count 6
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      File file0 = MockFile.createTempFile("`lR]k8`,_WsSZJ%F", "`lR]k8`,_WsSZJ%F");
      // Undeclared exception!
      try { 
        Imaging.getImageInfo(file0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("k[j/k[j");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Invalid Byte Pair.");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("k[j", "k[j");
      try { 
        Imaging.getImageInfo((File) mockFile0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }
 @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      try { 
        Imaging.getICCProfileBytes(byteArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }
 @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("8fx`&`jK[J");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "8fx`&`jK[J");
      MockFile mockFile0 = new MockFile("8fx`&`jK[J");
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes((File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: 8fx`&`jK[J
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      File file0 = MockFile.createTempFile("Y<]:", "?}@l]QJnPAnP");
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes(file0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      try { 
        Imaging.getICCProfile(byteArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        Imaging.getICCProfile(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      try { 
        Imaging.getICCProfile(byteArray0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("c3k", byteArray0);
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "8fx&`k[qjpbppm");
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(":rAhh\"iP9'", byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: :rAhh\"iP9'
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2647), (byte)73);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(bufferedInputStream0, " (=Jq&)Br:H0 m");
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pipedInputStream0, "^nR");
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      MockFile mockFile0 = new MockFile("7o5zw <QcG*p1F'u<M\"");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((InputStream) byteArrayInputStream0, "RBceB");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: RBceB
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((InputStream) sequenceInputStream0, "Invalid Byte Pair.");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-23), (byte)77);
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((InputStream) byteArrayInputStream0, "c3k");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      try { 
        Imaging.getICCProfile((InputStream) null, "!");
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }
 @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      MockFile mockFile0 = new MockFile("sU|In)");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("sU|In)");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Couldn't read magic numbers to guess format.");
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: sU|In)
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      MockFile mockFile0 = new MockFile("6t7%", ";fF");
      File file0 = MockFile.createTempFile("2.]'`W", ";fF", (File) mockFile0);
      // Undeclared exception!
      try { 
        Imaging.getICCProfile(file0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Invalid Byte Pair.", "Invalid Byte Pair.");
      File file0 = MockFile.createTempFile("format must not be null", "Invalid Byte Pair.", (File) mockFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        Imaging.getICCProfile(file0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }
 @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      try { 
        Imaging.getFormatCompliance(byteArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getFormatCompliance((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      try { 
        Imaging.getFormatCompliance(byteArray0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getFormatCompliance((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }
 @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      File file0 = MockFile.createTempFile("Nu&13~>>vymR4HkG,It", "Nu&13~>>vymR4HkG,It");
      // Undeclared exception!
      try { 
        Imaging.getFormatCompliance(file0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("8fx`&`jK[J");
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile("8fx`&`jK[J");
      try { 
        Imaging.getFormatCompliance((File) mockFile0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }
 @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      try { 
        Imaging.getBufferedImage(byteArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream((long) 1);
      try { 
        Imaging.getBufferedImage(inputStream0, "ppm");
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // PNM file has invalid prefix byte 1
         //
         verifyException("org.apache.commons.imaging.formats.pnm.PnmImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((InputStream) dataInputStream0, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage(inputStream0, "|>%$k`[$^`aQ${6;");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: |>%$k`[$^`aQ${6;
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-250877868), (byte)22);
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((InputStream) byteArrayInputStream0, "src must not be null");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      try { 
        Imaging.getBufferedImage((InputStream) null, "Couldn't read magic numbers to guess format.");
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((InputStream) dataInputStream0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-182695007), 65475);
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((InputStream) byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        Imaging.getBufferedImage((InputStream) mockFileInputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }
 @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }
 @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      MockFile mockFile0 = new MockFile("8fx`&`jk[jpbm");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("8fx`&`jk[jpbm");
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: 8fx`&`jk[jpbm
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      File file0 = MockFile.createTempFile("Lp-=O-m!", "Lp-=O-m!");
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage(file0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Invalid Byte Sair.", "Invalid Byte Sair.");
      File file0 = MockFile.createTempFile("Invalid Byte Sair.", "Invalid Byte Sair.", (File) mockFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        Imaging.getBufferedImage(file0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }
 @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      try { 
        Imaging.getAllBufferedImages(byteArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)54;
      try { 
        Imaging.getAllBufferedImages(byteArray0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // PNM: Unexpected EOF
         //
         verifyException("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        Imaging.getAllBufferedImages((InputStream) byteArrayInputStream0, "pic");
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Not a valid HDR: Incorrect Header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((InputStream) dataInputStream0, "I[i+H3r'4s#");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream(0L);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(inputStream0, 255);
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((InputStream) bufferedInputStream0, "D0nxQ1>");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: D0nxQ1>
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1783), (byte)2);
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((InputStream) byteArrayInputStream0, "Y.Zl^p:xhu");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 1940);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      try { 
        Imaging.getAllBufferedImages((InputStream) dataInputStream0, "BlueMask");
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }
 @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: foo.bar
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      MockFile mockFile0 = new MockFile("EDEvibv");
      File file0 = MockFile.createTempFile("l>Nh", "l>Nh", (File) mockFile0);
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages(file0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      try { 
        Imaging.dumpImageFile(byteArray0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }
 @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/foo.bar");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "XUF/?sF");
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile((File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: foo.bar
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      File file0 = MockFile.createTempFile("TIFF integer data uses unsupported bits-per-pixel: ", "eU29mP+_v.#^(0W`fK");
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile(file0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(7, 7, true);
      ImageFormats imageFormats0 = ImageFormats.GIF;
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        Imaging.dumpImageFile((File) mockFile0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }
 @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.TIFF;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      String string0 = Imaging.getXmpXml((ByteSource) byteSourceArray0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("dib", byteArray0);
      ICC_Profile iCC_Profile0 = Imaging.getICCProfile((ByteSource) byteSourceArray0);
      assertNotNull(iCC_Profile0);
}
 @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      ;
}
 @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PGM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      assertNotNull(imageFormat0);
}
 @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      assertNotNull(imageFormat0);
}
 @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.TIFF;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      assertNotNull(imageFormat0);
}
 @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("c3k", byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      ;
}
 @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.BMP;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      assertNotNull(imageFormat0);
}
 @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("m", byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      ;
}
 @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(7, 7, true);
      ImageFormats imageFormats0 = ImageFormats.GIF;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      assertNotNull(imageFormat0);
}
 @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      File file0 = MockFile.createTempFile("nUBRmUzQ5&u0V", "nUBRmUzQ5&u0V");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(file0);
      // Undeclared exception!
      try { 
        Imaging.guessFormat((ByteSource) byteSourceFile0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("'ez", byteArray0);
      // Undeclared exception!
      try { 
        Imaging.guessFormat((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("c3k", byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      ;
}
 @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) null);
      assertNotNull(imageFormat0);
}
 @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension("unknown (bmp");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension("r(Y9YPovQ");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("eu", true);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      BinaryOutputStream binaryOutputStream0 = new BinaryOutputStream(mockFileOutputStream0, byteOrder0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(binaryOutputStream0, true);
      ImageFormats imageFormats0 = ImageFormats.XPM;
      // Undeclared exception!
      try { 
        Imaging.writeImage((BufferedImage) null, (OutputStream) mockPrintStream0, (ImageFormat) imageFormats0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // src must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((InputStream) sequenceInputStream0, "BMP: couldn't read header");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(74, 74, true);
      ImageFormats imageFormats0 = ImageFormats.JPEG;
      try { 
        Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // This image format (Jpeg-Custom) cannot be written.
         //
         verifyException("org.apache.commons.imaging.ImageParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ImageFormat imageFormat0 = Imaging.guessFormat(byteArray0);
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(2324, 2324, true);
      MockFile mockFile0 = new MockFile("sU|In)");
      // Undeclared exception!
      try { 
        Imaging.writeImage(bufferedImage0, (File) mockFile0, imageFormat0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Format: UNKNOWN
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      FormatCompliance formatCompliance0 = Imaging.getFormatCompliance((File) mockFile0);
      assertNotNull(formatCompliance0);
}
 @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      try { 
        Imaging.getXmpXml(inputStream0, "tiff");
        fail("Expecting exception: Exception");
      } catch(Exception e) {
         //
         // Invalid TIFF byte order 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
 @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("xbm", byteArray0);
      String string0 = Imaging.getXmpXml((ByteSource) byteSourceArray0);
      ;
}
 @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("icns/icns");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "icns");
      MockFile mockFile0 = new MockFile("icns", "icns");
      ICC_Profile iCC_Profile0 = Imaging.getICCProfile((File) mockFile0);
      ;
}
 @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PGM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      Dimension dimension0 = Imaging.getImageSize(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      try { 
        Imaging.dumpImageFile(byteArray0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageSize((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Unknown (");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "8fx`&`jk[jtiffpbm");
      MockFile mockFile0 = new MockFile("Unknown (");
      // Undeclared exception!
      try { 
        Imaging.getFormatCompliance((File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: Unknown (
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      MockFile mockFile0 = new MockFile("8fx`&`jk[jpbm");
      boolean boolean0 = Imaging.hasImageFileExtension((File) mockFile0);
      ;
}
 @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension((String) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Invalid Byte Pair.", "Invalid Byte Pair.");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Invalid Byte Pair./Invalid Byte Pair./format must not be null0Invalid Byte Pair.");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Invalid Byte Pair.");
      boolean boolean0 = Imaging.hasImageFileExtension((File) mockFile0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension((File) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      MockFile mockFile0 = new MockFile("?/F/j");
      try { 
        Imaging.getXmpXml((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      try { 
        Imaging.getXmpXml((InputStream) null, "format must not be null");
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((InputStream) sequenceInputStream0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      MockFile mockFile0 = new MockFile("xbm");
      try { 
        Imaging.getImageSize((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      MockFile mockFile0 = new MockFile("OpcodeList1");
      try { 
        Imaging.getICCProfileBytes((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      Dimension dimension0 = Imaging.getImageSize(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      MockFile mockFile0 = new MockFile("EDEvibv");
      try { 
        Imaging.getAllBufferedImages((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      List<BufferedImage> list0 = Imaging.getAllBufferedImages(byteArray0);
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      MockFile mockFile0 = new MockFile("k[j", "k[j");
      try { 
        Imaging.getImageInfo((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        Imaging.getImageInfo(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((InputStream) bufferedInputStream0, "ColorSpaceRedZ");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      try { 
        Imaging.getBufferedImage((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      try { 
        Imaging.getImageInfo("pcc", byteArray0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Not a Valid PCX File count: -1 read: 9 length: 128
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
 @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }
 @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ImageFormat imageFormat0 = Imaging.guessFormat(byteArray0);
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(2324, 2324, true);
      File file0 = MockFile.createTempFile("sU|In)", "v,zf");
      MockFile mockFile0 = new MockFile(file0, "v,zf");
      try { 
        Imaging.writeImage(bufferedImage0, (File) mockFile0, imageFormat0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.guessFormat((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }
 @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Unknown (");
      try { 
        Imaging.getFormatCompliance((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        Imaging.getMetadata(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)77);
      ImageMetadata imageMetadata0 = Imaging.getMetadata((InputStream) byteArrayInputStream0, "ppm");
      assertNotNull(imageMetadata0);
}
 @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        Imaging.getFormatCompliance(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      MockFile mockFile0 = new MockFile("icns", "icns");
      try { 
        Imaging.getICCProfile((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(1, 1, true);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1938), 1);
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((InputStream) byteArrayInputStream0, "P");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((InputStream) sequenceInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
 @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      MockFile mockFile0 = new MockFile("xbm");
      try { 
        Imaging.getMetadata((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      MockFile mockFile0 = new MockFile(");)8%/:yJ]ShU&y{");
      try { 
        Imaging.dumpImageFile((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        Imaging.getImageSize((InputStream) dataInputStream0, "EU0=tf");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }
