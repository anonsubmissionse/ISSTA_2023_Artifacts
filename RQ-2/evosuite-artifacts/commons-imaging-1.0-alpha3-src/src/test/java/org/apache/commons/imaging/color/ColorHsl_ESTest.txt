 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ColorHsl colorHsl0 = new ColorHsl((-2158.8895219), (-2158.8895219), (-2158.8895219));
      colorHsl0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ColorHsl colorHsl0 = new ColorHsl((-2158.8895219), (-2158.8895219), (-2158.8895219));
      colorHsl0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ColorHsl colorHsl0 = new ColorHsl((-2158.8895219), (-2158.8895219), (-2158.8895219));
      colorHsl0.hashCode();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.RED;
      colorHsl0.hashCode();
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.RED;
      ColorHsl colorHsl1 = ColorHsl.WHITE;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.RED;
      ColorHsl colorHsl1 = ColorHsl.WHITE;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.WHITE;
      ColorHsl colorHsl1 = new ColorHsl(0.0, 0.0, 100.0);
      boolean boolean0 = colorHsl1.equals(colorHsl0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.BLACK;
      ColorHsl colorHsl1 = ColorHsl.RED;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.BLACK;
      ColorHsl colorHsl1 = ColorHsl.GREEN;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.BLACK;
      String string0 = colorHsl0.RED.toString();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.WHITE;
      ColorHsl colorHsl1 = ColorHsl.RED;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.WHITE;
      ColorHsl colorHsl1 = ColorHsl.RED;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.WHITE;
      ColorHsl colorHsl1 = ColorHsl.BLACK;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.WHITE;
      ColorHsl colorHsl1 = ColorHsl.BLACK;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.BLUE;
      ColorHsl colorHsl1 = ColorHsl.WHITE;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.RED;
      boolean boolean0 = colorHsl0.equals((Object) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.BLACK;
      boolean boolean0 = colorHsl0.equals(colorHsl0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.BLACK;
      boolean boolean0 = colorHsl0.equals("?39#EIVj},&U[1:i3v");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.WHITE;
      String string0 = colorHsl0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.WHITE;
      colorHsl0.hashCode();
  }
