/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 00:45:26 GMT 2022
 */

package org.apache.commons.configuration2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Writer;
import java.lang.reflect.Proxy;
import java.util.List;
import javax.xml.transform.Transformer;
import org.apache.commons.configuration2.AbstractYAMLBasedConfiguration;
import org.apache.commons.configuration2.BaseHierarchicalConfiguration;
import org.apache.commons.configuration2.CombinedConfiguration;
import org.apache.commons.configuration2.Configuration;
import org.apache.commons.configuration2.DynamicCombinedConfiguration;
import org.apache.commons.configuration2.HierarchicalConfiguration;
import org.apache.commons.configuration2.INIConfiguration;
import org.apache.commons.configuration2.ImmutableHierarchicalConfiguration;
import org.apache.commons.configuration2.JSONConfiguration;
import org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper;
import org.apache.commons.configuration2.SubnodeConfiguration;
import org.apache.commons.configuration2.XMLConfiguration;
import org.apache.commons.configuration2.YAMLConfiguration;
import org.apache.commons.configuration2.event.ConfigurationEvent;
import org.apache.commons.configuration2.event.EventType;
import org.apache.commons.configuration2.interpol.ConfigurationInterpolator;
import org.apache.commons.configuration2.tree.ImmutableNode;
import org.apache.commons.configuration2.tree.InMemoryNodeModel;
import org.apache.commons.configuration2.tree.InMemoryNodeModelSupport;
import org.apache.commons.configuration2.tree.MergeCombiner;
import org.apache.commons.configuration2.tree.NodeHandler;
import org.apache.commons.configuration2.tree.NodeModel;
import org.apache.commons.configuration2.tree.NodeSelector;
import org.apache.commons.configuration2.tree.OverrideCombiner;
import org.apache.commons.configuration2.tree.TrackedNodeModel;
import org.apache.commons.configuration2.tree.UnionCombiner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseHierarchicalConfiguration_ESTest extends BaseHierarchicalConfiguration_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration();
      INIConfiguration iNIConfiguration0 = new INIConfiguration(abstractYAMLBasedConfiguration0);
      SubnodeConfiguration subnodeConfiguration0 = iNIConfiguration0.getSection("");
      abstractYAMLBasedConfiguration0.initSubConfigurationForThisParent(subnodeConfiguration0);
      assertFalse(subnodeConfiguration0.isDetailEvents());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration();
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      EventType<ConfigurationEvent> eventType0 = ConfigurationEvent.ANY;
      Integer integer0 = new Integer(0);
      ConfigurationEvent configurationEvent0 = new ConfigurationEvent(yAMLConfiguration0, eventType0, "Passed in key must select exactly one node (found %,d): %s", integer0, true);
      baseHierarchicalConfiguration0.subnodeConfigurationChanged(configurationEvent0);
      assertTrue(baseHierarchicalConfiguration0.isThrowExceptionOnMissing());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration((HierarchicalConfiguration<ImmutableNode>) null);
      Proxy proxy0 = (Proxy)baseHierarchicalConfiguration0.immutableConfigurationAt("");
      assertNotNull(proxy0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration((NodeModel<ImmutableNode>) null);
      InMemoryNodeModel inMemoryNodeModel0 = baseHierarchicalConfiguration0.getSubConfigurationParentModel();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration();
      InMemoryNodeModel inMemoryNodeModel0 = abstractYAMLBasedConfiguration0.getSubConfigurationParentModel();
      assertNotNull(inMemoryNodeModel0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration();
      NodeSelector nodeSelector0 = baseHierarchicalConfiguration0.getSubConfigurationNodeSelector("");
      assertNotNull(nodeSelector0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      InMemoryNodeModel inMemoryNodeModel0 = iNIConfiguration0.getNodeModel();
      assertNotNull(inMemoryNodeModel0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      List<HierarchicalConfiguration<ImmutableNode>> list0 = xMLConfiguration0.configurationsAt("4=d>O&O.x[S7?2_", false);
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration();
      List<HierarchicalConfiguration<ImmutableNode>> list0 = baseHierarchicalConfiguration0.configurationsAt("org.hsqldb.rowio.RowOutputBase");
      assertEquals(1, list0.size());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration();
      HierarchicalConfiguration<ImmutableNode> hierarchicalConfiguration0 = abstractYAMLBasedConfiguration0.configurationAt("");
      assertNotNull(hierarchicalConfiguration0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      iNIConfiguration0.getSection("org.apache.commons.configuration2.BaseHierarchicalConfiguration$BuilderVisitor");
      List<HierarchicalConfiguration<ImmutableNode>> list0 = iNIConfiguration0.childConfigurationsAt((String) null, false);
      assertEquals(1, list0.size());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper((HierarchicalConfiguration<ImmutableNode>) null, "");
      // Undeclared exception!
      try { 
        patternSubtreeConfigurationWrapper0.subset("org.apache.commons.configuration2.BaseHierarchicalConfiguration$InterpolatedVisitor");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OverrideCombiner overrideCombiner0 = new OverrideCombiner();
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration(overrideCombiner0);
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = (BaseHierarchicalConfiguration)dynamicCombinedConfiguration0.subset("T");
      assertFalse(baseHierarchicalConfiguration0.isDetailEvents());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper(iNIConfiguration0, "hsqldb.log_size");
      // Undeclared exception!
      try { 
        patternSubtreeConfigurationWrapper0.interpolatedConfiguration();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Passed in key must select exactly one node (found 0): hsqldb.log_size
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration((NodeModel<ImmutableNode>) null);
      // Undeclared exception!
      try { 
        baseHierarchicalConfiguration0.interpolatedConfiguration();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration();
      abstractYAMLBasedConfiguration0.setInterpolator((ConfigurationInterpolator) null);
      // Undeclared exception!
      try { 
        abstractYAMLBasedConfiguration0.interpolatedConfiguration();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.AbstractConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration();
      INIConfiguration iNIConfiguration0 = new INIConfiguration(abstractYAMLBasedConfiguration0);
      SubnodeConfiguration subnodeConfiguration0 = iNIConfiguration0.getSection("");
      NodeSelector nodeSelector0 = new NodeSelector("");
      SubnodeConfiguration subnodeConfiguration1 = subnodeConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, abstractYAMLBasedConfiguration0);
      // Undeclared exception!
      try { 
        subnodeConfiguration1.interpolatedConfiguration();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.commons.configuration2.tree.TrackedNodeModel cannot be cast to org.apache.commons.configuration2.tree.InMemoryNodeModel
         //
         verifyException("org.apache.commons.configuration2.SubnodeConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration();
      // Undeclared exception!
      try { 
        baseHierarchicalConfiguration0.initSubConfigurationForThisParent((SubnodeConfiguration) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      SubnodeConfiguration subnodeConfiguration0 = iNIConfiguration0.getSection("");
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration(subnodeConfiguration0);
      NodeSelector nodeSelector0 = new NodeSelector("");
      SubnodeConfiguration subnodeConfiguration1 = baseHierarchicalConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, subnodeConfiguration0);
      // Undeclared exception!
      try { 
        subnodeConfiguration1.immutableConfigurationsAt("");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@3a[keys=[]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper((HierarchicalConfiguration<ImmutableNode>) null, "");
      // Undeclared exception!
      try { 
        patternSubtreeConfigurationWrapper0.immutableConfigurationsAt("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration((NodeModel<ImmutableNode>) null);
      // Undeclared exception!
      try { 
        baseHierarchicalConfiguration0.immutableConfigurationsAt("$H!:oz|db5");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration();
      // Undeclared exception!
      try { 
        baseHierarchicalConfiguration0.immutableConfigurationAt("%Sy`92}h#/R)/,oT", false);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Passed in key must select exactly one node (found 0): %Sy`92}h#/R)/,oT
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper((HierarchicalConfiguration<ImmutableNode>) null, "");
      // Undeclared exception!
      try { 
        patternSubtreeConfigurationWrapper0.immutableConfigurationAt("d2)?WK{\"_", false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UnionCombiner unionCombiner0 = new UnionCombiner();
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration(unionCombiner0);
      // Undeclared exception!
      try { 
        dynamicCombinedConfiguration0.immutableConfigurationAt("4S", false);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Passed in key must select exactly one node (found 0): 4S
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      INIConfiguration iNIConfiguration0 = new INIConfiguration(jSONConfiguration0);
      SubnodeConfiguration subnodeConfiguration0 = iNIConfiguration0.getSection(".k-E%pT");
      NodeModel<ImmutableNode> nodeModel0 = subnodeConfiguration0.cloneNodeModel();
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration(nodeModel0);
      // Undeclared exception!
      try { 
        baseHierarchicalConfiguration0.immutableConfigurationAt("1(y+]]2m", true);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.commons.configuration2.tree.TrackedNodeModel cannot be cast to org.apache.commons.configuration2.tree.InMemoryNodeModel
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration();
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper(abstractYAMLBasedConfiguration0, "");
      // Undeclared exception!
      try { 
        patternSubtreeConfigurationWrapper0.immutableConfigurationAt((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration();
      // Undeclared exception!
      try { 
        dynamicCombinedConfiguration0.immutableConfigurationAt("nL");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Passed in key must select exactly one node (found 0): nL
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("k/|Ree4ki'");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(xMLConfiguration0, nodeSelector0, true);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(xMLConfiguration0, trackedNodeModel0);
      // Undeclared exception!
      try { 
        subnodeConfiguration0.immutableChildConfigurationsAt("k/|Ree4ki'");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@13[keys=[k/|Ree4ki']]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector((String) null);
      TrackedNodeModel trackedNodeModel0 = mock(TrackedNodeModel.class, new ViolatedAssumptionAnswer());
      doReturn((NodeHandler) null).when(trackedNodeModel0).getNodeHandler();
      doReturn(nodeSelector0).when(trackedNodeModel0).getSelector();
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(jSONConfiguration0, trackedNodeModel0);
      // Undeclared exception!
      try { 
        subnodeConfiguration0.immutableChildConfigurationsAt("TIMESTAMP");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration((HierarchicalConfiguration<ImmutableNode>) null);
      INIConfiguration iNIConfiguration0 = new INIConfiguration(xMLConfiguration0);
      SubnodeConfiguration subnodeConfiguration0 = iNIConfiguration0.getSection("p`\")F )DF<<{h");
      NodeSelector nodeSelector0 = new NodeSelector("p`\")F )DF<<{h");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(xMLConfiguration0, nodeSelector0, false);
      SubnodeConfiguration subnodeConfiguration1 = new SubnodeConfiguration(subnodeConfiguration0, trackedNodeModel0);
      SubnodeConfiguration subnodeConfiguration2 = subnodeConfiguration1.createSubConfigurationForTrackedNode(nodeSelector0, subnodeConfiguration0);
      SubnodeConfiguration subnodeConfiguration3 = subnodeConfiguration2.createSubConfigurationForTrackedNode(nodeSelector0, subnodeConfiguration0);
      // Undeclared exception!
      try { 
        subnodeConfiguration3.getSubConfigurationParentModel();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@46[keys=[p`\")F )DF<<{h]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      InMemoryNodeModel inMemoryNodeModel0 = new InMemoryNodeModel();
      NodeSelector nodeSelector0 = inMemoryNodeModel0.trackChildNodeWithCreation("", " char of CLOB data cannot be read", combinedConfiguration0);
      MergeCombiner mergeCombiner0 = new MergeCombiner();
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration(mergeCombiner0);
      SubnodeConfiguration subnodeConfiguration0 = combinedConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, dynamicCombinedConfiguration0);
      InMemoryNodeModel inMemoryNodeModel1 = subnodeConfiguration0.getSubConfigurationParentModel();
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration((HierarchicalConfiguration<ImmutableNode>) null);
      NodeSelector nodeSelector0 = new NodeSelector("");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(xMLConfiguration0, nodeSelector0, true);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(xMLConfiguration0, trackedNodeModel0);
      // Undeclared exception!
      try { 
        subnodeConfiguration0.getNodeModel();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@13[keys=[]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration();
      InMemoryNodeModel inMemoryNodeModel0 = dynamicCombinedConfiguration0.getNodeModel();
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper((HierarchicalConfiguration<ImmutableNode>) null, "~gf\"F>_");
      NodeSelector nodeSelector0 = new NodeSelector("");
      // Undeclared exception!
      try { 
        patternSubtreeConfigurationWrapper0.createSubConfigurationForTrackedNode(nodeSelector0, patternSubtreeConfigurationWrapper0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UnionCombiner unionCombiner0 = new UnionCombiner();
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration(unionCombiner0);
      NodeSelector nodeSelector0 = new NodeSelector("");
      // Undeclared exception!
      try { 
        combinedConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, (InMemoryNodeModelSupport) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Underlying model support must not be null!
         //
         verifyException("org.apache.commons.configuration2.tree.TrackedNodeModel", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("org.apache.commons.configuration2.BaseHierarchicalConfiguration");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(xMLConfiguration0, nodeSelector0, true);
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration(trackedNodeModel0);
      // Undeclared exception!
      try { 
        baseHierarchicalConfiguration0.configurationsAt("E0", false);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@13[keys=[org.apache.commons.configuration2.BaseHierarchicalConfiguration]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UnionCombiner unionCombiner0 = new UnionCombiner();
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration(unionCombiner0);
      List<HierarchicalConfiguration<ImmutableNode>> list0 = dynamicCombinedConfiguration0.configurationsAt("9w", true);
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      SubnodeConfiguration subnodeConfiguration0 = iNIConfiguration0.getSection("");
      NodeModel<ImmutableNode> nodeModel0 = subnodeConfiguration0.cloneNodeModel();
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration(nodeModel0);
      // Undeclared exception!
      try { 
        baseHierarchicalConfiguration0.configurationsAt("l", true);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.commons.configuration2.tree.TrackedNodeModel cannot be cast to org.apache.commons.configuration2.tree.InMemoryNodeModel
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(iNIConfiguration0, nodeSelector0, true);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(iNIConfiguration0, trackedNodeModel0);
      // Undeclared exception!
      try { 
        subnodeConfiguration0.configurationsAt("Passed in key must select exactly one node (found %,d): %s");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@11[keys=[]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration();
      List<HierarchicalConfiguration<ImmutableNode>> list0 = dynamicCombinedConfiguration0.configurationsAt("Rbg<X$>w>");
      assertEquals(1, list0.size());
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper((HierarchicalConfiguration<ImmutableNode>) null, "032NZl)7$0");
      // Undeclared exception!
      try { 
        patternSubtreeConfigurationWrapper0.configurationAt("032NZl)7$0", true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper", e);
      }
  }
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration((NodeModel<ImmutableNode>) null);
      // Undeclared exception!
      try { 
        baseHierarchicalConfiguration0.configurationAt("i]'", false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      InMemoryNodeModel inMemoryNodeModel0 = new InMemoryNodeModel();
      UnionCombiner unionCombiner0 = new UnionCombiner();
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration(unionCombiner0);
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      NodeSelector nodeSelector0 = inMemoryNodeModel0.trackChildNodeWithCreation("", "", jSONConfiguration0);
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(combinedConfiguration0, nodeSelector0, false);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(combinedConfiguration0, trackedNodeModel0);
      // Undeclared exception!
      try { 
        subnodeConfiguration0.cloneNodeModel();
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Selector does not select unique node: org.apache.commons.configuration2.tree.NodeSelector@51[keys=[(0)]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration((HierarchicalConfiguration<ImmutableNode>) null);
      INIConfiguration iNIConfiguration0 = new INIConfiguration((HierarchicalConfiguration<ImmutableNode>) null);
      NodeSelector nodeSelector0 = new NodeSelector("org.apache.commons.configuration2.BaseHierarchicalConfiguration$BuilderVisitor");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(iNIConfiguration0, nodeSelector0, true);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(abstractYAMLBasedConfiguration0, trackedNodeModel0);
      SubnodeConfiguration subnodeConfiguration1 = subnodeConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, iNIConfiguration0);
      // Undeclared exception!
      try { 
        subnodeConfiguration1.cloneNodeModel();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.commons.configuration2.tree.TrackedNodeModel cannot be cast to org.apache.commons.configuration2.tree.InMemoryNodeModel
         //
         verifyException("org.apache.commons.configuration2.SubnodeConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper((HierarchicalConfiguration<ImmutableNode>) null, "lL,O:zw");
      // Undeclared exception!
      try { 
        patternSubtreeConfigurationWrapper0.childConfigurationsAt("lL,O:zw", true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration((NodeModel<ImmutableNode>) null);
      // Undeclared exception!
      try { 
        baseHierarchicalConfiguration0.childConfigurationsAt((String) null, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("g:LAL");
      SubnodeConfiguration subnodeConfiguration0 = xMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, xMLConfiguration0);
      // Undeclared exception!
      try { 
        subnodeConfiguration0.childConfigurationsAt("");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@13[keys=[g:LAL]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration();
      List<HierarchicalConfiguration<ImmutableNode>> list0 = dynamicCombinedConfiguration0.childConfigurationsAt("nqp-xN}HlPX{>\"TG*");
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      NodeSelector nodeSelector0 = new NodeSelector("");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(yAMLConfiguration0, nodeSelector0, true);
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration(trackedNodeModel0);
      SubnodeConfiguration subnodeConfiguration0 = yAMLConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, baseHierarchicalConfiguration0);
      // Undeclared exception!
      try { 
        subnodeConfiguration0.childConfigurationsAt("_V]e)_?");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.commons.configuration2.tree.TrackedNodeModel cannot be cast to org.apache.commons.configuration2.tree.InMemoryNodeModel
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration();
      TrackedNodeModel trackedNodeModel0 = mock(TrackedNodeModel.class, new ViolatedAssumptionAnswer());
      doReturn((NodeSelector) null).when(trackedNodeModel0).getSelector();
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(jSONConfiguration0, trackedNodeModel0);
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = null;
      try {
        baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration(subnodeConfiguration0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // No tracked node found: null
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration((NodeModel<ImmutableNode>) null);
      BaseHierarchicalConfiguration baseHierarchicalConfiguration1 = null;
      try {
        baseHierarchicalConfiguration1 = new BaseHierarchicalConfiguration(baseHierarchicalConfiguration0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration();
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration(dynamicCombinedConfiguration0);
      ;
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      Configuration configuration0 = yAMLConfiguration0.interpolatedConfiguration();
      yAMLConfiguration0.setPropertyInternal("n4YqQEFA\"~+cUIUqv", configuration0);
      Configuration configuration1 = yAMLConfiguration0.interpolatedConfiguration();
      ;
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration();
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper(iNIConfiguration0, "!]w , *\"} <ZvsB");
      baseHierarchicalConfiguration0.setProperty("!]w , *\"} <ZvsB", patternSubtreeConfigurationWrapper0);
      List<HierarchicalConfiguration<ImmutableNode>> list0 = baseHierarchicalConfiguration0.childConfigurationsAt("");
      assertEquals(1, list0.size());
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration();
      List<HierarchicalConfiguration<ImmutableNode>> list0 = abstractYAMLBasedConfiguration0.childConfigurationsAt("");
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration();
      List<HierarchicalConfiguration<ImmutableNode>> list0 = baseHierarchicalConfiguration0.childConfigurationsAt("vW2887{J?|]4u9<1M");
      assertEquals(1, list0.size());
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      List<HierarchicalConfiguration<ImmutableNode>> list0 = xMLConfiguration0.configurationsAt((String) null);
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      JSONConfiguration jSONConfiguration0 = new JSONConfiguration(xMLConfiguration0);
      HierarchicalConfiguration<ImmutableNode> hierarchicalConfiguration0 = jSONConfiguration0.configurationAt("", true);
      ;
}
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration((HierarchicalConfiguration<ImmutableNode>) null);
      // Undeclared exception!
      try { 
        baseHierarchicalConfiguration0.configurationAt("org.apache.commons.configuration2.BaseHierarchicalConfiguration$1", false);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Passed in key must select exactly one node (found 0): org.apache.commons.configuration2.BaseHierarchicalConfiguration$1
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration((NodeModel<ImmutableNode>) null);
      InMemoryNodeModel inMemoryNodeModel0 = baseHierarchicalConfiguration0.getNodeModel();
      ;
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration((NodeModel<ImmutableNode>) null);
      // Undeclared exception!
      try { 
        baseHierarchicalConfiguration0.configurationAt("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration();
      PatternSubtreeConfigurationWrapper patternSubtreeConfigurationWrapper0 = new PatternSubtreeConfigurationWrapper(abstractYAMLBasedConfiguration0, "");
      NodeSelector nodeSelector0 = new NodeSelector("");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(patternSubtreeConfigurationWrapper0, nodeSelector0, false);
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration(trackedNodeModel0);
      // Undeclared exception!
      try { 
        baseHierarchicalConfiguration0.getSubConfigurationParentModel();
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // org.apache.commons.configuration2.tree.TrackedNodeModel cannot be cast to org.apache.commons.configuration2.tree.InMemoryNodeModel
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      xMLConfiguration0.setProperty("org.apache.commons.configuration2.BaseHierarchicalConfiguration$BuilderVisitor", "org.apache.commons.configuration2.BaseHierarchicalConfiguration$BuilderVisitor");
      xMLConfiguration0.addPropertyInternal("org.apache.commons.configuration2.BaseHierarchicalConfiguration$BuilderVisitor", "org.apache.commons.configuration2.BaseHierarchicalConfiguration$BuilderVisitor");
      Transformer transformer0 = xMLConfiguration0.createTransformer();
      // Undeclared exception!
      try { 
        xMLConfiguration0.write((Writer) null, transformer0);
        fail("Expecting exception: DOMException");
      } catch(DOMException e) {
      }
  }
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration();
      yAMLConfiguration0.setPropertyInternal("n4YqQEFA\"~+cUIUqv", yAMLConfiguration0);
      List<ImmutableHierarchicalConfiguration> list0 = yAMLConfiguration0.immutableChildConfigurationsAt("");
      ;
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration();
      List<HierarchicalConfiguration<ImmutableNode>> list0 = abstractYAMLBasedConfiguration0.configurationsAt("", true);
      assertEquals(0, list0.size());
}
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      List<HierarchicalConfiguration<ImmutableNode>> list0 = iNIConfiguration0.childConfigurationsAt("n4YqQEFA\"~+cUIUqv", true);
      assertEquals(1, list0.size());
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      YAMLConfiguration yAMLConfiguration0 = new YAMLConfiguration(iNIConfiguration0);
      yAMLConfiguration0.setPropertyInternal("n4YqQEFA\"~+cUIUqv", yAMLConfiguration0);
      Configuration configuration0 = yAMLConfiguration0.subset("n4YqQEFA\"~+cUIUqv");
      assertNotNull(configuration0);
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration();
      BaseHierarchicalConfiguration baseHierarchicalConfiguration1 = (BaseHierarchicalConfiguration)baseHierarchicalConfiguration0.subset("xmH~{2k");
      ;
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      XMLConfiguration xMLConfiguration0 = new XMLConfiguration();
      Proxy proxy0 = (Proxy)xMLConfiguration0.immutableConfigurationAt((String) null, false);
      ;
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration();
      List<ImmutableHierarchicalConfiguration> list0 = abstractYAMLBasedConfiguration0.immutableChildConfigurationsAt("");
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      SubnodeConfiguration subnodeConfiguration0 = iNIConfiguration0.getSection("org.apache.commons.configuration2.BaseHierarchicalConfiguration$BuilderVisitor");
      // Undeclared exception!
      try { 
        subnodeConfiguration0.immutableConfigurationAt("org.apache.commons.configuration2.BaseHierarchicalConfiguration$BuilderVisitor");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Passed in key must select exactly one node (found 0): org.apache.commons.configuration2.BaseHierarchicalConfiguration$BuilderVisitor
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      // Undeclared exception!
      try { 
        iNIConfiguration0.subnodeConfigurationChanged((ConfigurationEvent) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.BaseHierarchicalConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      SubnodeConfiguration subnodeConfiguration0 = iNIConfiguration0.getSection("org.apache.commons.configuration2.BaseHierarchicalConfiguration$BuilderVisitor");
      List<ImmutableHierarchicalConfiguration> list0 = subnodeConfiguration0.immutableConfigurationsAt((String) null);
      assertTrue(list0.isEmpty());
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      INIConfiguration iNIConfiguration0 = new INIConfiguration();
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = (BaseHierarchicalConfiguration)iNIConfiguration0.subset("");
      ;
}
}
