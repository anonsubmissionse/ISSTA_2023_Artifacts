 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[9];
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      // Undeclared exception!
      try { 
        combinedBeanDeclaration0.getNestedBeanDeclarations();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[0];
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      Map<String, Object> map0 = combinedBeanDeclaration0.getNestedBeanDeclarations();
      assertTrue(map0.isEmpty());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[1];
      HierarchicalConfiguration<Object> hierarchicalConfiguration0 = (HierarchicalConfiguration<Object>) mock(HierarchicalConfiguration.class, new ViolatedAssumptionAnswer());
      doReturn((ConfigurationInterpolator) null, (ConfigurationInterpolator) null).when(hierarchicalConfiguration0).getInterpolator();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      ConstructorArg constructorArg0 = ConstructorArg.forValue((Object) locale_FilteringMode0, "w64SqsSq");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      NodeHandler<Object> nodeHandler0 = (NodeHandler<Object>) mock(NodeHandler.class, new ViolatedAssumptionAnswer());
      doReturn(constructorArg0, (Object) null).when(nodeHandler0).getAttributeValue(any() , anyString());
      doReturn(set0).when(nodeHandler0).getAttributes(any());
      XMLBeanDeclaration.NodeData<Object> xMLBeanDeclaration_NodeData0 = new XMLBeanDeclaration.NodeData<Object>(hierarchicalConfiguration0, nodeHandler0);
      XMLBeanDeclaration xMLBeanDeclaration0 = new XMLBeanDeclaration(hierarchicalConfiguration0, xMLBeanDeclaration_NodeData0);
      beanDeclarationArray0[0] = (BeanDeclaration) xMLBeanDeclaration0;
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      Map<String, Object> map0 = combinedBeanDeclaration0.getBeanProperties();
      assertTrue(map0.isEmpty());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[1];
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      // Undeclared exception!
      try { 
        combinedBeanDeclaration0.getNestedBeanDeclarations();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[1];
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      // Undeclared exception!
      try { 
        combinedBeanDeclaration0.getConstructorArgs();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[8];
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      // Undeclared exception!
      try { 
        combinedBeanDeclaration0.getBeanProperties();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[9];
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      // Undeclared exception!
      try { 
        combinedBeanDeclaration0.getBeanFactoryParameter();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[1];
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      // Undeclared exception!
      try { 
        combinedBeanDeclaration0.getBeanClassName();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CombinedBeanDeclaration combinedBeanDeclaration0 = null;
      try {
        combinedBeanDeclaration0 = new CombinedBeanDeclaration((BeanDeclaration[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[1];
      HierarchicalConfiguration<Object> hierarchicalConfiguration0 = (HierarchicalConfiguration<Object>) mock(HierarchicalConfiguration.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(hierarchicalConfiguration0).getProperty(anyString());
      NodeHandler<CombinedBeanDeclaration> nodeHandler0 = (NodeHandler<CombinedBeanDeclaration>) mock(NodeHandler.class, new ViolatedAssumptionAnswer());
      XMLBeanDeclaration.NodeData<CombinedBeanDeclaration> xMLBeanDeclaration_NodeData0 = new XMLBeanDeclaration.NodeData<CombinedBeanDeclaration>((CombinedBeanDeclaration) null, nodeHandler0);
      XMLBeanDeclaration xMLBeanDeclaration0 = new XMLBeanDeclaration(hierarchicalConfiguration0, xMLBeanDeclaration_NodeData0);
      beanDeclarationArray0[0] = (BeanDeclaration) xMLBeanDeclaration0;
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      Object object0 = combinedBeanDeclaration0.getBeanFactoryParameter();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[1];
      HierarchicalConfiguration<Object> hierarchicalConfiguration0 = (HierarchicalConfiguration<Object>) mock(HierarchicalConfiguration.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(hierarchicalConfiguration0).getString(anyString() , anyString());
      NodeHandler<CombinedBeanDeclaration> nodeHandler0 = (NodeHandler<CombinedBeanDeclaration>) mock(NodeHandler.class, new ViolatedAssumptionAnswer());
      XMLBeanDeclaration.NodeData<CombinedBeanDeclaration> xMLBeanDeclaration_NodeData0 = new XMLBeanDeclaration.NodeData<CombinedBeanDeclaration>((CombinedBeanDeclaration) null, nodeHandler0);
      XMLBeanDeclaration xMLBeanDeclaration0 = new XMLBeanDeclaration(hierarchicalConfiguration0, xMLBeanDeclaration_NodeData0);
      beanDeclarationArray0[0] = (BeanDeclaration) xMLBeanDeclaration0;
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      String string0 = combinedBeanDeclaration0.getBeanFactoryName();
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[1];
      XMLPropertiesConfiguration xMLPropertiesConfiguration0 = new XMLPropertiesConfiguration();
      ConfigurationInterpolator configurationInterpolator0 = xMLPropertiesConfiguration0.getInterpolator();
      HierarchicalConfiguration<Object> hierarchicalConfiguration0 = (HierarchicalConfiguration<Object>) mock(HierarchicalConfiguration.class, new ViolatedAssumptionAnswer());
      doReturn(configurationInterpolator0, configurationInterpolator0).when(hierarchicalConfiguration0).getInterpolator();
      Vector<CombinedBeanDeclaration> vector0 = new Vector<CombinedBeanDeclaration>();
      vector0.add((CombinedBeanDeclaration) null);
      Locale locale0 = Locale.GERMAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      NodeHandler<CombinedBeanDeclaration> nodeHandler0 = (NodeHandler<CombinedBeanDeclaration>) mock(NodeHandler.class, new ViolatedAssumptionAnswer());
      doReturn("getDatabase", vector0).when(nodeHandler0).getAttributeValue(any(org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration.class) , anyString());
      doReturn(set0).when(nodeHandler0).getAttributes(any(org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration.class));
      doReturn(vector0).when(nodeHandler0).getChildren(any(org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration.class) , anyString());
      XMLBeanDeclaration.NodeData<CombinedBeanDeclaration> xMLBeanDeclaration_NodeData0 = new XMLBeanDeclaration.NodeData<CombinedBeanDeclaration>((CombinedBeanDeclaration) null, nodeHandler0);
      XMLBeanDeclaration xMLBeanDeclaration0 = new XMLBeanDeclaration(hierarchicalConfiguration0, xMLBeanDeclaration_NodeData0);
      beanDeclarationArray0[0] = (BeanDeclaration) xMLBeanDeclaration0;
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      Collection<ConstructorArg> collection0 = combinedBeanDeclaration0.getConstructorArgs();
      assertNotNull(collection0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[1];
      HierarchicalConfiguration<Object> hierarchicalConfiguration0 = (HierarchicalConfiguration<Object>) mock(HierarchicalConfiguration.class, new ViolatedAssumptionAnswer());
      Stack<CombinedBeanDeclaration> stack0 = new Stack<CombinedBeanDeclaration>();
      NodeHandler<CombinedBeanDeclaration> nodeHandler0 = (NodeHandler<CombinedBeanDeclaration>) mock(NodeHandler.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(nodeHandler0).getChildren(any(org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration.class) , anyString());
      XMLBeanDeclaration.NodeData<CombinedBeanDeclaration> xMLBeanDeclaration_NodeData0 = new XMLBeanDeclaration.NodeData<CombinedBeanDeclaration>((CombinedBeanDeclaration) null, nodeHandler0);
      XMLBeanDeclaration xMLBeanDeclaration0 = new XMLBeanDeclaration(hierarchicalConfiguration0, xMLBeanDeclaration_NodeData0);
      beanDeclarationArray0[0] = (BeanDeclaration) xMLBeanDeclaration0;
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      // Undeclared exception!
      try { 
        combinedBeanDeclaration0.getConstructorArgs();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.beanutils.XMLBeanDeclaration$NodeData", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[1];
      HierarchicalConfiguration<Object> hierarchicalConfiguration0 = (HierarchicalConfiguration<Object>) mock(HierarchicalConfiguration.class, new ViolatedAssumptionAnswer());
      Stack<CombinedBeanDeclaration> stack0 = new Stack<CombinedBeanDeclaration>();
      NodeHandler<CombinedBeanDeclaration> nodeHandler0 = (NodeHandler<CombinedBeanDeclaration>) mock(NodeHandler.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(nodeHandler0).getChildren(any(org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration.class));
      XMLBeanDeclaration.NodeData<CombinedBeanDeclaration> xMLBeanDeclaration_NodeData0 = new XMLBeanDeclaration.NodeData<CombinedBeanDeclaration>((CombinedBeanDeclaration) null, nodeHandler0);
      XMLBeanDeclaration xMLBeanDeclaration0 = new XMLBeanDeclaration(hierarchicalConfiguration0, xMLBeanDeclaration_NodeData0);
      beanDeclarationArray0[0] = (BeanDeclaration) xMLBeanDeclaration0;
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      // Undeclared exception!
      try { 
        combinedBeanDeclaration0.getNestedBeanDeclarations();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.beanutils.XMLBeanDeclaration$NodeData", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[1];
      HierarchicalConfiguration<Object> hierarchicalConfiguration0 = (HierarchicalConfiguration<Object>) mock(HierarchicalConfiguration.class, new ViolatedAssumptionAnswer());
      Locale locale0 = Locale.GERMAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      NodeHandler<CombinedBeanDeclaration> nodeHandler0 = (NodeHandler<CombinedBeanDeclaration>) mock(NodeHandler.class, new ViolatedAssumptionAnswer());
      doReturn(set0).when(nodeHandler0).getAttributes(any(org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration.class));
      XMLBeanDeclaration.NodeData<CombinedBeanDeclaration> xMLBeanDeclaration_NodeData0 = new XMLBeanDeclaration.NodeData<CombinedBeanDeclaration>((CombinedBeanDeclaration) null, nodeHandler0);
      XMLBeanDeclaration xMLBeanDeclaration0 = new XMLBeanDeclaration(hierarchicalConfiguration0, xMLBeanDeclaration_NodeData0);
      beanDeclarationArray0[0] = (BeanDeclaration) xMLBeanDeclaration0;
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      Map<String, Object> map0 = combinedBeanDeclaration0.getBeanProperties();
      assertTrue(map0.isEmpty());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[1];
      HierarchicalConfiguration<Object> hierarchicalConfiguration0 = (HierarchicalConfiguration<Object>) mock(HierarchicalConfiguration.class, new ViolatedAssumptionAnswer());
      doReturn("getDatabase").when(hierarchicalConfiguration0).getString(anyString() , anyString());
      NodeHandler<CombinedBeanDeclaration> nodeHandler0 = (NodeHandler<CombinedBeanDeclaration>) mock(NodeHandler.class, new ViolatedAssumptionAnswer());
      XMLBeanDeclaration.NodeData<CombinedBeanDeclaration> xMLBeanDeclaration_NodeData0 = new XMLBeanDeclaration.NodeData<CombinedBeanDeclaration>((CombinedBeanDeclaration) null, nodeHandler0);
      XMLBeanDeclaration xMLBeanDeclaration0 = new XMLBeanDeclaration(hierarchicalConfiguration0, xMLBeanDeclaration_NodeData0);
      beanDeclarationArray0[0] = (BeanDeclaration) xMLBeanDeclaration0;
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      String string0 = combinedBeanDeclaration0.getBeanClassName();
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BeanDeclaration[] beanDeclarationArray0 = new BeanDeclaration[1];
      CombinedBeanDeclaration combinedBeanDeclaration0 = new CombinedBeanDeclaration(beanDeclarationArray0);
      // Undeclared exception!
      try { 
        combinedBeanDeclaration0.getBeanFactoryName();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration", e);
      }
  }
