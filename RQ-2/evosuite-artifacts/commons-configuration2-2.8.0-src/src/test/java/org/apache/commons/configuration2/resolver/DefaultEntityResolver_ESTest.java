/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 01:05:28 GMT 2022
 */

package org.apache.commons.configuration2.resolver;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URL;
import java.util.Map;
import org.apache.commons.configuration2.resolver.DefaultEntityResolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultEntityResolver_ESTest extends DefaultEntityResolver_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultEntityResolver defaultEntityResolver0 = new DefaultEntityResolver();
      URL uRL0 = MockURL.getHttpExample();
      defaultEntityResolver0.registerEntityId("", uRL0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      InputSource inputSource0 = defaultEntityResolver0.resolveEntity("", "");
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultEntityResolver defaultEntityResolver0 = new DefaultEntityResolver();
      URL uRL0 = MockURL.getHttpExample();
      defaultEntityResolver0.registerEntityId("", uRL0);
      Map<String, URL> map0 = defaultEntityResolver0.getRegisteredEntities();
      assertTrue(map0.isEmpty());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultEntityResolver defaultEntityResolver0 = new DefaultEntityResolver();
      URL uRL0 = MockURL.getHttpExample();
      defaultEntityResolver0.registerEntityId("{|SxxnSL~.x8-h%*", uRL0);
      try { 
        defaultEntityResolver0.resolveEntity("{|SxxnSL~.x8-h%*", "{|SxxnSL~.x8-h%*");
        fail("Expecting exception: SAXException");
      } catch(SAXException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.apache.commons.configuration2.resolver.DefaultEntityResolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultEntityResolver defaultEntityResolver0 = new DefaultEntityResolver();
      Map<String, URL> map0 = defaultEntityResolver0.getRegisteredEntities();
      assertEquals(0, map0.size());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultEntityResolver defaultEntityResolver0 = new DefaultEntityResolver();
      InputSource inputSource0 = defaultEntityResolver0.resolveEntity("W0D; e%-D", "5R:=f");
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultEntityResolver defaultEntityResolver0 = new DefaultEntityResolver();
      InputSource inputSource0 = defaultEntityResolver0.resolveEntity((String) null, "");
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultEntityResolver defaultEntityResolver0 = new DefaultEntityResolver();
      URL uRL0 = MockURL.getFileExample();
      // Undeclared exception!
      try { 
        defaultEntityResolver0.registerEntityId((String) null, uRL0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Public ID must not be null!
         //
         verifyException("org.apache.commons.configuration2.resolver.DefaultEntityResolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DefaultEntityResolver defaultEntityResolver0 = new DefaultEntityResolver();
      URL uRL0 = MockURL.getFileExample();
      defaultEntityResolver0.registerEntityId("", uRL0);
      // Undeclared exception!
      try { 
        defaultEntityResolver0.resolveEntity("", "vfs.impl/no-temp-file-store.error");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.resolver.DefaultEntityResolver", e);
      }
  }
}
