 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      ConfigurationMap.ConfigurationSet configurationMap_ConfigurationSet0 = new ConfigurationMap.ConfigurationSet(combinedConfiguration0);
      Iterator<Map.Entry<Object, Object>> iterator0 = (Iterator<Map.Entry<Object, Object>>)configurationMap_ConfigurationSet0.iterator();
      assertNotNull(iterator0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration((Collection<? extends Configuration>) null);
      DataConfiguration dataConfiguration0 = new DataConfiguration(compositeConfiguration0);
      ConfigurationMap.ConfigurationSet configurationMap_ConfigurationSet0 = new ConfigurationMap.ConfigurationSet(dataConfiguration0);
      int int0 = configurationMap_ConfigurationSet0.size();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration();
      ConfigurationMap configurationMap0 = new ConfigurationMap(compositeConfiguration0);
      Set<Map.Entry<Object, Object>> set0 = (Set<Map.Entry<Object, Object>>)configurationMap0.entrySet();
      assertEquals(1, set0.size());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration();
      ConfigurationMap configurationMap0 = new ConfigurationMap(baseHierarchicalConfiguration0);
      Integer integer0 = new Integer((-1738009603));
      configurationMap0.put(integer0, integer0);
      Object object0 = configurationMap0.put(integer0, (Object) null);
      assertEquals(1, object0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConfigurationMap configurationMap0 = new ConfigurationMap((Configuration) null);
      Configuration configuration0 = configurationMap0.getConfiguration();
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration((Collection<? extends Configuration>) null);
      ConfigurationMap configurationMap0 = new ConfigurationMap(compositeConfiguration0);
      configurationMap0.putIfAbsent((Object) null, compositeConfiguration0);
      Object object0 = configurationMap0.get((Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NodeCombiner nodeCombiner0 = mock(NodeCombiner.class, new ViolatedAssumptionAnswer());
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration(nodeCombiner0);
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration(combinedConfiguration0);
      NodeSelector nodeSelector0 = abstractYAMLBasedConfiguration0.getSubConfigurationNodeSelector((String) null);
      SubnodeConfiguration subnodeConfiguration0 = abstractYAMLBasedConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, combinedConfiguration0);
      ConfigurationMap configurationMap0 = new ConfigurationMap(subnodeConfiguration0);
      Integer integer0 = new Integer((-1));
      // Undeclared exception!
      try { 
        configurationMap0.put(integer0, nodeSelector0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@24[keys=[null]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      ConfigurationMap configurationMap0 = new ConfigurationMap((Configuration) null);
      // Undeclared exception!
      try { 
        configurationMap0.put((Object) null, combinedConfiguration0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.ConfigurationMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration((Configuration) null);
      ConfigurationMap configurationMap0 = new ConfigurationMap(compositeConfiguration0);
      // Undeclared exception!
      try { 
        configurationMap0.put("", "off");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.CompositeConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      BaseHierarchicalConfiguration baseHierarchicalConfiguration0 = new BaseHierarchicalConfiguration();
      AbstractYAMLBasedConfiguration abstractYAMLBasedConfiguration0 = new AbstractYAMLBasedConfiguration(baseHierarchicalConfiguration0);
      NodeSelector nodeSelector0 = abstractYAMLBasedConfiguration0.getSubConfigurationNodeSelector("K?5Bb`");
      SubnodeConfiguration subnodeConfiguration0 = abstractYAMLBasedConfiguration0.createSubConfigurationForTrackedNode(nodeSelector0, baseHierarchicalConfiguration0);
      ConfigurationMap configurationMap0 = new ConfigurationMap(subnodeConfiguration0);
      // Undeclared exception!
      try { 
        configurationMap0.get(subnodeConfiguration0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@20[keys=[K?5Bb`]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConfigurationMap configurationMap0 = new ConfigurationMap((Configuration) null);
      // Undeclared exception!
      try { 
        configurationMap0.get("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.ConfigurationMap", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration();
      ConfigurationMap configurationMap0 = new ConfigurationMap(compositeConfiguration0);
      Class<Integer> class0 = Integer.class;
      Object object0 = configurationMap0.put(compositeConfiguration0, class0);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration();
      ConfigurationMap configurationMap0 = new ConfigurationMap(compositeConfiguration0);
      Class<Integer> class0 = Integer.class;
      Object object0 = configurationMap0.put(compositeConfiguration0, class0);
      boolean boolean0 = configurationMap0.isEmpty();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      ConfigurationMap configurationMap0 = new ConfigurationMap(combinedConfiguration0);
      BaseConfiguration baseConfiguration0 = new BaseConfiguration();
      Integer integer0 = new Integer(2106);
      BiFunction<Object, Object, Event> biFunction0 = (BiFunction<Object, Object, Event>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      configurationMap0.merge(integer0, baseConfiguration0, biFunction0);
      configurationMap0.clear();
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      ConfigurationMap configurationMap0 = new ConfigurationMap(combinedConfiguration0);
      Configuration configuration0 = configurationMap0.getConfiguration();
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration();
      ConfigurationMap configurationMap0 = new ConfigurationMap(compositeConfiguration0);
      Object object0 = configurationMap0.get(compositeConfiguration0);
      assertNotNull(object0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration();
      ConfigurationMap configurationMap0 = new ConfigurationMap(compositeConfiguration0);
      Class<Integer> class0 = Integer.class;
      configurationMap0.put(compositeConfiguration0, class0);
      BiFunction<Object, Object, ImmutableNode> biFunction0 = (BiFunction<Object, Object, ImmutableNode>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , any());
      configurationMap0.replaceAll(biFunction0);
  }
