/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 01:03:09 GMT 2022
 */

package org.apache.commons.configuration2.interpol;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.configuration2.interpol.ConfigurationInterpolator;
import org.apache.commons.configuration2.interpol.ExprLookup;
import org.apache.commons.configuration2.io.ConfigurationLogger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExprLookup_ESTest extends ExprLookup_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExprLookup.Variable exprLookup_Variable0 = null;
      try {
        exprLookup_Variable0 = new ExprLookup.Variable("$[", "Class:");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Unable to create Class:
         //
         verifyException("org.apache.commons.configuration2.interpol.ExprLookup$Variable", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      ExprLookup.Variable exprLookup_Variable0 = new ExprLookup.Variable("org.apache.commons.io.filefilter.CanWriteFileFilter", exprLookup_Variables0);
      exprLookup_Variables0.add(exprLookup_Variable0);
      exprLookup_Variables0.add(exprLookup_Variable0);
      ExprLookup.Variable exprLookup_Variable1 = exprLookup_Variables0.getVariable();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      ExprLookup exprLookup0 = new ExprLookup(exprLookup_Variables0, "", "]");
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ExprLookup.Variable exprLookup_Variable0 = new ExprLookup.Variable();
      exprLookup_Variable0.setName("$[");
      assertNotNull(exprLookup_Variable0.getName());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExprLookup.Variable exprLookup_Variable0 = new ExprLookup.Variable();
      exprLookup_Variable0.setValue("org.apache.commons.configuration2.interpol.ExprLookup$Variables");
      assertNotNull(exprLookup_Variable0.getName());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ExprLookup exprLookup0 = new ExprLookup();
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      exprLookup0.setVariables(exprLookup_Variables0);
      ExprLookup.Variables exprLookup_Variables1 = exprLookup0.getVariables();
      assertEquals(0, exprLookup_Variables1.size());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      ExprLookup exprLookup0 = new ExprLookup(exprLookup_Variables0, "", "");
      ExprLookup.Variable exprLookup_Variable0 = new ExprLookup.Variable("org.apache.commons.io.filefilter.CanWriteFileFilter", exprLookup_Variables0);
      exprLookup_Variables0.add(exprLookup_Variable0);
      exprLookup0.setVariables(exprLookup_Variables0);
      ExprLookup.Variables exprLookup_Variables1 = exprLookup0.getVariables();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      ExprLookup exprLookup0 = new ExprLookup(exprLookup_Variables0);
      ConfigurationLogger configurationLogger0 = ConfigurationLogger.newDummyLogger();
      exprLookup0.setLogger(configurationLogger0);
      ConfigurationLogger configurationLogger1 = exprLookup0.getLogger();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      ExprLookup exprLookup0 = new ExprLookup(exprLookup_Variables0);
      ConfigurationInterpolator configurationInterpolator0 = new ConfigurationInterpolator();
      configurationInterpolator0.setEnableSubstitutionInVariables(true);
      exprLookup0.setInterpolator(configurationInterpolator0);
      ConfigurationInterpolator configurationInterpolator1 = exprLookup0.getInterpolator();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      ExprLookup exprLookup0 = new ExprLookup(exprLookup_Variables0);
      ConfigurationInterpolator configurationInterpolator0 = new ConfigurationInterpolator();
      exprLookup0.setInterpolator(configurationInterpolator0);
      ConfigurationInterpolator configurationInterpolator1 = exprLookup0.getInterpolator();
      assertFalse(configurationInterpolator1.isEnableSubstitutionInVariables());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExprLookup exprLookup0 = new ExprLookup();
      // Undeclared exception!
      try { 
        exprLookup0.setVariables((ExprLookup.Variables) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      ExprLookup exprLookup0 = new ExprLookup(exprLookup_Variables0);
      exprLookup0.setVariablePrefixMatcher((String) null);
      ConfigurationInterpolator configurationInterpolator0 = new ConfigurationInterpolator();
      // Undeclared exception!
      try { 
        exprLookup0.setInterpolator(configurationInterpolator0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Variable prefix must not be null!
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExprLookup exprLookup0 = null;
      try {
        exprLookup0 = new ExprLookup((ExprLookup.Variables) null, "H26QpgDmat4%]", "H26QpgDmat4%]");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExprLookup exprLookup0 = null;
      try {
        exprLookup0 = new ExprLookup((ExprLookup.Variables) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      ExprLookup.Variables exprLookup_Variables1 = new ExprLookup.Variables(exprLookup_Variables0);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExprLookup.Variable exprLookup_Variable0 = new ExprLookup.Variable();
      String string0 = exprLookup_Variable0.getName();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExprLookup.Variable exprLookup_Variable0 = new ExprLookup.Variable();
      Object object0 = exprLookup_Variable0.getValue();
      assertNotNull(object0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      ExprLookup exprLookup0 = new ExprLookup(exprLookup_Variables0);
      exprLookup0.setVariableSuffixMatcher((String) null);
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      ExprLookup exprLookup0 = new ExprLookup(exprLookup_Variables0);
      ConfigurationLogger configurationLogger0 = exprLookup0.getLogger();
      assertNotNull(configurationLogger0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      ExprLookup.Variable exprLookup_Variable0 = exprLookup_Variables0.getVariable();
      assertNotNull(exprLookup_Variable0);
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ExprLookup exprLookup0 = new ExprLookup();
      exprLookup0.setInterpolator((ConfigurationInterpolator) null);
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ExprLookup exprLookup0 = new ExprLookup();
      ConfigurationInterpolator configurationInterpolator0 = new ConfigurationInterpolator();
      ConfigurationLogger configurationLogger0 = ConfigurationLogger.newDummyLogger();
      exprLookup0.setLogger(configurationLogger0);
      exprLookup0.setInterpolator(configurationInterpolator0);
      String string0 = exprLookup0.lookup("");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ExprLookup exprLookup0 = new ExprLookup();
      String string0 = exprLookup0.lookup("org.apache.commons.configuration2.interpol.ConfigurationInterpolator.defaultPrefixLookups");
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ExprLookup.Variable exprLookup_Variable0 = new ExprLookup.Variable();
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      exprLookup_Variables0.add(exprLookup_Variable0);
      ExprLookup exprLookup0 = new ExprLookup(exprLookup_Variables0);
      ConfigurationInterpolator configurationInterpolator0 = new ConfigurationInterpolator();
      exprLookup0.setInterpolator(configurationInterpolator0);
      String string0 = exprLookup0.lookup("org.apache.commons.configuration2.interpol.ConfigurationInterpolator.defaultPrefixLookups");
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ExprLookup.Variables exprLookup_Variables0 = new ExprLookup.Variables();
      ExprLookup exprLookup0 = new ExprLookup(exprLookup_Variables0, "lHXIDWHo~V]", "lHXIDWHo~V]");
      ConfigurationInterpolator configurationInterpolator0 = exprLookup0.getInterpolator();
      assertNotNull(configurationInterpolator0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ExprLookup exprLookup0 = new ExprLookup();
      ConfigurationInterpolator configurationInterpolator0 = new ConfigurationInterpolator();
      exprLookup0.setInterpolator(configurationInterpolator0);
      String string0 = exprLookup0.lookup("");
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ExprLookup exprLookup0 = new ExprLookup();
      // Undeclared exception!
      try { 
        exprLookup0.getVariables();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
