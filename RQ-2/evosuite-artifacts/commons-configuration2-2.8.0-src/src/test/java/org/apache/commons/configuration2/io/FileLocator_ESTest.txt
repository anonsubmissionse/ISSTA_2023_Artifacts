 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      URLConnectionOptions uRLConnectionOptions0 = URLConnectionOptions.DEFAULT;
      fileLocator_FileLocatorBuilder0.urlConnectionOptions(uRLConnectionOptions0);
      uRLConnectionOptions0.setUseCaches(false);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      URLConnectionOptions uRLConnectionOptions1 = fileLocator0.getURLConnectionOptions();
      assertFalse(uRLConnectionOptions1.getAllowUserInteraction());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      URLConnectionOptions uRLConnectionOptions0 = URLConnectionOptions.DEFAULT;
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder1 = fileLocator_FileLocatorBuilder0.urlConnectionOptions(uRLConnectionOptions0);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder1);
      uRLConnectionOptions0.setReadTimeoutMillis(1271);
      URLConnectionOptions uRLConnectionOptions1 = fileLocator0.getURLConnectionOptions();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      URLConnectionOptions uRLConnectionOptions0 = URLConnectionOptions.DEFAULT;
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder1 = fileLocator_FileLocatorBuilder0.urlConnectionOptions(uRLConnectionOptions0);
      uRLConnectionOptions0.setReadTimeoutMillis((-526));
      FileLocator fileLocator0 = fileLocator_FileLocatorBuilder1.create();
      URLConnectionOptions uRLConnectionOptions1 = fileLocator0.getURLConnectionOptions();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      URLConnectionOptions uRLConnectionOptions0 = URLConnectionOptions.DEFAULT;
      URLConnectionOptions uRLConnectionOptions1 = uRLConnectionOptions0.setConnectTimeoutMillis(590);
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder1 = fileLocator_FileLocatorBuilder0.urlConnectionOptions(uRLConnectionOptions0);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder1);
      URLConnectionOptions uRLConnectionOptions2 = fileLocator0.getURLConnectionOptions();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      URLConnectionOptions uRLConnectionOptions0 = new URLConnectionOptions();
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder1 = fileLocator_FileLocatorBuilder0.urlConnectionOptions(uRLConnectionOptions0);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder1);
      uRLConnectionOptions0.setConnectTimeoutMillis((-704));
      URLConnectionOptions uRLConnectionOptions1 = fileLocator0.getURLConnectionOptions();
      assertFalse(uRLConnectionOptions1.getAllowUserInteraction());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      URLConnectionOptions uRLConnectionOptions0 = URLConnectionOptions.DEFAULT;
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder1 = fileLocator_FileLocatorBuilder0.urlConnectionOptions(uRLConnectionOptions0);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder1);
      uRLConnectionOptions0.setAllowUserInteraction(true);
      URLConnectionOptions uRLConnectionOptions1 = fileLocator0.getURLConnectionOptions();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      VfsComponentContext vfsComponentContext0 = mock(VfsComponentContext.class, new ViolatedAssumptionAnswer());
      FileSystemOptions fileSystemOptions0 = new FileSystemOptions();
      DefaultURLStreamHandler defaultURLStreamHandler0 = new DefaultURLStreamHandler(vfsComponentContext0, fileSystemOptions0);
      URL uRL0 = MockURL.URL("The validated expression is false", "The validated expression is false", 0, "l0FLF4", (URLStreamHandler) defaultURLStreamHandler0);
      fileLocator_FileLocatorBuilder0.sourceURL(uRL0);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      URL uRL1 = fileLocator0.getSourceURL();
      assertNotNull(uRL1.toString());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      VfsComponentContext vfsComponentContext0 = mock(VfsComponentContext.class, new ViolatedAssumptionAnswer());
      DefaultURLStreamHandler defaultURLStreamHandler0 = new DefaultURLStreamHandler(vfsComponentContext0);
      URL uRL0 = MockURL.URL("", "", 12, "", (URLStreamHandler) defaultURLStreamHandler0);
      fileLocator_FileLocatorBuilder0.sourceURL(uRL0);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      URL uRL1 = fileLocator0.getSourceURL();
      assertEquals(0, uRL1.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      URL uRL0 = MockURL.getHttpExample();
      fileLocator_FileLocatorBuilder0.sourceURL(uRL0);
      FileLocator fileLocator0 = fileLocator_FileLocatorBuilder0.create();
      URL uRL1 = fileLocator0.getSourceURL();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      HomeDirectoryLocationStrategy homeDirectoryLocationStrategy0 = new HomeDirectoryLocationStrategy();
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder1 = fileLocator_FileLocatorBuilder0.locationStrategy(homeDirectoryLocationStrategy0);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder1);
      HomeDirectoryLocationStrategy homeDirectoryLocationStrategy1 = (HomeDirectoryLocationStrategy)fileLocator0.getLocationStrategy();
      assertNotNull(homeDirectoryLocationStrategy1.getHomeDirectory());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      DefaultFileSystem defaultFileSystem0 = new DefaultFileSystem();
      fileLocator_FileLocatorBuilder0.fileSystem(defaultFileSystem0);
      FileLocator fileLocator0 = fileLocator_FileLocatorBuilder0.create();
      FileSystem fileSystem0 = fileLocator0.getFileSystem();
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder1 = fileLocator_FileLocatorBuilder0.fileName("6-!{/nhJ3m");
      FileLocator fileLocator0 = fileLocator_FileLocatorBuilder1.create();
      String string0 = fileLocator0.getFileName();
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      fileLocator_FileLocatorBuilder0.fileName("");
      FileLocator fileLocator0 = fileLocator_FileLocatorBuilder0.create();
      String string0 = fileLocator0.getFileName();
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder1 = fileLocator_FileLocatorBuilder0.encoding("/Ecr>HbP!+fOI");
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder1);
      String string0 = fileLocator0.getEncoding();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      fileLocator_FileLocatorBuilder0.encoding("");
      FileLocator fileLocator0 = fileLocator_FileLocatorBuilder0.create();
      String string0 = fileLocator0.getEncoding();
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder1 = fileLocator_FileLocatorBuilder0.basePath("org.apache.commons.configuration2.io.FileLocator");
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder1);
      String string0 = fileLocator0.getBasePath();
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder1 = fileLocator_FileLocatorBuilder0.basePath("");
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder1);
      String string0 = fileLocator0.getBasePath();
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileLocator fileLocator0 = null;
      try {
        fileLocator0 = new FileLocator((FileLocator.FileLocatorBuilder) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.io.FileLocator$FileLocatorBuilder", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      URLConnectionOptions uRLConnectionOptions0 = fileLocator0.getURLConnectionOptions();
      assertNotNull(uRLConnectionOptions0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = fileLocator_FileLocatorBuilder0.create();
      FileLocationStrategy fileLocationStrategy0 = fileLocator0.getLocationStrategy();
      assertNotNull(fileLocationStrategy0);
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = fileLocator_FileLocatorBuilder0.create();
      URL uRL0 = fileLocator0.getSourceURL();
      assertNotNull(uRL0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = fileLocator_FileLocatorBuilder0.create();
      String string0 = fileLocator0.getFileName();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      String string0 = fileLocator0.getEncoding();
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      String string0 = fileLocator0.getBasePath();
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      FileSystem fileSystem0 = fileLocator0.getFileSystem();
      assertNotNull(fileSystem0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      URL uRL0 = vFSFileSystem0.getURL("OgX1 ]Zdh|:C-EHt", "OgX1 ]Zdh|:C-EHt");
      fileLocator_FileLocatorBuilder0.sourceURL(uRL0);
      FileLocator fileLocator1 = new FileLocator(fileLocator_FileLocatorBuilder0);
      boolean boolean0 = fileLocator0.equals(fileLocator1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      FileSystemLocationStrategy fileSystemLocationStrategy0 = new FileSystemLocationStrategy();
      fileLocator_FileLocatorBuilder0.locationStrategy(fileSystemLocationStrategy0);
      FileLocator fileLocator1 = new FileLocator(fileLocator_FileLocatorBuilder0);
      boolean boolean0 = fileLocator0.equals(fileLocator1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      fileLocator_FileLocatorBuilder0.fileSystem(vFSFileSystem0);
      FileLocator fileLocator1 = new FileLocator(fileLocator_FileLocatorBuilder0);
      boolean boolean0 = fileLocator0.equals(fileLocator1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      fileLocator_FileLocatorBuilder0.fileName("OgX1 ]Zdh|:C-EHt");
      FileLocator fileLocator1 = new FileLocator(fileLocator_FileLocatorBuilder0);
      boolean boolean0 = fileLocator0.equals(fileLocator1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      fileLocator_FileLocatorBuilder0.basePath("<Y1N");
      FileLocator fileLocator1 = new FileLocator(fileLocator_FileLocatorBuilder0);
      boolean boolean0 = fileLocator1.equals(fileLocator0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      FileLocator fileLocator1 = new FileLocator(fileLocator_FileLocatorBuilder0);
      boolean boolean0 = fileLocator0.equals(fileLocator1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      boolean boolean0 = fileLocator0.equals(fileLocator0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      boolean boolean0 = fileLocator0.equals(fileLocator_FileLocatorBuilder0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      fileLocator0.hashCode();
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      String string0 = fileLocator0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      URLConnectionOptions uRLConnectionOptions0 = new URLConnectionOptions();
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder1 = fileLocator_FileLocatorBuilder0.urlConnectionOptions(uRLConnectionOptions0);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder1);
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder2 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator1 = new FileLocator(fileLocator_FileLocatorBuilder2);
      boolean boolean0 = fileLocator0.equals(fileLocator1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = new FileLocator(fileLocator_FileLocatorBuilder0);
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder1 = new FileLocator.FileLocatorBuilder(fileLocator0);
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileLocator.FileLocatorBuilder fileLocator_FileLocatorBuilder0 = new FileLocator.FileLocatorBuilder((FileLocator) null);
      FileLocator fileLocator0 = fileLocator_FileLocatorBuilder0.create();
      fileLocator_FileLocatorBuilder0.encoding("6-!{/nhJ3m");
      FileLocator fileLocator1 = fileLocator_FileLocatorBuilder0.create();
      boolean boolean0 = fileLocator1.equals(fileLocator0);
      assertTrue(boolean0);
}
