 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      servletRequestWrapper0.setRequest(servletRequestWrapper0);
      ServletRequestConfiguration servletRequestConfiguration0 = new ServletRequestConfiguration(servletRequestWrapper0);
      // Undeclared exception!
      try { 
        servletRequestConfiguration0.getPropertyInternal("");
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ServletRequestConfiguration servletRequestConfiguration0 = new ServletRequestConfiguration((ServletRequest) null);
      // Undeclared exception!
      try { 
        servletRequestConfiguration0.getPropertyInternal((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.web.ServletRequestConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      servletRequestWrapper0.setRequest(servletRequestWrapper0);
      ServletRequestConfiguration servletRequestConfiguration0 = new ServletRequestConfiguration(servletRequestWrapper0);
      // Undeclared exception!
      try { 
        servletRequestConfiguration0.getKeysInternal();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ServletRequestConfiguration servletRequestConfiguration0 = new ServletRequestConfiguration((ServletRequest) null);
      // Undeclared exception!
      try { 
        servletRequestConfiguration0.getKeysInternal();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.web.ServletRequestConfiguration", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[7];
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(stringArray0).when(servletRequest0).getParameterValues(anyString());
      ServletRequestConfiguration servletRequestConfiguration0 = new ServletRequestConfiguration(servletRequest0);
      ArrayList arrayList0 = (ArrayList)servletRequestConfiguration0.getPropertyInternal("");
      assertEquals(1, arrayList0.size());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[7];
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(stringArray0).when(servletRequest0).getParameterValues(anyString());
      ServletRequestConfiguration servletRequestConfiguration0 = new ServletRequestConfiguration(servletRequest0);
      ArrayList arrayList0 = (ArrayList)servletRequestConfiguration0.getPropertyInternal("");
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[1];
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(stringArray0).when(servletRequest0).getParameterValues(anyString());
      ServletRequestConfiguration servletRequestConfiguration0 = new ServletRequestConfiguration(servletRequest0);
      Object object0 = servletRequestConfiguration0.getPropertyInternal("%");
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(stringArray0).when(servletRequest0).getParameterValues(anyString());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestConfiguration servletRequestConfiguration0 = new ServletRequestConfiguration(servletRequestWrapper0);
      Object object0 = servletRequestConfiguration0.getProperty("#{w");
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(stringArray0).when(servletRequest0).getParameterValues(anyString());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestConfiguration servletRequestConfiguration0 = new ServletRequestConfiguration(servletRequestWrapper0);
      String string0 = servletRequestConfiguration0.getString((String) null, (String) null);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Hashtable<ConfigurationErrorEvent, Object> hashtable0 = new Hashtable<ConfigurationErrorEvent, Object>();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(servletRequest0).getParameterMap();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestConfiguration servletRequestConfiguration0 = new ServletRequestConfiguration(servletRequestWrapper0);
      // Undeclared exception!
      try { 
        servletRequestConfiguration0.getKeysInternal();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.web.ServletRequestConfiguration", e);
      }
  }
