 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XoShiRo512StarStar xoShiRo512StarStar0 = new XoShiRo512StarStar(9L, 0L, 9L, 9L, 0L, 9L, 9L, 0L);
      long long0 = xoShiRo512StarStar0.nextOutput();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XoShiRo512StarStar xoShiRo512StarStar0 = new XoShiRo512StarStar(0L, 3101L, 0L, 0L, 2037L, 0L, 0L, 0L);
      long long0 = xoShiRo512StarStar0.nextOutput();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XoShiRo512StarStar xoShiRo512StarStar0 = null;
      try {
        xoShiRo512StarStar0 = new XoShiRo512StarStar((XoShiRo512StarStar) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.source64.LongProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      long[] longArray0 = new long[1];
      XoShiRo512StarStar xoShiRo512StarStar0 = new XoShiRo512StarStar(longArray0);
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XoShiRo512StarStar xoShiRo512StarStar0 = new XoShiRo512StarStar(9L, 0L, 9L, 9L, 0L, 9L, 9L, 0L);
      XoShiRo512StarStar xoShiRo512StarStar1 = new XoShiRo512StarStar(xoShiRo512StarStar0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XoShiRo512StarStar xoShiRo512StarStar0 = null;
      try {
        xoShiRo512StarStar0 = new XoShiRo512StarStar((long[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.source64.AbstractXoShiRo512", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XoShiRo512StarStar xoShiRo512StarStar0 = new XoShiRo512StarStar(4111957640723818079L, 4111957640723818079L, 4111957640723818079L, 4111957640723818079L, 4111957640723818079L, 4111957640723818079L, 4111957640723818079L, 4111957640723818079L);
      long long0 = xoShiRo512StarStar0.nextOutput();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      XoShiRo512StarStar xoShiRo512StarStar0 = new XoShiRo512StarStar(4111957640723818079L, 4111957640723818079L, 4111957640723818079L, 4111957640723818079L, 4111957640723818079L, 4111957640723818079L, 4111957640723818079L, 4111957640723818079L);
      XoShiRo512StarStar xoShiRo512StarStar1 = xoShiRo512StarStar0.copy();
      ;
}
