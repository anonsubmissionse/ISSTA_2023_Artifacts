 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XoShiRo256PlusPlus xoShiRo256PlusPlus0 = new XoShiRo256PlusPlus(1L, 0L, 1L, 1L);
      byte[] byteArray0 = new byte[8];
      LongProvider.nextBytesFill(xoShiRo256PlusPlus0, byteArray0, (byte)103, (byte) (-33));
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      long[] longArray0 = new long[2];
      MersenneTwister64 mersenneTwister64_0 = new MersenneTwister64(longArray0);
      boolean boolean0 = mersenneTwister64_0.nextBoolean();
      boolean boolean1 = mersenneTwister64_0.nextBoolean();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[2];
      MersenneTwister64 mersenneTwister64_0 = new MersenneTwister64(longArray0);
      boolean boolean0 = mersenneTwister64_0.nextBoolean();
      boolean boolean1 = mersenneTwister64_0.nextBoolean();
      assertTrue(boolean1);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XoRoShiRo128Plus xoRoShiRo128Plus0 = new XoRoShiRo128Plus((-1673L), 5443821109340885276L);
      byte[] byteArray0 = new byte[3];
      LongProvider.nextBytesFill(xoRoShiRo128Plus0, byteArray0, 1, 1);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[9];
      XoRoShiRo1024StarStar xoRoShiRo1024StarStar0 = new XoRoShiRo1024StarStar(longArray0);
      long long0 = xoRoShiRo1024StarStar0.nextLong();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      long[] longArray0 = new long[5];
      longArray0[1] = (-2132L);
      XoShiRo512StarStar xoShiRo512StarStar0 = new XoShiRo512StarStar(longArray0);
      long long0 = xoShiRo512StarStar0.nextLong();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XoShiRo512StarStar xoShiRo512StarStar0 = new XoShiRo512StarStar((-7264645677142396983L), (-7264645677142396983L), 1L, 3444880142468915289L, (-388L), (-3162L), 3444880142468915289L, 1980173651575369784L);
      xoShiRo512StarStar0.nextDouble();
      int int0 = xoShiRo512StarStar0.nextInt();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      XoRoShiRo128Plus xoRoShiRo128Plus0 = new XoRoShiRo128Plus(0L, 0L);
      double double0 = xoRoShiRo128Plus0.nextDouble();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      XoRoShiRo128StarStar xoRoShiRo128StarStar0 = new XoRoShiRo128StarStar((-8924956236279331811L), (-8924956236279331811L));
      byte[] byteArray0 = xoRoShiRo128StarStar0.getStateInternal();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      long[] longArray0 = new long[0];
      XoShiRo256StarStar xoShiRo256StarStar0 = new XoShiRo256StarStar(longArray0);
      // Undeclared exception!
      try { 
        xoShiRo256StarStar0.setStateInternal((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.BaseProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Long long0 = new Long(0L);
      SplitMix64 splitMix64_0 = new SplitMix64(long0);
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        splitMix64_0.setStateInternal(byteArray0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
         //
         // State size must be larger than 8 but was 6
         //
         verifyException("org.apache.commons.rng.core.BaseProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[1];
      MersenneTwister64 mersenneTwister64_0 = new MersenneTwister64(longArray0);
      mersenneTwister64_0.nextInt();
      byte[] byteArray0 = mersenneTwister64_0.getStateInternal();
      mersenneTwister64_0.nextBytes(byteArray0);
      mersenneTwister64_0.setStateInternal(byteArray0);
      // Undeclared exception!
      try { 
        mersenneTwister64_0.nextLong();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[10];
      MersenneTwister64 mersenneTwister64_0 = new MersenneTwister64(longArray0);
      byte[] byteArray0 = mersenneTwister64_0.getStateInternal();
      mersenneTwister64_0.nextBytes(byteArray0);
      mersenneTwister64_0.setStateInternal(byteArray0);
      mersenneTwister64_0.nextInt(14);
      // Undeclared exception!
      try { 
        mersenneTwister64_0.nextInt();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[1] = 8502941058421957549L;
      MersenneTwister64 mersenneTwister64_0 = new MersenneTwister64(longArray0);
      byte[] byteArray0 = mersenneTwister64_0.getStateInternal();
      mersenneTwister64_0.nextBytes(byteArray0);
      mersenneTwister64_0.setStateInternal(byteArray0);
      // Undeclared exception!
      try { 
        mersenneTwister64_0.nextDouble();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        LongProvider.nextBytesFill((RandomLongSource) null, byteArray0, (byte) (-38), (-2337));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.source64.LongProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XoShiRo512StarStar xoShiRo512StarStar0 = new XoShiRo512StarStar(3935559000370003845L, (-7550217L), (-1311L), 3935559000370003845L, 3935559000370003845L, (-1498L), 1467L, 3935559000370003845L);
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        LongProvider.nextBytesFill(xoShiRo512StarStar0, byteArray0, (byte)82, (-335));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 82
         //
         verifyException("org.apache.commons.rng.core.source64.LongProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[5];
      XorShift1024StarPhi xorShift1024StarPhi0 = new XorShift1024StarPhi(longArray0);
      // Undeclared exception!
      try { 
        xorShift1024StarPhi0.nextBytes((byte[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.source64.LongProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      long[] longArray0 = new long[5];
      PcgRxsMXs64 pcgRxsMXs64_0 = new PcgRxsMXs64(longArray0);
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        pcgRxsMXs64_0.nextBytes(byteArray0, (-2244), 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // -2244 is out of interval [0, 3]
         //
         verifyException("org.apache.commons.rng.core.BaseProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Long long0 = new Long(1L);
      JenkinsSmallFast64 jenkinsSmallFast64_0 = new JenkinsSmallFast64(long0);
      // Undeclared exception!
      try { 
        jenkinsSmallFast64_0.nextBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.source64.LongProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long[] longArray0 = new long[10];
      MersenneTwister64 mersenneTwister64_0 = new MersenneTwister64(longArray0);
      byte[] byteArray0 = mersenneTwister64_0.getStateInternal();
      mersenneTwister64_0.nextBytes(byteArray0);
      mersenneTwister64_0.setStateInternal(byteArray0);
      // Undeclared exception!
      try { 
        mersenneTwister64_0.nextBytes(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(0);
      TwoCmres twoCmres0 = new TwoCmres(integer0);
      int int0 = twoCmres0.nextInt();
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      long[] longArray0 = new long[1];
      MersenneTwister64 mersenneTwister64_0 = new MersenneTwister64(longArray0);
      long long0 = mersenneTwister64_0.nextLong();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XoRoShiRo128Plus xoRoShiRo128Plus0 = new XoRoShiRo128Plus(0L, 0L);
      byte[] byteArray0 = new byte[15];
      xoRoShiRo128Plus0.nextBytes(byteArray0, (int) (byte)3, (int) (byte)3);
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Long long0 = new Long(0L);
      JenkinsSmallFast64 jenkinsSmallFast64_0 = new JenkinsSmallFast64(long0);
      jenkinsSmallFast64_0.next();
      jenkinsSmallFast64_0.nextDouble();
      boolean boolean0 = jenkinsSmallFast64_0.nextBoolean();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      long[] longArray0 = new long[7];
      MersenneTwister64 mersenneTwister64_0 = new MersenneTwister64(longArray0);
      byte[] byteArray0 = mersenneTwister64_0.getStateInternal();
      mersenneTwister64_0.nextBytes(byteArray0);
      mersenneTwister64_0.setStateInternal(byteArray0);
      boolean boolean0 = mersenneTwister64_0.nextBoolean();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      long[] longArray0 = new long[10];
      MersenneTwister64 mersenneTwister64_0 = new MersenneTwister64(longArray0);
      byte[] byteArray0 = mersenneTwister64_0.getStateInternal();
      mersenneTwister64_0.nextBytes(byteArray0);
      mersenneTwister64_0.setStateInternal(byteArray0);
      mersenneTwister64_0.nextInt();
      // Undeclared exception!
      try { 
        mersenneTwister64_0.nextFloat();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Long long0 = new Long(0L);
      SplitMix64 splitMix64_0 = new SplitMix64(long0);
      byte[] byteArray0 = splitMix64_0.getStateInternal();
      splitMix64_0.setStateInternal(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Long long0 = new Long(0L);
      SplitMix64 splitMix64_0 = new SplitMix64(long0);
      float float0 = splitMix64_0.nextFloat();
      ;
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Long long0 = new Long(0L);
      SplitMix64 splitMix64_0 = new SplitMix64(long0);
      float float0 = splitMix64_0.nextFloat();
      byte[] byteArray0 = splitMix64_0.getStateInternal();
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      long[] longArray0 = new long[6];
      JenkinsSmallFast64 jenkinsSmallFast64_0 = new JenkinsSmallFast64((Long) 8883327418280326963L);
      byte[] byteArray0 = jenkinsSmallFast64_0.getStateInternal();
      DotyHumphreySmallFastCounting64 dotyHumphreySmallFastCounting64_0 = new DotyHumphreySmallFastCounting64(longArray0);
      dotyHumphreySmallFastCounting64_0.nextBytes(byteArray0, 0, 49);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      long[] longArray0 = new long[5];
      XoRoShiRo1024Star xoRoShiRo1024Star0 = new XoRoShiRo1024Star(longArray0);
      float float0 = xoRoShiRo1024Star0.nextFloat();
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      long[] longArray0 = new long[2];
      XoRoShiRo128PlusPlus xoRoShiRo128PlusPlus0 = new XoRoShiRo128PlusPlus(longArray0);
      JumpableUniformRandomProvider jumpableUniformRandomProvider0 = xoRoShiRo128PlusPlus0.longJump();
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Long long0 = new Long(0L);
      SplitMix64 splitMix64_0 = new SplitMix64(long0);
      splitMix64_0.resetCachedState();
  }
