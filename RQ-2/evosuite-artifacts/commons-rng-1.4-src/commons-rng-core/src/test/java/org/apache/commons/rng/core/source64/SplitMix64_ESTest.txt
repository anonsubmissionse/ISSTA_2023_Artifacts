 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Long long0 = new Long(0L);
      SplitMix64 splitMix64_0 = new SplitMix64(long0);
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SplitMix64 splitMix64_0 = new SplitMix64((-3304L));
      long long0 = splitMix64_0.next();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SplitMix64 splitMix64_0 = new SplitMix64((-7046029254386353131L));
      byte[] byteArray0 = splitMix64_0.getStateInternal();
      splitMix64_0.setStateInternal(byteArray0);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SplitMix64 splitMix64_0 = new SplitMix64(979L);
      // Undeclared exception!
      try { 
        splitMix64_0.setStateInternal((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.BaseProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SplitMix64 splitMix64_0 = new SplitMix64(531L);
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        splitMix64_0.setStateInternal(byteArray0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
         //
         // State size must be larger than 8 but was 4
         //
         verifyException("org.apache.commons.rng.core.BaseProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SplitMix64 splitMix64_0 = new SplitMix64((-7046029254386353131L));
      long long0 = splitMix64_0.next();
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SplitMix64 splitMix64_0 = null;
      try {
        splitMix64_0 = new SplitMix64((Long) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.source64.SplitMix64", e);
      }
  }
