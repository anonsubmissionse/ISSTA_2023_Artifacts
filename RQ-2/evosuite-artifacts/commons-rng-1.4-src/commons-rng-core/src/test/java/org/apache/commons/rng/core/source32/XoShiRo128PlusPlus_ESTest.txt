 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XoShiRo128PlusPlus xoShiRo128PlusPlus0 = new XoShiRo128PlusPlus(0, (-1255959250), (-1255959250), 0);
      int int0 = xoShiRo128PlusPlus0.nextOutput();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XoShiRo128PlusPlus xoShiRo128PlusPlus0 = new XoShiRo128PlusPlus((-1151), (-1808), (-1808), 3084);
      int int0 = xoShiRo128PlusPlus0.nextOutput();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XoShiRo128PlusPlus xoShiRo128PlusPlus0 = null;
      try {
        xoShiRo128PlusPlus0 = new XoShiRo128PlusPlus((int[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.source32.AbstractXoShiRo128", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XoShiRo128PlusPlus xoShiRo128PlusPlus0 = null;
      try {
        xoShiRo128PlusPlus0 = new XoShiRo128PlusPlus((XoShiRo128PlusPlus) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.source32.IntProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XoShiRo128PlusPlus xoShiRo128PlusPlus0 = new XoShiRo128PlusPlus((-15), (-15), (-15), (-15));
      XoShiRo128PlusPlus xoShiRo128PlusPlus1 = new XoShiRo128PlusPlus(xoShiRo128PlusPlus0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[10];
      XoShiRo128PlusPlus xoShiRo128PlusPlus0 = new XoShiRo128PlusPlus(intArray0);
      XoShiRo128PlusPlus xoShiRo128PlusPlus1 = xoShiRo128PlusPlus0.copy();
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XoShiRo128PlusPlus xoShiRo128PlusPlus0 = new XoShiRo128PlusPlus((-498), (-498), (-1405), (-1405));
      int int0 = xoShiRo128PlusPlus0.nextOutput();
      assertEquals(1, int0);
}
