/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 03:11:49 GMT 2022
 */

package org.apache.commons.rng.core.source32;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.rng.core.source32.JDKRandom;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDKRandom_ESTest extends JDKRandom_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Long long0 = new Long(0L);
      JDKRandom jDKRandom0 = new JDKRandom(long0);
      byte[] byteArray0 = jDKRandom0.getStateInternal();
      jDKRandom0.nextBytes(byteArray0);
      // Undeclared exception!
      try { 
        jDKRandom0.setStateInternal(byteArray0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
         //
         // java.io.EOFException
         //
         verifyException("org.apache.commons.rng.core.source32.JDKRandom", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Long long0 = Long.getLong("org.apache.commons.rng.core.source32.JDKRandom", 2L);
      JDKRandom jDKRandom0 = new JDKRandom(long0);
      Random.setNextRandom(2147483644);
      jDKRandom0.nextLong(2L);
      jDKRandom0.next();
      jDKRandom0.next();
      int int0 = jDKRandom0.next();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Long long0 = new Long(439L);
      JDKRandom jDKRandom0 = new JDKRandom(long0);
      // Undeclared exception!
      try { 
        jDKRandom0.setStateInternal((byte[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.BaseProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Long long0 = new Long(925L);
      JDKRandom jDKRandom0 = new JDKRandom(long0);
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-33);
      // Undeclared exception!
      try { 
        jDKRandom0.setStateInternal(byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.BaseProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Long long0 = Long.getLong("org.apache.commons.rng.core.source32.JDKRandom", 2L);
      JDKRandom jDKRandom0 = new JDKRandom(long0);
      int int0 = jDKRandom0.next();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Long long0 = new Long(1664500L);
      JDKRandom jDKRandom0 = new JDKRandom(long0);
      byte[] byteArray0 = jDKRandom0.getStateInternal();
      // Undeclared exception!
      try { 
        jDKRandom0.setStateInternal(byteArray0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
         //
         // Stream does not contain java.util.Random: org.evosuite.runtime.mock.java.util.MockRandom
         //
         verifyException("org.apache.commons.rng.core.source32.JDKRandom$ValidatingObjectInputStream", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JDKRandom jDKRandom0 = null;
      try {
        jDKRandom0 = new JDKRandom((Long) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.source32.JDKRandom", e);
      }
  }
}
