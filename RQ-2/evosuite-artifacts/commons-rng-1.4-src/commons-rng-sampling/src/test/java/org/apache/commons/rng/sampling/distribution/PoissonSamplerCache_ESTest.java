/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 03:33:54 GMT 2022
 */

package org.apache.commons.rng.sampling.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.rng.UniformRandomProvider;
import org.apache.commons.rng.sampling.distribution.PoissonSamplerCache;
import org.apache.commons.rng.simple.JDKRandomWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PoissonSamplerCache_ESTest extends PoissonSamplerCache_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(40.0, 40.0);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange(41.36243642874038, 2801.12);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(40.0, 40.0);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange(41.36243642874038, 2801.12);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache((-1199.40117), 2578.6783006159512);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange(2578.6783006159512, 2578.6783006159512);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache((-1199.40117), 2578.6783006159512);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange(2578.6783006159512, 2578.6783006159512);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache((-1358.0), 1849.35);
      boolean boolean0 = poissonSamplerCache0.withinRange(1849.35);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache((-1358.0), 1849.35);
      boolean boolean0 = poissonSamplerCache0.withinRange(1849.35);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(0.0, 6926.0934937);
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      poissonSamplerCache0.createPoissonSampler(jDKRandomWrapper0, 3523.7307);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache((-3194.38294667), (-3194.38294667));
      double double0 = poissonSamplerCache0.getMinMean();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = null;
      try {
        poissonSamplerCache0 = new PoissonSamplerCache(3457.387189, (-473.0464));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Max mean: -473.0464 < 3457.387189
         //
         verifyException("org.apache.commons.rng.sampling.distribution.PoissonSamplerCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(2628.3533776, 2628.3533776);
      boolean boolean0 = poissonSamplerCache0.isValidRange();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(2628.3533776, 2628.3533776);
      boolean boolean0 = poissonSamplerCache0.isValidRange();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache((-831.82596332191), 2500.64139);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange((-831.82596332191), (-831.82596332191));
      boolean boolean0 = poissonSamplerCache1.isValidRange();
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache((-831.82596332191), 2500.64139);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange((-831.82596332191), (-831.82596332191));
      boolean boolean0 = poissonSamplerCache1.isValidRange();
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache((-831.82596332191), 2500.64139);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange((-831.82596332191), (-831.82596332191));
      boolean boolean0 = poissonSamplerCache1.isValidRange();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(9.09262082929965E-21, 40.0);
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      poissonSamplerCache0.createPoissonSampler(jDKRandomWrapper0, 40.0);
      poissonSamplerCache0.createSharedStateSampler(jDKRandomWrapper0, 40.0);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(763.0, 763.0);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange((-3179.49), 894.117967332);
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      poissonSamplerCache1.createSharedStateSampler(jDKRandomWrapper0, 40.0);
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(763.0, 763.0);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange((-3179.49), 894.117967332);
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      poissonSamplerCache1.createSharedStateSampler(jDKRandomWrapper0, 40.0);
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(763.0, 763.0);
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      poissonSamplerCache0.createSharedStateSampler(jDKRandomWrapper0, 40.0);
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache((-464.179020613658), (-464.179020613658));
      // Undeclared exception!
      try { 
        poissonSamplerCache0.createSharedStateSampler((UniformRandomProvider) null, (-1089.16505));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // mean is not strictly positive: -1089.16505
         //
         verifyException("org.apache.commons.rng.sampling.distribution.SmallMeanPoissonSampler", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(0.0, 0.0);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange(0.0, 2746.2);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(0.0, 0.0);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange(0.0, 2746.2);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(4253.2803416, 4253.2803416);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange(4253.2803416, 4253.2803416);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(4253.2803416, 4253.2803416);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange(4253.2803416, 4253.2803416);
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(4253.2803416, 4253.2803416);
      double double0 = poissonSamplerCache0.getMaxMean();
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(4253.2803416, 4253.2803416);
      double double0 = poissonSamplerCache0.getMaxMean();
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache((-40.02404256169862), (-40.02404256169862));
      double double0 = poissonSamplerCache0.getMaxMean();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache((-40.02404256169862), (-40.02404256169862));
      double double0 = poissonSamplerCache0.getMaxMean();
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(1478.1096337182353, 1478.1096337182353);
      boolean boolean0 = poissonSamplerCache0.withinRange(40.0);
      assertTrue(poissonSamplerCache0.isValidRange());
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(1478.1096337182353, 1478.1096337182353);
      boolean boolean0 = poissonSamplerCache0.withinRange(40.0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(4253.2803416, 4253.2803416);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange(40.0, 40.0);
      boolean boolean0 = poissonSamplerCache1.withinRange(4253.999999999999);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(4253.2803416, 4253.2803416);
      PoissonSamplerCache poissonSamplerCache1 = poissonSamplerCache0.withRange(40.0, 40.0);
      boolean boolean0 = poissonSamplerCache1.withinRange(4253.999999999999);
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache((-40.02404256169862), (-40.02404256169862));
      boolean boolean0 = poissonSamplerCache0.withinRange(0.0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache((-40.02404256169862), (-40.02404256169862));
      boolean boolean0 = poissonSamplerCache0.withinRange(0.0);
      ;
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(4253.2803416, 4253.2803416);
      boolean boolean0 = poissonSamplerCache0.withinRange(4253.999999999999);
      ;
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(4253.2803416, 4253.2803416);
      boolean boolean0 = poissonSamplerCache0.withinRange(4253.999999999999);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(9.09262082929965E-21, 40.0);
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      poissonSamplerCache0.createSharedStateSampler(jDKRandomWrapper0, 1989.0);
      ;
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(40.0, 40.0);
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      // Undeclared exception!
      try { 
        poissonSamplerCache0.createPoissonSampler(jDKRandomWrapper0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // mean is not strictly positive: 0.0
         //
         verifyException("org.apache.commons.rng.sampling.distribution.SmallMeanPoissonSampler", e);
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(4253.2803416, 4253.2803416);
      // Undeclared exception!
      try { 
        poissonSamplerCache0.withRange(4253.999999999999, 4253.2803416);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Max mean: 4253.2803416 < 4253.999999999999
         //
         verifyException("org.apache.commons.rng.sampling.distribution.PoissonSamplerCache", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PoissonSamplerCache poissonSamplerCache0 = new PoissonSamplerCache(40.0, 40.0);
      double double0 = poissonSamplerCache0.getMinMean();
      ;
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      double double0 = PoissonSamplerCache.getMinimumCachedMean();
      ;
}
}
