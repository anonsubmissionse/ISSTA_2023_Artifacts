 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Random.setNextRandom(2147483646);
      MockRandom mockRandom0 = new MockRandom(2147483646);
      byte[] byteArray0 = new byte[20];
      mockRandom0.nextBytes(byteArray0);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      jDKRandomWrapper0.nextBytes(byteArray0);
      AhrensDieterExponentialSampler ahrensDieterExponentialSampler0 = new AhrensDieterExponentialSampler(jDKRandomWrapper0, 2147483646);
      double double0 = ahrensDieterExponentialSampler0.sample();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Random.setNextRandom((-113025091));
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      AhrensDieterExponentialSampler ahrensDieterExponentialSampler0 = new AhrensDieterExponentialSampler(jDKRandomWrapper0, 42);
      double double0 = ahrensDieterExponentialSampler0.sample();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      SharedStateContinuousSampler sharedStateContinuousSampler0 = AhrensDieterExponentialSampler.of(jDKRandomWrapper0, 1955.8410428);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AhrensDieterExponentialSampler ahrensDieterExponentialSampler0 = new AhrensDieterExponentialSampler((UniformRandomProvider) null, 1.1102230246251565E-16);
      // Undeclared exception!
      try { 
        ahrensDieterExponentialSampler0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AhrensDieterExponentialSampler ahrensDieterExponentialSampler0 = new AhrensDieterExponentialSampler((UniformRandomProvider) null, 359.0);
      // Undeclared exception!
      try { 
        ahrensDieterExponentialSampler0.sample();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.sampling.distribution.AhrensDieterExponentialSampler", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1812433253L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      AhrensDieterExponentialSampler ahrensDieterExponentialSampler0 = null;
      try {
        ahrensDieterExponentialSampler0 = new AhrensDieterExponentialSampler(jDKRandomWrapper0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // mean is not strictly positive: 0.0
         //
         verifyException("org.apache.commons.rng.sampling.distribution.AhrensDieterExponentialSampler", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Random.setNextRandom(2147483646);
      MockRandom mockRandom0 = new MockRandom(2147483646);
      byte[] byteArray0 = new byte[20];
      mockRandom0.nextBytes(byteArray0);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      AhrensDieterExponentialSampler ahrensDieterExponentialSampler0 = new AhrensDieterExponentialSampler(jDKRandomWrapper0, 2147483646);
      double double0 = ahrensDieterExponentialSampler0.sample();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      AhrensDieterExponentialSampler ahrensDieterExponentialSampler0 = new AhrensDieterExponentialSampler(jDKRandomWrapper0, 42);
      double double0 = ahrensDieterExponentialSampler0.sample();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      AhrensDieterExponentialSampler ahrensDieterExponentialSampler0 = new AhrensDieterExponentialSampler(jDKRandomWrapper0, 42);
      String string0 = ahrensDieterExponentialSampler0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      // Undeclared exception!
      try { 
        AhrensDieterExponentialSampler.of(jDKRandomWrapper0, (-113025091));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // mean is not strictly positive: -1.13025091E8
         //
         verifyException("org.apache.commons.rng.sampling.distribution.AhrensDieterExponentialSampler", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AhrensDieterExponentialSampler ahrensDieterExponentialSampler0 = new AhrensDieterExponentialSampler((UniformRandomProvider) null, 1.1102230246251565E-16);
      SharedStateContinuousSampler sharedStateContinuousSampler0 = ahrensDieterExponentialSampler0.withUniformRandomProvider((UniformRandomProvider) null);
      ;
}
