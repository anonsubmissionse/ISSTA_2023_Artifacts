 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InternalUtils.FactorialLog internalUtils_FactorialLog0 = InternalUtils.FactorialLog.create();
      double double0 = internalUtils_FactorialLog0.value(21);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InternalUtils.FactorialLog internalUtils_FactorialLog0 = InternalUtils.FactorialLog.create();
      InternalUtils.FactorialLog internalUtils_FactorialLog1 = internalUtils_FactorialLog0.withCache(33);
      double double0 = internalUtils_FactorialLog1.value(33);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InternalUtils.FactorialLog internalUtils_FactorialLog0 = InternalUtils.FactorialLog.create();
      InternalUtils.FactorialLog internalUtils_FactorialLog1 = internalUtils_FactorialLog0.withCache(19);
      InternalUtils.FactorialLog internalUtils_FactorialLog2 = internalUtils_FactorialLog1.withCache(229);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InternalUtils.FactorialLog internalUtils_FactorialLog0 = InternalUtils.FactorialLog.create();
      InternalUtils.FactorialLog internalUtils_FactorialLog1 = internalUtils_FactorialLog0.withCache(2);
      InternalUtils.FactorialLog internalUtils_FactorialLog2 = internalUtils_FactorialLog1.withCache(0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      double double0 = InternalUtils.makeNonZeroDouble((-172L));
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InternalUtils.validateProbability(363.7393755555636);
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      long long0 = InternalUtils.factorial(19);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        InternalUtils.validateProbability((-2683.7425958));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid probability: -2683.7425958
         //
         verifyException("org.apache.commons.rng.sampling.distribution.InternalUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      InternalUtils.FactorialLog internalUtils_FactorialLog0 = InternalUtils.FactorialLog.create();
      double double0 = internalUtils_FactorialLog0.value(15);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      InternalUtils.FactorialLog internalUtils_FactorialLog0 = InternalUtils.FactorialLog.create();
      InternalUtils.FactorialLog internalUtils_FactorialLog1 = internalUtils_FactorialLog0.withCache(678);
      double double0 = internalUtils_FactorialLog1.value(5);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        InternalUtils.newNormalizedGaussianSampler((NormalizedGaussianSampler) null, (UniformRandomProvider) null);
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
         //
         // The underlying sampler cannot share state
         //
         verifyException("org.apache.commons.rng.sampling.distribution.InternalUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(2518L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      ZigguratSampler.NormalizedGaussian zigguratSampler_NormalizedGaussian0 = ZigguratSampler.NormalizedGaussian.of(jDKRandomWrapper0);
      NormalizedGaussianSampler normalizedGaussianSampler0 = InternalUtils.newNormalizedGaussianSampler(zigguratSampler_NormalizedGaussian0, jDKRandomWrapper0);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[2] = (-1011.0);
      // Undeclared exception!
      try { 
        InternalUtils.validateProbabilities(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid probability: -1011.0
         //
         verifyException("org.apache.commons.rng.sampling.distribution.InternalUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 85.0544670175815;
      double double0 = InternalUtils.validateProbabilities(doubleArray0);
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        InternalUtils.validateProbabilities(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Probabilities must not be empty.
         //
         verifyException("org.apache.commons.rng.sampling.distribution.InternalUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      // Undeclared exception!
      try { 
        InternalUtils.validateProbabilities(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid sum of probabilities: 0.0
         //
         verifyException("org.apache.commons.rng.sampling.distribution.InternalUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        InternalUtils.validateProbabilities((double[]) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Probabilities must not be empty.
         //
         verifyException("org.apache.commons.rng.sampling.distribution.InternalUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        InternalUtils.factorial(33);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 33
         //
         verifyException("org.apache.commons.rng.sampling.distribution.InternalUtils", e);
      }
  }
