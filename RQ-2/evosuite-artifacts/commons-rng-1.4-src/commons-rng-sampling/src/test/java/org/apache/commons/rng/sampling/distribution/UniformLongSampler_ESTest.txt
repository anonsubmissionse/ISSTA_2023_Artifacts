 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper((Random) null);
      UniformLongSampler uniformLongSampler0 = UniformLongSampler.of(jDKRandomWrapper0, (-560L), 1L);
      JDKRandomWrapper jDKRandomWrapper1 = new JDKRandomWrapper((Random) null);
      UniformLongSampler uniformLongSampler1 = uniformLongSampler0.withUniformRandomProvider(jDKRandomWrapper1);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      org.evosuite.runtime.Random.setNextRandom(Integer.MAX_VALUE);
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      jDKRandomWrapper0.nextFloat();
      UniformLongSampler uniformLongSampler0 = UniformLongSampler.of(jDKRandomWrapper0, 1194L, 1753L);
      long long0 = uniformLongSampler0.sample();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UniformLongSampler uniformLongSampler0 = UniformLongSampler.of((UniformRandomProvider) null, (-1L), 0L);
      MockRandom mockRandom0 = new MockRandom((-4914L));
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      UniformLongSampler uniformLongSampler1 = uniformLongSampler0.withUniformRandomProvider(jDKRandomWrapper0);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      UniformLongSampler uniformLongSampler0 = UniformLongSampler.of(jDKRandomWrapper0, 0L, 1L);
      uniformLongSampler0.sample();
      long long0 = uniformLongSampler0.sample();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UniformLongSampler uniformLongSampler0 = UniformLongSampler.of((UniformRandomProvider) null, (-243L), 1187L);
      // Undeclared exception!
      try { 
        uniformLongSampler0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      UniformLongSampler uniformLongSampler0 = UniformLongSampler.of(jDKRandomWrapper0, 0L, 1L);
      String string0 = uniformLongSampler0.toString();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1091L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      UniformLongSampler uniformLongSampler0 = UniformLongSampler.of(jDKRandomWrapper0, 0L, 1091L);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      // Undeclared exception!
      try { 
        UniformLongSampler.of(jDKRandomWrapper0, 5059L, 0L);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // 5059 > 0
         //
         verifyException("org.apache.commons.rng.sampling.distribution.UniformLongSampler", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1091L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      UniformLongSampler uniformLongSampler0 = UniformLongSampler.of(jDKRandomWrapper0, 1091L, 1091L);
      UniformLongSampler uniformLongSampler1 = uniformLongSampler0.withUniformRandomProvider(jDKRandomWrapper0);
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1091L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      UniformLongSampler uniformLongSampler0 = UniformLongSampler.of(jDKRandomWrapper0, 1091L, 1091L);
      String string0 = uniformLongSampler0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      UniformLongSampler uniformLongSampler0 = UniformLongSampler.of(jDKRandomWrapper0, 1L, 1L);
      long long0 = uniformLongSampler0.sample();
      ;
}
