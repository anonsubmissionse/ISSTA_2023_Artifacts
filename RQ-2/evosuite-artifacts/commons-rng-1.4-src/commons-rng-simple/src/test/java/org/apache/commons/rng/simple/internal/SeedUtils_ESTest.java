/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 03:20:43 GMT 2022
 */

package org.apache.commons.rng.simple.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.rng.UniformRandomProvider;
import org.apache.commons.rng.simple.JDKRandomWrapper;
import org.apache.commons.rng.simple.internal.SeedUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SeedUtils_ESTest extends SeedUtils_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1777L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      mockRandom0.nextDouble();
      long long0 = SeedUtils.createLongHexPermutation(jDKRandomWrapper0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1777L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      mockRandom0.nextDouble();
      long long0 = SeedUtils.createLongHexPermutation(jDKRandomWrapper0);
      int int0 = SeedUtils.createIntHexPermutation(jDKRandomWrapper0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1777L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      mockRandom0.nextDouble();
      long long0 = SeedUtils.createLongHexPermutation(jDKRandomWrapper0);
      int int0 = SeedUtils.createIntHexPermutation(jDKRandomWrapper0);
      SeedUtils.createIntHexPermutation(jDKRandomWrapper0);
      long long1 = SeedUtils.createLongHexPermutation(jDKRandomWrapper0);
      assertEquals(1, long1);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        SeedUtils.createLongHexPermutation((UniformRandomProvider) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.simple.internal.SeedUtils$UnsignedByteProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        SeedUtils.createIntHexPermutation((UniformRandomProvider) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.simple.internal.SeedUtils$UnsignedByteProvider", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      int int0 = SeedUtils.createIntHexPermutation(jDKRandomWrapper0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      int int0 = SeedUtils.createIntHexPermutation(jDKRandomWrapper0);
      long long0 = SeedUtils.createLongHexPermutation(jDKRandomWrapper0);
      assertEquals(0, long0);
}
}
