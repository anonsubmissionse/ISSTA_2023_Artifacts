/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 18:31:17 GMT 2022
 */

package org.apache.commons.beanutils.locale.converters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import java.text.ParseException;
import java.util.LinkedList;
import java.util.Locale;
import org.apache.commons.beanutils.locale.converters.BigIntegerLocaleConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BigIntegerLocaleConverter_ESTest extends BigIntegerLocaleConverter_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BigIntegerLocaleConverter bigIntegerLocaleConverter0 = new BigIntegerLocaleConverter((Object) null, true);
      // Undeclared exception!
      try { 
        bigIntegerLocaleConverter0.parse((Object) null, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      BigIntegerLocaleConverter bigIntegerLocaleConverter0 = new BigIntegerLocaleConverter(locale0, ")awgu8T<w:kk>:Ls-w");
      // Undeclared exception!
      try { 
        bigIntegerLocaleConverter0.parse(locale0, "QBk<A@F");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to java.lang.String
         //
         verifyException("org.apache.commons.beanutils.locale.converters.DecimalLocaleConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.CANADA;
      BigIntegerLocaleConverter bigIntegerLocaleConverter0 = new BigIntegerLocaleConverter(object0, locale0, true);
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      BigIntegerLocaleConverter bigIntegerLocaleConverter0 = new BigIntegerLocaleConverter(locale0, "", false);
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.JAPAN;
      BigIntegerLocaleConverter bigIntegerLocaleConverter0 = new BigIntegerLocaleConverter(object0, locale0, "oYyQC)/K^BI#,`RS", false);
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("");
      BigIntegerLocaleConverter bigIntegerLocaleConverter0 = new BigIntegerLocaleConverter(locale0, true);
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BigIntegerLocaleConverter bigIntegerLocaleConverter0 = new BigIntegerLocaleConverter(false);
      try { 
        bigIntegerLocaleConverter0.parse("", "");
        fail("Expecting exception: ParseException");
      } catch(ParseException e) {
         //
         // Unparseable number: \"\"
         //
         verifyException("java.text.NumberFormat", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Byte byte0 = new Byte((byte)103);
      BigIntegerLocaleConverter bigIntegerLocaleConverter0 = new BigIntegerLocaleConverter(byte0);
      Object object0 = bigIntegerLocaleConverter0.parse(byte0, "u/O.<p>mQzz");
      Object object1 = bigIntegerLocaleConverter0.parse(object0, "u/O.<p>mQzz");
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      BigIntegerLocaleConverter bigIntegerLocaleConverter0 = new BigIntegerLocaleConverter(locale0);
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      BigIntegerLocaleConverter bigIntegerLocaleConverter0 = new BigIntegerLocaleConverter((Object) null);
      // Undeclared exception!
      try { 
        bigIntegerLocaleConverter0.parse((Object) null, "85p?eZ$vMH?'Pj8j");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Malformed pattern \"85p?eZ$vMH?'Pj8j\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Locale locale0 = Locale.JAPANESE;
      BigIntegerLocaleConverter bigIntegerLocaleConverter0 = new BigIntegerLocaleConverter(byte0, locale0);
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Locale locale0 = Locale.GERMAN;
      BigIntegerLocaleConverter bigIntegerLocaleConverter0 = new BigIntegerLocaleConverter(linkedList0, locale0, "");
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BigIntegerLocaleConverter bigIntegerLocaleConverter0 = new BigIntegerLocaleConverter();
      BigInteger bigInteger0 = (BigInteger)bigIntegerLocaleConverter0.convert((Object) "8C>rDl4=$1Z/gmg}0Gz", "8C>rDl4=$1Z/gmg}0Gz");
      ;
}
}
