 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter();
      MockDate mockDate0 = new MockDate();
      Object object0 = stringLocaleConverter0.parse(mockDate0, "");
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("");
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter((Object) null, locale0, true);
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter((Object) locale0, true);
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(locale0, "org.apache.commons.beanutils.locale.BaseLocaleConverter", true);
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(locale0, locale0, "q[$k", false);
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter();
      MockDate mockDate0 = new MockDate();
      // Undeclared exception!
      try { 
        stringLocaleConverter0.parse(mockDate0, "(0?!=`Cn|1[MZ)");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'C'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(true);
      Object object0 = stringLocaleConverter0.parse(stringLocaleConverter0, "");
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Object object0 = stringLocaleConverter0.parse(bigDecimal0, "VXn^m@BF/ld=./:");
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Short short0 = new Short((short) (-1839));
      Locale locale0 = Locale.ROOT;
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(short0, locale0, "J&|DVXt*$");
      Class<String> class0 = String.class;
      String string0 = stringLocaleConverter0.convert(class0, (Object) short0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(locale0, true);
      BigInteger bigInteger0 = BigInteger.TEN;
      Object object0 = stringLocaleConverter0.parse(bigInteger0, "-Q32");
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(locale0, true);
      Float float0 = new Float((double) (-32));
      Object object0 = stringLocaleConverter0.parse(float0, "Q");
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer((-32));
      Locale locale0 = Locale.FRENCH;
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(locale0, true);
      Object object0 = stringLocaleConverter0.parse(integer0, "Q");
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter();
      Byte byte0 = new Byte((byte)27);
      Object object0 = stringLocaleConverter0.parse(byte0, "yEuxpcbY59cJfnh>00");
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(locale0, "");
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(true);
      Locale locale0 = new Locale("", "");
      StringLocaleConverter stringLocaleConverter1 = new StringLocaleConverter(stringLocaleConverter0, locale0);
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(locale0);
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(locale0, true);
      Long long0 = new Long((-32));
      Object object0 = stringLocaleConverter0.parse(long0, "-Q32");
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2635, 1, 250, 1, 250, 2635);
      Locale locale0 = Locale.US;
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(mockDate0, locale0, (String) null);
      // Undeclared exception!
      try { 
        stringLocaleConverter0.parse((Object) null, (String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Double double0 = new Double((-2350.3406261772902));
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(double0);
      Object object0 = stringLocaleConverter0.parse(double0, (String) null);
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Double double0 = new Double((-2350.3406261772902));
      StringLocaleConverter stringLocaleConverter0 = new StringLocaleConverter(double0);
      Object object0 = stringLocaleConverter0.parse(double0, (String) null);
      assertNotNull(object0);
}
