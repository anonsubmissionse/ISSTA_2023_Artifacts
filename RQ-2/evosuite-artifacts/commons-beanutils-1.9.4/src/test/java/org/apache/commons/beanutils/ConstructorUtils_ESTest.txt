 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<String> class0 = String.class;
      try { 
        ConstructorUtils.invokeConstructor(class0, (Object) class0);
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // No such accessible constructor on object: java.lang.String
         //
         verifyException("org.apache.commons.beanutils.ConstructorUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<String> class0 = String.class;
      String string0 = ConstructorUtils.invokeExactConstructor(class0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Constructor<Object> constructor0 = ConstructorUtils.getAccessibleConstructor(class0, (Class<?>[]) null);
      constructor0.setAccessible(true);
      Constructor<Object> constructor1 = ConstructorUtils.getAccessibleConstructor(constructor0);
      assertNotNull(constructor1.toString());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Constructor<Integer> constructor0 = ConstructorUtils.getAccessibleConstructor(class0, (Class<?>[]) null);
      assertNotNull(constructor0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Class<String> class1 = String.class;
      Constructor<Integer> constructor0 = ConstructorUtils.getAccessibleConstructor(class0, (Class<?>) class1);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Class<String> class1 = String.class;
      Constructor<Integer> constructor0 = ConstructorUtils.getAccessibleConstructor(class0, (Class<?>) class1);
      assertNotNull(constructor0.toString());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConstructorUtils.invokeExactConstructor((Class<Object>) null, (Object[]) null, (Class<?>[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.ConstructorUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object[] objectArray0 = new Object[9];
      // Undeclared exception!
      try { 
        ConstructorUtils.invokeExactConstructor(class0, objectArray0, (Class<?>[]) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "";
      try { 
        ConstructorUtils.invokeExactConstructor(class0, objectArray0);
        fail("Expecting exception: InvocationTargetException");
      } catch(InvocationTargetException e) {
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        ConstructorUtils.invokeExactConstructor(class0, objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.ConstructorUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConstructorUtils.invokeExactConstructor((Class<Integer>) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.ConstructorUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      try { 
        ConstructorUtils.invokeExactConstructor(class0, (Object) class0);
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // No such accessible constructor on object: java.lang.Integer
         //
         verifyException("org.apache.commons.beanutils.ConstructorUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<String> class0 = String.class;
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 1);
      // Undeclared exception!
      try { 
        ConstructorUtils.invokeConstructor(class0, (Object[]) classArray0, (Class<?>[]) classArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        ConstructorUtils.invokeConstructor(class0, objectArray0, (Class<?>[]) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) class0;
      objectArray0[1] = (Object) class0;
      objectArray0[2] = (Object) class0;
      objectArray0[3] = (Object) class0;
      objectArray0[4] = (Object) class0;
      objectArray0[5] = (Object) class0;
      objectArray0[6] = (Object) class0;
      try { 
        ConstructorUtils.invokeConstructor(class0, objectArray0);
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // No such accessible constructor on object: java.lang.Object
         //
         verifyException("org.apache.commons.beanutils.ConstructorUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      try { 
        ConstructorUtils.invokeConstructor(class0, (Object) "[<XM!`W");
        fail("Expecting exception: InvocationTargetException");
      } catch(InvocationTargetException e) {
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConstructorUtils.invokeConstructor((Class<String>) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.ConstructorUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConstructorUtils.getAccessibleConstructor((Class<Integer>) null, (Class<?>[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.ConstructorUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        ConstructorUtils.getAccessibleConstructor((Class<Integer>) null, (Class<?>) class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.ConstructorUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 1);
      try { 
        ConstructorUtils.invokeExactConstructor(class0, (Object[]) null, (Class<?>[]) classArray0);
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // No such accessible constructor on object: java.lang.Integer
         //
         verifyException("org.apache.commons.beanutils.ConstructorUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 0);
      Object object0 = ConstructorUtils.invokeExactConstructor(class0, (Object[]) classArray0, (Class<?>[]) classArray0);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object object0 = ConstructorUtils.invokeConstructor(class0, (Object[]) null);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try { 
        ConstructorUtils.invokeConstructor(class0, objectArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.ConstructorUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Constructor<Object> constructor0 = ConstructorUtils.getAccessibleConstructor(class0, (Class<?>[]) null);
      Constructor<Object> constructor1 = ConstructorUtils.getAccessibleConstructor(constructor0);
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Integer integer0 = new Integer((-191));
      Integer integer1 = ConstructorUtils.invokeConstructor(class0, (Object) integer0);
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Constructor<Object> constructor0 = ConstructorUtils.getAccessibleConstructor((Constructor<Object>) null);
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object object0 = ConstructorUtils.invokeExactConstructor(class0, (Object[]) null);
      ;
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 4);
      Class<Object> class0 = Object.class;
      classArray0[0] = class0;
      Class<String> class1 = String.class;
      try { 
        ConstructorUtils.invokeConstructor(class1, (Object[]) classArray0, (Class<?>[]) classArray0);
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // No such accessible constructor on object: java.lang.String
         //
         verifyException("org.apache.commons.beanutils.ConstructorUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Class<String> class0 = String.class;
      String string0 = ConstructorUtils.invokeConstructor(class0, (Object[]) null, (Class<?>[]) null);
      ;
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Class<Object> class1 = Object.class;
      Constructor<Integer> constructor0 = ConstructorUtils.getAccessibleConstructor(class0, (Class<?>) class1);
      ;
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      try { 
        ConstructorUtils.invokeExactConstructor(class0, (Object) "");
        fail("Expecting exception: InvocationTargetException");
      } catch(InvocationTargetException e) {
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ConstructorUtils constructorUtils0 = new ConstructorUtils();
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) class0;
      try { 
        ConstructorUtils.invokeExactConstructor(class0, objectArray0);
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // No such accessible constructor on object: java.lang.annotation.Annotation
         //
         verifyException("org.apache.commons.beanutils.ConstructorUtils", e);
      }
  }
