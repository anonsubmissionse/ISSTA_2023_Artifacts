/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 18:31:37 GMT 2022
 */

package org.apache.commons.beanutils.locale.converters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.ParseException;
import java.util.Locale;
import org.apache.commons.beanutils.locale.converters.ShortLocaleConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ShortLocaleConverter_ESTest extends ShortLocaleConverter_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Double double0 = new Double(1.0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter(double0, locale0);
      // Undeclared exception!
      try { 
        shortLocaleConverter0.parse((Object) null, "org.apache.commons.beanutils.locale.BaseLocaleConverter");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Multiple decimal separators in pattern \"org.apache.commons.beanutils.locale.BaseLocaleConverter\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter(locale0, "`C0I]]qOR^");
      // Undeclared exception!
      try { 
        shortLocaleConverter0.parse(locale0, "znllZ");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to java.lang.String
         //
         verifyException("org.apache.commons.beanutils.locale.converters.DecimalLocaleConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter((Locale) null, "", true);
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter(locale0, true);
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter(true);
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Float float0 = new Float(544.9211259831899);
      Locale locale0 = Locale.CHINA;
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter(float0, locale0, "Supplied number is not of type Short: ", false);
      try { 
        shortLocaleConverter0.parse("Supplied number is not of type Short: ", "hW^TjV");
        fail("Expecting exception: ParseException");
      } catch(ParseException e) {
         //
         // Unparseable number: \"Supplied number is not of type Short: \"
         //
         verifyException("java.text.NumberFormat", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Float float0 = new Float((-53.04614F));
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter(float0, false);
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter((Object) null, locale0, false);
      // Undeclared exception!
      try { 
        shortLocaleConverter0.parse((Object) null, "#I5D6=o[,s,0QD@6");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter(locale0, "`C0I]]qOR^");
      Long long0 = Long.valueOf(64183L);
      // Undeclared exception!
      try { 
        shortLocaleConverter0.parse(long0, "`C0I]]qOR^");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Supplied number is not of type Short: 64183
         //
         verifyException("org.apache.commons.beanutils.locale.converters.ShortLocaleConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Locale locale0 = new Locale("", "");
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter("", locale0, "");
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter(locale0, "`C0I]]qOR^");
      Object object0 = shortLocaleConverter0.parse("`C0I]]qOR^", "`C0I]]qOR^");
      Object object1 = shortLocaleConverter0.parse(object0, "`C0I]]qOR^");
      assertEquals(object0, object1);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter(locale0);
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long(0L);
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter(long0);
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ShortLocaleConverter shortLocaleConverter0 = new ShortLocaleConverter();
  }
}
