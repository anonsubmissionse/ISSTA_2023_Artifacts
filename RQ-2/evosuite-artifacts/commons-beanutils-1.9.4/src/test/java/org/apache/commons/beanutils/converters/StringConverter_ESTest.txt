 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      StringConverter stringConverter0 = new StringConverter(object0);
      Class<?> class0 = stringConverter0.getDefaultType();
      assertTrue(class0.isAnnotation());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringConverter stringConverter0 = new StringConverter();
      Class<String> class0 = String.class;
      String string0 = stringConverter0.convertToType(class0, (Object) class0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      StringConverter stringConverter0 = new StringConverter(object0);
      Class<Object> class0 = Object.class;
      Object object1 = stringConverter0.handleMissing(class0);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      StringConverter stringConverter0 = new StringConverter(object0);
      Class<String> class0 = String.class;
      try { 
        stringConverter0.convertToType(class0, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringConverter stringConverter0 = new StringConverter();
      Class<Integer> class0 = Integer.class;
      try { 
        stringConverter0.convertToType(class0, (Object) stringConverter0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Can't convert value 'StringConverter[UseDefault=false]' to type class java.lang.Integer
         //
         verifyException("org.apache.commons.beanutils.converters.AbstractConverter", e);
      }
  }
