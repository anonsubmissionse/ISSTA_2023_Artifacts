/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 18:17:28 GMT 2022
 */

package org.apache.commons.beanutils.locale;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.InvocationTargetException;
import java.time.ZoneId;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import org.apache.commons.beanutils.BasicDynaBean;
import org.apache.commons.beanutils.ConvertUtilsBean;
import org.apache.commons.beanutils.ConvertingWrapDynaBean;
import org.apache.commons.beanutils.DynaClass;
import org.apache.commons.beanutils.DynaProperty;
import org.apache.commons.beanutils.LazyDynaBean;
import org.apache.commons.beanutils.LazyDynaClass;
import org.apache.commons.beanutils.LazyDynaMap;
import org.apache.commons.beanutils.MappedPropertyDescriptor;
import org.apache.commons.beanutils.PropertyUtilsBean;
import org.apache.commons.beanutils.ResultSetIterator;
import org.apache.commons.beanutils.WrapDynaClass;
import org.apache.commons.beanutils.locale.LocaleBeanUtilsBean;
import org.apache.commons.beanutils.locale.LocaleConvertUtilsBean;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocaleBeanUtilsBean_ESTest extends LocaleBeanUtilsBean_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      try { 
        localeBeanUtilsBean0.invokeSetter("", "    Target name = ", "org.apache.commons.logging.impl.Jdk14Logger", 17, propertyUtilsBean0);
        fail("Expecting exception: InvocationTargetException");
      } catch(InvocationTargetException e) {
         //
         // Cannot set     Target name = 
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = new LocaleConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.invokeSetter(localeConvertUtilsBean0, (String) null, "O$lBUx", (-12), "O$lBUx");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No name specified for bean class 'class org.apache.commons.beanutils.locale.LocaleConvertUtilsBean'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.invokeSetter((Object) null, "v`*", "v`*", 0, "v`*");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bean specified
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      LazyDynaClass lazyDynaClass0 = new LazyDynaClass("  setProperty(", (DynaProperty[]) null);
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap(lazyDynaClass0);
      Class<?> class0 = localeBeanUtilsBean0.definePropertyType(lazyDynaMap0, "_|De{g", "");
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap("sj%J/iZI+\"~;");
      localeBeanUtilsBean0.invokeSetter(lazyDynaMap0, "yt(=s#-zct.o$a[Q", (String) null, 5022, lazyDynaMap0);
      assertNotNull(lazyDynaMap0.getName());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, propertyUtilsBean0);
      Class<?> class0 = localeBeanUtilsBean0.definePropertyType(convertUtilsBean0, "org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", "org.apache.commons.beanutils.locale.LocaleBeanUtilsBean");
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = new LocaleConvertUtilsBean();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, propertyUtilsBean0);
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap();
      String string0 = localeBeanUtilsBean0.getSimpleProperty((Object) lazyDynaMap0, "", (String) null);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = new LocaleConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Locale locale0 = Locale.PRC;
      hashMap0.put(", type=", locale0);
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap(", type=", hashMap0);
      String string0 = localeBeanUtilsBean0.getSimpleProperty((Object) lazyDynaMap0, ", type=", ", type=");
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      LazyDynaClass lazyDynaClass0 = new LazyDynaClass("");
      BasicDynaBean basicDynaBean0 = new BasicDynaBean(lazyDynaClass0);
      basicDynaBean0.set("", (Object) localeBeanUtilsBean0);
      String string0 = localeBeanUtilsBean0.getSimpleProperty((Object) basicDynaBean0, "");
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      LazyDynaClass lazyDynaClass0 = new LazyDynaClass("    Target bean = ");
      BasicDynaBean basicDynaBean0 = new BasicDynaBean(lazyDynaClass0);
      String string0 = localeBeanUtilsBean0.getProperty((Object) basicDynaBean0, "\"'P", "\"'P");
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = new LocaleConvertUtilsBean();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, propertyUtilsBean0);
      DynaProperty[] dynaPropertyArray0 = new DynaProperty[0];
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap("!H;_", dynaPropertyArray0);
      String string0 = localeBeanUtilsBean0.getProperty((Object) lazyDynaMap0, "#miA|g$GkG=");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      Class<LazyDynaBean> class0 = LazyDynaBean.class;
      DynaProperty[] dynaPropertyArray0 = new DynaProperty[4];
      DynaProperty dynaProperty0 = new DynaProperty("", class0);
      dynaPropertyArray0[0] = dynaProperty0;
      dynaPropertyArray0[1] = dynaPropertyArray0[0];
      dynaPropertyArray0[2] = dynaPropertyArray0[1];
      dynaPropertyArray0[3] = dynaProperty0;
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap(dynaPropertyArray0);
      String string0 = localeBeanUtilsBean0.getProperty((Object) lazyDynaMap0, "");
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      Class<LazyDynaBean> class0 = LazyDynaBean.class;
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap();
      lazyDynaMap0.add("p>{@XB\"S%yXJ", class0);
      String string0 = localeBeanUtilsBean0.getNestedProperty((Object) lazyDynaMap0, "p>{@XB\"S%yXJ", "Throwable does not have initCause() method in JDK 1.3");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, propertyUtilsBean0);
      DynaProperty[] dynaPropertyArray0 = new DynaProperty[7];
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap("r");
      DynaProperty dynaProperty0 = lazyDynaMap0.getDynaProperty("Qi1!");
      dynaPropertyArray0[0] = dynaProperty0;
      dynaPropertyArray0[1] = dynaProperty0;
      dynaPropertyArray0[2] = dynaPropertyArray0[1];
      dynaPropertyArray0[3] = dynaProperty0;
      dynaPropertyArray0[4] = dynaProperty0;
      dynaPropertyArray0[5] = dynaPropertyArray0[0];
      Class<LazyDynaBean> class0 = LazyDynaBean.class;
      DynaProperty dynaProperty1 = new DynaProperty("", class0, class0);
      dynaPropertyArray0[6] = dynaProperty1;
      LazyDynaMap lazyDynaMap1 = new LazyDynaMap(dynaPropertyArray0);
      String string0 = localeBeanUtilsBean0.getNestedProperty((Object) lazyDynaMap1, "");
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      LazyDynaBean lazyDynaBean0 = new LazyDynaBean("org.apache.commons.beanutils.converters.FileConverter");
      String string0 = localeBeanUtilsBean0.getMappedProperty((Object) lazyDynaBean0, "org.apache.commons.beanutils.converters.FileConverter", "org.apache.commons.beanutils.converters.FileConverter", "org.apache.commons.beanutils.converters.FileConverter");
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      LazyDynaBean lazyDynaBean0 = new LazyDynaBean();
      String string0 = localeBeanUtilsBean0.getMappedProperty((Object) lazyDynaBean0, "=s3NR%U#{_Y T(Zh", "=s3NR%U#{_Y T(Zh");
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean((LocaleConvertUtilsBean) null, convertUtilsBean0, propertyUtilsBean0);
      LocaleConvertUtilsBean localeConvertUtilsBean0 = localeBeanUtilsBean0.getLocaleConvertUtils();
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, propertyUtilsBean0);
      Class<Integer> class0 = Integer.class;
      convertUtilsBean0.deregister();
      localeBeanUtilsBean0.convert(class0, 0, propertyUtilsBean0);
      localeBeanUtilsBean0.getLocaleConvertUtils();
      localeBeanUtilsBean0.getLocaleConvertUtils();
      Locale locale0 = Locale.CANADA_FRENCH;
      Locale locale1 = new Locale("b", "]Den7mm(0", "b");
      locale0.getDisplayCountry(locale1);
      localeBeanUtilsBean0.setDefaultLocale(locale0);
      String string0 = "";
      DynaProperty[] dynaPropertyArray0 = new DynaProperty[5];
      DynaProperty dynaProperty0 = new DynaProperty("");
      dynaPropertyArray0[0] = dynaProperty0;
      LazyDynaClass lazyDynaClass0 = new LazyDynaClass("");
      DynaProperty dynaProperty1 = lazyDynaClass0.getDynaProperty("");
      dynaPropertyArray0[1] = dynaProperty1;
      String string1 = null;
      Class<Integer> class1 = Integer.class;
      DynaProperty dynaProperty2 = new DynaProperty((String) null, class1);
      dynaPropertyArray0[2] = dynaProperty2;
      Class<Integer> class2 = Integer.class;
      WrapDynaClass wrapDynaClass0 = WrapDynaClass.createDynaClass(class2);
      DynaProperty dynaProperty3 = wrapDynaClass0.getDynaProperty(string0);
      dynaPropertyArray0[3] = dynaProperty3;
      BasicDynaBean basicDynaBean0 = new BasicDynaBean(lazyDynaClass0);
      String string2 = "5A]";
      localeBeanUtilsBean0.getNestedProperty((Object) basicDynaBean0, string2);
      Class<LocaleBeanUtilsBean> class3 = LocaleBeanUtilsBean.class;
      DynaProperty dynaProperty4 = new DynaProperty(string1, class3);
      dynaPropertyArray0[4] = dynaProperty4;
      LazyDynaClass lazyDynaClass1 = null;
      try {
        lazyDynaClass1 = new LazyDynaClass(string0, dynaPropertyArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.BasicDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap();
      String string0 = localeBeanUtilsBean0.getIndexedProperty((Object) lazyDynaMap0, "", 1115, "Wm:V' D");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      Class<LocaleBeanUtilsBean> class0 = LocaleBeanUtilsBean.class;
      Object object0 = localeBeanUtilsBean0.convert(class0, (-315), localeBeanUtilsBean0, (String) null);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, propertyUtilsBean0);
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap("Error parsing date '");
      BasicDynaBean basicDynaBean0 = new BasicDynaBean(lazyDynaMap0);
      Map<String, Object> map0 = basicDynaBean0.getMap();
      LazyDynaMap lazyDynaMap1 = new LazyDynaMap(map0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.setProperty((Object) lazyDynaMap1, "CM?Lgt|8?n-C\"V6 B", (Object) propertyUtilsBean0, "7JN>KYIg+7Kt_ZCx");
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
         //
         // Map is read only
         //
         verifyException("org.apache.commons.beanutils.BaseDynaBeanMapDecorator", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, (PropertyUtilsBean) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.setProperty((Object) null, "R{M^xH[%7%W%Bg]", (Object) convertUtilsBean0, "R{M^xH[%7%W%Bg]");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.setProperty((Object) hashMap0, "Warning - null logger in constructor; possible log4j misconfiguration.", (Object) hashMap0, "");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bean specified
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = new LocaleConvertUtilsBean();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, (PropertyUtilsBean) null);
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.setProperty((Object) lazyDynaMap0, "org.apache.commons.beanutils.WrapDynaClass$CacheKey", (Object) localeConvertUtilsBean0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      Class<ResultSetIterator> class0 = ResultSetIterator.class;
      Object object0 = localeBeanUtilsBean0.convert(class0, 0, class0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.setProperty((Object) "Error when inspecting class ", ":OJL3Bi@(E_!9Ew.T", object0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Missing End Delimiter
         //
         verifyException("org.apache.commons.beanutils.expression.DefaultResolver", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean((LocaleConvertUtilsBean) null, convertUtilsBean0, propertyUtilsBean0);
      Locale locale0 = Locale.KOREA;
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.setDefaultLocale(locale0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      BasicDynaBean basicDynaBean0 = new BasicDynaBean((DynaClass) null);
      Integer integer0 = new Integer(884);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.invokeSetter(basicDynaBean0, "| KQ^QZ< qu'%AMH^", "| KQ^QZ< qu'%AMH^", 9, integer0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      Class<LazyDynaBean> class0 = LazyDynaBean.class;
      DynaProperty[] dynaPropertyArray0 = new DynaProperty[0];
      LazyDynaClass lazyDynaClass0 = new LazyDynaClass("4Im_A6w", class0, dynaPropertyArray0);
      BasicDynaBean basicDynaBean0 = new BasicDynaBean(lazyDynaClass0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.invokeSetter(basicDynaBean0, "4Im_A6w", "CixmBD", 787, class0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // No indexed value for '4Im_A6w[787]'
         //
         verifyException("org.apache.commons.beanutils.BasicDynaBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.invokeSetter(list0, "", (String) null, 91, set0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 91, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, (PropertyUtilsBean) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getSimpleProperty((Object) convertUtilsBean0, "\" but expected signature \"", "^eSYibH,uw4");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      try { 
        localeBeanUtilsBean0.getSimpleProperty((Object) "", "", "");
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // Unknown property '' on class 'class java.lang.String'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, (PropertyUtilsBean) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getSimpleProperty((Object) convertUtilsBean0, "&G6?3qf*<ltpV6MWS");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean((LocaleConvertUtilsBean) null, convertUtilsBean0, propertyUtilsBean0);
      try { 
        localeBeanUtilsBean0.getSimpleProperty((Object) propertyUtilsBean0, "Null 9roperty value for '");
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // Unknown property 'Null 9roperty value for '' on class 'class org.apache.commons.beanutils.PropertyUtilsBean'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getSimpleProperty((Object) null, "");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bean specified
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getProperty((Object) null, "org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$1", ", ");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bean specified
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      DynaProperty[] dynaPropertyArray0 = new DynaProperty[3];
      DynaProperty dynaProperty0 = new DynaProperty("Dp");
      dynaPropertyArray0[0] = dynaProperty0;
      dynaPropertyArray0[1] = dynaPropertyArray0[0];
      dynaPropertyArray0[2] = dynaPropertyArray0[0];
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap("bY%ylxn.$94", dynaPropertyArray0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getProperty((Object) lazyDynaMap0, "I^.g]X+Z:jD46MhEoJ");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Null property value for 'I^.g]X+Z:jD46MhEoJ' on bean class 'class org.apache.commons.beanutils.LazyDynaMap'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, (PropertyUtilsBean) null);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getProperty(object0, "' to type:");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      try { 
        localeBeanUtilsBean0.getProperty((Object) localeBeanUtilsBean0, "org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$Descriptor");
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // Unknown property 'org' on class 'class org.apache.commons.beanutils.locale.LocaleBeanUtilsBean'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap(hashMap0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getNestedProperty((Object) lazyDynaMap0, "org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$1", "org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$1");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Null property value for 'org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$1' on bean class 'class org.apache.commons.beanutils.LazyDynaMap'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean((LocaleConvertUtilsBean) null);
      LazyDynaBean lazyDynaBean0 = new LazyDynaBean();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getNestedProperty((Object) lazyDynaBean0, "Gi$E7&*,eTFGSao", "Gi$E7&*,eTFGSao");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getNestedProperty((Object) null, "w$$|yTsPAuVVxR", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bean specified
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, (PropertyUtilsBean) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getNestedProperty((Object) convertUtilsBean0, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, propertyUtilsBean0);
      try { 
        localeBeanUtilsBean0.getNestedProperty((Object) propertyUtilsBean0, "_|De{g");
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // Unknown property '_|De{g' on class 'class org.apache.commons.beanutils.PropertyUtilsBean'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getNestedProperty(object0, "Parsing elements, delimiter=[");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid indexed property 'Parsing elements, delimiter=[' on bean class 'class java.lang.Object' Missing End Delimiter
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = new LocaleConvertUtilsBean();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, (PropertyUtilsBean) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getMappedPropertyLocale(convertUtilsBean0, "  setProperty(", "@Cqny");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getMappedProperty((Object) hashMap0, ".[zFx~}r%.5+X/IU", ".[zFx~}r%.5+X/IU", " returns void");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Null property value for '' on bean class 'class java.util.HashMap'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = new LocaleConvertUtilsBean();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, (PropertyUtilsBean) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getMappedProperty((Object) convertUtilsBean0, "", ", ", "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      Class<Object> class0 = Object.class;
      Object object0 = localeBeanUtilsBean0.convert(class0, 2217, class0);
      Map<String, Object> map0 = propertyUtilsBean0.describe(object0);
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap(map0);
      BasicDynaBean basicDynaBean0 = new BasicDynaBean(lazyDynaMap0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getMappedProperty((Object) basicDynaBean0, "", "m", "m");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // No mapped value for '(m)'
         //
         verifyException("org.apache.commons.beanutils.BasicDynaBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getMappedProperty((Object) null, (String) null, (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bean specified
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean((LocaleConvertUtilsBean) null);
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap("");
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getMappedProperty((Object) lazyDynaMap0, "", " c)eB)Rdh");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      try { 
        localeBeanUtilsBean0.getMappedProperty((Object) propertyUtilsBean0, "", "");
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // Unknown property ''+ on bean class 'class org.apache.commons.beanutils.PropertyUtilsBean'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getMappedProperty((Object) lazyDynaMap0, (String) null, "");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No name specified for bean class 'class org.apache.commons.beanutils.LazyDynaMap'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = new LocaleConvertUtilsBean();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, (PropertyUtilsBean) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getMappedProperty((Object) null, "Cannot set ");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      DynaProperty[] dynaPropertyArray0 = new DynaProperty[1];
      Class<LazyDynaBean> class0 = LazyDynaBean.class;
      LazyDynaClass lazyDynaClass0 = new LazyDynaClass("Component Converter is missing.", class0);
      DynaProperty dynaProperty0 = lazyDynaClass0.getDynaProperty("Throwable does not have initCause() method in JDK 1.3");
      dynaPropertyArray0[0] = dynaProperty0;
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap(dynaPropertyArray0);
      BasicDynaBean basicDynaBean0 = new BasicDynaBean(lazyDynaMap0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getMappedProperty((Object) basicDynaBean0, "Throwable does not have initCause() method in JDK 1.3");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // No mapped value for 'Throwable does not have initCause()'
         //
         verifyException("org.apache.commons.beanutils.BasicDynaBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      try { 
        localeBeanUtilsBean0.getMappedProperty((Object) convertUtilsBean0, " parameter(s) of matching types.");
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // Unknown property ' parameter'+ on bean class 'class org.apache.commons.beanutils.ConvertUtilsBean'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getMappedProperty((Object) lazyDynaMap0, "");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid mapped property '' on bean class 'class org.apache.commons.beanutils.LazyDynaMap'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = new LocaleConvertUtilsBean();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, (PropertyUtilsBean) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) convertUtilsBean0, "    Target bean = ", "n_a/aD fac$g@Q)P");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      BasicDynaBean basicDynaBean0 = new BasicDynaBean((DynaClass) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) basicDynaBean0, "", 1643, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = new LocaleConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      LazyDynaClass lazyDynaClass0 = new LazyDynaClass("Wk0G?u?>nfm<");
      BasicDynaBean basicDynaBean0 = new BasicDynaBean(lazyDynaClass0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) basicDynaBean0, "Wk0G?u?>nfm<", 2198, "Wk0G?u?>nfm<");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // No indexed value for 'Wk0G?u?>nfm<[2198]'
         //
         verifyException("org.apache.commons.beanutils.BasicDynaBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, propertyUtilsBean0);
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) localeConvertUtilsBean0, "?n\"gB5\"I0tb", (-317), "?n\"gB5\"I0tb");
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // Unknown property '?n\"gB5\"I0tb' on bean class 'class org.apache.commons.beanutils.locale.LocaleConvertUtilsBean'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) linkedList0, (String) null, 0, "cH~k");
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) null, "S1sus6;hUUn.ukhY2", 3891, "S1sus6;hUUn.ukhY2");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bean specified
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) hashMap0, "org.apache.commons.beanutils.locale.converters.DecimalLocaleConverter", 57);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Null property value for 'org' on bean class 'class java.util.HashMap'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, (PropertyUtilsBean) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) convertUtilsBean0, "", 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, propertyUtilsBean0);
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap(" cz`_i");
      BasicDynaBean basicDynaBean0 = new BasicDynaBean(lazyDynaMap0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) basicDynaBean0, " cz`_i", (-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // No indexed value for ' cz`_i[-1]'
         //
         verifyException("org.apache.commons.beanutils.BasicDynaBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      Object object0 = new Object();
      try { 
        localeBeanUtilsBean0.getIndexedProperty(object0, "", 0);
        fail("Expecting exception: NoSuchMethodException");
      } catch(NoSuchMethodException e) {
         //
         // Unknown property '' on bean class 'class java.lang.Object'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, propertyUtilsBean0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) linkedList0, (String) null, 1580);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1580, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean((LocaleConvertUtilsBean) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) null, "", 10);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bean specified
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      LazyDynaBean lazyDynaBean0 = new LazyDynaBean();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) lazyDynaBean0, "QB--:i}3o", (-1257));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, (PropertyUtilsBean) null);
      LazyDynaClass lazyDynaClass0 = new LazyDynaClass();
      BasicDynaBean basicDynaBean0 = new BasicDynaBean(lazyDynaClass0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) basicDynaBean0, ", Pattern=");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = new LocaleConvertUtilsBean();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, (PropertyUtilsBean) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.definePropertyType((Object) null, "XB44Au", "    Target name = ");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean((LocaleConvertUtilsBean) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.definePropertyType((Object) null, "x=cPP>gOD4.H", "x=cPP>gOD4.H");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bean specified
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.convert(class0, (-423), "java.lang.String@0000000038", "");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Unparseable number: \"java.lang.String@0000000038\"
         //
         verifyException("org.apache.commons.beanutils.locale.BaseLocaleConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean((LocaleConvertUtilsBean) null);
      Class<ConvertingWrapDynaBean> class0 = ConvertingWrapDynaBean.class;
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.convert(class0, 0, "", "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getSimpleProperty((Object) fileSystemHandling0, "org.apache.commons.beanutils.BeanUtils", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Nested property names are not allowed: Property 'org.apache.commons.beanutils.BeanUtils' on bean class 'class org.evosuite.runtime.testdata.FileSystemHandling'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean((LocaleConvertUtilsBean) null, convertUtilsBean0, propertyUtilsBean0);
      DynaProperty[] dynaPropertyArray0 = new DynaProperty[7];
      Class<String> class0 = String.class;
      DynaProperty dynaProperty0 = new DynaProperty("org.apache.commons.beanutils.converters.ConverterFacade", class0);
      dynaPropertyArray0[0] = dynaProperty0;
      dynaPropertyArray0[1] = dynaProperty0;
      dynaPropertyArray0[2] = dynaPropertyArray0[1];
      dynaPropertyArray0[3] = dynaProperty0;
      dynaPropertyArray0[4] = dynaProperty0;
      dynaPropertyArray0[5] = dynaProperty0;
      dynaPropertyArray0[6] = dynaProperty0;
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap(dynaPropertyArray0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getProperty((Object) lazyDynaMap0, "", "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.locale.LocaleBeanUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap();
      String string0 = localeBeanUtilsBean0.getNestedProperty((Object) lazyDynaMap0, "p>{@XB\"S%yXJ", "Throwable does not have initCause() method in JDK 1.3");
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = new LocaleConvertUtilsBean();
      ConvertUtilsBean convertUtilsBean0 = new ConvertUtilsBean();
      PropertyUtilsBean propertyUtilsBean0 = new PropertyUtilsBean();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0, convertUtilsBean0, propertyUtilsBean0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getMappedPropertyLocale((Object) null, (String) null, ", ");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bean specified
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) null, "a!_", "*");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // No bean specified
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap((DynaProperty[]) null);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getNestedProperty((Object) lazyDynaMap0, "BeanUtils.copyProperties(");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Null property value for 'BeanUtils.copyProperties(' on bean class 'class org.apache.commons.beanutils.LazyDynaMap'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      Map<String, String> map0 = localeBeanUtilsBean0.describe(localeBeanUtilsBean0);
      Class<Object> class0 = Object.class;
      Object object0 = localeBeanUtilsBean0.convert(class0, 44, map0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.invokeSetter(object0, "LDhL.vy", "LDhL.vy", 44, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Null property value for 'LDhL' on bean class 'class java.util.HashMap'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      Class<String> class0 = String.class;
      Object object0 = localeBeanUtilsBean0.convert(class0, 18, "?");
      ;
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      DynaProperty[] dynaPropertyArray0 = new DynaProperty[5];
      Class<MappedPropertyDescriptor> class0 = MappedPropertyDescriptor.class;
      Object object0 = localeBeanUtilsBean0.convert(class0, 5022, dynaPropertyArray0[1]);
      ;
}
 @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      DynaProperty dynaProperty0 = new DynaProperty("' to type:");
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap("Converting value '", (Map<String, Object>) null);
      localeBeanUtilsBean0.setProperty((Object) lazyDynaMap0, " cannot handle conversion from '", (Object) dynaProperty0, " cannot handle conversion from '");
      assertFalse(lazyDynaMap0.isReturnNull());
}
 @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      Map<String, String> map0 = localeBeanUtilsBean0.describe(localeBeanUtilsBean0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.populate(localeBeanUtilsBean0, map0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Cannot invoke org.apache.commons.beanutils.locale.LocaleBeanUtilsBean.setDefaultLocale on bean class 'class org.apache.commons.beanutils.locale.LocaleBeanUtilsBean' - java.lang.ClassCastException@379ce24a - had objects of type \"java.lang.String\" but expected signature \"java.util.Locale\"
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      LazyDynaClass lazyDynaClass0 = new LazyDynaClass("");
      BasicDynaBean basicDynaBean0 = new BasicDynaBean(lazyDynaClass0);
      String string0 = localeBeanUtilsBean0.getSimpleProperty((Object) basicDynaBean0, "");
      ;
}
 @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      LazyDynaBean lazyDynaBean0 = new LazyDynaBean("org.apache.commons.beanutils.converters.FileConverter");
      String string0 = localeBeanUtilsBean0.getMappedProperty((Object) lazyDynaBean0, "    (N.B. Converters can be configured to use default values to avoid throwing exceptions)");
      ;
}
 @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      LocaleConvertUtilsBean localeConvertUtilsBean0 = LocaleConvertUtilsBean.getInstance();
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean(localeConvertUtilsBean0);
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap();
      String string0 = localeBeanUtilsBean0.getIndexedProperty((Object) lazyDynaMap0, "gO!wNaj. Q_BP`0im", 6);
      ;
}
 @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      localeBeanUtilsBean0.setApplyLocalized(false);
      ;
}
 @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      LazyDynaMap lazyDynaMap0 = new LazyDynaMap();
      BasicDynaBean basicDynaBean0 = new BasicDynaBean(lazyDynaMap0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getMappedProperty((Object) basicDynaBean0, "org.apache.commons.beanutils.converters.FileConverter", "p3 <");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // No mapped value for 'org.apache.commons.beanutils.converters.FileConverter(p3 <)'
         //
         verifyException("org.apache.commons.beanutils.BasicDynaBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      Map<String, String> map0 = localeBeanUtilsBean0.describe(localeBeanUtilsBean0);
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) map0, "org.apache.commons.beanutils.converters.AbstractConverter", 2778, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Null property value for 'org' on bean class 'class java.util.HashMap'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      LocaleConvertUtilsBean localeConvertUtilsBean0 = localeBeanUtilsBean0.getLocaleConvertUtils();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getProperty((Object) localeConvertUtilsBean0, "  setProperty(");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid mapped property '  setProperty(' on bean class 'class org.apache.commons.beanutils.locale.LocaleConvertUtilsBean' Missing End Delimiter
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = new LocaleBeanUtilsBean();
      // Undeclared exception!
      try { 
        localeBeanUtilsBean0.getIndexedProperty((Object) "N", "N");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid indexed property 'N' on bean class 'class java.lang.String'
         //
         verifyException("org.apache.commons.beanutils.PropertyUtilsBean", e);
      }
  }
 @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      LocaleBeanUtilsBean localeBeanUtilsBean0 = LocaleBeanUtilsBean.getLocaleBeanUtilsInstance();
      Locale locale0 = localeBeanUtilsBean0.getDefaultLocale();
      assertNotNull(locale0.getCountry());
}
}
