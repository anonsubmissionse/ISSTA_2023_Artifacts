 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = AbstractArrayConverter.NO_DEFAULT;
      DoubleArrayConverter doubleArrayConverter0 = new DoubleArrayConverter(object0);
      Class<Integer> class0 = Integer.class;
      Object object1 = doubleArrayConverter0.convert(class0, class0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DoubleArrayConverter doubleArrayConverter0 = new DoubleArrayConverter();
      doubleArrayConverter0.useDefault = true;
      Class<Object> class0 = Object.class;
      Object object0 = doubleArrayConverter0.convert(class0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<String> class0 = String.class;
      DoubleArrayConverter doubleArrayConverter0 = new DoubleArrayConverter(class0);
      Class class1 = (Class)doubleArrayConverter0.convert(class0, (Object) null);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DoubleArrayConverter doubleArrayConverter0 = new DoubleArrayConverter();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        doubleArrayConverter0.convert(class0, (Object) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // No value specified
         //
         verifyException("org.apache.commons.beanutils.converters.DoubleArrayConverter", e);
      }
  }
