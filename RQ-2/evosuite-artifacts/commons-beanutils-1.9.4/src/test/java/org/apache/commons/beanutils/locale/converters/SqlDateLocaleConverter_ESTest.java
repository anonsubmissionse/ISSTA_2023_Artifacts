/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 18:35:07 GMT 2022
 */

package org.apache.commons.beanutils.locale.converters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.beanutils.locale.converters.SqlDateLocaleConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SqlDateLocaleConverter_ESTest extends SqlDateLocaleConverter_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SqlDateLocaleConverter sqlDateLocaleConverter0 = new SqlDateLocaleConverter((Object) null);
      // Undeclared exception!
      try { 
        sqlDateLocaleConverter0.parse((Object) null, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.PRC;
      SqlDateLocaleConverter sqlDateLocaleConverter0 = new SqlDateLocaleConverter(object0, locale0, "Q/Nc*5)6Rq", true);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SqlDateLocaleConverter sqlDateLocaleConverter0 = new SqlDateLocaleConverter(false);
      assertTrue(sqlDateLocaleConverter0.isLenient());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      SqlDateLocaleConverter sqlDateLocaleConverter0 = new SqlDateLocaleConverter(locale0, false);
      // Undeclared exception!
      try { 
        sqlDateLocaleConverter0.parse(locale0, "org.apache.commons.beanutils.ConversionException");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'o'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      SqlDateLocaleConverter sqlDateLocaleConverter0 = new SqlDateLocaleConverter((Object) locale0, false);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.GERMAN;
      SqlDateLocaleConverter sqlDateLocaleConverter0 = new SqlDateLocaleConverter(object0, locale0, false);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      SqlDateLocaleConverter sqlDateLocaleConverter0 = new SqlDateLocaleConverter(locale0, "|o", false);
      assertTrue(sqlDateLocaleConverter0.isLenient());
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SqlDateLocaleConverter sqlDateLocaleConverter0 = new SqlDateLocaleConverter((Locale) null, (String) null);
      assertFalse(sqlDateLocaleConverter0.isLenient());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = new Locale("");
      SqlDateLocaleConverter sqlDateLocaleConverter0 = new SqlDateLocaleConverter(object0, locale0, "");
      assertTrue(sqlDateLocaleConverter0.isLenient());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Object object0 = new Object();
      Locale locale0 = Locale.TAIWAN;
      SqlDateLocaleConverter sqlDateLocaleConverter0 = new SqlDateLocaleConverter(object0, locale0);
      assertFalse(sqlDateLocaleConverter0.isLenient());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SqlDateLocaleConverter sqlDateLocaleConverter0 = new SqlDateLocaleConverter();
      MockDate mockDate0 = new MockDate();
      Object object0 = sqlDateLocaleConverter0.parse(mockDate0, "!bb)<}H@|^kF]_Z=%D");
      assertNotNull(object0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      SqlDateLocaleConverter sqlDateLocaleConverter0 = new SqlDateLocaleConverter(locale0);
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      SqlDateLocaleConverter sqlDateLocaleConverter0 = new SqlDateLocaleConverter(object0);
      // Undeclared exception!
      try { 
        sqlDateLocaleConverter0.parse(object0, (String) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Error parsing date 'java.lang.Object@7f8cb607' at position=0
         //
         verifyException("org.apache.commons.beanutils.locale.converters.DateLocaleConverter", e);
      }
  }
}
