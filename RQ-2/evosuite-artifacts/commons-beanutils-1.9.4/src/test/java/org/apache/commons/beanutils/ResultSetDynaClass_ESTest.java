/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 18:33:25 GMT 2022
 */

package org.apache.commons.beanutils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Iterator;
import org.apache.commons.beanutils.DynaBean;
import org.apache.commons.beanutils.ResultSetDynaClass;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultSetDynaClass_ESTest extends ResultSetDynaClass_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      ResultSetDynaClass resultSetDynaClass0 = new ResultSetDynaClass(resultSet0, false, false);
      Class<?> class0 = resultSetDynaClass0.loadClass("org.apache.commons.beanutils.converters.ClassConverter");
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-4294)).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("").when(resultSet0).toString();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      ResultSetDynaClass resultSetDynaClass0 = new ResultSetDynaClass(resultSet0, false);
      resultSetDynaClass0.propertiesMap = null;
      // Undeclared exception!
      try { 
        resultSetDynaClass0.getObjectFromResultSet("n)s?Tj9i;e18");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetDynaClass resultSetDynaClass0 = null;
      try {
        resultSetDynaClass0 = new ResultSetDynaClass(resultSet0, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ResultSetDynaClass resultSetDynaClass0 = null;
      try {
        resultSetDynaClass0 = new ResultSetDynaClass((ResultSet) null, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.ResultSetDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetDynaClass resultSetDynaClass0 = null;
      try {
        resultSetDynaClass0 = new ResultSetDynaClass(resultSet0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetDynaClass resultSetDynaClass0 = null;
      try {
        resultSetDynaClass0 = new ResultSetDynaClass(resultSet0, true, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ResultSetDynaClass resultSetDynaClass0 = null;
      try {
        resultSetDynaClass0 = new ResultSetDynaClass((ResultSet) null, false, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.ResultSetDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ResultSetDynaClass resultSetDynaClass0 = null;
      try {
        resultSetDynaClass0 = new ResultSetDynaClass((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.ResultSetDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-4294)).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("").when(resultSet0).toString();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      ResultSetDynaClass resultSetDynaClass0 = new ResultSetDynaClass(resultSet0, false);
      // Undeclared exception!
      try { 
        resultSetDynaClass0.getObjectFromResultSet("n)s?Tj9i;e18");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid name 'n)s?Tj9i;e18'
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      ResultSetDynaClass resultSetDynaClass0 = new ResultSetDynaClass(resultSet0);
      ResultSet resultSet1 = resultSetDynaClass0.getResultSet();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      ResultSetDynaClass resultSetDynaClass0 = new ResultSetDynaClass(resultSet0);
      Iterator<DynaBean> iterator0 = resultSetDynaClass0.iterator();
      assertNotNull(iterator0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      ResultSetDynaClass resultSetDynaClass0 = new ResultSetDynaClass(resultSet0);
      try { 
        resultSetDynaClass0.loadClass(">[^Fq_]<");
        fail("Expecting exception: SQLException");
      } catch(SQLException e) {
         //
         // Cannot load column class '>[^Fq_]<': java.lang.ClassNotFoundException: Class '>[^Fq_]<.class' should be in target project, but could not be found!
         //
         verifyException("org.apache.commons.beanutils.ResultSetDynaClass", e);
      }
  }
}
