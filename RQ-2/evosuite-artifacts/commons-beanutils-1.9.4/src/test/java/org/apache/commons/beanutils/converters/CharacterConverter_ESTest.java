/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 18:30:43 GMT 2022
 */

package org.apache.commons.beanutils.converters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.beanutils.converters.CharacterConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharacterConverter_ESTest extends CharacterConverter_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CharacterConverter characterConverter0 = new CharacterConverter();
      Class<?> class0 = characterConverter0.getDefaultType();
      assertTrue(class0.isArray());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharacterConverter characterConverter0 = new CharacterConverter();
      Class<Character> class0 = Character.class;
      Character character0 = characterConverter0.convertToType(class0, (Object) class0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CharacterConverter characterConverter0 = new CharacterConverter();
      Class<Character> class0 = Character.class;
      try { 
        characterConverter0.convertToType(class0, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CharacterConverter characterConverter0 = new CharacterConverter();
      // Undeclared exception!
      try { 
        characterConverter0.convertToString((Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CharacterConverter characterConverter0 = new CharacterConverter();
      Class<Character> class0 = Character.TYPE;
      try { 
        characterConverter0.convertToType(class0, (Object) class0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Object object0 = new Object();
      CharacterConverter characterConverter0 = new CharacterConverter(object0);
      Class<Character> class0 = Character.TYPE;
      try { 
        characterConverter0.convertToType(class0, object0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CharacterConverter characterConverter0 = new CharacterConverter();
      Object object0 = new Object();
      String string0 = characterConverter0.convertToString(object0);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      CharacterConverter characterConverter0 = new CharacterConverter(class0);
      try { 
        characterConverter0.convertToType(class0, (Object) "j");
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // Can't convert value 'j' to type class java.lang.Integer
         //
         verifyException("org.apache.commons.beanutils.converters.AbstractConverter", e);
      }
  }
}
