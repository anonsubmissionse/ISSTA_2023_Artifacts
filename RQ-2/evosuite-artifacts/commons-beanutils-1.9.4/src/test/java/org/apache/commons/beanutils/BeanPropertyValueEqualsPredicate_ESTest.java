/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 18:24:43 GMT 2022
 */

package org.apache.commons.beanutils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BeanPropertyValueEqualsPredicate_ESTest extends BeanPropertyValueEqualsPredicate_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate("s]9Q35b[r.z!- p~Q{", "s]9Q35b[r.z!- p~Q{", true);
      boolean boolean0 = beanPropertyValueEqualsPredicate0.isIgnoreNull();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate("PE?u;?{fc6kL", (Object) null);
      Object object0 = beanPropertyValueEqualsPredicate0.getPropertyValue();
      assertNotNull(object0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = null;
      try {
        beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate("", object0, true);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // propertyName cannot be null or empty
         //
         verifyException("org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = null;
      try {
        beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate((String) null, (Object) null, true);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // propertyName cannot be null or empty
         //
         verifyException("org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate("Bnable to acceu the pa%pertwprovided.", object0);
      boolean boolean0 = beanPropertyValueEqualsPredicate0.evaluateValue((Object) null, "Bnable to acceu the pa%pertwprovided.");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate("Convet null vl-e  tyUe '", "Convet null vl-e  tyUe '");
      Object object0 = new Object();
      boolean boolean0 = beanPropertyValueEqualsPredicate0.evaluateValue("Convet null vl-e  tyUe '", object0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate("Convet null vl-e  tyUe '", "Convet null vl-e  tyUe '");
      boolean boolean0 = beanPropertyValueEqualsPredicate0.evaluateValue("Convet null vl-e  tyUe '", "Convet null vl-e  tyUe '");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate("Convet null vl-e  tyUe '", "Convet null vl-e  tyUe '");
      // Undeclared exception!
      try { 
        beanPropertyValueEqualsPredicate0.evaluate("Convet null vl-e  tyUe '");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Property not found.
         //
         verifyException("org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate("C|V7(`z`75W~phis", "C|V7(`z`75W~phis", true);
      assertTrue(beanPropertyValueEqualsPredicate0.isIgnoreNull());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate("C|V7(`z`75W~phis", "C|V7(`z`75W~phis", true);
      Object object0 = new Object();
      boolean boolean0 = beanPropertyValueEqualsPredicate0.evaluate(object0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate("(e4f+$p", "(e4f+$p");
      // Undeclared exception!
      try { 
        beanPropertyValueEqualsPredicate0.evaluate("(e4f+$p");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Problem during evaluation. Null value encountered in property path...
         //
         verifyException("org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = null;
      try {
        beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate((String) null, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // propertyName cannot be null or empty
         //
         verifyException("org.apache.commons.beanutils.BeanPropertyValueEqualsPredicate", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate("Convet null vl-e  tyUe '", "Convet null vl-e  tyUe '");
      boolean boolean0 = beanPropertyValueEqualsPredicate0.isIgnoreNull();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate("Convet null vl-e  tyUe '", "Convet null vl-e  tyUe '");
      beanPropertyValueEqualsPredicate0.getPropertyName();
      assertTrue(beanPropertyValueEqualsPredicate0.isIgnoreNull());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BeanPropertyValueEqualsPredicate beanPropertyValueEqualsPredicate0 = new BeanPropertyValueEqualsPredicate("C|V7(`z`75W~phis", "C|V7(`z`75W~phis", true);
      beanPropertyValueEqualsPredicate0.getPropertyValue();
      assertTrue(beanPropertyValueEqualsPredicate0.isIgnoreNull());
}
}
