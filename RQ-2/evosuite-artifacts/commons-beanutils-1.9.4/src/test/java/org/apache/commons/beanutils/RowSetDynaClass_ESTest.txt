 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-374)).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(true, false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0, (-1120));
      rowSetDynaClass0.createDynaBean();
      boolean boolean0 = false;
      rowSetDynaClass0.lowerCase = boolean0;
      boolean boolean1 = true;
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(boolean1, false).when(resultSet1).next();
      rowSetDynaClass0.createDynaBean();
      rowSetDynaClass0.copy(resultSet1);
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSetMetaData0).getColumnClassName(anyInt());
      doReturn(1148).when(resultSetMetaData0).getColumnCount();
      doReturn("", (String) null).when(resultSetMetaData0).getColumnName(anyInt());
      doReturn(0).when(resultSetMetaData0).getColumnType(anyInt());
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass(resultSet0, false, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-4162)).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(true, false).when(resultSet0).next();
      boolean boolean0 = true;
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0, true);
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(rowSetMetaDataImpl0).when(resultSet0).getMetaData();
      doReturn(true, true, false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0);
      rowSetDynaClass0.getRows();
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(rowSetMetaDataImpl0).when(resultSet1).getMetaData();
      rowSetDynaClass0.createDynaBean();
      rowSetDynaClass0.introspect(resultSet1);
      rowSetDynaClass0.lowerCase = false;
      rowSetDynaClass0.createDynaBean();
      rowSetDynaClass0.createDynaBean();
      rowSetDynaClass0.createDynaBean();
      ResultSet resultSet2 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet2).next();
      rowSetDynaClass0.copy(resultSet2);
      try { 
        rowSetDynaClass0.loadClass(" 0q5G7-");
        fail("Expecting exception: SQLException");
      } catch(SQLException e) {
         //
         // Cannot load column class ' 0q5G7-': java.lang.ClassNotFoundException: Class ' 0q5G7-.class' should be in target project, but could not be found!
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(rowSetMetaDataImpl0).when(resultSet0).getMetaData();
      doReturn(true, false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0, false, (-1295));
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(rowSetMetaDataImpl0).when(resultSet0).getMetaData();
      doReturn(true, false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0);
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0, true, true);
      ResultSetMetaData resultSetMetaData1 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-3)).when(resultSetMetaData1).getColumnCount();
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData1).when(resultSet1).getMetaData();
      rowSetDynaClass0.introspect(resultSet1);
      rowSetDynaClass0.getRows();
      ResultSet resultSet2 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet2).next();
      ResultSet resultSet3 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(resultSet3).next();
      rowSetDynaClass0.copy(resultSet3);
      rowSetDynaClass0.copy(resultSet2);
      boolean boolean0 = true;
      ResultSet resultSet4 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0, false).when(resultSet4).next();
      rowSetDynaClass0.createDynaBean();
      rowSetDynaClass0.createDynaBean();
      rowSetDynaClass0.copy(resultSet4);
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(rowSetMetaDataImpl0).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0, true, 0, false);
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(rowSetMetaDataImpl0).when(resultSet0).getMetaData();
      doReturn(true, false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0, true, true);
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0, true);
      HashMap<String, DynaProperty> hashMap0 = new HashMap<String, DynaProperty>();
      rowSetDynaClass0.propertiesMap = (Map<String, DynaProperty>) hashMap0;
      rowSetDynaClass0.createDynaBean();
      rowSetDynaClass0.getRows();
      rowSetDynaClass0.getRows();
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(rowSetMetaDataImpl0).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0, false, 896);
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(rowSetMetaDataImpl0).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0, true, true);
      List<DynaBean> list0 = rowSetDynaClass0.rows;
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet1).next();
      rowSetDynaClass0.copy(resultSet1);
      rowSetDynaClass0.rows = list0;
      ResultSet resultSet2 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet2).next();
      rowSetDynaClass0.copy(resultSet2);
      ResultSet resultSet3 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet3).next();
      rowSetDynaClass0.copy(resultSet3);
      rowSetDynaClass0.createDynaBean();
      ResultSet resultSet4 = null;
      // Undeclared exception!
      try { 
        rowSetDynaClass0.copy((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.RowSetDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(rowSetMetaDataImpl0).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0, false, true);
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(rowSetMetaDataImpl0).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0, 1);
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        rowSetDynaClass0.getObject(resultSet1, "org.apache.commons.beanutils.RowSetDynaClass");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid name 'org.apache.commons.beanutils.RowSetDynaClass'
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(rowSetMetaDataImpl0).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0);
      rowSetDynaClass0.getRows();
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 0;
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass((ResultSet) null, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.RowSetDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultSet resultSet0 = null;
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass((ResultSet) null, true, 523, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.RowSetDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultSet resultSet0 = null;
      boolean boolean0 = false;
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass((ResultSet) null, false, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.RowSetDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass((ResultSet) null, true, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.RowSetDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultSet resultSet0 = null;
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.RowSetDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass(resultSet0, true, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      boolean boolean0 = false;
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass(resultSet0, false, 285, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultSet resultSet0 = null;
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass((ResultSet) null, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.RowSetDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass(resultSet0, false, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass(resultSet0, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass(resultSet0, 790);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass(resultSet0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass((ResultSet) null, (-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.RowSetDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-56)).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet1).getMetaData();
      doReturn(true, false).when(resultSet1).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet1, 919);
  }
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RowSetDynaClass rowSetDynaClass0 = null;
      try {
        rowSetDynaClass0 = new RowSetDynaClass((ResultSet) null, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.beanutils.RowSetDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(rowSetMetaDataImpl0).when(resultSet0).getMetaData();
      doReturn(true, false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0);
      rowSetDynaClass0.getRows();
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(rowSetMetaDataImpl0).when(resultSet1).getMetaData();
      rowSetDynaClass0.createDynaBean();
      rowSetDynaClass0.introspect(resultSet1);
      boolean boolean0 = false;
      rowSetDynaClass0.lowerCase = boolean0;
      rowSetDynaClass0.createDynaBean();
      rowSetDynaClass0.createDynaBean();
      rowSetDynaClass0.createDynaBean();
      ResultSet resultSet2 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet2).next();
      rowSetDynaClass0.copy(resultSet2);
      String string0 = " 0q5G7-";
      try { 
        rowSetDynaClass0.loadClass(string0);
        fail("Expecting exception: SQLException");
      } catch(SQLException e) {
         //
         // Cannot load column class ' 0q5G7-': java.lang.ClassNotFoundException: Class ' 0q5G7-.class' should be in target project, but could not be found!
         //
         verifyException("org.apache.commons.beanutils.JDBCDynaClass", e);
      }
  }
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0, false, false);
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet1).next();
      rowSetDynaClass0.copy(resultSet1);
      ResultSet resultSet2 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSet resultSet3 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
  }
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RowSetMetaDataImpl rowSetMetaDataImpl0 = new RowSetMetaDataImpl();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-2071)).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      RowSetDynaClass rowSetDynaClass0 = new RowSetDynaClass(resultSet0, false, 0);
      rowSetDynaClass0.createDynaBean();
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet1).next();
      rowSetDynaClass0.copy(resultSet1);
      DynaBean dynaBean0 = rowSetDynaClass0.createDynaBean();
      rowSetDynaClass0.getRows();
      rowSetDynaClass0.getRows();
      rowSetDynaClass0.getRows();
      DynaBean dynaBean1 = rowSetDynaClass0.createDynaBean();
      ;
}
