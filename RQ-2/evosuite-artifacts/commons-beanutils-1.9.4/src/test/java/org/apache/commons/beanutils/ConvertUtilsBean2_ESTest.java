/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 18:34:29 GMT 2022
 */

package org.apache.commons.beanutils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.beanutils.ConvertUtilsBean2;
import org.apache.commons.beanutils.Converter;
import org.apache.commons.beanutils.converters.SqlTimestampConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConvertUtilsBean2_ESTest extends ConvertUtilsBean2_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConvertUtilsBean2 convertUtilsBean2_0 = new ConvertUtilsBean2();
      Class<Object> class0 = Object.class;
      Object object0 = convertUtilsBean2_0.convert((String[]) null, class0);
      assertNotNull(object0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConvertUtilsBean2 convertUtilsBean2_0 = new ConvertUtilsBean2();
      Class<String> class0 = String.class;
      Object object0 = convertUtilsBean2_0.convert((String) null, class0);
      assertNotNull(object0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConvertUtilsBean2 convertUtilsBean2_0 = new ConvertUtilsBean2();
      String string0 = convertUtilsBean2_0.convert((Object) null);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConvertUtilsBean2 convertUtilsBean2_0 = new ConvertUtilsBean2();
      Class<String> class0 = String.class;
      convertUtilsBean2_0.deregister(class0);
      String string0 = convertUtilsBean2_0.convert((Object) "");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConvertUtilsBean2 convertUtilsBean2_0 = new ConvertUtilsBean2();
      String[] stringArray0 = new String[8];
      convertUtilsBean2_0.register(true, true, 0);
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        convertUtilsBean2_0.convert(stringArray0, class0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // No value specified for 'Integer'
         //
         verifyException("org.apache.commons.beanutils.converters.AbstractConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ConvertUtilsBean2 convertUtilsBean2_0 = new ConvertUtilsBean2();
      Class<Object> class0 = Object.class;
      SqlTimestampConverter sqlTimestampConverter0 = new SqlTimestampConverter();
      convertUtilsBean2_0.register((Converter) sqlTimestampConverter0, (Class<?>) class0);
      // Undeclared exception!
      try { 
        convertUtilsBean2_0.convert("", class0);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
         //
         // SqlTimestampConverter does not support default String to 'Object' conversion.
         //
         verifyException("org.apache.commons.beanutils.converters.DateTimeConverter", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ConvertUtilsBean2 convertUtilsBean2_0 = new ConvertUtilsBean2();
      String string0 = convertUtilsBean2_0.convert((Object) "");
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ConvertUtilsBean2 convertUtilsBean2_0 = new ConvertUtilsBean2();
      Class<Integer> class0 = Integer.class;
      Object object0 = convertUtilsBean2_0.convert("", class0);
      assertEquals(1, object0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ConvertUtilsBean2 convertUtilsBean2_0 = new ConvertUtilsBean2();
      String[] stringArray0 = new String[8];
      Class<String> class0 = String.class;
      Object object0 = convertUtilsBean2_0.convert(stringArray0, class0);
      assertNotNull(object0);
}
}
