/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 20:44:26 GMT 2022
 */

package org.apache.commons.net.ftp.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.net.ftp.FTPClientConfig;
import org.apache.commons.net.ftp.FTPFile;
import org.apache.commons.net.ftp.parser.MacOsPeterFTPEntryParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MacOsPeterFTPEntryParser_ESTest extends MacOsPeterFTPEntryParser_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FTPClientConfig fTPClientConfig0 = new FTPClientConfig();
      MacOsPeterFTPEntryParser macOsPeterFTPEntryParser0 = new MacOsPeterFTPEntryParser(fTPClientConfig0);
      assertNotNull(fTPClientConfig0.getRecentDateFormatStr());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FTPClientConfig fTPClientConfig0 = new FTPClientConfig();
      MacOsPeterFTPEntryParser macOsPeterFTPEntryParser0 = new MacOsPeterFTPEntryParser(fTPClientConfig0);
      assertNotNull(fTPClientConfig0.getDefaultDateFormatStr());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MacOsPeterFTPEntryParser macOsPeterFTPEntryParser0 = new MacOsPeterFTPEntryParser();
      FTPClientConfig fTPClientConfig0 = macOsPeterFTPEntryParser0.getDefaultConfiguration();
      assertNotNull(fTPClientConfig0.getDefaultDateFormatStr());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MacOsPeterFTPEntryParser macOsPeterFTPEntryParser0 = new MacOsPeterFTPEntryParser();
      FTPClientConfig fTPClientConfig0 = macOsPeterFTPEntryParser0.getDefaultConfiguration();
      assertNotNull(fTPClientConfig0.getRecentDateFormatStr());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MacOsPeterFTPEntryParser macOsPeterFTPEntryParser0 = new MacOsPeterFTPEntryParser();
      FTPClientConfig fTPClientConfig0 = macOsPeterFTPEntryParser0.getDefaultConfiguration();
      assertNotNull(fTPClientConfig0.getServerSystemKey());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MacOsPeterFTPEntryParser macOsPeterFTPEntryParser0 = new MacOsPeterFTPEntryParser();
      // Undeclared exception!
      try { 
        macOsPeterFTPEntryParser0.parseFTPEntry((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FTPClientConfig fTPClientConfig0 = new FTPClientConfig();
      fTPClientConfig0.setShortMonthNames("))[-lM;LTS3L");
      MacOsPeterFTPEntryParser macOsPeterFTPEntryParser0 = null;
      try {
        macOsPeterFTPEntryParser0 = new MacOsPeterFTPEntryParser(fTPClientConfig0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // expecting a pipe-delimited string containing 12 tokens
         //
         verifyException("org.apache.commons.net.ftp.FTPClientConfig", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FTPClientConfig fTPClientConfig0 = new FTPClientConfig("", "kkC:sr", (String) null);
      MacOsPeterFTPEntryParser macOsPeterFTPEntryParser0 = null;
      try {
        macOsPeterFTPEntryParser0 = new MacOsPeterFTPEntryParser(fTPClientConfig0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'C'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MacOsPeterFTPEntryParser macOsPeterFTPEntryParser0 = new MacOsPeterFTPEntryParser();
      macOsPeterFTPEntryParser0.setRegex("NETWARE");
      // Undeclared exception!
      try { 
        macOsPeterFTPEntryParser0.parseFTPEntry("NETWARE");
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // No group 1
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MacOsPeterFTPEntryParser macOsPeterFTPEntryParser0 = new MacOsPeterFTPEntryParser();
      FTPFile fTPFile0 = macOsPeterFTPEntryParser0.parseFTPEntry("MVS");
      ;
}
}
