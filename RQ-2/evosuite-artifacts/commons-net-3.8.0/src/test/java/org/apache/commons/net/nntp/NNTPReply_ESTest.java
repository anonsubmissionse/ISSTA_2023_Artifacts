/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 20:58:00 GMT 2022
 */

package org.apache.commons.net.nntp;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.net.nntp.NNTPReply;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NNTPReply_ESTest extends NNTPReply_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      boolean boolean0 = NNTPReply.isNegativePermanent(600);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      boolean boolean0 = NNTPReply.isNegativePermanent(500);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean boolean0 = NNTPReply.isNegativeTransient(500);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      boolean boolean0 = NNTPReply.isNegativeTransient(400);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      boolean boolean0 = NNTPReply.isPositiveIntermediate(400);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      boolean boolean0 = NNTPReply.isPositiveIntermediate(300);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      boolean boolean0 = NNTPReply.isPositiveCompletion(300);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      boolean boolean0 = NNTPReply.isPositiveCompletion(200);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      boolean boolean0 = NNTPReply.isInformational(200);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      boolean boolean0 = NNTPReply.isInformational(100);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = NNTPReply.isNegativePermanent(836);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = NNTPReply.isNegativePermanent((-225));
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = NNTPReply.isNegativeTransient(680);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = NNTPReply.isNegativeTransient(0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = NNTPReply.isPositiveIntermediate(412);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = NNTPReply.isPositiveIntermediate(0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = NNTPReply.isPositiveCompletion(2073);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = NNTPReply.isPositiveCompletion(0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = NNTPReply.isInformational(320);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = NNTPReply.isInformational(0);
      assertTrue(boolean0);
}
}
