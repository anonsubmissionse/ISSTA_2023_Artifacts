/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 21:06:44 GMT 2022
 */

package org.apache.commons.net.ftp.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.net.ftp.FTPClientConfig;
import org.apache.commons.net.ftp.parser.MVSFTPEntryParser;
import org.apache.commons.net.ftp.parser.MacOsPeterFTPEntryParser;
import org.apache.commons.net.ftp.parser.NTFTPEntryParser;
import org.apache.commons.net.ftp.parser.NetwareFTPEntryParser;
import org.apache.commons.net.ftp.parser.OS2FTPEntryParser;
import org.apache.commons.net.ftp.parser.OS400FTPEntryParser;
import org.apache.commons.net.ftp.parser.UnixFTPEntryParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegexFTPFileEntryParserImpl_ESTest extends RegexFTPFileEntryParserImpl_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MacOsPeterFTPEntryParser macOsPeterFTPEntryParser0 = new MacOsPeterFTPEntryParser();
      boolean boolean0 = macOsPeterFTPEntryParser0.setRegex("");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UnixFTPEntryParser unixFTPEntryParser0 = new UnixFTPEntryParser();
      OS400FTPEntryParser oS400FTPEntryParser0 = new OS400FTPEntryParser(unixFTPEntryParser0.NUMERIC_DATE_CONFIG);
      // Undeclared exception!
      try { 
        oS400FTPEntryParser0.setRegex((String) null, (-578));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OS2FTPEntryParser oS2FTPEntryParser0 = new OS2FTPEntryParser((FTPClientConfig) null);
      // Undeclared exception!
      try { 
        oS2FTPEntryParser0.setRegex("KX>co>GACrWHlu[d");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unparseable regex supplied: KX>co>GACrWHlu[d
         //
         verifyException("org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NetwareFTPEntryParser netwareFTPEntryParser0 = new NetwareFTPEntryParser();
      // Undeclared exception!
      try { 
        netwareFTPEntryParser0.matches((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FTPClientConfig fTPClientConfig0 = new FTPClientConfig();
      OS2FTPEntryParser oS2FTPEntryParser0 = new OS2FTPEntryParser(fTPClientConfig0);
      // Undeclared exception!
      try { 
        oS2FTPEntryParser0.getGroupsAsString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OS400FTPEntryParser oS400FTPEntryParser0 = new OS400FTPEntryParser();
      boolean boolean0 = oS400FTPEntryParser0.matches("kk]#?r7j]dP");
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.matches("");
      String string0 = mVSFTPEntryParser0.getGroupsAsString();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      UnixFTPEntryParser unixFTPEntryParser0 = new UnixFTPEntryParser();
      String string0 = unixFTPEntryParser0.group(2414);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.matches("");
      int int0 = mVSFTPEntryParser0.getGroupCnt();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      NetwareFTPEntryParser netwareFTPEntryParser0 = new NetwareFTPEntryParser();
      // Undeclared exception!
      try { 
        netwareFTPEntryParser0.setRegex("p)(SS<M7%3r@g", 0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Unparseable regex supplied: p)(SS<M7%3r@g
         //
         verifyException("org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NTFTPEntryParser nTFTPEntryParser0 = new NTFTPEntryParser();
      int int0 = nTFTPEntryParser0.getGroupCnt();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FTPClientConfig fTPClientConfig0 = new FTPClientConfig("");
      MacOsPeterFTPEntryParser macOsPeterFTPEntryParser0 = new MacOsPeterFTPEntryParser(fTPClientConfig0);
      // Undeclared exception!
      try { 
        macOsPeterFTPEntryParser0.setRegex((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
