 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("RJOBNAME");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("RJOBNAME");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("^total d+$");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("^total d+$");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("aName");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("aName");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("GVolume");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("GVolume");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setType(30);
      FTPFile fTPFile0 = mVSFTPEntryParser0.parseFTPEntry("PP_J+j)=.d|oj[-uF");
      assertNotNull(fTPFile0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("JOBNAME");
      linkedList0.add(" %1$tZ");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("JOBNAME");
      linkedList0.add(" %1$tZ");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      FTPClientConfig fTPClientConfig0 = mVSFTPEntryParser0.getDefaultConfiguration();
      assertNotNull(fTPClientConfig0.getDefaultDateFormatStr());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      FTPClientConfig fTPClientConfig0 = mVSFTPEntryParser0.getDefaultConfiguration();
      assertNotNull(fTPClientConfig0.getServerSystemKey());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.push((String) null);
      // Undeclared exception!
      try { 
        mVSFTPEntryParser0.preParse(linkedList0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ftp.parser.MVSFTPEntryParser", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setType(1);
      FTPFile fTPFile0 = mVSFTPEntryParser0.parseFTPEntry("TYPE: L8");
      assertNotNull(fTPFile0.getName());
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setType(1);
      FTPFile fTPFile0 = mVSFTPEntryParser0.parseFTPEntry("TYPE: L8");
      assertFalse(fTPFile0.isDirectory());
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setType(1);
      FTPFile fTPFile0 = mVSFTPEntryParser0.parseFTPEntry("TYPE: L8");
      assertNotNull(fTPFile0.getRawListing());
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setType(1);
      FTPFile fTPFile0 = mVSFTPEntryParser0.parseFTPEntry("TYPE: L8");
      assertNotNull(fTPFile0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("Name");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("Name");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("Volume");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("Volume");
      mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<String> list0 = mVSFTPEntryParser0.preParse(linkedList0);
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      List<String> list0 = mVSFTPEntryParser0.preParse((List<String>) null);
      ;
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setType(4);
      // Undeclared exception!
      try { 
        mVSFTPEntryParser0.parseFTPEntry("");
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // No group 4
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setRegex("Spool Files", 3);
      mVSFTPEntryParser0.setType(3);
      // Undeclared exception!
      try { 
        mVSFTPEntryParser0.parseFTPEntry("Spool Files");
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // No group 3
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setRegex("UNIX_LTRIM");
      mVSFTPEntryParser0.setType(1);
      FTPFile fTPFile0 = mVSFTPEntryParser0.parseFTPEntry("");
      assertNotNull(fTPFile0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setType(0);
      // Undeclared exception!
      try { 
        mVSFTPEntryParser0.parseFTPEntry("");
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // No group 2
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setType(0);
      FTPFile fTPFile0 = mVSFTPEntryParser0.parseFTPEntry("TYPE: L8");
      assertNotNull(fTPFile0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setType(4);
      FTPFile fTPFile0 = mVSFTPEntryParser0.parseFTPEntry("dN6j9WeF5*biL");
      assertNotNull(fTPFile0);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setType(3);
      FTPFile fTPFile0 = mVSFTPEntryParser0.parseFTPEntry("NETWARE");
      assertNotNull(fTPFile0);
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("total");
      mVSFTPEntryParser0.preParse(linkedList0);
      FTPFile fTPFile0 = mVSFTPEntryParser0.parseFTPEntry("total");
      assertNotNull(fTPFile0);
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setType(1);
      // Undeclared exception!
      try { 
        mVSFTPEntryParser0.parseFTPEntry("");
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // No group 1
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      FTPFile fTPFile0 = mVSFTPEntryParser0.parseFTPEntry(",VFK.455x[O{Y");
      assertNotNull(fTPFile0);
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MVSFTPEntryParser mVSFTPEntryParser0 = new MVSFTPEntryParser();
      mVSFTPEntryParser0.setType(0);
      // Undeclared exception!
      try { 
        mVSFTPEntryParser0.parseFTPEntry((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
