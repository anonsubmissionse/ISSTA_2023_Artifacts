/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 21:10:58 GMT 2022
 */

package org.apache.commons.net.ntp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.net.InetAddress;
import org.apache.commons.net.ntp.NTPUDPClient;
import org.apache.commons.net.ntp.TimeInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NTPUDPClient_ESTest extends NTPUDPClient_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      nTPUDPClient0.setVersion(0);
      int int0 = nTPUDPClient0.getVersion();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      nTPUDPClient0.setVersion((-2144));
      int int0 = nTPUDPClient0.getVersion();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("org.apache.commons.net.ntp.NTPUDPClient", 123);
      byte[] byteArray0 = new byte[7];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      System.setCurrentTimeMillis(0);
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getByName("");
      nTPUDPClient0.getTime(inetAddress0, 0);
      assertEquals(0, nTPUDPClient0.getVersion());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 123);
      byte[] byteArray0 = new byte[8];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      TimeInfo timeInfo0 = nTPUDPClient0.getTime(inetAddress0, (int) (byte)24);
      assertEquals(0, nTPUDPClient0.getVersion());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 123);
      byte[] byteArray0 = new byte[8];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      TimeInfo timeInfo0 = nTPUDPClient0.getTime(inetAddress0, (int) (byte)24);
      ;
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 123);
      byte[] byteArray0 = new byte[8];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      System.setCurrentTimeMillis((-638L));
      TimeInfo timeInfo0 = nTPUDPClient0.getTime(inetAddress0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 123);
      byte[] byteArray0 = new byte[8];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      System.setCurrentTimeMillis((-638L));
      TimeInfo timeInfo0 = nTPUDPClient0.getTime(inetAddress0, 0);
      assertEquals(0, nTPUDPClient0.getVersion());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 123);
      byte[] byteArray0 = new byte[8];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      System.setCurrentTimeMillis(0L);
      nTPUDPClient0.getTime(inetAddress0);
      assertEquals(0, nTPUDPClient0.getVersion());
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 123);
      byte[] byteArray0 = new byte[8];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      System.setCurrentTimeMillis((-638L));
      TimeInfo timeInfo0 = nTPUDPClient0.getTime(inetAddress0);
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 123);
      byte[] byteArray0 = new byte[8];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      System.setCurrentTimeMillis((-638L));
      TimeInfo timeInfo0 = nTPUDPClient0.getTime(inetAddress0);
      assertEquals(0, nTPUDPClient0.getVersion());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      // Undeclared exception!
      try { 
        nTPUDPClient0.getTime(inetAddress0, (-1426));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Port out of range:-1426
         //
         verifyException("java.net.DatagramPacket", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      // Undeclared exception!
      try { 
        nTPUDPClient0.getTime((InetAddress) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // null buffer || null address
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      // Undeclared exception!
      try { 
        nTPUDPClient0.getTime((InetAddress) null, 1328);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // null buffer || null address
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      nTPUDPClient0.open(0, inetAddress0);
      try { 
        nTPUDPClient0.getTime(inetAddress0, 0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IO exception
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 123);
      byte[] byteArray0 = new byte[28];
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      nTPUDPClient0.getTime(inetAddress0);
      try { 
        nTPUDPClient0.getTime(inetAddress0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IO exception
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NTPUDPClient nTPUDPClient0 = new NTPUDPClient();
      int int0 = nTPUDPClient0.getVersion();
      ;
}
}
