/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 21:14:22 GMT 2022
 */

package org.apache.commons.net.nntp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.NoSuchElementException;
import java.util.PriorityQueue;
import java.util.ServiceLoader;
import java.util.Set;
import java.util.Vector;
import org.apache.commons.net.nntp.NewsgroupInfo;
import org.apache.commons.net.nntp.NewsgroupIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NewsgroupIterator_ESTest extends NewsgroupIterator_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(1);
      arrayDeque0.add(".?ygo%hLL=#,{");
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(arrayDeque0);
      newsgroupIterator0.next();
      newsgroupIterator0.remove();
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(arrayDeque0);
      Iterator<NewsgroupInfo> iterator0 = newsgroupIterator0.iterator();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(set0);
      boolean boolean0 = newsgroupIterator0.hasNext();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<String> class0 = String.class;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ServiceLoader<String> serviceLoader0 = ServiceLoader.load(class0, classLoader0);
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(serviceLoader0);
      boolean boolean0 = newsgroupIterator0.hasNext();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(priorityQueue0);
      priorityQueue0.add("3hIH-Vq 5>TsUOu(dJx");
      // Undeclared exception!
      try { 
        newsgroupIterator0.remove();
        fail("Expecting exception: ConcurrentModificationException");
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PriorityQueue$Itr", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(priorityQueue0);
      priorityQueue0.add("org.apache.commons.io.filefilter.OrFileFilter");
      // Undeclared exception!
      try { 
        newsgroupIterator0.next();
        fail("Expecting exception: ConcurrentModificationException");
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PriorityQueue$Itr", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(vector0);
      linkedHashSet0.add((String) null);
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(linkedHashSet0);
      // Undeclared exception!
      try { 
        newsgroupIterator0.next();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.NNTPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NewsgroupIterator newsgroupIterator0 = null;
      try {
        newsgroupIterator0 = new NewsgroupIterator((Iterable<String>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.NewsgroupIterator", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(priorityQueue0);
      // Undeclared exception!
      try { 
        newsgroupIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PriorityQueue$Itr", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Class<String> class0 = String.class;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ServiceLoader<String> serviceLoader0 = ServiceLoader.load(class0, classLoader0);
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(serviceLoader0);
      // Undeclared exception!
      try { 
        newsgroupIterator0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ServiceLoader$1", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      HashSet<String> hashSet0 = new HashSet<String>(arrayList0);
      NewsgroupIterator newsgroupIterator0 = new NewsgroupIterator(hashSet0);
      // Undeclared exception!
      try { 
        newsgroupIterator0.remove();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }
}
