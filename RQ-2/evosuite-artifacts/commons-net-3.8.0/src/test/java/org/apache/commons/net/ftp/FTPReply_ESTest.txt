 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      boolean boolean0 = FTPReply.isProtectedReplyCode(700);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      boolean boolean0 = FTPReply.isProtectedReplyCode(600);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean boolean0 = FTPReply.isNegativePermanent(600);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      boolean boolean0 = FTPReply.isNegativePermanent(500);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      boolean boolean0 = FTPReply.isNegativeTransient(500);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      boolean boolean0 = FTPReply.isNegativeTransient(400);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      boolean boolean0 = FTPReply.isPositiveIntermediate(400);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      boolean boolean0 = FTPReply.isPositiveIntermediate(300);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      boolean boolean0 = FTPReply.isPositiveCompletion(300);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      boolean boolean0 = FTPReply.isPositiveCompletion(200);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = FTPReply.isPositivePreliminary(200);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = FTPReply.isProtectedReplyCode(1210);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = FTPReply.isProtectedReplyCode(287);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = FTPReply.isNegativePermanent(622);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = FTPReply.isNegativePermanent(197);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = FTPReply.isNegativeTransient(553);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = FTPReply.isNegativeTransient((-1));
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = FTPReply.isPositiveIntermediate(409);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = FTPReply.isPositiveIntermediate((-1));
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = FTPReply.isPositiveCompletion(409);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      boolean boolean0 = FTPReply.isPositiveCompletion((-1));
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      boolean boolean0 = FTPReply.isPositivePreliminary(553);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      boolean boolean0 = FTPReply.isPositivePreliminary(100);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      boolean boolean0 = FTPReply.isPositivePreliminary(0);
      assertTrue(boolean0);
}
