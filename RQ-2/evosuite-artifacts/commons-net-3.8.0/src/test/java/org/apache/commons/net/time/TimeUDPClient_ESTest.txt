 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 37);
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, (byte[]) null);
      timeUDPClient0.open(0, (InetAddress) null);
      InetAddress inetAddress0 = timeUDPClient0.getLocalAddress();
      long long0 = timeUDPClient0.getTime(inetAddress0, 0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 37);
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, (byte[]) null);
      timeUDPClient0.open(0, (InetAddress) null);
      InetAddress inetAddress0 = timeUDPClient0.getLocalAddress();
      long long0 = timeUDPClient0.getTime(inetAddress0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 37);
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, (byte[]) null);
      timeUDPClient0.open(0, (InetAddress) null);
      InetAddress inetAddress0 = timeUDPClient0.getLocalAddress();
      Date date0 = timeUDPClient0.getDate(inetAddress0, 0);
      assertNotNull(date0.toString());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 37);
      timeUDPClient0.open();
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, (byte[]) null);
      InetAddress inetAddress0 = timeUDPClient0.getLocalAddress();
      Date date0 = timeUDPClient0.getDate(inetAddress0);
      assertNotNull(date0.toString());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      // Undeclared exception!
      try { 
        timeUDPClient0.getTime(inetAddress0, (-1604));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Port out of range:-1604
         //
         verifyException("java.net.DatagramPacket", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      timeUDPClient0.open();
      try { 
        timeUDPClient0.getTime(inetAddress0, 153);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IO exception
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      // Undeclared exception!
      try { 
        timeUDPClient0.getTime(inetAddress0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.time.TimeUDPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      // Undeclared exception!
      try { 
        timeUDPClient0.getDate(inetAddress0, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.time.TimeUDPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      // Undeclared exception!
      try { 
        timeUDPClient0.getDate(inetAddress0, (-300));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Port out of range:-300
         //
         verifyException("java.net.DatagramPacket", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      // Undeclared exception!
      try { 
        timeUDPClient0.getDate(inetAddress0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.time.TimeUDPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      // Undeclared exception!
      try { 
        timeUDPClient0.getTime(inetAddress0, 868);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.time.TimeUDPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      timeUDPClient0.open();
      InetAddress inetAddress0 = timeUDPClient0.getLocalAddress();
      try { 
        timeUDPClient0.getDate(inetAddress0, 37);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IO exception
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      timeUDPClient0.open();
      InetAddress inetAddress0 = timeUDPClient0.getLocalAddress();
      try { 
        timeUDPClient0.getTime(inetAddress0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IO exception
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TimeUDPClient timeUDPClient0 = new TimeUDPClient();
      timeUDPClient0.open();
      InetAddress inetAddress0 = timeUDPClient0.getLocalAddress();
      try { 
        timeUDPClient0.getDate(inetAddress0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IO exception
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }
