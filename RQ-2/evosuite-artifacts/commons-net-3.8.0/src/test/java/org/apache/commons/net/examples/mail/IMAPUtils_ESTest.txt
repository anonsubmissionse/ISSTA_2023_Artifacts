 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.io.filefilter.WildcardFileFilter", "m");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintStream0);
      // Undeclared exception!
      try { 
        IMAPUtils.imapLogin((URI) null, (-1), printCommandListener0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("E>3T;2UzHTGjPM");
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintWriter0, false);
      // Undeclared exception!
      try { 
        IMAPUtils.imapLogin(uRI0, 1, printCommandListener0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Missing userInfo details
         //
         verifyException("org.apache.commons.net.examples.mail.IMAPUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      URI uRI0 = MockURI.URI("APAB3oSLITY", "APAB3oSLITY", "APAB3oSLITY", 1912, "", "APAB3oSLITY", "APAB3oSLITY");
      // Undeclared exception!
      try { 
        IMAPUtils.imapLogin(uRI0, 1912, (ProtocolCommandListener) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Invalid userInfo details: 'APAB3oSLITY'
         //
         verifyException("org.apache.commons.net.examples.mail.IMAPUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IMAPUtils iMAPUtils0 = new IMAPUtils();
  }
