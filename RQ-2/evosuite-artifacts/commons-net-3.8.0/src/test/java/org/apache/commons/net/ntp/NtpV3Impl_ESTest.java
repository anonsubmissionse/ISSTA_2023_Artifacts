/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 20:43:48 GMT 2022
 */

package org.apache.commons.net.ntp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.DatagramPacket;
import org.apache.commons.net.ntp.NtpV3Impl;
import org.apache.commons.net.ntp.TimeStamp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NtpV3Impl_ESTest extends NtpV3Impl_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setStratum(2);
      String string0 = ntpV3Impl0.getReferenceIdString();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setStratum(2);
      String string0 = ntpV3Impl0.getReferenceIdString();
      assertEquals(1, ntpV3Impl0.getStratum());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setVersion((-297));
      ntpV3Impl0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      long long0 = NtpV3Impl.ul((byte)0);
      assertEquals(0, long0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      long long0 = NtpV3Impl.ul((byte) (-60));
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int int0 = NtpV3Impl.ui((byte)0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int int0 = NtpV3Impl.ui((byte) (-106));
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setVersion((-359));
      int int0 = ntpV3Impl0.getVersion();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setVersion((-359));
      int int0 = ntpV3Impl0.getVersion();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = TimeStamp.getCurrentTime();
      ntpV3Impl0.setTransmitTime(timeStamp0);
      TimeStamp timeStamp1 = ntpV3Impl0.getTransmitTimeStamp();
      assertEquals(0, timeStamp1.ntpValue());
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setStratum(599);
      int int0 = ntpV3Impl0.getStratum();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setRootDispersion(248);
      double double0 = ntpV3Impl0.getRootDispersionInMillisDouble();
      assertEquals(1, ntpV3Impl0.getRootDispersionInMillis());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setRootDispersion(248);
      double double0 = ntpV3Impl0.getRootDispersionInMillisDouble();
      ;
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setRootDispersion(248);
      long long0 = ntpV3Impl0.getRootDispersionInMillis();
      ;
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setRootDispersion(248);
      long long0 = ntpV3Impl0.getRootDispersionInMillis();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setRootDispersion((-411));
      long long0 = ntpV3Impl0.getRootDispersionInMillis();
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setRootDispersion((-411));
      long long0 = ntpV3Impl0.getRootDispersionInMillis();
      assertEquals(1, long0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setRootDispersion(248);
      int int0 = ntpV3Impl0.getRootDispersion();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setRootDelay(2048);
      double double0 = ntpV3Impl0.getRootDelayInMillisDouble();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setRootDelay((-411));
      double double0 = ntpV3Impl0.getRootDelayInMillisDouble();
      assertEquals(0, ntpV3Impl0.getRootDelay());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setRootDelay((-411));
      double double0 = ntpV3Impl0.getRootDelayInMillisDouble();
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setRootDelay(143);
      int int0 = ntpV3Impl0.getRootDelay();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setRootDelay((-1735));
      int int0 = ntpV3Impl0.getRootDelay();
      ;
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setRootDelay((-1735));
      int int0 = ntpV3Impl0.getRootDelay();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = TimeStamp.getCurrentTime();
      ntpV3Impl0.setReferenceTime(timeStamp0);
      TimeStamp timeStamp1 = ntpV3Impl0.getReferenceTimeStamp();
      assertEquals(1, timeStamp1.ntpValue());
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setReferenceId(1120);
      int int0 = ntpV3Impl0.getReferenceId();
      ;
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = new TimeStamp(531L);
      ntpV3Impl0.setReceiveTimeStamp(timeStamp0);
      TimeStamp timeStamp1 = ntpV3Impl0.getReceiveTimeStamp();
      assertEquals(1, timeStamp1.ntpValue());
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = TimeStamp.getCurrentTime();
      ntpV3Impl0.setReceiveTimeStamp(timeStamp0);
      TimeStamp timeStamp1 = ntpV3Impl0.getReceiveTimeStamp();
      assertEquals(1, timeStamp1.ntpValue());
}
 @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setPrecision(4404);
      int int0 = ntpV3Impl0.getPrecision();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setPrecision((-4366));
      int int0 = ntpV3Impl0.getPrecision();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setPoll(6);
      int int0 = ntpV3Impl0.getPoll();
      ;
}
 @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setPoll(199);
      int int0 = ntpV3Impl0.getPoll();
      ;
}
 @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = TimeStamp.getCurrentTime();
      ntpV3Impl0.setOriginateTimeStamp(timeStamp0);
      TimeStamp timeStamp1 = ntpV3Impl0.getOriginateTimeStamp();
      assertEquals(1, timeStamp1.ntpValue());
}
 @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setMode(230);
      int int0 = ntpV3Impl0.getMode();
      assertEquals(1, ntpV3Impl0.getRootDispersionInMillis());
}
 @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setMode(230);
      int int0 = ntpV3Impl0.getMode();
      ;
}
 @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setLeapIndicator(230);
      int int0 = ntpV3Impl0.getLeapIndicator();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ;
}
 @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      datagramPacket0.setPort(0);
      DatagramPacket datagramPacket1 = ntpV3Impl0.getDatagramPacket();
      assertEquals(1, datagramPacket1.getLength());
}
 @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      assertEquals(1, datagramPacket0.getLength());
}
 @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      datagramPacket0.setLength(0);
      DatagramPacket datagramPacket1 = ntpV3Impl0.getDatagramPacket();
      ;
}
 @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      int int0 = ntpV3Impl0.getReferenceId();
      ;
}
 @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      int int0 = ntpV3Impl0.getMode();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      int int0 = ntpV3Impl0.getRootDelay();
      ;
}
 @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      int int0 = ntpV3Impl0.getVersion();
      assertEquals(0, ntpV3Impl0.getMode());
}
 @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      int int0 = ntpV3Impl0.getVersion();
      ;
}
 @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      int int0 = ntpV3Impl0.getPoll();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      int int0 = ntpV3Impl0.getStratum();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      int int0 = ntpV3Impl0.getPrecision();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = ntpV3Impl0.getTransmitTimeStamp();
      assertEquals(0, timeStamp0.getSeconds());
}
 @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      int int0 = ntpV3Impl0.getRootDispersion();
      ;
}
 @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      double double0 = ntpV3Impl0.getRootDispersionInMillisDouble();
      ;
}
 @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      NtpV3Impl ntpV3Impl1 = new NtpV3Impl();
      boolean boolean0 = ntpV3Impl0.equals(ntpV3Impl1);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      boolean boolean0 = ntpV3Impl0.equals((Object) null);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      boolean boolean0 = ntpV3Impl0.equals(ntpV3Impl0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      Object object0 = new Object();
      boolean boolean0 = ntpV3Impl0.equals(object0);
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(0);
      datagramPacket0.setSocketAddress(mockInetSocketAddress0);
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      ;
}
 @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      datagramPacket0.setLength(0);
      // Undeclared exception!
      try { 
        ntpV3Impl0.setDatagramPacket(datagramPacket0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ntp.NtpV3Impl", e);
      }
  }
 @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      // Undeclared exception!
      try { 
        ntpV3Impl0.setDatagramPacket((DatagramPacket) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ntp.NtpV3Impl", e);
      }
  }
 @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ;
}
 @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      assertEquals(0, datagramPacket0.getPort());
}
 @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      DatagramPacket datagramPacket0 = ntpV3Impl0.getDatagramPacket();
      ntpV3Impl0.setDatagramPacket(datagramPacket0);
      assertEquals(0, datagramPacket0.getLength());
}
 @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setVersion((-3500));
      ntpV3Impl0.setReferenceId((-3500));
      ntpV3Impl0.getReferenceIdString();
      ;
}
 @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setVersion((-3500));
      ntpV3Impl0.getReferenceIdString();
      ;
}
 @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setReferenceId((-3500));
      int int0 = ntpV3Impl0.getReferenceId();
      ;
}
 @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.hashCode();
  }
 @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.setReferenceTime(timeStamp0);
      assertEquals(0, timeStamp0.getSeconds());
}
 @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = ntpV3Impl0.getReceiveTimeStamp();
      ntpV3Impl0.setReferenceTime(timeStamp0);
      assertEquals(1, timeStamp0.ntpValue());
}
 @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setVersion(3);
      ntpV3Impl0.getReferenceIdString();
      ;
}
 @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setTransmitTime((TimeStamp) null);
      ;
}
 @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      long long0 = ntpV3Impl0.getRootDispersionInMillis();
      assertEquals(1, ntpV3Impl0.getReferenceId());
}
 @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      long long0 = ntpV3Impl0.getRootDispersionInMillis();
      ;
}
 @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      String string0 = ntpV3Impl0.getType();
      ;
}
 @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      String string0 = ntpV3Impl0.getModeName();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      int int0 = ntpV3Impl0.getLeapIndicator();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      int int0 = ntpV3Impl0.getLeapIndicator();
      ;
}
 @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.setOriginateTimeStamp(timeStamp0);
      assertEquals(0, timeStamp0.getTime());
}
 @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = ntpV3Impl0.getOriginateTimeStamp();
      ntpV3Impl0.setOriginateTimeStamp(timeStamp0);
      ;
}
 @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setStratum(3);
      String string0 = ntpV3Impl0.getReferenceIdString();
      ;
}
 @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      ntpV3Impl0.setStratum(3);
      String string0 = ntpV3Impl0.getReferenceIdString();
      ;
}
 @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      TimeStamp timeStamp0 = ntpV3Impl0.getReferenceTimeStamp();
      ntpV3Impl0.setReceiveTimeStamp(timeStamp0);
      ;
}
 @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      double double0 = ntpV3Impl0.getRootDelayInMillisDouble();
      ;
}
 @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      String string0 = ntpV3Impl0.getReferenceIdString();
      ;
}
 @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      String string0 = ntpV3Impl0.getReferenceIdString();
      ;
}
}
