 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      iMAPSClient0.setEndpointCheckingEnabled(true);
      boolean boolean0 = iMAPSClient0.isEndpointCheckingEnabled();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      // Undeclared exception!
      try { 
        iMAPSClient0.setEnabledProtocols((String[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAPSClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient("");
      // Undeclared exception!
      try { 
        iMAPSClient0.setEnabledCipherSuites((String[]) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAPSClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient("<");
      // Undeclared exception!
      try { 
        iMAPSClient0.execTLS();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      PipedWriter pipedWriter0 = new PipedWriter();
      BufferedWriter bufferedWriter0 = new BufferedWriter(pipedWriter0);
      iMAPSClient0.__writer = bufferedWriter0;
      try { 
        iMAPSClient0.execTLS();
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getInstance("TLS");
      IMAPSClient iMAPSClient0 = new IMAPSClient("W:>Y5*8fm9U{0F >i2s", true, sSLContext0);
      // Undeclared exception!
      try { 
        iMAPSClient0._connectAction_();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient("#J", true);
      try { 
        iMAPSClient0._connectAction_();
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Could not initialize SSL context
         //
         verifyException("org.apache.commons.net.util.SSLContextUtils", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      IMAPSClient iMAPSClient0 = new IMAPSClient("", true, sSLContext0);
      iMAPSClient0.getEnabledProtocols();
      assertEquals(0, iMAPSClient0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      iMAPSClient0.getEnabledCipherSuites();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      IMAPSClient iMAPSClient0 = new IMAPSClient("", true, sSLContext0);
      // Undeclared exception!
      try { 
        iMAPSClient0._connectAction_();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      // Undeclared exception!
      try { 
        iMAPSClient0._connectAction_();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      IMAPSClient iMAPSClient0 = new IMAPSClient("", true, sSLContext0);
      iMAPSClient0.getHostnameVerifier();
      assertEquals(1, iMAPSClient0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient("<");
      ExtendedAliasKeyManager extendedAliasKeyManager0 = new ExtendedAliasKeyManager((KeyManager) null, "\r\n");
      AliasKeyManager aliasKeyManager0 = new AliasKeyManager(extendedAliasKeyManager0, "\r\n");
      iMAPSClient0.setKeyManager(aliasKeyManager0);
      assertEquals(0, iMAPSClient0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient(true);
      // Undeclared exception!
      try { 
        iMAPSClient0._connectAction_();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      iMAPSClient0.getTrustManager();
      ;
}
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      iMAPSClient0.setTrustManager((TrustManager) null);
      ;
}
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      IMAPSClient iMAPSClient0 = new IMAPSClient(sSLContext0);
      iMAPSClient0.isEndpointCheckingEnabled();
      ;
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      String[] stringArray0 = iMAPSClient0.getReplyStrings();
      iMAPSClient0.setEnabledProtocols(stringArray0);
      assertEquals(1, iMAPSClient0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      String[] stringArray0 = new String[10];
      iMAPSClient0.setEnabledCipherSuites(stringArray0);
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      IMAPSClient iMAPSClient0 = new IMAPSClient(false, sSLContext0);
      assertEquals(1, iMAPSClient0.getDefaultPort());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      iMAPSClient0.setHostnameVerifier((HostnameVerifier) null);
      assertEquals(1, iMAPSClient0.getDefaultPort());
}
