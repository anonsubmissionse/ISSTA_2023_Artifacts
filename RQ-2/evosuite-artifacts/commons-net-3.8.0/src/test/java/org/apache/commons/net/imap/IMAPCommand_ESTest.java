/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 21:10:41 GMT 2022
 */

package org.apache.commons.net.imap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.net.imap.IMAPCommand;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IMAPCommand_ESTest extends IMAPCommand_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IMAPCommand[] iMAPCommandArray0 = IMAPCommand.values();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IMAPCommand iMAPCommand0 = IMAPCommand.valueOf("CAPABILITY");
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        IMAPCommand.getCommand((IMAPCommand) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAPCommand", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IMAPCommand iMAPCommand0 = IMAPCommand.LIST;
      String string0 = iMAPCommand0.getIMAPCommand();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IMAPCommand iMAPCommand0 = IMAPCommand.LIST;
      String string0 = IMAPCommand.getCommand(iMAPCommand0);
      ;
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IMAPCommand iMAPCommand0 = IMAPCommand.LIST;
      String string0 = IMAPCommand.getCommand(iMAPCommand0);
      ;
}
}
