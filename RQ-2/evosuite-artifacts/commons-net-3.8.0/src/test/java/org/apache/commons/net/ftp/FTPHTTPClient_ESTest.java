/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 20:42:30 GMT 2022
 */

package org.apache.commons.net.ftp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.net.Proxy;
import java.nio.charset.Charset;
import org.apache.commons.net.ftp.FTPHTTPClient;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FTPHTTPClient_ESTest extends FTPHTTPClient_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FTPHTTPClient fTPHTTPClient0 = new FTPHTTPClient("[source=", 13);
      // Undeclared exception!
      try { 
        fTPHTTPClient0.connect("[source=", 13);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // invalid host/port: [source=:13
         //
         verifyException("java.net.SocketPermission", e);
      }
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      FTPHTTPClient fTPHTTPClient0 = new FTPHTTPClient("PO-E", 4, charset0);
      fTPHTTPClient0.enterLocalPassiveMode();
      // Undeclared exception!
      try { 
        fTPHTTPClient0._openDataConnection_("q", "\"?zwtD)~:=pp:");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FTPHTTPClient fTPHTTPClient0 = new FTPHTTPClient("", 3);
      // Undeclared exception!
      try { 
        fTPHTTPClient0._openDataConnection_("", "");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
         //
         // Only passive connection mode supported
         //
         verifyException("org.apache.commons.net.ftp.FTPHTTPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FTPHTTPClient fTPHTTPClient0 = new FTPHTTPClient((String) null, 0, (String) null, (String) null);
      // Undeclared exception!
      try { 
        fTPHTTPClient0._openDataConnection_(1606, (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1606
         //
         verifyException("org.apache.commons.net.ftp.FTPCommand", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FTPHTTPClient fTPHTTPClient0 = new FTPHTTPClient("j1IQn/", (-1441), "j1IQn/", "j1IQn/", (Charset) null);
      assertEquals(0, fTPHTTPClient0.getDataConnectionMode());
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 3393);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FTPHTTPClient fTPHTTPClient0 = new FTPHTTPClient("e+", 3393, "e+", (String) null);
      fTPHTTPClient0.setProxy((Proxy) null);
      try { 
        fTPHTTPClient0.connect("org.apache.commons.net.ftp.systemType", 3393);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Could not connect to org.apache.commons.net.ftp.systemType using port 3393
         //
         verifyException("org.apache.commons.net.ftp.FTPHTTPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 3393);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FTPHTTPClient fTPHTTPClient0 = new FTPHTTPClient("e+", 3393, "e+", "e+");
      fTPHTTPClient0.setProxy((Proxy) null);
      try { 
        fTPHTTPClient0.connect("org.apache.commons.net.ftp.systemType.default", 3393);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Could not connect to org.apache.commons.net.ftp.systemType.default using port 3393
         //
         verifyException("org.apache.commons.net.ftp.FTPHTTPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 3393);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FTPHTTPClient fTPHTTPClient0 = new FTPHTTPClient("+", 3393);
      fTPHTTPClient0.setProxy((Proxy) null);
      try { 
        fTPHTTPClient0.connect("org.apache.commons.net.ftp.systemType.default", 3393);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Could not connect to org.apache.commons.net.ftp.systemType.default using port 3393
         //
         verifyException("org.apache.commons.net.ftp.FTPHTTPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      FTPHTTPClient fTPHTTPClient0 = new FTPHTTPClient("", 450, charset0);
      fTPHTTPClient0.enterLocalPassiveMode();
      // Undeclared exception!
      try { 
        fTPHTTPClient0._openDataConnection_(0, "org.apache.commons.net.ftp.systemType.default");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      FTPHTTPClient fTPHTTPClient0 = new FTPHTTPClient("", 450, charset0);
      // Undeclared exception!
      try { 
        fTPHTTPClient0._openDataConnection_(0, "org.apache.commons.net.ftp.systemType.default");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
         //
         // Only passive connection mode supported
         //
         verifyException("org.apache.commons.net.ftp.FTPHTTPClient", e);
      }
  }
}
