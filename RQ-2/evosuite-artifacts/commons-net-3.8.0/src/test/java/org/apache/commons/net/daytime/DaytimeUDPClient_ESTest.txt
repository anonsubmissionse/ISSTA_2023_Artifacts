 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      daytimeUDPClient0.open();
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      byte[] byteArray0 = new byte[4];
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 13);
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      String string0 = daytimeUDPClient0.getTime(inetAddress0, 1);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      daytimeUDPClient0.open();
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      byte[] byteArray0 = new byte[4];
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("192.168.1.42", 13);
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      String string0 = daytimeUDPClient0.getTime(inetAddress0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      daytimeUDPClient0.open();
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, (byte[]) null);
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      String string0 = daytimeUDPClient0.getTime(inetAddress0);
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      // Undeclared exception!
      try { 
        daytimeUDPClient0.getTime(inetAddress0, 2008);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.daytime.DaytimeUDPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      daytimeUDPClient0.open();
      try { 
        daytimeUDPClient0.getTime(inetAddress0, 358);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IO exception
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      daytimeUDPClient0.open();
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      try { 
        daytimeUDPClient0.getTime(inetAddress0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IO exception
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      // Undeclared exception!
      try { 
        daytimeUDPClient0.getTime(inetAddress0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Port out of range:-1
         //
         verifyException("java.net.DatagramPacket", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      // Undeclared exception!
      try { 
        daytimeUDPClient0.getTime(inetAddress0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.daytime.DaytimeUDPClient", e);
      }
  }
