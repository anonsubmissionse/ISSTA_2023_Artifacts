 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, 0, "#9jh8ac3[$");
      boolean boolean0 = protocolCommandEvent0.isCommand();
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, 0, "#9jh8ac3[$");
      boolean boolean0 = protocolCommandEvent0.isCommand();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, 1, "");
      int int0 = protocolCommandEvent0.getReplyCode();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, 1, "");
      int int0 = protocolCommandEvent0.getReplyCode();
      ;
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, (-1382), "");
      int int0 = protocolCommandEvent0.getReplyCode();
      assertEquals(1, int0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, (-1382), "");
      int int0 = protocolCommandEvent0.getReplyCode();
      assertFalse(protocolCommandEvent0.isReply());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, 740, (String) null);
      protocolCommandEvent0.getMessage();
      ;
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, 740, (String) null);
      protocolCommandEvent0.getMessage();
      assertTrue(protocolCommandEvent0.isReply());
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, 0, "#9jh8ac3[$");
      protocolCommandEvent0.getMessage();
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, 0, "#9jh8ac3[$");
      protocolCommandEvent0.getMessage();
      ;
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, 0, "#9jh8ac3[$");
      protocolCommandEvent0.getCommand();
      assertTrue(protocolCommandEvent0.isCommand());
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, 0, "#9jh8ac3[$");
      protocolCommandEvent0.getCommand();
      ;
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "FWg]@HN$#Gm&dG3B", "FWg]@HN$#Gm&dG3B");
      protocolCommandEvent0.getCommand();
      assertEquals(0, protocolCommandEvent0.getReplyCode());
}
 @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "FWg]@HN$#Gm&dG3B", "FWg]@HN$#Gm&dG3B");
      protocolCommandEvent0.getCommand();
      assertTrue(protocolCommandEvent0.isCommand());
}
 @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProtocolCommandEvent protocolCommandEvent0 = null;
      try {
        protocolCommandEvent0 = new ProtocolCommandEvent((Object) null, "", "");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }
 @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ProtocolCommandEvent protocolCommandEvent0 = null;
      try {
        protocolCommandEvent0 = new ProtocolCommandEvent((Object) null, 0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }
 @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "", "");
      boolean boolean0 = protocolCommandEvent0.isReply();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "", "");
      boolean boolean0 = protocolCommandEvent0.isReply();
      ;
}
 @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "", "");
      protocolCommandEvent0.getCommand();
      ;
}
 @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "", "");
      protocolCommandEvent0.getCommand();
      assertFalse(protocolCommandEvent0.isReply());
}
 @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "", "");
      boolean boolean0 = protocolCommandEvent0.isCommand();
      ;
}
 @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "", "");
      boolean boolean0 = protocolCommandEvent0.isCommand();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "", "");
      int int0 = protocolCommandEvent0.getReplyCode();
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "", "");
      int int0 = protocolCommandEvent0.getReplyCode();
      assertTrue(protocolCommandEvent0.isCommand());
}
 @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "", "");
      protocolCommandEvent0.getMessage();
      ;
}
 @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "", "");
      protocolCommandEvent0.getMessage();
      assertTrue(protocolCommandEvent0.isCommand());
}
 @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, 0, "#9jh8ac3[$");
      boolean boolean0 = protocolCommandEvent0.isReply();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, 0, "#9jh8ac3[$");
      boolean boolean0 = protocolCommandEvent0.isReply();
      ;
}
