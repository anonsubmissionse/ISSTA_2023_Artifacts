 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      ArticleIterator articleIterator0 = new ArticleIterator(set0);
      articleIterator0.next();
      articleIterator0.remove();
  }
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      HashSet<String> hashSet0 = new HashSet<String>(set0);
      ArticleIterator articleIterator0 = new ArticleIterator(hashSet0);
      Iterator<Article> iterator0 = articleIterator0.iterator();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      HashSet<String> hashSet0 = new HashSet<String>(set0);
      ArticleIterator articleIterator0 = new ArticleIterator(hashSet0);
      boolean boolean0 = articleIterator0.hasNext();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      ArticleIterator articleIterator0 = new ArticleIterator(set0);
      // Undeclared exception!
      try { 
        articleIterator0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection$1", e);
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ArticleIterator articleIterator0 = new ArticleIterator(linkedList0);
      // Undeclared exception!
      try { 
        articleIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      HashSet<String> hashSet0 = new HashSet<String>(set0);
      ArticleIterator articleIterator0 = new ArticleIterator(hashSet0);
      hashSet0.add("");
      // Undeclared exception!
      try { 
        articleIterator0.next();
        fail("Expecting exception: ConcurrentModificationException");
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add((String) null);
      ArticleIterator articleIterator0 = new ArticleIterator(hashSet0);
      // Undeclared exception!
      try { 
        articleIterator0.next();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.NNTPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ArticleIterator articleIterator0 = null;
      try {
        articleIterator0 = new ArticleIterator((Iterable<String>) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.ArticleIterator", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      ArrayList<String> arrayList0 = new ArrayList<String>(vector0);
      arrayList0.add("y6_");
      ArticleIterator articleIterator0 = new ArticleIterator(arrayList0);
      Consumer<Article> consumer0 = (Consumer<Article>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      articleIterator0.forEach(consumer0);
      arrayList0.add("The wildcard array must not be null");
      // Undeclared exception!
      try { 
        articleIterator0.remove();
        fail("Expecting exception: ConcurrentModificationException");
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      ArrayList<String> arrayList0 = new ArrayList<String>(vector0);
      ArticleIterator articleIterator0 = new ArticleIterator(arrayList0);
      boolean boolean0 = articleIterator0.hasNext();
      assertTrue(boolean0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      ArrayList<String> arrayList0 = new ArrayList<String>(vector0);
      ArticleIterator articleIterator0 = new ArticleIterator(arrayList0);
      // Undeclared exception!
      try { 
        articleIterator0.remove();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }
