/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 21:09:10 GMT 2022
 */

package org.apache.commons.net.ftp.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.net.ftp.FTPClientConfig;
import org.apache.commons.net.ftp.FTPFile;
import org.apache.commons.net.ftp.parser.OS2FTPEntryParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OS2FTPEntryParser_ESTest extends OS2FTPEntryParser_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FTPClientConfig fTPClientConfig0 = new FTPClientConfig();
      OS2FTPEntryParser oS2FTPEntryParser0 = new OS2FTPEntryParser(fTPClientConfig0);
      assertNotNull(fTPClientConfig0.getDefaultDateFormatStr());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OS2FTPEntryParser oS2FTPEntryParser0 = new OS2FTPEntryParser();
      FTPClientConfig fTPClientConfig0 = oS2FTPEntryParser0.getDefaultConfiguration();
      assertNotNull(fTPClientConfig0.getDefaultDateFormatStr());
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OS2FTPEntryParser oS2FTPEntryParser0 = new OS2FTPEntryParser();
      FTPClientConfig fTPClientConfig0 = oS2FTPEntryParser0.getDefaultConfiguration();
      assertNotNull(fTPClientConfig0.getServerSystemKey());
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OS2FTPEntryParser oS2FTPEntryParser0 = new OS2FTPEntryParser();
      // Undeclared exception!
      try { 
        oS2FTPEntryParser0.parseFTPEntry((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FTPClientConfig fTPClientConfig0 = new FTPClientConfig("?GVy~vB{`IT&[2^AFI", "?GVy~vB{`IT&[2^AFI", ", GXF", "", (String) null, ", GXF", false, false);
      OS2FTPEntryParser oS2FTPEntryParser0 = null;
      try {
        oS2FTPEntryParser0 = new OS2FTPEntryParser(fTPClientConfig0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'V'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FTPClientConfig fTPClientConfig0 = new FTPClientConfig("R[D yl9lc:,W!Nj", "R[D yl9lc:,W!Nj", "R[D yl9lc:,W!Nj", "R[D yl9lc:,W!Nj", "ku&c2", " ", false, false);
      OS2FTPEntryParser oS2FTPEntryParser0 = null;
      try {
        oS2FTPEntryParser0 = new OS2FTPEntryParser(fTPClientConfig0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // expecting a pipe-delimited string containing 12 tokens
         //
         verifyException("org.apache.commons.net.ftp.FTPClientConfig", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OS2FTPEntryParser oS2FTPEntryParser0 = new OS2FTPEntryParser();
      oS2FTPEntryParser0.setRegex("#A=b2WvX| ayd0n=|z", 836);
      // Undeclared exception!
      try { 
        oS2FTPEntryParser0.parseFTPEntry("");
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
         //
         // No group 1
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OS2FTPEntryParser oS2FTPEntryParser0 = new OS2FTPEntryParser();
      FTPFile fTPFile0 = oS2FTPEntryParser0.parseFTPEntry("OS/2");
      ;
}
}
