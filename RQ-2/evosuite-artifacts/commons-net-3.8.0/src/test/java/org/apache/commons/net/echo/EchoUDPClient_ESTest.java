/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 21:12:36 GMT 2022
 */

package org.apache.commons.net.echo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.net.InetAddress;
import org.apache.commons.net.echo.EchoUDPClient;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EchoUDPClient_ESTest extends EchoUDPClient_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EchoUDPClient echoUDPClient0 = new EchoUDPClient();
      byte[] byteArray0 = new byte[1];
      echoUDPClient0.open();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      echoUDPClient0.send(byteArray0, inetAddress0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EchoUDPClient echoUDPClient0 = new EchoUDPClient();
      byte[] byteArray0 = new byte[8];
      echoUDPClient0.open(1636);
      InetAddress inetAddress0 = echoUDPClient0.getLocalAddress();
      echoUDPClient0.send(byteArray0, 0, inetAddress0);
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EchoUDPClient echoUDPClient0 = new EchoUDPClient();
      echoUDPClient0.open();
      byte[] byteArray0 = new byte[8];
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 1);
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      int int0 = echoUDPClient0.receive(byteArray0, 0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EchoUDPClient echoUDPClient0 = new EchoUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getByName("p/Y\"1CyDdA#B(A?amg");
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("200.42.42.0", 1927);
      byte[] byteArray0 = new byte[2];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, byteArray0);
      echoUDPClient0.open(1927, inetAddress0);
      int int0 = echoUDPClient0.receive(byteArray0);
      assertEquals(0, int0);
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EchoUDPClient echoUDPClient0 = new EchoUDPClient();
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        echoUDPClient0.send(byteArray0, 826, (InetAddress) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // illegal length
         //
         verifyException("java.net.DatagramPacket", e);
      }
  }
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EchoUDPClient echoUDPClient0 = new EchoUDPClient();
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        echoUDPClient0.receive(byteArray0, (int) (byte)0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.echo.EchoUDPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EchoUDPClient echoUDPClient0 = new EchoUDPClient();
      echoUDPClient0.open();
      byte[] byteArray0 = new byte[8];
      try { 
        echoUDPClient0.receive(byteArray0, 0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IO exception
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EchoUDPClient echoUDPClient0 = new EchoUDPClient();
      byte[] byteArray0 = new byte[8];
      echoUDPClient0.open(1636);
      try { 
        echoUDPClient0.receive(byteArray0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
         //
         // Simulated IO exception
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      EchoUDPClient echoUDPClient0 = new EchoUDPClient();
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        echoUDPClient0.receive(byteArray0, (int) (byte)16);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
         //
         // illegal length
         //
         verifyException("java.net.DatagramPacket", e);
      }
  }
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      EchoUDPClient echoUDPClient0 = new EchoUDPClient();
      byte[] byteArray0 = new byte[5];
      InetAddress inetAddress0 = MockInetAddress.getByName("");
      // Undeclared exception!
      try { 
        echoUDPClient0.send(byteArray0, inetAddress0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.discard.DiscardUDPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EchoUDPClient echoUDPClient0 = new EchoUDPClient();
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        echoUDPClient0.receive(byteArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.echo.EchoUDPClient", e);
      }
  }
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EchoUDPClient echoUDPClient0 = new EchoUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      // Undeclared exception!
      try { 
        echoUDPClient0.send((byte[]) null, 7, inetAddress0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
         //
         // null packet buffer
         //
         verifyException("java.net.DatagramPacket", e);
      }
  }
}
