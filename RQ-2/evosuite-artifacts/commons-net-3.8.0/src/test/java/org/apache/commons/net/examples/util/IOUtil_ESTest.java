/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 21:13:45 GMT 2022
 */

package org.apache.commons.net.examples.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.io.ByteArrayInputStream;
import java.io.OutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.apache.commons.net.examples.util.IOUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtil_ESTest extends IOUtil_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" wW;*OYgCB&", true);
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      IOUtil.readWrite(byteArrayInputStream0, mockFileOutputStream0, sequenceInputStream0, mockFileOutputStream0);
      ;
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" wW;*OYgCB&", true);
      IOUtil.readWrite(sequenceInputStream0, mockFileOutputStream0, sequenceInputStream0, (OutputStream) null);
  }
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IOUtil iOUtil0 = new IOUtil();
  }
}
