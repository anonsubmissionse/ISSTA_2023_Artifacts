/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 21:10:19 GMT 2022
 */

package org.apache.commons.net.nntp;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.net.nntp.SimpleNNTPHeader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNNTPHeader_ESTest extends SimpleNNTPHeader_ESTest_scaffolding {

 @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader((String) null, (String) null);
      simpleNNTPHeader0.addHeaderField("T\"\nEeVd7Hh", (String) null);
      assertNotNull(simpleNNTPHeader0.getSubject());
}
 @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader((String) null, (String) null);
      String string0 = simpleNNTPHeader0.getSubject();
      ;
}
 @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("", "");
      String string0 = simpleNNTPHeader0.getSubject();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("VN}", "VN}");
      simpleNNTPHeader0.addNewsgroup("From: VN}\nNewsgroups: \nSubject: VN}\n\n");
      simpleNNTPHeader0.getNewsgroups();
      assertNotNull(simpleNNTPHeader0.getNewsgroups());
}
 @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader((String) null, (String) null);
      String string0 = simpleNNTPHeader0.getFromAddress();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("", "SR#:3t$Mt4G_2w");
      String string0 = simpleNNTPHeader0.getFromAddress();
      assertNotNull(simpleNNTPHeader0.getSubject());
}
 @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("", "SR#:3t$Mt4G_2w");
      String string0 = simpleNNTPHeader0.getFromAddress();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("VN}", "VN}");
      String string0 = simpleNNTPHeader0.toString();
      ;
}
 @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("VN}", "VN}");
      simpleNNTPHeader0.addNewsgroup("From: VN}\nNewsgroups: \nSubject: VN}\n\n");
      simpleNNTPHeader0.addNewsgroup("VN}");
      ;
}
 @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("VN}", "VN}");
      simpleNNTPHeader0.addHeaderField("VN}", "VN}");
      String string0 = simpleNNTPHeader0.toString();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("VN}", "VN}");
      String string0 = simpleNNTPHeader0.getSubject();
      ;
}
 @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("VN}", "VN}");
      String string0 = simpleNNTPHeader0.getFromAddress();
      assertNotNull(string0);
}
 @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNNTPHeader simpleNNTPHeader0 = new SimpleNNTPHeader("VN}", "VN}");
      String string0 = simpleNNTPHeader0.getNewsgroups();
      assertNotNull(string0);
}
}
