/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 22:26:22 GMT 2022
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.Repository;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectType_ESTest extends ObjectType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("3{");
      boolean boolean0 = objectType0.referencesInterface();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("w%Qz3");
      boolean boolean0 = objectType0.referencesClass();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("org.apache.bcel.util.AbstractClassPathRepository");
      boolean boolean0 = objectType0.referencesInterfaceExact();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectType objectType0 = Type.THROWABLE;
      boolean boolean0 = objectType0.referencesClassExact();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("org.apache.bcel.generic.InstructionConstants");
      boolean boolean0 = objectType0.referencesClassExact();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("org.apache.bcel.generic.InstructionConstants");
      boolean boolean0 = objectType0.referencesClass();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("org.apache.bcel.util.AbstractClassPathRepository");
      String string0 = objectType0.getClassName();
      assertEquals("org.apache.bcel.util.AbstractClassPathRepository", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("org.apache.bcel.util.AbstractClassPathRepository");
      ObjectType objectType1 = Type.THROWABLE;
      boolean boolean0 = objectType0.accessibleTo(objectType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      // Undeclared exception!
      try { 
        objectType0.subclassOf((ObjectType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.ObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectType objectType0 = Type.STRING;
      ObjectType objectType1 = new ObjectType("");
      // Undeclared exception!
      try { 
        objectType0.subclassOf(objectType1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("z|Pb*L8S?");
      try { 
        objectType0.subclassOf(objectType0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class z|Pb*L8S?: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: z|Pb*L8S?.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      Repository.setRepository(classPathRepository0);
      // Undeclared exception!
      try { 
        objectType0.OBJECT.referencesInterfaceExact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~2/:>6B!xP)cB.ciA");
      try { 
        objectType0.referencesInterfaceExact();
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class ~2.:>6B!xP)cB.ciA: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: ~2/:>6B!xP)cB/ciA.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("");
      // Undeclared exception!
      try { 
        objectType0.referencesInterface();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjectType objectType0 = Type.OBJECT;
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository((ClassPath) null);
      Repository.setRepository(memorySensitiveClassPathRepository0);
      // Undeclared exception!
      try { 
        objectType0.referencesClassExact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("");
      // Undeclared exception!
      try { 
        objectType0.referencesClassExact();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("b}HON:");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance((ClassPath) null);
      Repository.setRepository(syntheticRepository0);
      // Undeclared exception!
      try { 
        objectType0.referencesClass();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("");
      // Undeclared exception!
      try { 
        objectType0.referencesClass();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        ObjectType.getInstance((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.ObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ObjectType objectType0 = Type.OBJECT;
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance((ClassPath) null);
      Repository.setRepository(syntheticRepository0);
      // Undeclared exception!
      try { 
        objectType0.accessibleTo(objectType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("");
      // Undeclared exception!
      try { 
        objectType0.accessibleTo(objectType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ObjectType objectType0 = null;
      try {
        objectType0 = new ObjectType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.ObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("org.apache.bcel.generic.InstructionConstants");
      boolean boolean0 = objectType0.referencesInterfaceExact();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("org.apache.bcel.util.AbstractClassPathRepository");
      boolean boolean0 = objectType0.accessibleTo(objectType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("org.apache.bcel.generic.InstructionConstants");
      boolean boolean0 = objectType0.subclassOf(objectType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      ObjectType objectType1 = new ObjectType("org.apache.bcel.generic.InstructionConstants");
      assertEquals("org.apache.bcel.generic.InstructionConstants", objectType1.getClassName());
      
      boolean boolean0 = objectType0.subclassOf(objectType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      boolean boolean0 = objectType0.subclassOf(objectType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("org.apache.bcel.generic.InstructionConstants");
      boolean boolean0 = objectType0.referencesInterface();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      boolean boolean0 = objectType0.referencesInterface();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      boolean boolean0 = objectType0.isCastableTo(objectType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("");
      String string0 = objectType0.getClassName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("+a&JbovVveL`[#T");
      boolean boolean0 = objectType0.CLASS.referencesClass();
      assertEquals("+a&JbovVveL`[#T", objectType0.getClassName());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("+a&JbovVveL`[#T");
      try { 
        objectType0.referencesClassExact();
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class +a&JbovVveL`[#T: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: +a&JbovVveL`[#T.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("CONSTANT_InvokeDynamic");
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      Repository.setRepository(classPathRepository0);
      // Undeclared exception!
      try { 
        objectType0.referencesInterface();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("Y}HsON=:");
      objectType0.hashCode();
      assertEquals("Y}HsON=:", objectType0.getClassName());
  }
}
