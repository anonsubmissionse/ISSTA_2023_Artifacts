/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 21:32:25 GMT 2022
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.generic.AALOAD;
import org.apache.bcel.generic.AASTORE;
import org.apache.bcel.generic.BALOAD;
import org.apache.bcel.generic.BASTORE;
import org.apache.bcel.generic.CALOAD;
import org.apache.bcel.generic.CASTORE;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.DALOAD;
import org.apache.bcel.generic.DASTORE;
import org.apache.bcel.generic.FALOAD;
import org.apache.bcel.generic.FASTORE;
import org.apache.bcel.generic.IALOAD;
import org.apache.bcel.generic.IASTORE;
import org.apache.bcel.generic.LALOAD;
import org.apache.bcel.generic.LASTORE;
import org.apache.bcel.generic.SALOAD;
import org.apache.bcel.generic.SASTORE;
import org.apache.bcel.generic.Type;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArrayInstruction_ESTest extends ArrayInstruction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short) (-341));
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch-341
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SASTORE sASTORE0 = new SASTORE();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = sASTORE0.getType(constantPoolGen0);
      assertEquals("S", type0.getSignature());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      Constant[] constantArray0 = new Constant[4];
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      Type type0 = cASTORE0.getType(constantPoolGen0);
      assertEquals("C", type0.getSignature());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BASTORE bASTORE0 = new BASTORE();
      Type type0 = bASTORE0.getType((ConstantPoolGen) null);
      assertEquals((byte)8, type0.getType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AASTORE aASTORE0 = new AASTORE();
      Type type0 = aASTORE0.getType((ConstantPoolGen) null);
      assertEquals(1, type0.getSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DASTORE dASTORE0 = new DASTORE();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = dASTORE0.getType(constantPoolGen0);
      assertEquals((byte)7, type0.getType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FASTORE fASTORE0 = new FASTORE();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = fASTORE0.getType(constantPoolGen0);
      assertEquals((byte)6, type0.getType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LASTORE lASTORE0 = new LASTORE();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = lASTORE0.getType(constantPoolGen0);
      assertEquals("J", type0.getSignature());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IASTORE iASTORE0 = new IASTORE();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = iASTORE0.getType(constantPoolGen0);
      assertEquals("I", type0.getSignature());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      sALOAD0.setOpcode((short)78);
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch78
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LALOAD lALOAD0 = new LALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      lALOAD0.setOpcode((short)77);
      // Undeclared exception!
      try { 
        lALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch77
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      sALOAD0.setOpcode((short)76);
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch76
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short)75);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch75
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      DALOAD dALOAD0 = new DALOAD();
      dALOAD0.setOpcode((short)74);
      // Undeclared exception!
      try { 
        dALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch74
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short)73);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch73
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short)72);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch72
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short)71);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch71
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short)70);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch70
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short)69);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch69
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short)68);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch68
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      sALOAD0.setOpcode((short)67);
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch67
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      sALOAD0.setOpcode((short)66);
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch66
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LALOAD lALOAD0 = new LALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      lALOAD0.setOpcode((short)65);
      // Undeclared exception!
      try { 
        lALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch65
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short)64);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch64
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LALOAD lALOAD0 = new LALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      lALOAD0.setOpcode((short)63);
      // Undeclared exception!
      try { 
        lALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch63
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LALOAD lALOAD0 = new LALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      lALOAD0.setOpcode((short)62);
      // Undeclared exception!
      try { 
        lALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch62
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LALOAD lALOAD0 = new LALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      lALOAD0.setOpcode((short)61);
      // Undeclared exception!
      try { 
        lALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch61
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short)60);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch60
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short)59);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch59
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short)58);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch58
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short)57);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch57
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      sALOAD0.setOpcode((short)56);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch56
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LALOAD lALOAD0 = new LALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      lALOAD0.setOpcode((short)55);
      // Undeclared exception!
      try { 
        lALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch55
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      sALOAD0.setOpcode((short)54);
      // Undeclared exception!
      try { 
        sALOAD0.getType(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown case in switch54
         //
         verifyException("org.apache.bcel.generic.ArrayInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SALOAD sALOAD0 = new SALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = sALOAD0.getType(constantPoolGen0);
      assertEquals(1, type0.getSize());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CALOAD cALOAD0 = new CALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = cALOAD0.getType(constantPoolGen0);
      assertEquals((byte)5, type0.getType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BALOAD bALOAD0 = new BALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = bALOAD0.getType(constantPoolGen0);
      assertEquals("B", type0.getSignature());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      AALOAD aALOAD0 = new AALOAD();
      Type type0 = aALOAD0.getType((ConstantPoolGen) null);
      assertEquals((byte)14, type0.getType());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DALOAD dALOAD0 = new DALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = dALOAD0.getType(constantPoolGen0);
      assertEquals((byte)7, type0.getType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Constant[] constantArray0 = new Constant[4];
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      FALOAD fALOAD0 = new FALOAD();
      Type type0 = fALOAD0.getType(constantPoolGen0);
      assertEquals(1, type0.getSize());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LALOAD lALOAD0 = new LALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = lALOAD0.getType(constantPoolGen0);
      assertEquals((byte)11, type0.getType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Constant[] constantArray0 = new Constant[4];
      IALOAD iALOAD0 = new IALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      Type type0 = iALOAD0.getType(constantPoolGen0);
      assertEquals("I", type0.getSignature());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LALOAD lALOAD0 = new LALOAD();
      Class<?>[] classArray0 = lALOAD0.getExceptions();
      assertEquals(2, classArray0.length);
  }
}
