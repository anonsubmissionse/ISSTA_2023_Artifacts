/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 22:30:38 GMT 2022
 */

package org.apache.bcel.verifier.statics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantDouble;
import org.apache.bcel.classfile.ConstantFieldref;
import org.apache.bcel.classfile.ConstantFloat;
import org.apache.bcel.generic.BasicType;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.GETFIELD;
import org.apache.bcel.generic.INVOKEDYNAMIC;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.Type;
import org.apache.bcel.verifier.statics.LocalVariableInfo;
import org.apache.bcel.verifier.structurals.UninitializedObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocalVariableInfo_ESTest extends LocalVariableInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      BasicType basicType0 = Type.VOID;
      localVariableInfo0.add("&", 197, (-2), basicType0);
      localVariableInfo0.add("&", (-2), 197, basicType0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(basicType0.OBJECT);
      localVariableInfo0.getType(0);
      localVariableInfo0.getType((-2237));
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 0);
      Type.getTypes(classArray0);
      try { 
        localVariableInfo0.add("&", 126, 0, (Type) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // At bytecode offset '126' a local variable has two different types: 'void' and 'null'.
         //
         verifyException("org.apache.bcel.verifier.statics.LocalVariableInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      BasicType basicType0 = Type.INT;
      Class<ObjectType>[] classArray0 = (Class<ObjectType>[]) Array.newInstance(Class.class, 8);
      Class<ObjectType> class0 = ObjectType.class;
      classArray0[0] = class0;
      Class<ObjectType> class1 = ObjectType.class;
      classArray0[1] = class1;
      Class<ObjectType> class2 = ObjectType.class;
      classArray0[2] = class2;
      Class<ObjectType> class3 = ObjectType.class;
      classArray0[3] = class3;
      Class<ObjectType> class4 = ObjectType.class;
      classArray0[4] = class4;
      Class<ObjectType> class5 = ObjectType.class;
      classArray0[5] = class5;
      Class<ObjectType> class6 = ObjectType.class;
      classArray0[6] = class6;
      Class<ObjectType> class7 = ObjectType.class;
      classArray0[7] = class7;
      Type.getTypes(classArray0);
      localVariableInfo0.add("-V:JcS[X9vLFkH+MdE", 2935, 2935, basicType0);
      localVariableInfo0.add("-V:JcS[X9vLFkH+MdE", 959, 2935, basicType0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-V:JcS[X9vLFkH+MdE");
      localVariableInfo0.getType(2935);
      Type type0 = localVariableInfo0.getType(2935);
      localVariableInfo0.getType(2935);
      localVariableInfo0.getType(0);
      // Undeclared exception!
      localVariableInfo0.add("-V:JcS[X9vLFkH+MdE", 2935, 2935, type0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      BasicType basicType0 = Type.CHAR;
      localVariableInfo0.add("", 0, 0, basicType0);
      localVariableInfo0.getType(0);
      localVariableInfo0.getName(0);
      localVariableInfo0.getType(0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      BasicType basicType0 = Type.SHORT;
      localVariableInfo0.add(";r@3\"", 0, 0, basicType0);
      localVariableInfo0.getName(0);
      localVariableInfo0.getType((-1));
      localVariableInfo0.getName((-2269));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      String string0 = null;
      int int0 = 0;
      ObjectType objectType0 = Type.CLASS;
      localVariableInfo0.add("2wz$s+[=(fu[a\"4Y+b", 0, 0, objectType0);
      try { 
        localVariableInfo0.add((String) null, 0, 0, objectType0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // At bytecode offset '0' a local variable has two different names: '2wz$s+[=(fu[a\"4Y+b' and 'null'.
         //
         verifyException("org.apache.bcel.verifier.statics.LocalVariableInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      BasicType basicType0 = Type.INT;
      Type.getMethodSignature(basicType0, basicType0.NO_ARGS);
      localVariableInfo0.add("", 0, 2078, basicType0);
      localVariableInfo0.getType((-2326));
      try { 
        localVariableInfo0.add("#8CbA}b(8M^g", 2078, 1337, (Type) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // At bytecode offset '2078' a local variable has two different names: '' and '#8CbA}b(8M^g'.
         //
         verifyException("org.apache.bcel.verifier.statics.LocalVariableInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      localVariableInfo0.getName((-2174));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      localVariableInfo0.getName((-1));
      String string0 = "{DFlwnWDC";
      int int0 = 232;
      int int1 = (-73);
      String string1 = "org.apache.bcel.generic.ArrayInstruction";
      int int2 = 0;
      BasicType basicType0 = Type.CHAR;
      Type.getMethodSignature(basicType0, basicType0.NO_ARGS);
      localVariableInfo0.add("8#TE|x6:gK*4%4&7", (-1), 1, basicType0);
      Class<Type>[] classArray0 = (Class<Type>[]) Array.newInstance(Class.class, 1);
      Class<Type> class0 = Type.class;
      localVariableInfo0.add((String) null, (-386), (-1), basicType0);
      classArray0[0] = class0;
      Type.getTypes(classArray0);
      // Undeclared exception!
      try { 
        localVariableInfo0.add((String) null, (-73), 0, basicType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      BasicType basicType0 = Type.INT;
      localVariableInfo0.add("-V:JcS[X9vLFkH+MdE", 2935, 2935, basicType0);
      localVariableInfo0.add("-V:JcS[X9vLFkH+MdE", 959, 2935, basicType0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "avMbm4\"kn_#2(>2|M");
      localVariableInfo0.getType(2935);
      Type type0 = localVariableInfo0.getType(2935);
      localVariableInfo0.getType(2935);
      localVariableInfo0.getType(0);
      localVariableInfo0.getType(0);
      try { 
        localVariableInfo0.add("avMbm4\"kn_#2(>2|M", 2935, 2935, type0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // At bytecode offset '2935' a local variable has two different names: '-V:JcS[X9vLFkH+MdE' and 'avMbm4\"kn_#2(>2|M'.
         //
         verifyException("org.apache.bcel.verifier.statics.LocalVariableInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      localVariableInfo0.getType(276);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      localVariableInfo0.getName(1981);
      int int0 = 0;
      INVOKEDYNAMIC iNVOKEDYNAMIC0 = new INVOKEDYNAMIC(0);
      Constant[] constantArray0 = new Constant[6];
      ConstantFieldref constantFieldref0 = new ConstantFieldref(0, 0);
      ConstantFieldref constantFieldref1 = new ConstantFieldref(constantFieldref0);
      constantArray0[0] = (Constant) constantFieldref1;
      ConstantDouble constantDouble0 = new ConstantDouble((-3825.8415834628013));
      constantArray0[1] = (Constant) constantDouble0;
      ConstantFloat constantFloat0 = null;
      try {
        constantFloat0 = new ConstantFloat((ConstantFloat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.ConstantFloat", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      BasicType basicType0 = Type.BYTE;
      localVariableInfo0.add("&", 197, (-2), basicType0);
      localVariableInfo0.add("&", (-2), 197, basicType0);
      GETFIELD gETFIELD0 = new GETFIELD(197);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(basicType0.OBJECT);
      localVariableInfo0.add("A#s>", 0, (-2), uninitializedObjectType0);
      localVariableInfo0.getType(0);
      localVariableInfo0.getType((-2237));
      try { 
        localVariableInfo0.add("&", 126, 0, (Type) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // At bytecode offset '126' a local variable has two different types: 'byte' and 'null'.
         //
         verifyException("org.apache.bcel.verifier.statics.LocalVariableInfo", e);
      }
  }
}
