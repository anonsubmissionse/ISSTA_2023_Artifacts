/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 22:38:24 GMT 2022
 */

package org.apache.bcel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.InputStream;
import org.apache.bcel.Repository;
import org.apache.bcel.classfile.Attribute;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Repository_ESTest extends Repository_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.instanceOf("org.apache.bcel.Repository", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name null
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaClass javaClass0 = Repository.lookupClass("org.apache.bcel.classfile.ModulePackages");
      assertFalse(javaClass0.isSynthetic());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<InputStream> class0 = InputStream.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      assertEquals("java.io.InputStream", javaClass0.getFileName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      boolean boolean0 = Repository.instanceOf(javaClass0, "org.apache.bcel.Repository");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaClass javaClass0 = Repository.lookupClass("org.apache.bcel.Repository");
      boolean boolean0 = Repository.instanceOf("org.apache.bcel.Repository", javaClass0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<InputStream> class0 = InputStream.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      boolean boolean0 = Repository.instanceOf("org.apache.bcel.Repository", javaClass0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Repository.setRepository((org.apache.bcel.util.Repository) null);
      org.apache.bcel.util.Repository repository0 = Repository.getRepository();
      assertNull(repository0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      JavaClass[] javaClassArray0 = Repository.getInterfaces(javaClass0);
      assertEquals(0, javaClassArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JavaClass[] javaClassArray0 = Repository.getInterfaces("org.apache.bcel.Repository");
      assertEquals(0, javaClassArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<String> class0 = String.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      Repository.clearCache();
      JavaClass javaClass1 = Repository.addClass(javaClass0);
      assertNull(javaClass1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<String> class0 = String.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      JavaClass javaClass1 = Repository.addClass(javaClass0);
      javaClass1.getInterfaces();
      Repository.clearCache();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      JavaClass javaClass1 = Repository.addClass(javaClass0);
      assertEquals(0, javaClass1.getMinor());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JavaClass javaClass0 = Repository.lookupClass("org.apache.bcel.Repository");
      Attribute[] attributeArray0 = new Attribute[0];
      javaClass0.setAttributes(attributeArray0);
      javaClass0.setSourceFileName("}z/`hJg&fEnn?12");
      boolean boolean0 = false;
      Repository.addClass(javaClass0);
      String string0 = "";
      File file0 = MockFile.createTempFile("org.apache.bcel.Repository", "vXVXdKE0WX");
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", ":'NT", file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.removeClass((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Repository.setRepository((org.apache.bcel.util.Repository) null);
      // Undeclared exception!
      try { 
        Repository.lookupClassFile("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Repository.setRepository((org.apache.bcel.util.Repository) null);
      // Undeclared exception!
      try { 
        Repository.lookupClass("IG;?!NPK_-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.lookupClass("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.lookupClass((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<BufferedInputStream> class0 = BufferedInputStream.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      // Undeclared exception!
      try { 
        Repository.instanceOf(javaClass0, (JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.JavaClass$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      // Undeclared exception!
      try { 
        Repository.instanceOf(javaClass0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      try { 
        Repository.instanceOf((JavaClass) null, "b");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class b: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: b.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.instanceOf("org.apache.bcel.Repository", (JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.JavaClass$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Class<String> class0 = String.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      // Undeclared exception!
      try { 
        Repository.instanceOf((String) null, javaClass0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name null
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Repository.setRepository((org.apache.bcel.util.Repository) null);
      // Undeclared exception!
      try { 
        Repository.instanceOf("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      try { 
        Repository.instanceOf("2tdqj", "A&D4ZHvRB+o\";no3");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class 2tdqj: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: 2tdqj.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.implementationOf((JavaClass) null, (JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.implementationOf((JavaClass) null, "org.apache.bcel.classfile.AccessFlags");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.implementationOf((JavaClass) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.implementationOf("org.apache.bcel.Repository", (JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.JavaClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      // Undeclared exception!
      try { 
        Repository.implementationOf("", javaClass0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      try { 
        Repository.implementationOf("!trM", "");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class !trM: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: !trM.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      JavaClass[] javaClassArray0 = Repository.getSuperClasses(javaClass0);
      assertEquals(0, javaClassArray0.length);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.getSuperClasses((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Class<String> class0 = String.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      JavaClass[] javaClassArray0 = Repository.getSuperClasses(javaClass0);
      assertEquals(1, javaClassArray0.length);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.getSuperClasses("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      try { 
        Repository.getSuperClasses("oE3q*SK_5g2J FT");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class oE3q*SK_5g2J FT: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: oE3q*SK_5g2J FT.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.getInterfaces((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<InputStream> class0 = InputStream.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      javaClass0.setSuperclassName(",R[nDk7(`.WonzDr!.l");
      try { 
        Repository.getInterfaces(javaClass0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // ,R[nDk7(`.WonzDr!.l not found.
         //
         verifyException("org.apache.bcel.util.ClassLoaderRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Repository.setRepository((org.apache.bcel.util.Repository) null);
      // Undeclared exception!
      try { 
        Repository.getInterfaces("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      try { 
        Repository.getInterfaces("0ooRLnTJ^");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class 0ooRLnTJ^: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: 0ooRLnTJ^.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Repository.setRepository((org.apache.bcel.util.Repository) null);
      // Undeclared exception!
      try { 
        Repository.clearCache();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.addClass((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      try { 
        Repository.lookupClass("IG;?!NPK_-");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class IG;?!NPK_-: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: IG;?!NPK_-.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Repository.setRepository(classLoaderRepository0);
      ClassPath.ClassFile classPath_ClassFile0 = Repository.lookupClassFile("");
      assertNull(classPath_ClassFile0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassPath.ClassFile classPath_ClassFile0 = Repository.lookupClassFile("");
      assertNull(classPath_ClassFile0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      try { 
        Repository.implementationOf("p^x", javaClass0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class p^x: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: p^x.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.implementationOf("org.apache.bcel.Repository", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name null
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      org.apache.bcel.util.Repository repository0 = Repository.getRepository();
      assertNotNull(repository0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      try { 
        Repository.implementationOf((JavaClass) null, "jsr_w");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class jsr_w: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: jsr_w.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Class<String> class0 = String.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      JavaClass[] javaClassArray0 = Repository.getInterfaces(javaClass0);
      assertEquals(3, javaClassArray0.length);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Class<String> class0 = String.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      // Undeclared exception!
      try { 
        Repository.implementationOf(javaClass0, javaClass0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.String is no interface
         //
         verifyException("org.apache.bcel.classfile.JavaClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<BufferedInputStream> class0 = BufferedInputStream.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      Repository.removeClass(javaClass0);
      assertFalse(javaClass0.isVarArgs());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      boolean boolean0 = Repository.instanceOf("org.apache.bcel.Repository", "org.apache.bcel.Repository");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.instanceOf((JavaClass) null, "org.apache.bcel.Repository");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JavaClass[] javaClassArray0 = Repository.getSuperClasses("org.apache.bcel.Repository");
      assertEquals(1, javaClassArray0.length);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.getInterfaces("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<BufferedInputStream> class0 = BufferedInputStream.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      boolean boolean0 = Repository.instanceOf(javaClass0, javaClass0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Class<BufferedInputStream> class0 = BufferedInputStream.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      try { 
        Repository.instanceOf("%sxvJmh-/{O", javaClass0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class %sxvJmh-.{O: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: %sxvJmh-/{O.class
         //
         verifyException("org.apache.bcel.util.AbstractClassPathRepository", e);
      }
  }
}
