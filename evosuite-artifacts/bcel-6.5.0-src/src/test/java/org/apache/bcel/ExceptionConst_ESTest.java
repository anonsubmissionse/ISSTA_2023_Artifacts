/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 22:23:09 GMT 2022
 */

package org.apache.bcel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.apache.bcel.ExceptionConst;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExceptionConst_ESTest extends ExceptionConst_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<InstantiationError>[] classArray0 = (Class<InstantiationError>[]) Array.newInstance(Class.class, 3);
      // Undeclared exception!
      try { 
        ExceptionConst.createExceptions((ExceptionConst.EXCS) null, classArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.ExceptionConst", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExceptionConst.EXCS exceptionConst_EXCS0 = ExceptionConst.EXCS.EXCS_STRING_RESOLUTION;
      Class<?>[] classArray0 = ExceptionConst.createExceptions(exceptionConst_EXCS0, (Class<?>[]) null);
      assertEquals(0, classArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExceptionConst.EXCS exceptionConst_EXCS0 = ExceptionConst.EXCS.EXCS_ARRAY_EXCEPTION;
      Class<?>[] classArray0 = ExceptionConst.createExceptions(exceptionConst_EXCS0, (Class<?>[]) null);
      assertEquals(2, classArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ExceptionConst.EXCS exceptionConst_EXCS0 = ExceptionConst.EXCS.EXCS_CLASS_AND_INTERFACE_RESOLUTION;
      Class<?>[] classArray0 = ExceptionConst.createExceptions(exceptionConst_EXCS0, (Class<?>[]) null);
      ExceptionConst.EXCS exceptionConst_EXCS1 = ExceptionConst.EXCS.EXCS_INTERFACE_METHOD_RESOLUTION;
      Class<?>[] classArray1 = ExceptionConst.createExceptions(exceptionConst_EXCS1, classArray0);
      assertNotNull(classArray1);
      assertEquals(6, classArray1.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExceptionConst.EXCS exceptionConst_EXCS0 = ExceptionConst.EXCS.EXCS_FIELD_AND_METHOD_RESOLUTION;
      Class<InstantiationError>[] classArray0 = (Class<InstantiationError>[]) Array.newInstance(Class.class, 3);
      Class<?>[] classArray1 = ExceptionConst.createExceptions(exceptionConst_EXCS0, classArray0);
      assertEquals(6, classArray1.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ExceptionConst exceptionConst0 = new ExceptionConst();
  }
}
