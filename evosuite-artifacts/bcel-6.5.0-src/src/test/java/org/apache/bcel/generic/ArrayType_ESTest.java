/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 22:20:57 GMT 2022
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.generic.ArrayType;
import org.apache.bcel.generic.BasicType;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.D2F;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.ReferenceType;
import org.apache.bcel.generic.Type;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArrayType_ESTest extends ArrayType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("gU@4rRziuPll>t", 3);
      ArrayType arrayType1 = (ArrayType)arrayType0.getElementType();
      boolean boolean0 = arrayType0.equals(arrayType1);
      assertFalse(boolean0);
      assertEquals(2, arrayType1.getDimensions());
      assertFalse(arrayType1.equals((Object)arrayType0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("Td", 110);
      arrayType0.getBasicType();
      assertEquals("[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[LTd;", arrayType0.getSignature());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayType arrayType0 = null;
      try {
        arrayType0 = new ArrayType((Type) null, 116);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.ArrayType", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayType arrayType0 = null;
      try {
        arrayType0 = new ArrayType((String) null, (-326));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.ObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectType objectType0 = Type.OBJECT;
      ArrayType arrayType0 = new ArrayType(objectType0, 11);
      Object object0 = new Object();
      boolean boolean0 = arrayType0.equals(object0);
      assertEquals("[[[[[[[[[[[Ljava/lang/Object;", arrayType0.getSignature());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      D2F d2F0 = new D2F();
      Type type0 = d2F0.getType(constantPoolGen0);
      ArrayType arrayType0 = new ArrayType(type0, 1);
      arrayType0.getElementType();
      assertEquals("[F", arrayType0.getSignature());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BasicType basicType0 = Type.VOID;
      ArrayType arrayType0 = null;
      try {
        arrayType0 = new ArrayType(basicType0, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid type: void[]
         //
         verifyException("org.apache.bcel.generic.ArrayType", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      ArrayType arrayType0 = null;
      try {
        arrayType0 = new ArrayType(objectType0, (-174));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid number of dimensions: -174
         //
         verifyException("org.apache.bcel.generic.ArrayType", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType((byte)8, (byte)8);
      ArrayType arrayType1 = null;
      try {
        arrayType1 = new ArrayType(arrayType0, 2315);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid number of dimensions: 2315
         //
         verifyException("org.apache.bcel.generic.ArrayType", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("gU@4rRziuPll>t", 3);
      ArrayType arrayType1 = new ArrayType("gU@4rRziuPll>t[][][]", 3);
      boolean boolean0 = arrayType0.equals(arrayType1);
      assertEquals(3, arrayType1.getDimensions());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("gU@4rRziuPll>t", 3);
      ArrayType arrayType1 = new ArrayType(arrayType0, 3);
      boolean boolean0 = arrayType0.equals(arrayType1);
      assertFalse(boolean0);
      assertEquals(6, arrayType1.getDimensions());
      assertFalse(arrayType1.equals((Object)arrayType0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("gU@4rRziuPll>t", 3);
      boolean boolean0 = arrayType0.equals(arrayType0);
      assertTrue(boolean0);
      assertEquals(3, arrayType0.getDimensions());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayType arrayType0 = null;
      try {
        arrayType0 = new ArrayType((byte)12, (byte)12);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid type: void[]
         //
         verifyException("org.apache.bcel.generic.ArrayType", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayType arrayType0 = null;
      try {
        arrayType0 = new ArrayType("M'HIVWd~390$VcSm", 1651);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid number of dimensions: 1651
         //
         verifyException("org.apache.bcel.generic.ArrayType", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ReferenceType referenceType0 = Type.NULL;
      ArrayType arrayType0 = new ArrayType(referenceType0, 47);
      int int0 = arrayType0.getDimensions();
      assertEquals("[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[<null object>", arrayType0.getSignature());
      assertEquals(47, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("gU@4rRziuPll>t", 3);
      arrayType0.hashCode();
      assertEquals(3, arrayType0.getDimensions());
  }
}
