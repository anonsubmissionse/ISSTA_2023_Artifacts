/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 03:08:25 GMT 2022
 */

package com.github.scribejava.core.base64;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.core.base64.Base64;
import com.github.scribejava.core.base64.Java8Base64;
import com.github.scribejava.core.base64.Jaxb230Base64;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Jaxb230Base64_ESTest extends Jaxb230Base64_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Jaxb230Base64 jaxb230Base64_0 = new Jaxb230Base64();
      byte[] byteArray0 = new byte[0];
      String string0 = jaxb230Base64_0.internalEncodeUrlWithoutPadding(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Jaxb230Base64 jaxb230Base64_0 = new Jaxb230Base64();
      byte[] byteArray0 = new byte[0];
      String string0 = jaxb230Base64_0.internalEncode(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Jaxb230Base64 jaxb230Base64_0 = new Jaxb230Base64();
      // Undeclared exception!
      try { 
        jaxb230Base64_0.internalEncodeUrlWithoutPadding((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.xml.bind.DatatypeConverterImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      Java8Base64 java8Base64_0 = (Java8Base64)Base64.getInstance();
      // Undeclared exception!
      try { 
        java8Base64_0.internalEncodeUrlWithoutPadding(byteArray0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Jaxb230Base64 jaxb230Base64_0 = new Jaxb230Base64();
      // Undeclared exception!
      try { 
        jaxb230Base64_0.internalEncode((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.xml.bind.DatatypeConverterImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Java8Base64 java8Base64_0 = (Java8Base64)Base64.getInstance();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        java8Base64_0.internalEncode(byteArray0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      Jaxb230Base64 jaxb230Base64_0 = new Jaxb230Base64();
      String string0 = jaxb230Base64_0.internalEncodeUrlWithoutPadding(byteArray0);
      assertEquals("AAAAAAAAAAA", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      boolean boolean0 = Jaxb230Base64.isAvailable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Jaxb230Base64 jaxb230Base64_0 = new Jaxb230Base64();
      byte[] byteArray0 = new byte[3];
      String string0 = jaxb230Base64_0.internalEncode(byteArray0);
      assertEquals("AAAA", string0);
  }
}
