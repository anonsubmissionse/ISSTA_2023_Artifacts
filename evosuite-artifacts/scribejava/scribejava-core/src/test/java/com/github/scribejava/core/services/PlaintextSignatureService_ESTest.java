/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 03:10:42 GMT 2022
 */

package com.github.scribejava.core.services;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.core.services.PlaintextSignatureService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlaintextSignatureService_ESTest extends PlaintextSignatureService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PlaintextSignatureService plaintextSignatureService0 = new PlaintextSignatureService();
      // Undeclared exception!
      try { 
        plaintextSignatureService0.getSignature("jZ%213&bcrI6", "jZ%213&bcrI6", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error while signing string: jZ%213&bcrI6
         //
         verifyException("com.github.scribejava.core.services.PlaintextSignatureService", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PlaintextSignatureService plaintextSignatureService0 = new PlaintextSignatureService();
      String string0 = plaintextSignatureService0.getSignature("PLAINTEXT", "PLAINTEXT", "");
      assertEquals("PLAINTEXT&", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PlaintextSignatureService plaintextSignatureService0 = new PlaintextSignatureService();
      // Undeclared exception!
      try { 
        plaintextSignatureService0.getSignature((String) null, "PLAINTEXT", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error while signing string: null
         //
         verifyException("com.github.scribejava.core.services.PlaintextSignatureService", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PlaintextSignatureService plaintextSignatureService0 = new PlaintextSignatureService();
      String string0 = plaintextSignatureService0.getSignatureMethod();
      assertEquals("PLAINTEXT", string0);
  }
}
