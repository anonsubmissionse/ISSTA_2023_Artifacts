/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 02:58:21 GMT 2022
 */

package com.github.scribejava.core.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.core.model.Parameter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parameter_ESTest extends Parameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Parameter parameter0 = new Parameter("Cannot encode null object", "Cannot encode null object");
      Parameter parameter1 = new Parameter("Cannot encode null object", "%7E");
      int int0 = parameter0.compareTo(parameter1);
      assertEquals("Cannot encode null object", parameter1.getKey());
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Parameter parameter0 = new Parameter("0", "0");
      parameter0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Parameter parameter0 = new Parameter((String) null, (String) null);
      String string0 = parameter0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Parameter parameter0 = new Parameter("meHNXP%2Cd.-41%28%5ER%26=", ">O>rxUwj:]a !aT%0");
      String string0 = parameter0.getValue();
      assertEquals("meHNXP%2Cd.-41%28%5ER%26=", parameter0.getKey());
      assertEquals(">O>rxUwj:]a !aT%0", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Parameter parameter0 = new Parameter((String) null, (String) null);
      String string0 = parameter0.getKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Parameter parameter0 = new Parameter("meHNXP,d.-41(^R&", "");
      String string0 = parameter0.getKey();
      assertEquals("meHNXP,d.-41(^R&", string0);
      assertEquals("", parameter0.getValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      Parameter parameter1 = new Parameter("=", "");
      int int0 = parameter1.compareTo(parameter0);
      assertEquals("", parameter1.getValue());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Parameter parameter0 = new Parameter((String) null, "");
      // Undeclared exception!
      try { 
        parameter0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.model.Parameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Parameter parameter0 = new Parameter("IFrzxRJ|", "IFrzxRJ|");
      // Undeclared exception!
      try { 
        parameter0.compareTo((Parameter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.model.Parameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Parameter parameter0 = new Parameter((String) null, "S$E$f AWB");
      // Undeclared exception!
      try { 
        parameter0.asUrlEncodedPair();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot encode null object
         //
         verifyException("com.github.scribejava.core.utils.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      String string0 = parameter0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      String string0 = parameter0.getKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      Parameter parameter1 = new Parameter("=", "");
      int int0 = parameter0.compareTo(parameter1);
      assertEquals("", parameter1.getValue());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Parameter parameter0 = new Parameter("Cannot decode null object", "`}{RCJq0");
      Parameter parameter1 = new Parameter("Cannot decode null object", "`}{RCJq0");
      boolean boolean0 = parameter0.equals(parameter1);
      assertEquals("`}{RCJq0", parameter1.getValue());
      assertEquals("Cannot decode null object", parameter1.getKey());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Parameter parameter0 = new Parameter("0", "0");
      Parameter parameter1 = new Parameter("0", "1");
      boolean boolean0 = parameter0.equals(parameter1);
      assertFalse(boolean0);
      assertEquals("0", parameter1.getKey());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      Parameter parameter1 = new Parameter("", (String) null);
      // Undeclared exception!
      try { 
        parameter0.equals(parameter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      Parameter parameter1 = new Parameter("=", "");
      boolean boolean0 = parameter0.equals(parameter1);
      assertEquals("", parameter1.getValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Parameter parameter0 = new Parameter("meHNXP,d.-41(^R&", "");
      boolean boolean0 = parameter0.equals(parameter0);
      assertEquals("meHNXP,d.-41(^R&", parameter0.getKey());
      assertTrue(boolean0);
      assertEquals("", parameter0.getValue());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Parameter parameter0 = new Parameter("+", "+");
      boolean boolean0 = parameter0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      Object object0 = new Object();
      boolean boolean0 = parameter0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      String string0 = parameter0.asUrlEncodedPair();
      assertEquals("=", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Parameter parameter0 = new Parameter("", "");
      int int0 = parameter0.compareTo(parameter0);
      assertEquals(0, int0);
  }
}
