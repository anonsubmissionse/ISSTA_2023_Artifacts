/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 03:09:41 GMT 2022
 */

package com.github.scribejava.core.services;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.core.services.HMACSha1SignatureService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HMACSha1SignatureService_ESTest extends HMACSha1SignatureService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HMACSha1SignatureService hMACSha1SignatureService0 = new HMACSha1SignatureService();
      // Undeclared exception!
      try { 
        hMACSha1SignatureService0.getSignature("", "[0!~t39jXn0e=Rf!Bm", "[0!~t39jXn0e=Rf!Bm");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error while signing string: 
         //
         verifyException("com.github.scribejava.core.services.HMACSha1SignatureService", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HMACSha1SignatureService hMACSha1SignatureService0 = new HMACSha1SignatureService();
      String string0 = hMACSha1SignatureService0.getSignature("(0:k", "", "com.github.scribejava.core.services.HMACSha1SignatureService");
      assertEquals("8WKbJeHy/goSNHkdB8vJZdwsm7w=", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HMACSha1SignatureService hMACSha1SignatureService0 = new HMACSha1SignatureService();
      String string0 = hMACSha1SignatureService0.getSignatureMethod();
      assertEquals("HMAC-SHA1", string0);
  }
}
