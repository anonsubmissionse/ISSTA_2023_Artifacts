/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 03:07:46 GMT 2022
 */

package com.github.scribejava.core.oauth2.clientauthentication;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.core.model.OAuthRequest;
import com.github.scribejava.core.model.Verb;
import com.github.scribejava.core.oauth2.clientauthentication.RequestBodyAuthenticationScheme;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RequestBodyAuthenticationScheme_ESTest extends RequestBodyAuthenticationScheme_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RequestBodyAuthenticationScheme requestBodyAuthenticationScheme0 = RequestBodyAuthenticationScheme.instance();
      // Undeclared exception!
      try { 
        requestBodyAuthenticationScheme0.addClientAuthentication((OAuthRequest) null, "Q;Uf]k _%2A`PYP", "Q;Uf]k _%2A`PYP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.oauth2.clientauthentication.RequestBodyAuthenticationScheme", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RequestBodyAuthenticationScheme requestBodyAuthenticationScheme0 = RequestBodyAuthenticationScheme.instance();
      Verb verb0 = Verb.PATCH;
      OAuthRequest oAuthRequest0 = new OAuthRequest(verb0, "");
      requestBodyAuthenticationScheme0.addClientAuthentication(oAuthRequest0, "", "");
      assertNull(oAuthRequest0.getRealm());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RequestBodyAuthenticationScheme requestBodyAuthenticationScheme0 = RequestBodyAuthenticationScheme.instance();
      Verb verb0 = Verb.PATCH;
      OAuthRequest oAuthRequest0 = new OAuthRequest(verb0, "");
      requestBodyAuthenticationScheme0.addClientAuthentication(oAuthRequest0, "", (String) null);
      assertEquals("", oAuthRequest0.getUrl());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RequestBodyAuthenticationScheme requestBodyAuthenticationScheme0 = new RequestBodyAuthenticationScheme();
      Verb verb0 = Verb.OPTIONS;
      OAuthRequest oAuthRequest0 = new OAuthRequest(verb0, "e2-=weT:/)|B");
      requestBodyAuthenticationScheme0.addClientAuthentication(oAuthRequest0, "e2-=weT:/)|B", "vm;;k[Uucn3LdW<");
      assertNull(oAuthRequest0.getRealm());
  }
}
