/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 03:07:52 GMT 2022
 */

package com.github.scribejava.core.httpclient.multipart;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.scribejava.core.httpclient.multipart.BodyPartPayload;
import com.github.scribejava.core.httpclient.multipart.ByteArrayBodyPartPayload;
import com.github.scribejava.core.httpclient.multipart.FileByteArrayBodyPartPayload;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BodyPartPayload_ESTest extends BodyPartPayload_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayBodyPartPayload byteArrayBodyPartPayload0 = new ByteArrayBodyPartPayload(byteArray0, 0, (-1));
      Map<String, String> map0 = byteArrayBodyPartPayload0.getHeaders();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ByteArrayBodyPartPayload byteArrayBodyPartPayload0 = new ByteArrayBodyPartPayload(byteArray0, (byte)1, 1, hashMap0);
      Map<String, String> map0 = byteArrayBodyPartPayload0.getHeaders();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload("", byteArray0, 945, 945);
      Map<String, String> map0 = fileByteArrayBodyPartPayload0.getHeaders();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Map<String, String> map0 = BodyPartPayload.convertContentTypeToHeaders((String) null);
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Map<String, String> map0 = BodyPartPayload.convertContentTypeToHeaders("");
      assertEquals(1, map0.size());
  }
}
