/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 03:09:52 GMT 2022
 */

package com.github.scribejava.core.extractors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.core.extractors.OAuth1AccessTokenExtractor;
import com.github.scribejava.core.model.OAuth1AccessToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OAuth1AccessTokenExtractor_ESTest extends OAuth1AccessTokenExtractor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OAuth1AccessTokenExtractor oAuth1AccessTokenExtractor0 = OAuth1AccessTokenExtractor.instance();
      OAuth1AccessToken oAuth1AccessToken0 = oAuth1AccessTokenExtractor0.createToken("2EX`0W_AGZ}6l^M", "2EX`0W_AGZ}6l^M", "GNYuD8fI4aHW%ADC5");
      assertEquals("2EX`0W_AGZ}6l^M", oAuth1AccessToken0.getToken());
      assertEquals("2EX`0W_AGZ}6l^M", oAuth1AccessToken0.getTokenSecret());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OAuth1AccessTokenExtractor oAuth1AccessTokenExtractor0 = new OAuth1AccessTokenExtractor();
      OAuth1AccessToken oAuth1AccessToken0 = oAuth1AccessTokenExtractor0.createToken("", "", "");
      assertTrue(oAuth1AccessToken0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OAuth1AccessTokenExtractor oAuth1AccessTokenExtractor0 = OAuth1AccessTokenExtractor.instance();
      // Undeclared exception!
      try { 
        oAuth1AccessTokenExtractor0.createToken((String) null, "9+9&M$^.GlUy", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // oauth_token can't be null
         //
         verifyException("com.github.scribejava.core.utils.Preconditions", e);
      }
  }
}
