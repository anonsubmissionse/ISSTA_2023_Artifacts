/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 03:01:25 GMT 2022
 */

package com.github.scribejava.core.httpclient.multipart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.core.httpclient.multipart.FileByteArrayBodyPartPayload;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileByteArrayBodyPartPayload_ESTest extends FileByteArrayBodyPartPayload_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = null;
      try {
        fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload((byte[]) null, (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.httpclient.multipart.ByteArrayBodyPartPayload", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = null;
      try {
        fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload((byte[]) null, "Z@^d");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.httpclient.multipart.ByteArrayBodyPartPayload", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = null;
      try {
        fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.httpclient.multipart.ByteArrayBodyPartPayload", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = null;
      try {
        fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload("b#)XAmYhL9", (byte[]) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.httpclient.multipart.ByteArrayBodyPartPayload", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = null;
      try {
        fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload("com.github.scribejava.core.httpclient.multipart.FileByteArrayBodyPartPayload", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.httpclient.multipart.ByteArrayBodyPartPayload", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload(")EB;", byteArray0, ")EB;");
      assertEquals(0, fileByteArrayBodyPartPayload0.getOff());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload(byteArray0, "/Nyi*-81,,:", "/Nyi*-81,,:");
      assertEquals(0, fileByteArrayBodyPartPayload0.getOff());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload("", byteArray0, (-1), 3916, "", "");
      assertEquals(3916, fileByteArrayBodyPartPayload0.getLen());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload("", byteArray0, (String) null, "; filename=\"");
      assertEquals(1, fileByteArrayBodyPartPayload0.getLen());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload("", byteArray0, 2851, (byte)0, "@k<r;6(Bgf");
      assertEquals(2851, fileByteArrayBodyPartPayload0.getOff());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload(byteArray0, (String) null);
      assertEquals(0, fileByteArrayBodyPartPayload0.getOff());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload(byteArray0, 0, (byte)0, "", "");
      assertEquals(0, fileByteArrayBodyPartPayload0.getLen());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload(byteArray0, (-2809), (-1));
      assertEquals((-1), fileByteArrayBodyPartPayload0.getLen());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload(byteArray0);
      assertEquals(3, fileByteArrayBodyPartPayload0.getLen());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload((String) null, byteArray0);
      assertEquals(0, fileByteArrayBodyPartPayload0.getOff());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload(byteArray0, 1159, 0, "");
      assertEquals(0, fileByteArrayBodyPartPayload0.getLen());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = null;
      try {
        fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload("M#$N3;", (byte[]) null, "M#$N3;", "M#$N3;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.httpclient.multipart.ByteArrayBodyPartPayload", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileByteArrayBodyPartPayload fileByteArrayBodyPartPayload0 = new FileByteArrayBodyPartPayload("M#$N3;", (byte[]) null, 34, (-2128));
      assertEquals(34, fileByteArrayBodyPartPayload0.getOff());
  }
}
