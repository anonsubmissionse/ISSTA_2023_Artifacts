/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 20:28:25 GMT 2022
 */

package org.apache.commons.net.nntp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.apache.commons.net.nntp.Article;
import org.apache.commons.net.nntp.Threadable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Article_ESTest extends Article_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Article article0 = new Article();
      assertEquals((-1), article0.getArticleNumber());
      
      article0.setSubject("R2]Ac>*>^68`p7bS2V0+");
      article0.getArticleNumber();
      article0.simplifiedSubject();
      article0.makeDummy();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Article article0 = new Article();
      article0.setSubject(" ");
      Article article1 = article0.next;
      article0.setDate(" ");
      article0.simplifiedSubject();
      article0.messageThreadReferences();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Article article0 = new Article();
      article0.setSubject("R]Ac>*>^68`p7bS2V0+");
      article0.getArticleNumber();
      article0.simplifiedSubject();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Article article0 = new Article();
      article0.getArticleId();
      assertEquals((-1), article0.getArticleNumber());
      
      article0.getSubject();
      article0.setSubject("\t");
      Article.printThread(article0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.close();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      article0.setFrom("E6;Eyq]&+`%9");
      Article.printThread(article0, (PrintStream) mockPrintStream0);
      article0.isDummy();
      article0.simplifiedSubject();
      article0.simplifiedSubject();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      article0.kid = article0;
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.commons.io.filefilter.DirectoryFileFilter");
      article0.setNext(article1);
      article0.kid.kid.setArticleNumber(100);
      article0.kid.next.setSubject("org.apache.commons.io.filefilter.DirectoryFileFilter");
      article0.getArticleId();
      long long0 = 0L;
      // Undeclared exception!
      Article.printThread(article0, (PrintStream) mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      article1.subjectIsReply();
      Object[] objectArray0 = new Object[4];
      objectArray0[1] = (Object) article0;
      objectArray0[2] = (Object) article1;
      article0.kid = article0;
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.commons.io.filefilter.DirectoryFileFilter");
      Article.printThread(article1, (-944), (PrintStream) mockPrintStream0);
      article0.setNext(article1);
      article0.kid.kid.setArticleNumber(1L);
      article0.kid.kid.setArticleNumber(100);
      Threadable threadable0 = article0.kid.kid.makeDummy();
      article0.kid.next.setSubject("EOB");
      article0.getArticleId();
      article0.kid.next.setArticleNumber((long) (-944));
      article0.kid.setChild(threadable0);
      Article.printThread(article0);
      article1.simplifiedSubject();
      article0.kid.messageThreadId();
      article1.isDummy();
      article1.getFrom();
      article0.addReference((String) null);
      threadable0.messageThreadId();
      Article.printThread(article0, 3, (PrintStream) mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Article article0 = new Article();
      article0.setArticleId("The offset cannot be negative");
      article0.messageThreadId();
      article0.addReference("48H");
      Threadable threadable0 = article0.makeDummy();
      Article.printThread(article0);
      Locale.getISOCountries();
      threadable0.messageThreadReferences();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Article article0 = new Article();
      article0.toString();
      article0.getArticleId();
      article0.toString();
      article0.setSubject("H");
      Article.printThread(article0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.close();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      article0.setFrom("E6;Eyq]&+`%9");
      Article.printThread(article0, (PrintStream) mockPrintStream0);
      article0.getReferences();
      article0.isDummy();
      article0.getFrom();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      article1.subjectIsReply();
      Object[] objectArray0 = new Object[4];
      objectArray0[1] = (Object) article0;
      objectArray0[2] = (Object) article1;
      article0.kid = article0;
      article0.setNext(article1);
      article0.kid.kid.setArticleNumber(100);
      Threadable threadable0 = article0.kid.kid.makeDummy();
      article0.kid.next.setSubject("EOB");
      article0.getArticleId();
      article0.kid.next.setArticleNumber(0L);
      article0.kid.setChild(threadable0);
      Article.printThread(article0);
      article0.kid.toString();
      article1.simplifiedSubject();
      article0.kid.messageThreadId();
      article1.isDummy();
      article1.toString();
      article0.toString();
      article0.addReference((String) null);
      threadable0.messageThreadId();
      article1.getArticleNumberLong();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Article article0 = new Article();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Locale locale0 = Locale.US;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) locale0;
      article0.setSubject("");
      objectArray0[1] = (Object) article0;
      objectArray0[2] = (Object) mockPrintStream0;
      objectArray0[3] = (Object) byteArrayOutputStream0;
      objectArray0[4] = (Object) byteArrayOutputStream0;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      linkedList1.add(locale0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale.lookup(linkedList0, list0);
      objectArray0[5] = (Object) mockPrintStream0;
      Object object0 = new Object();
      Locale.setDefault(locale0);
      objectArray0[6] = object0;
      PrintStream printStream0 = mockPrintStream0.format(locale0, "", objectArray0);
      Article.printThread(article0, 796, printStream0);
      article0.getArticleNumberLong();
      article0.makeDummy();
      article0.getFrom();
      article0.messageThreadReferences();
      article0.messageThreadId();
      article0.getFrom();
      article0.getSubject();
      article0.getReferences();
      Article.printThread(article0, 796, printStream0);
      article0.getArticleNumberLong();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "JYIUMzQl");
      Article article0 = new Article();
      article0.setDate("JYIUMzQl");
      article0.messageThreadReferences();
      article0.setFrom("");
      article0.getFrom();
      int int0 = (-2768);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("JYIUMzQl", "JYIUMzQl");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // JYIUMzQl
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Article article0 = new Article();
      article0.getArticleId();
      article0.setSubject("$H");
      Article.printThread(article0);
      article0.getReferences();
      article0.isDummy();
      article0.simplifiedSubject();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Article article0 = new Article();
      article0.messageThreadReferences();
      article0.addReference("The FilenameFilter must not be null");
      article0.toString();
      article0.getArticleNumberLong();
      article0.addReference("ozm;{I:nY0-mJ<#'Ec");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Article article0 = new Article();
      article0.toString();
      Article.printThread(article0);
      article0.addReference("The FilenameFilter must not be null");
      article0.toString();
      article0.setArticleId("");
      article0.getArticleNumberLong();
      article0.messageThreadId();
      article0.makeDummy();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      article1.subjectIsReply();
      Object[] objectArray0 = new Object[4];
      objectArray0[1] = (Object) article0;
      objectArray0[2] = (Object) article1;
      article0.kid = article0;
      article0.setNext(article1);
      Threadable threadable0 = article0.kid.kid.makeDummy();
      article0.kid.next.setSubject("EOB");
      article0.getArticleId();
      article0.kid.next.setArticleNumber((-13L));
      article0.kid.setChild(threadable0);
      Article.printThread(article0);
      article0.kid.toString();
      article1.simplifiedSubject();
      article0.kid.messageThreadId();
      article1.isDummy();
      article1.toString();
      article0.toString();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Article article0 = new Article();
      article0.getArticleId();
      article0.toString();
      article0.setSubject("S");
      article0.makeDummy();
      article0.setSubject("}3.");
      Article.printThread(article0);
      article0.getReferences();
      article0.isDummy();
      article0.simplifiedSubject();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Article article0 = new Article();
      article0.toString();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)104;
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)58;
      byteArray0[3] = (byte)120;
      byteArray0[4] = (byte)33;
      byteArray0[5] = (byte)48;
      byteArray0[6] = (byte)120;
      byteArray0[7] = (byte)91;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      article0.setArticleNumber((int) (byte)48);
      article0.addReference("The FilenameFilter must not be null");
      article0.toString();
      article0.getArticleNumberLong();
      article0.getArticleNumber();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Article article0 = new Article();
      article0.toString();
      article0.addReference("The FilenameFilter must not be null");
      article0.toString();
      article0.getArticleNumberLong();
      article0.subjectIsReply();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Article article0 = new Article();
      String string0 = "[L";
      article0.setDate("[L");
      article0.getDate();
      article0.getReferences();
      article0.getArticleId();
      article0.addReference("[L");
      int int0 = (-181);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Article article0 = new Article();
      article0.getArticleId();
      article0.toString();
      article0.setSubject("H");
      Article.printThread(article0);
      article0.isDummy();
      article0.simplifiedSubject();
      article0.simplifiedSubject();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) article0;
      objectArray0[1] = (Object) article0;
      objectArray0[2] = (Object) article1;
      article0.kid = article0;
      article0.setNext(article1);
      Threadable threadable0 = article0.kid.kid.makeDummy();
      article0.kid.next.setSubject("EOB");
      article0.getArticleId();
      article0.kid.next.setArticleNumber(0L);
      article0.kid.setChild(threadable0);
      Article.printThread(article0);
      article0.kid.toString();
      article1.simplifiedSubject();
      article0.kid.messageThreadId();
      article1.isDummy();
      article1.toString();
      article1.getArticleNumber();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Article article0 = new Article();
      article0.messageThreadId();
      article0.messageThreadId();
      article0.addReference(" F");
      article0.setSubject("H");
      Article article1 = (Article)article0.makeDummy();
      article0.getReferences();
      article1.subjectIsReply();
      article0.messageThreadReferences();
      article1.getFrom();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Article article0 = new Article();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "";
      article0.setDate("");
      article0.toString();
      article0.getReferences();
      article0.getDate();
      article0.addReference("-1 null null");
      int int0 = (-181);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Article article0 = new Article();
      article0.getFrom();
      assertEquals((-1), article0.getArticleNumber());
      
      article0.messageThreadId();
      article0.setSubject("H");
      Threadable threadable0 = article0.makeDummy();
      article0.getReferences();
      threadable0.isDummy();
      article0.getSubject();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) article0;
      objectArray0[1] = (Object) article0;
      objectArray0[2] = (Object) article1;
      article0.kid = article0;
      article0.setNext(article1);
      Threadable threadable0 = article0.kid.kid.makeDummy();
      article0.kid.next.setSubject("-0jqD~]cuzpX");
      article0.getArticleId();
      article0.kid.next.setArticleNumber(0L);
      article0.kid.setChild(threadable0);
      Article.printThread(article0);
      article0.kid.toString();
      article1.simplifiedSubject();
      article0.kid.messageThreadId();
      article1.isDummy();
      article1.toString();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) article0;
      objectArray0[1] = (Object) article0;
      objectArray0[2] = (Object) article1;
      article0.kid = article0;
      article0.setNext(article1);
      Threadable threadable0 = article0.kid.kid.makeDummy();
      article0.kid.next.setSubject("EOB");
      article0.getArticleId();
      article0.kid.next.setArticleNumber(0L);
      article0.kid.setChild(threadable0);
      Article.printThread(article0);
      article0.kid.toString();
      article1.simplifiedSubject();
      article0.kid.messageThreadId();
      article1.isDummy();
      article1.toString();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      article0.setArticleId("$=Bs ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) article0;
      objectArray0[1] = (Object) article0;
      objectArray0[2] = (Object) article1;
      article0.kid = article0;
      article0.setNext(article1);
      Threadable threadable0 = article0.kid.kid.makeDummy();
      article0.kid.next.setSubject("EOB");
      article0.getArticleId();
      article0.kid.setChild(threadable0);
      Article.printThread(article0);
      article0.kid.toString();
      article1.simplifiedSubject();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) article0;
      objectArray0[1] = (Object) article0;
      objectArray0[2] = (Object) article1;
      article0.kid = article0;
      article0.setNext(article1);
      Article article2 = (Article)article0.kid.kid.makeDummy();
      article0.kid.next.setSubject("");
      article2.getDate();
      article0.kid.setChild(article2);
      Article.printThread(article0);
      article0.kid.toString();
      article1.simplifiedSubject();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Article article0 = new Article();
      Object[] objectArray0 = new Object[4];
      Article article1 = new Article();
      article0.next = article0;
      objectArray0[0] = (Object) article0;
      objectArray0[1] = (Object) article0;
      objectArray0[2] = (Object) article0;
      article0.next.setArticleId("");
      objectArray0[3] = (Object) "-0jqD~]cuzpX";
      article0.kid = article0;
      article0.setNext(article0);
      article0.getArticleId();
      // Undeclared exception!
      Article.printThread(article0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) article0;
      objectArray0[1] = (Object) article0;
      objectArray0[2] = (Object) article1;
      article0.kid = article0;
      MockFile mockFile0 = new MockFile("hzT^iWiS7", "-0jqD~]cuzpX");
      File file0 = MockFile.createTempFile("-0jqD~]cuzpX", "pxw_S`+m/\"VH", (File) mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      article1.messageThreadReferences();
      MockPrintStream mockPrintStream1 = new MockPrintStream(bufferedOutputStream0);
      Article.printThread(article1, (-78), (PrintStream) mockPrintStream1);
      article0.setNext(article1);
      Threadable threadable0 = article0.kid.kid.makeDummy();
      article0.getArticleId();
      article0.kid.setChild(threadable0);
      Article.printThread(article0);
      article0.kid.toString();
      // Undeclared exception!
      try { 
        article1.simplifiedSubject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) article0;
      objectArray0[1] = (Object) article0;
      objectArray0[2] = (Object) article1;
      article0.kid = article0;
      article0.setNext(article1);
      Threadable threadable0 = article0.kid.kid.makeDummy();
      article0.kid.next.setSubject("EOB");
      article0.getArticleId();
      article0.kid.setChild(threadable0);
      Article.printThread(article0);
      article0.kid.toString();
      article1.simplifiedSubject();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Article article0 = new Article();
      article0.getArticleId();
      article0.toString();
      article0.setSubject("H");
      Article article1 = (Article)article0.makeDummy();
      Article.printThread(article0);
      article0.getReferences();
      article1.getArticleNumberLong();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Article article0 = new Article();
      article0.getArticleId();
      article0.addReference("H");
      article0.setSubject("H");
      article0.makeDummy();
      Article.printThread(article0);
      article0.getReferences();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Article article0 = new Article();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) article0;
      objectArray0[1] = (Object) article0;
      objectArray0[3] = (Object) "";
      article0.kid = article0;
      article0.setNext(article0);
      article0.kid.addReference("");
      article0.kid.makeDummy();
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.commons.net.nntp.Article");
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) "-0jqD~]cuzpX");
      // Undeclared exception!
      Article.printThread(article0, 83, printStream0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Article article0 = new Article();
      article0.messageThreadReferences();
      Article article1 = new Article();
      article1.isDummy();
      article1.getDate();
      article1.subjectIsReply();
      // Undeclared exception!
      try { 
        article0.simplifiedSubject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = article0.kid;
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) article0;
      objectArray0[1] = (Object) article0;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) "";
      article0.kid = article0;
      article0.setNext((Threadable) null);
      article0.getArticleId();
      // Undeclared exception!
      Article.printThread(article0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Article article0 = new Article();
      article0.messageThreadId();
      article0.setArticleId((String) null);
      article0.messageThreadReferences();
      Article article1 = new Article();
      int int0 = 1;
      article1.addReference((String) null);
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Article article0 = new Article();
      int int0 = article0.getArticleNumber();
      assertEquals((-1), int0);
      
      article0.getDate();
      article0.messageThreadReferences();
      article0.toString();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("-1 null null", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Article article0 = new Article();
      article0.messageThreadId();
      article0.setArticleId((String) null);
      Locale locale0 = Locale.ITALIAN;
      String string0 = article0.toString();
      assertEquals("-1 null null", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Article article0 = new Article();
      article0.getSubject();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      article0.getSubject();
      article0.subjectIsReply();
      int int0 = (-2159);
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte) (-76);
      byteArray0[5] = (byte)121;
      byteArray0[6] = (byte) (-97);
      byteArray0[7] = (byte)2;
      byteArray0[8] = (byte) (-97);
      objectArray0[0] = object0;
      objectArray0[2] = (Object) locale0;
      Article article0 = new Article();
      int int0 = article0.getArticleNumber();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Article article0 = new Article();
      article0.setArticleNumber(1297);
      Article.printThread(article0);
      Article.printThread(article0);
      article0.setSubject("");
      article0.getReferences();
      article0.setArticleNumber(0L);
      article0.setFrom("");
      article0.getFrom();
      Article.printThread(article0);
      article0.getReferences();
      Article.printThread(article0);
      article0.setArticleNumber(0);
      Article.printThread(article0);
      article0.getArticleId();
      assertEquals(0L, article0.getArticleNumberLong());
      
      article0.simplifiedSubject();
      article0.addReference("");
      assertEquals(0, article0.getArticleNumber());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Article article0 = new Article();
      article0.getSubject();
      article0.setArticleId((String) null);
      article0.messageThreadReferences();
      Article article1 = new Article();
      int int0 = 1;
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = article0.kid;
      Article article2 = article0.next;
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) article0;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) "";
      article0.kid = null;
      article0.setNext((Threadable) null);
      article0.getArticleId();
      Article.printThread(article0);
      assertTrue(article0.isDummy());
      assertEquals((-1), article0.getArticleNumber());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Article article0 = new Article();
      article0.makeDummy();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "U2dq{Q4z.w)#+fD");
      article0.messageThreadId();
      article0.messageThreadReferences();
      int int0 = 1;
      OutputStream outputStream0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        article0.simplifiedSubject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Article article0 = new Article();
      article0.messageThreadId();
      article0.setArticleId((String) null);
      article0.getReferences();
      Article article1 = article0.next;
      int int0 = 1;
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Article article0 = new Article();
      article0.messageThreadId();
      article0.setArticleId((String) null);
      article0.messageThreadReferences();
      Article article1 = new Article();
      int int0 = 1;
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Article article0 = new Article();
      article0.setArticleId("h\")?3rxKScJjAod[{");
      article0.addReference("h\")?3rxKScJjAod[{");
      assertTrue(article0.subjectIsReply());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Article article0 = null;
      int int0 = (-272);
      // Undeclared exception!
      try { 
        Article.printThread((Article) null, (-272));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = article0.next;
      article0.kid = null;
      // Undeclared exception!
      try { 
        Article.printThread((Article) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Article article0 = new Article();
      String string0 = "QQSs|";
      Article article1 = article0.kid;
      // Undeclared exception!
      try { 
        Article.printThread((Article) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Article article0 = new Article();
      article0.getDate();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("t0M", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      Locale locale0 = Locale.CANADA_FRENCH;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) mockFileOutputStream0;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) mockFileOutputStream0;
      objectArray0[4] = (Object) article0;
      objectArray0[5] = (Object) mockFileOutputStream0;
      Object object0 = new Object();
      objectArray0[6] = object0;
      PrintStream printStream0 = mockPrintStream0.format(locale0, "", objectArray0);
      Article.printThread(article0, printStream0);
      assertEquals((-1L), article0.getArticleNumberLong());
      assertTrue(article0.isDummy());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = article0.kid;
      // Undeclared exception!
      try { 
        Article.printThread((Article) null, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      // Undeclared exception!
      try { 
        Article.printThread(article0, (-1), (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Article article0 = new Article();
      boolean boolean0 = article0.isDummy();
      assertTrue(boolean0);
      
      Article article1 = article0.kid;
      article0.setChild((Threadable) null);
      assertTrue(article0.isDummy());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Article article0 = new Article();
      article0.getReferences();
      Article article1 = article0.next;
      int int0 = 715;
      PrintStream printStream0 = null;
      // Undeclared exception!
      try { 
        Article.printThread((Article) null, 715, (PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Article article0 = new Article();
      Article.printThread(article0, (-554));
      assertTrue(article0.isDummy());
      assertEquals((-1), article0.getArticleNumber());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Article article0 = new Article();
      article0.addHeaderField("qg'sW]c|I<C0;5< WG(", "");
      article0.getFrom();
      article0.setDate("");
      article0.messageThreadReferences();
      assertEquals((-1L), article0.getArticleNumberLong());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Article article0 = new Article();
      Threadable threadable0 = article0.makeDummy();
      article0.setChild(threadable0);
      article0.getFrom();
      article0.kid.messageThreadReferences();
      article0.kid.setSubject("");
      article0.setDate("");
      article0.subjectIsReply();
      article0.setChild(threadable0);
      article0.messageThreadReferences();
      int int0 = (-742);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Article article0 = new Article();
      // Undeclared exception!
      try { 
        article0.simplifiedSubject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Article article0 = new Article();
      String string0 = "H";
      // Undeclared exception!
      try { 
        article0.simplifiedSubject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.nntp.Article", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Article article0 = new Article();
      article0.addHeaderField("qg'sW]c|I<C0;5< WG(", "qg'sW]c|I<C0;5< WG(");
      assertEquals((-1L), article0.getArticleNumberLong());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      article0.setArticleId("$=Bs ");
      article0.kid = article0;
      article0.setNext(article1);
      Article article2 = (Article)article0.kid.kid.makeDummy();
      article0.kid.next.setSubject("$=Bs ");
      article2.setArticleId("$=Bs ");
      article0.kid.setChild(article2);
      Article.printThread(article0);
      String string0 = article0.kid.toString();
      assertEquals("-1 $=Bs  null", string0);
      
      article2.addReference("");
      assertFalse(article2.subjectIsReply());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Article article0 = new Article();
      article0.setSubject(" ");
      article0.setDate(" ");
      String string0 = article0.simplifiedSubject();
      assertEquals("", string0);
      assertNotNull(string0);
      
      article0.messageThreadReferences();
      assertTrue(article0.isDummy());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Article article0 = new Article();
      article0.addReference("\t");
      article0.addReference("\t");
      article0.getReferences();
      assertTrue(article0.subjectIsReply());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Article article0 = new Article();
      long long0 = article0.getArticleNumberLong();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Article article0 = new Article();
      article0.setSubject("q]Ac>*>Q68`#7bS2V+");
      int int0 = article0.getArticleNumber();
      assertEquals((-1), int0);
      
      String string0 = article0.simplifiedSubject();
      assertEquals("q]Ac>*>Q68`#7bS2V+", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Article article0 = new Article();
      article0.setSubject("R]Ac>*>^68`]p7bS2V0+");
      String string0 = article0.simplifiedSubject();
      assertTrue(article0.isDummy());
      assertNotNull(string0);
      assertEquals("R]Ac>*>^68`]p7bS2V0+", string0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Article article0 = new Article();
      article0.setSubject("R]Ac>*>^68`p7bS2V0+");
      String string0 = article0.simplifiedSubject();
      assertEquals("R]Ac>*>^68`p7bS2V0+", string0);
      assertEquals((-1), article0.getArticleNumber());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Article article0 = new Article();
      article0.getDate();
      article0.messageThreadId();
      article0.addReference((String) null);
      assertEquals((-1L), article0.getArticleNumberLong());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Article article0 = new Article();
      article0.setSubject("\t");
      Article.printThread(article0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      article0.setFrom("\t");
      Article.printThread(article0, (PrintStream) mockPrintStream0);
      assertEquals(9, byteArrayOutputStream0.size());
      
      article0.isDummy();
      article0.simplifiedSubject();
      String string0 = article0.simplifiedSubject();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Article article0 = new Article();
      Article article1 = new Article();
      article1.subjectIsReply();
      article0.kid = article0;
      article0.setNext(article1);
      article0.kid.kid.setArticleNumber((-944));
      article0.kid.next.setSubject("org.apache.commons.io.filefilter.DirectoryFileFilter");
      article0.kid.next.setArticleNumber((long) (-944));
      article0.isDummy();
      article0.toString();
      assertEquals((-944), article0.getArticleNumber());
  }
}
