/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 20:43:56 GMT 2022
 */

package org.apache.commons.net.imap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.PipedWriter;
import javax.net.ssl.SSLContext;
import org.apache.commons.net.imap.AuthenticatingIMAPClient;
import org.apache.commons.net.imap.IMAP;
import org.apache.commons.net.imap.IMAPSClient;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AuthenticatingIMAPClient_ESTest extends AuthenticatingIMAPClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient();
      AuthenticatingIMAPClient.AUTH_METHOD authenticatingIMAPClient_AUTH_METHOD0 = AuthenticatingIMAPClient.AUTH_METHOD.LOGIN;
      // Undeclared exception!
      try { 
        authenticatingIMAPClient0.authenticate(authenticatingIMAPClient_AUTH_METHOD0, "", "wT\"<z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient();
      AuthenticatingIMAPClient.AUTH_METHOD authenticatingIMAPClient_AUTH_METHOD0 = AuthenticatingIMAPClient.AUTH_METHOD.XOAUTH2;
      // Undeclared exception!
      try { 
        authenticatingIMAPClient0.auth(authenticatingIMAPClient_AUTH_METHOD0, ".(g9 8fO", "*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient(true, sSLContext0);
      assertEquals(143, IMAP.DEFAULT_PORT);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient((String) null, true, sSLContext0);
      assertEquals(993, IMAPSClient.DEFAULT_IMAPS_PORT);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AuthenticatingIMAPClient.AUTH_METHOD authenticatingIMAPClient_AUTH_METHOD0 = AuthenticatingIMAPClient.AUTH_METHOD.LOGIN;
      String string0 = authenticatingIMAPClient_AUTH_METHOD0.getAuthName();
      assertEquals("LOGIN", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient(sSLContext0);
      PipedWriter pipedWriter0 = new PipedWriter();
      BufferedWriter bufferedWriter0 = new BufferedWriter(pipedWriter0);
      authenticatingIMAPClient0.__writer = bufferedWriter0;
      AuthenticatingIMAPClient.AUTH_METHOD authenticatingIMAPClient_AUTH_METHOD0 = AuthenticatingIMAPClient.AUTH_METHOD.XOAUTH;
      try { 
        authenticatingIMAPClient0.authenticate(authenticatingIMAPClient_AUTH_METHOD0, "", "");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient(false);
      assertEquals(0, authenticatingIMAPClient0.getDefaultTimeout());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient("XOAUTH2", false);
      AuthenticatingIMAPClient.AUTH_METHOD authenticatingIMAPClient_AUTH_METHOD0 = AuthenticatingIMAPClient.AUTH_METHOD.CRAM_MD5;
      // Undeclared exception!
      try { 
        authenticatingIMAPClient0.authenticate(authenticatingIMAPClient_AUTH_METHOD0, "org.apache.commons.net.util.Base64", "org.apache.commons.net.util.Base64");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient("");
      assertEquals(993, IMAPSClient.DEFAULT_IMAPS_PORT);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AuthenticatingIMAPClient authenticatingIMAPClient0 = new AuthenticatingIMAPClient();
      AuthenticatingIMAPClient.AUTH_METHOD authenticatingIMAPClient_AUTH_METHOD0 = AuthenticatingIMAPClient.AUTH_METHOD.XOAUTH2;
      PipedWriter pipedWriter0 = new PipedWriter();
      BufferedWriter bufferedWriter0 = new BufferedWriter(pipedWriter0, 143);
      authenticatingIMAPClient0.__writer = bufferedWriter0;
      try { 
        authenticatingIMAPClient0.auth(authenticatingIMAPClient_AUTH_METHOD0, "=qa[/!]@XR{JC+-M,", "v4fM}Gx");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }
}
