/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 20:39:05 GMT 2022
 */

package org.apache.commons.net.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.apache.commons.net.io.DotTerminatedMessageReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DotTerminatedMessageReader_ESTest extends DotTerminatedMessageReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.apache.commons.net.io.DotTerminatedMessageReader");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      char[] charArray0 = new char[7];
      int int0 = dotTerminatedMessageReader0.read(charArray0, 2, 2);
      assertEquals(2, int0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', 'o', 'r', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader(". 1lN");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      int int0 = dotTerminatedMessageReader0.read();
      assertEquals(46, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" ");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      String string0 = dotTerminatedMessageReader0.readLine();
      assertNotNull(string0);
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      char[] charArray0 = new char[0];
      int int0 = dotTerminatedMessageReader0.read(charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      try { 
        dotTerminatedMessageReader0.readLine();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a\">U9EH2A{[Tpd,");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      // Undeclared exception!
      try { 
        dotTerminatedMessageReader0.read((char[]) null, 1, 602);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@h6HA(");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        dotTerminatedMessageReader0.read(charArray0, (-1), 69);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D");
      stringReader0.close();
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      char[] charArray0 = new char[9];
      try { 
        dotTerminatedMessageReader0.read(charArray0, 0, 2438);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8'");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      // Undeclared exception!
      try { 
        dotTerminatedMessageReader0.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.io.DotTerminatedMessageReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      char[] charArray0 = new char[2];
      stringReader0.close();
      try { 
        dotTerminatedMessageReader0.read(charArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.apache.commons.net.io.DotTerminatedMessageReader");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      stringReader0.close();
      try { 
        dotTerminatedMessageReader0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      try { 
        dotTerminatedMessageReader0.close();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DotTerminatedMessageReader dotTerminatedMessageReader0 = null;
      try {
        dotTerminatedMessageReader0 = new DotTerminatedMessageReader((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.apache.commons.net.io.DotTerminatedMessageReader");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      char[] charArray0 = new char[7];
      int int0 = dotTerminatedMessageReader0.read(charArray0, 0, 2);
      assertArrayEquals(new char[] {'o', 'r', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      char[] charArray0 = new char[1];
      int int0 = dotTerminatedMessageReader0.read(charArray0, 2192, 2192);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      int int0 = dotTerminatedMessageReader0.read();
      assertEquals(46, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8'");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      int int0 = dotTerminatedMessageReader0.read();
      assertEquals(56, int0);
      
      int int1 = dotTerminatedMessageReader0.read();
      assertEquals(39, int1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      int int0 = dotTerminatedMessageReader0.read();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      dotTerminatedMessageReader0.close();
      int int0 = dotTerminatedMessageReader0.read();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ERu7q vg+/ZrJkgB}09");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      dotTerminatedMessageReader0.close();
      dotTerminatedMessageReader0.close();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".Th[;OK/S{\"e1O");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      CharBuffer charBuffer0 = CharBuffer.allocate(2007);
      int int0 = dotTerminatedMessageReader0.read(charBuffer0);
      assertEquals(14, charBuffer0.position());
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".Th[k;AOSo\"eO");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      char[] charArray0 = new char[6];
      int int0 = dotTerminatedMessageReader0.read(charArray0);
      assertEquals(6, int0);
      assertArrayEquals(new char[] {'.', 'T', 'h', '[', 'k', ';'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" ");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      char[] charArray0 = new char[5];
      int int0 = dotTerminatedMessageReader0.read(charArray0, (int) '\u0000', 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("..+V\"");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      int int0 = dotTerminatedMessageReader0.read();
      assertEquals(46, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ERu7q vg+/ZrJkgB}09");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      dotTerminatedMessageReader0.close();
      String string0 = dotTerminatedMessageReader0.readLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      DotTerminatedMessageReader dotTerminatedMessageReader0 = new DotTerminatedMessageReader(stringReader0);
      char[] charArray0 = new char[2];
      int int0 = dotTerminatedMessageReader0.read(charArray0);
      assertEquals((-1), int0);
  }
}
