/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 20:55:10 GMT 2022
 */

package org.apache.commons.net.imap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.PipedWriter;
import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.KeyManager;
import javax.net.ssl.SSLContext;
import javax.net.ssl.TrustManager;
import org.apache.commons.net.imap.IMAPSClient;
import org.apache.ftpserver.ssl.impl.AliasKeyManager;
import org.apache.ftpserver.ssl.impl.ExtendedAliasKeyManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IMAPSClient_ESTest extends IMAPSClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      iMAPSClient0.setEndpointCheckingEnabled(true);
      boolean boolean0 = iMAPSClient0.isEndpointCheckingEnabled();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      // Undeclared exception!
      try { 
        iMAPSClient0.setEnabledProtocols((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAPSClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient("");
      // Undeclared exception!
      try { 
        iMAPSClient0.setEnabledCipherSuites((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAPSClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient("<");
      // Undeclared exception!
      try { 
        iMAPSClient0.execTLS();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      PipedWriter pipedWriter0 = new PipedWriter();
      BufferedWriter bufferedWriter0 = new BufferedWriter(pipedWriter0);
      iMAPSClient0.__writer = bufferedWriter0;
      try { 
        iMAPSClient0.execTLS();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getInstance("TLS");
      IMAPSClient iMAPSClient0 = new IMAPSClient("W:>Y5*8fm9U{0F >i2s", true, sSLContext0);
      // Undeclared exception!
      try { 
        iMAPSClient0._connectAction_();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient("#J", true);
      try { 
        iMAPSClient0._connectAction_();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not initialize SSL context
         //
         verifyException("org.apache.commons.net.util.SSLContextUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      IMAPSClient iMAPSClient0 = new IMAPSClient("", true, sSLContext0);
      iMAPSClient0.getEnabledProtocols();
      assertEquals(993, iMAPSClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      iMAPSClient0.getEnabledCipherSuites();
      assertEquals(993, iMAPSClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      IMAPSClient iMAPSClient0 = new IMAPSClient("", true, sSLContext0);
      // Undeclared exception!
      try { 
        iMAPSClient0._connectAction_();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      // Undeclared exception!
      try { 
        iMAPSClient0._connectAction_();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      IMAPSClient iMAPSClient0 = new IMAPSClient("", true, sSLContext0);
      iMAPSClient0.getHostnameVerifier();
      assertEquals(993, iMAPSClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient("<");
      ExtendedAliasKeyManager extendedAliasKeyManager0 = new ExtendedAliasKeyManager((KeyManager) null, "\r\n");
      AliasKeyManager aliasKeyManager0 = new AliasKeyManager(extendedAliasKeyManager0, "\r\n");
      iMAPSClient0.setKeyManager(aliasKeyManager0);
      assertEquals(993, iMAPSClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient(true);
      // Undeclared exception!
      try { 
        iMAPSClient0._connectAction_();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      iMAPSClient0.getTrustManager();
      assertEquals(993, iMAPSClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      iMAPSClient0.setTrustManager((TrustManager) null);
      assertEquals(993, iMAPSClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      IMAPSClient iMAPSClient0 = new IMAPSClient(sSLContext0);
      iMAPSClient0.isEndpointCheckingEnabled();
      assertEquals(993, iMAPSClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      String[] stringArray0 = iMAPSClient0.getReplyStrings();
      iMAPSClient0.setEnabledProtocols(stringArray0);
      assertEquals(993, iMAPSClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      String[] stringArray0 = new String[10];
      iMAPSClient0.setEnabledCipherSuites(stringArray0);
      assertEquals(993, iMAPSClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      IMAPSClient iMAPSClient0 = new IMAPSClient(false, sSLContext0);
      assertEquals(993, iMAPSClient0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IMAPSClient iMAPSClient0 = new IMAPSClient();
      iMAPSClient0.setHostnameVerifier((HostnameVerifier) null);
      assertEquals(993, iMAPSClient0.getDefaultPort());
  }
}
