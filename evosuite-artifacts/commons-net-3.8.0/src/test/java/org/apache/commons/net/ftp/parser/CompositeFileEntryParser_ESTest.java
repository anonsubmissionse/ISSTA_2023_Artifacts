/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 21:07:49 GMT 2022
 */

package org.apache.commons.net.ftp.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.net.ftp.FTPClientConfig;
import org.apache.commons.net.ftp.FTPFile;
import org.apache.commons.net.ftp.FTPFileEntryParser;
import org.apache.commons.net.ftp.parser.CompositeFileEntryParser;
import org.apache.commons.net.ftp.parser.MLSxEntryParser;
import org.apache.commons.net.ftp.parser.UnixFTPEntryParser;
import org.apache.commons.net.ftp.parser.VMSFTPEntryParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CompositeFileEntryParser_ESTest extends CompositeFileEntryParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FTPFileEntryParser[] fTPFileEntryParserArray0 = new FTPFileEntryParser[1];
      FTPClientConfig fTPClientConfig0 = UnixFTPEntryParser.NUMERIC_DATE_CONFIG;
      VMSFTPEntryParser vMSFTPEntryParser0 = new VMSFTPEntryParser(fTPClientConfig0);
      fTPFileEntryParserArray0[0] = (FTPFileEntryParser) vMSFTPEntryParser0;
      vMSFTPEntryParser0.setRegex("AS/400");
      CompositeFileEntryParser compositeFileEntryParser0 = new CompositeFileEntryParser(fTPFileEntryParserArray0);
      // Undeclared exception!
      try { 
        compositeFileEntryParser0.parseFTPEntry("AS/400");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // No group 1
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FTPFileEntryParser[] fTPFileEntryParserArray0 = new FTPFileEntryParser[1];
      MLSxEntryParser mLSxEntryParser0 = MLSxEntryParser.getInstance();
      fTPFileEntryParserArray0[0] = (FTPFileEntryParser) mLSxEntryParser0;
      CompositeFileEntryParser compositeFileEntryParser0 = new CompositeFileEntryParser(fTPFileEntryParserArray0);
      FTPFile fTPFile0 = compositeFileEntryParser0.parseFTPEntry("TYPE: L8");
      assertNull(fTPFile0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FTPFileEntryParser[] fTPFileEntryParserArray0 = new FTPFileEntryParser[1];
      MLSxEntryParser mLSxEntryParser0 = MLSxEntryParser.getInstance();
      fTPFileEntryParserArray0[0] = (FTPFileEntryParser) mLSxEntryParser0;
      CompositeFileEntryParser compositeFileEntryParser0 = new CompositeFileEntryParser(fTPFileEntryParserArray0);
      compositeFileEntryParser0.parseFTPEntry(" */gjN*H");
      FTPFile fTPFile0 = compositeFileEntryParser0.parseFTPEntry(" */gjN*H");
      assertEquals(0, FTPFile.USER_ACCESS);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FTPFileEntryParser[] fTPFileEntryParserArray0 = new FTPFileEntryParser[1];
      MLSxEntryParser mLSxEntryParser0 = MLSxEntryParser.getInstance();
      fTPFileEntryParserArray0[0] = (FTPFileEntryParser) mLSxEntryParser0;
      CompositeFileEntryParser compositeFileEntryParser0 = new CompositeFileEntryParser(fTPFileEntryParserArray0);
      compositeFileEntryParser0.parseFTPEntry(" */gjN*H");
      FTPFile fTPFile0 = compositeFileEntryParser0.parseFTPEntry("MVS");
      assertNull(fTPFile0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CompositeFileEntryParser compositeFileEntryParser0 = new CompositeFileEntryParser((FTPFileEntryParser[]) null);
      // Undeclared exception!
      try { 
        compositeFileEntryParser0.parseFTPEntry("9:fZ!5o?R;^KvhG");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.ftp.parser.CompositeFileEntryParser", e);
      }
  }
}
