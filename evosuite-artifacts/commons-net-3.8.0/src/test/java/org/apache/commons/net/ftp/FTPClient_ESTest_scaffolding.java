/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Oct 10 20:52:01 GMT 2022
 */

package org.apache.commons.net.ftp;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class FTPClient_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.net.ftp.FTPClient"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/commons-net-3.8.0"); 
    java.lang.System.setProperty("user.home", "/home/ISSTA_USER"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "ISSTA_USER"); 
    java.lang.System.setProperty("user.timezone", "America/New_York"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FTPClient_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.commons.io.filefilter.IOFileFilter",
      "org.apache.commons.net.ftp.FTPConnectionClosedException",
      "org.apache.commons.net.ftp.FTPCommand",
      "org.apache.commons.net.ftp.FTP",
      "org.apache.commons.net.ftp.FTPClient$HostnameResolver",
      "org.apache.commons.net.io.SocketInputStream",
      "org.apache.commons.net.ProtocolCommandSupport",
      "org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory",
      "org.apache.commons.net.ftp.FTPFileFilters",
      "org.apache.commons.net.ftp.FTPFileFilters$1",
      "org.apache.commons.net.ftp.FTPFileEntryParser",
      "org.apache.commons.net.ftp.FTPFileFilters$3",
      "org.apache.commons.net.ftp.parser.MVSFTPEntryParser",
      "org.apache.commons.net.ftp.FTPCmd",
      "org.apache.commons.net.ftp.FTPFileFilters$2",
      "org.apache.commons.net.ftp.parser.FTPTimestampParser",
      "org.apache.commons.net.util.NetConstants",
      "org.apache.commons.net.PrintCommandListener",
      "org.apache.commons.net.ftp.FTPClient$PropertiesSingleton",
      "org.apache.commons.net.ftp.parser.ParserInitializationException",
      "org.apache.commons.net.ftp.FTPClient",
      "org.apache.commons.net.ftp.FTPClientConfig",
      "org.apache.commons.io.filefilter.NotFileFilter",
      "org.apache.commons.net.DefaultSocketFactory",
      "org.apache.commons.net.ftp.parser.UnixFTPEntryParser",
      "org.apache.commons.net.io.ToNetASCIIOutputStream",
      "org.apache.commons.net.ftp.parser.OS2FTPEntryParser",
      "org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory",
      "org.apache.commons.net.io.CopyStreamEvent",
      "org.apache.commons.net.io.SocketOutputStream",
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "org.apache.commons.net.ftp.FTPFileEntryParserImpl",
      "org.apache.commons.net.ftp.Configurable",
      "org.apache.commons.net.ftp.parser.NTFTPEntryParser",
      "org.apache.commons.net.ProtocolCommandListener",
      "org.apache.commons.net.ftp.FTPFile",
      "org.apache.commons.net.io.FromNetASCIIInputStream",
      "org.apache.commons.net.io.CopyStreamAdapter",
      "org.apache.commons.net.ftp.parser.CompositeFileEntryParser",
      "org.apache.commons.net.ftp.FTPListParseEngine",
      "org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl",
      "org.apache.commons.net.ftp.FTPClient$CSL",
      "org.apache.commons.net.MalformedServerReplyException",
      "org.apache.commons.net.ftp.parser.VMSFTPEntryParser",
      "org.apache.commons.net.SocketClient",
      "org.apache.commons.net.ftp.FTPClient$NatServerResolverImpl",
      "org.apache.commons.net.ftp.parser.ConfigurableFTPFileEntryParserImpl",
      "org.apache.commons.net.ftp.parser.OS400FTPEntryParser",
      "org.apache.commons.net.ftp.FTPFileFilter",
      "org.apache.commons.net.ftp.parser.FTPTimestampParserImpl",
      "org.apache.commons.net.ftp.parser.MLSxEntryParser",
      "org.apache.commons.net.ftp.parser.NetwareFTPEntryParser",
      "org.apache.commons.net.ProtocolCommandEvent",
      "org.apache.commons.net.io.CRLFLineReader",
      "org.apache.commons.net.util.ListenerList",
      "org.apache.commons.net.ftp.parser.VMSVersioningFTPEntryParser",
      "org.apache.commons.io.filefilter.CanWriteFileFilter",
      "org.apache.commons.net.io.CopyStreamListener"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.util.Enumeration", false, FTPClient_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.apache.commons.net.ftp.FTPFileFilter", false, FTPClient_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FTPClient_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.commons.net.SocketClient",
      "org.apache.commons.net.ftp.FTP",
      "org.apache.commons.net.ftp.FTPClient",
      "org.apache.commons.net.ftp.FTPClient$NatServerResolverImpl",
      "org.apache.commons.net.ftp.FTPClient$CSL",
      "org.apache.commons.net.ftp.FTPClient$PropertiesSingleton",
      "org.apache.commons.net.ftp.FTPCommand",
      "org.apache.commons.net.ftp.FTPCmd",
      "org.apache.commons.net.util.NetConstants",
      "org.apache.commons.net.ftp.FTPFileEntryParserImpl",
      "org.apache.commons.net.ftp.parser.MLSxEntryParser",
      "org.apache.commons.net.ftp.FTPFileFilters$1",
      "org.apache.commons.net.ftp.FTPFileFilters$2",
      "org.apache.commons.net.ftp.FTPFileFilters$3",
      "org.apache.commons.net.ftp.FTPFileFilters",
      "org.apache.commons.net.ProtocolCommandSupport",
      "org.apache.commons.net.util.ListenerList",
      "org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory",
      "org.apache.commons.net.ftp.FTPClientConfig",
      "org.apache.commons.net.io.CopyStreamAdapter",
      "org.apache.commons.net.PrintCommandListener",
      "org.apache.commons.net.DefaultSocketFactory",
      "org.apache.commons.net.MalformedServerReplyException",
      "org.apache.commons.net.ftp.parser.ParserInitializationException",
      "org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl",
      "org.apache.commons.net.ftp.parser.ConfigurableFTPFileEntryParserImpl",
      "org.apache.commons.net.ftp.parser.UnixFTPEntryParser",
      "org.apache.commons.net.ftp.parser.FTPTimestampParserImpl",
      "org.apache.commons.net.ftp.parser.CompositeFileEntryParser",
      "org.apache.commons.net.ftp.parser.NTFTPEntryParser",
      "org.apache.commons.net.ftp.parser.VMSFTPEntryParser",
      "org.apache.commons.net.ftp.parser.VMSVersioningFTPEntryParser",
      "org.apache.commons.net.ProtocolCommandEvent",
      "org.apache.commons.net.ftp.parser.MVSFTPEntryParser",
      "org.apache.commons.net.ftp.parser.OS400FTPEntryParser",
      "org.apache.commons.net.ftp.parser.OS2FTPEntryParser",
      "org.apache.commons.net.ftp.parser.NetwareFTPEntryParser",
      "org.apache.commons.net.io.CopyStreamEvent",
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "org.apache.commons.io.filefilter.NotFileFilter",
      "org.apache.commons.io.filefilter.CanWriteFileFilter",
      "org.apache.commons.net.ftp.FTPListParseEngine"
    );
  }
}
