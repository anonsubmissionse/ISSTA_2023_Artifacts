/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 20:47:39 GMT 2022
 */

package org.apache.commons.net.ntp;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.net.ntp.NtpUtils;
import org.apache.commons.net.ntp.NtpV3Impl;
import org.apache.commons.net.ntp.NtpV3Packet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NtpUtils_ESTest extends NtpUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = NtpUtils.getHostAddress((-79));
      assertEquals("255.255.255.177", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = NtpUtils.getModeName((-1629));
      assertEquals("Unknown", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = NtpUtils.getModeName(7);
      assertEquals("Private", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = NtpUtils.getModeName(6);
      assertEquals("Control", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = NtpUtils.getModeName(5);
      assertEquals("Broadcast", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = NtpUtils.getModeName(4);
      assertEquals("Server", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = NtpUtils.getModeName(3);
      assertEquals("Client", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = NtpUtils.getModeName(2);
      assertEquals("Symmetric Passive", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = NtpUtils.getModeName(1);
      assertEquals("Symmetric Active", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = NtpUtils.getModeName(0);
      assertEquals("Reserved", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = NtpUtils.getReferenceClock((NtpV3Packet) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      String string0 = NtpUtils.getReferenceClock(ntpV3Impl0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NtpV3Impl ntpV3Impl0 = new NtpV3Impl();
      String string0 = NtpUtils.getRefAddress(ntpV3Impl0);
      assertEquals("0.0.0.0", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NtpUtils ntpUtils0 = new NtpUtils();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = NtpUtils.getRefAddress((NtpV3Packet) null);
      assertEquals("0.0.0.0", string0);
  }
}
