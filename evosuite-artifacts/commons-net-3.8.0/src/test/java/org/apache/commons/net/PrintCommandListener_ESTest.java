/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 21:02:05 GMT 2022
 */

package org.apache.commons.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.net.URI;
import org.apache.commons.net.PrintCommandListener;
import org.apache.commons.net.ProtocolCommandEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PrintCommandListener_ESTest extends PrintCommandListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintStream0, false, 'e', false);
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(mockPrintStream0, 59, "\r\n");
      printCommandListener0.protocolCommandSent(protocolCommandEvent0);
      assertEquals(2L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("SYSTEM");
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintStream0, true, 'a');
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("eL@Kt{$fBA0F");
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintStream0, true);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("G~}@V8~q*f");
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "org.apache.commons.io.filefilter.DelegateFileFilter");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintWriter0);
      // Undeclared exception!
      try { 
        printCommandListener0.protocolReplyReceived((ProtocolCommandEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.PrintCommandListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.io.filefilter.AgeFileFilter", "org.apache.commons.io.filefilter.AgeFileFilter");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintWriter0, true, 'G', true);
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent("< ", "LOGIN", "");
      // Undeclared exception!
      try { 
        printCommandListener0.protocolCommandSent(protocolCommandEvent0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PrintCommandListener printCommandListener0 = null;
      try {
        printCommandListener0 = new PrintCommandListener((PrintStream) null, false, '-');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PrintCommandListener printCommandListener0 = null;
      try {
        printCommandListener0 = new PrintCommandListener((PrintStream) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PrintCommandListener printCommandListener0 = null;
      try {
        printCommandListener0 = new PrintCommandListener((PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      File file0 = MockFile.createTempFile("login", "login");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintWriter0, true, '(');
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.io.filefilter.AgeFileFilter", "org.apache.commons.io.filefilter.AgeFileFilter");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintWriter0, true, 'G', true);
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(printCommandListener0, 'G', "< ");
      printCommandListener0.protocolReplyReceived(protocolCommandEvent0);
      assertEquals(4L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.io.filefilter.AgeFileFilter", "org.apache.commons.io.filefilter.AgeFileFilter");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintWriter0, true, 'G', true);
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(printCommandListener0, 'G', "< ");
      printCommandListener0.protocolCommandSent(protocolCommandEvent0);
      assertEquals(4L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PrintCommandListener printCommandListener0 = new PrintCommandListener((PrintWriter) null, true);
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "nTll", "nTll");
      // Undeclared exception!
      try { 
        printCommandListener0.protocolCommandSent(protocolCommandEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.PrintCommandListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.io.filefilter.AgeFile7ilter", "org.apache.commons.io.filefilter.AgeFile7ilter");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintWriter0, true, 'G', true);
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent("org.apache.commons.io.filefilter.AgeFile7ilter", "USER", "org.apache.commons.io.filefilter.AgeFile7ilter");
      printCommandListener0.protocolCommandSent(protocolCommandEvent0);
      assertEquals(15L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintStream0, false, 'b', false);
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(mockPrintStream0, (-3414), "];p\r\n");
      printCommandListener0.protocolCommandSent(protocolCommandEvent0);
      assertEquals(6L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("LOGIN", "The array of prefixes must not be null");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintStream0, true, '4');
      Object object0 = new Object();
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(object0, "LOGIN", "The array of prefixes must not be null");
      printCommandListener0.protocolCommandSent(protocolCommandEvent0);
      assertEquals(13L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintStream0, true);
      ProtocolCommandEvent protocolCommandEvent0 = new ProtocolCommandEvent(mockPrintStream0, "PASS", "PASS");
      printCommandListener0.protocolCommandSent(protocolCommandEvent0);
      assertEquals(13, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PrintCommandListener printCommandListener0 = null;
      try {
        printCommandListener0 = new PrintCommandListener((PrintStream) null, true, '&', true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }
}
