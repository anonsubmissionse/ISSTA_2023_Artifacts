/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 21:11:58 GMT 2022
 */

package org.apache.commons.net.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.net.io.CopyStreamEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CopyStreamEvent_ESTest extends CopyStreamEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      CopyStreamEvent copyStreamEvent0 = new CopyStreamEvent(object0, 0L, (-2506), (-2506));
      long long0 = copyStreamEvent0.getTotalBytesTransferred();
      assertEquals((-2506), copyStreamEvent0.getBytesTransferred());
      assertEquals(0L, long0);
      assertEquals((-2506L), copyStreamEvent0.getStreamSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CopyStreamEvent copyStreamEvent0 = new CopyStreamEvent("org.apache.commons.net.io.CopyStreamEvent", (-1L), (-3064), (-1L));
      long long0 = copyStreamEvent0.getTotalBytesTransferred();
      assertEquals((-1L), long0);
      assertEquals((-3064), copyStreamEvent0.getBytesTransferred());
      assertEquals((-1L), copyStreamEvent0.getStreamSize());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = new Object();
      CopyStreamEvent copyStreamEvent0 = new CopyStreamEvent(object0, 1L, (-1), 0L);
      long long0 = copyStreamEvent0.getStreamSize();
      assertEquals(1L, copyStreamEvent0.getTotalBytesTransferred());
      assertEquals((-1), copyStreamEvent0.getBytesTransferred());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      CopyStreamEvent copyStreamEvent0 = new CopyStreamEvent(object0, 0L, (-2506), (-2506));
      long long0 = copyStreamEvent0.getStreamSize();
      assertEquals(0L, copyStreamEvent0.getTotalBytesTransferred());
      assertEquals((-2506L), long0);
      assertEquals((-2506), copyStreamEvent0.getBytesTransferred());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      CopyStreamEvent copyStreamEvent0 = new CopyStreamEvent(object0, 0L, 0, 0);
      int int0 = copyStreamEvent0.getBytesTransferred();
      assertEquals(0, int0);
      assertEquals(0L, copyStreamEvent0.getTotalBytesTransferred());
      assertEquals(0L, copyStreamEvent0.getStreamSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object object0 = new Object();
      CopyStreamEvent copyStreamEvent0 = new CopyStreamEvent(object0, (-1099L), (-421), (-1099L));
      int int0 = copyStreamEvent0.getBytesTransferred();
      assertEquals((-1099L), copyStreamEvent0.getStreamSize());
      assertEquals((-1099L), copyStreamEvent0.getTotalBytesTransferred());
      assertEquals((-421), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CopyStreamEvent copyStreamEvent0 = null;
      try {
        copyStreamEvent0 = new CopyStreamEvent((Object) null, 971L, 1, 2828L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object object0 = new Object();
      CopyStreamEvent copyStreamEvent0 = new CopyStreamEvent(object0, 1605L, 3282, 1605L);
      int int0 = copyStreamEvent0.getBytesTransferred();
      assertEquals(1605L, copyStreamEvent0.getTotalBytesTransferred());
      assertEquals(3282, int0);
      assertEquals(1605L, copyStreamEvent0.getStreamSize());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      CopyStreamEvent copyStreamEvent0 = new CopyStreamEvent(object0, 1605L, 3282, 1605L);
      copyStreamEvent0.toString();
      assertEquals(1605L, copyStreamEvent0.getStreamSize());
      assertEquals(1605L, copyStreamEvent0.getTotalBytesTransferred());
      assertEquals(3282, copyStreamEvent0.getBytesTransferred());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      CopyStreamEvent copyStreamEvent0 = new CopyStreamEvent(object0, 1605L, 3282, 1605L);
      long long0 = copyStreamEvent0.getStreamSize();
      assertEquals(1605L, long0);
      assertEquals(1605L, copyStreamEvent0.getTotalBytesTransferred());
      assertEquals(3282, copyStreamEvent0.getBytesTransferred());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      CopyStreamEvent copyStreamEvent0 = new CopyStreamEvent(object0, 1605L, 3282, 1605L);
      long long0 = copyStreamEvent0.getTotalBytesTransferred();
      assertEquals(1605L, copyStreamEvent0.getStreamSize());
      assertEquals(1605L, long0);
      assertEquals(3282, copyStreamEvent0.getBytesTransferred());
  }
}
