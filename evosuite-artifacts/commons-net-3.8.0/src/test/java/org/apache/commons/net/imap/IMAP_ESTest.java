/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 20:37:40 GMT 2022
 */

package org.apache.commons.net.imap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.EOFException;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.StringReader;
import java.io.StringWriter;
import org.apache.commons.net.PrintCommandListener;
import org.apache.commons.net.imap.IMAP;
import org.apache.commons.net.imap.IMAPCommand;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IMAP_ESTest extends IMAP_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      iMAP0.setChunkListener((IMAP.IMAPChunkListener) null);
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      MockFile mockFile0 = new MockFile("f<)p#,x{-if;^rzz(t@", "\r\n");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintCommandListener printCommandListener0 = new PrintCommandListener(mockPrintWriter0, false, 'h');
      iMAP0.addProtocolCommandListener(printCommandListener0);
      iMAP0.fireReplyReceived(1978, "f<)p#,x{-if;^rzz(t@");
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      IMAP.IMAPState iMAP_IMAPState0 = IMAP.IMAPState.AUTH_STATE;
      iMAP0.setState(iMAP_IMAPState0);
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      String string0 = iMAP0.generateCommandID();
      assertEquals("AAAA", string0);
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      try { 
        iMAP0.sendData("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Received unexpected IMAP protocol response from server: ''.
         //
         verifyException("org.apache.commons.net.imap.IMAPReply", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringWriter stringWriter0 = new StringWriter(0);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      bufferedWriter0.close();
      iMAP0.__writer = bufferedWriter0;
      try { 
        iMAP0.sendData("<");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      IMAPCommand iMAPCommand0 = IMAPCommand.RENAME;
      try { 
        iMAP0.sendCommand(iMAPCommand0, "\"");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Received unexpected IMAP protocol response from server: ''.
         //
         verifyException("org.apache.commons.net.imap.IMAPReply", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringWriter stringWriter0 = new StringWriter(0);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      bufferedWriter0.close();
      iMAP0.__writer = bufferedWriter0;
      IMAPCommand iMAPCommand0 = IMAPCommand.EXPUNGE;
      try { 
        iMAP0.sendCommand(iMAPCommand0, "\"lr&Zt");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      bufferedReader0.readLine();
      IMAPCommand iMAPCommand0 = IMAPCommand.UNSUBSCRIBE;
      try { 
        iMAP0.sendCommand(iMAPCommand0, (String) null);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // Connection closed without indication.
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      IMAPCommand iMAPCommand0 = IMAPCommand.EXAMINE;
      try { 
        iMAP0.sendCommand(iMAPCommand0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Received unexpected IMAP protocol response from server: ''.
         //
         verifyException("org.apache.commons.net.imap.IMAPReply", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      PipedWriter pipedWriter0 = new PipedWriter();
      BufferedWriter bufferedWriter0 = new BufferedWriter(pipedWriter0);
      iMAP0.__writer = bufferedWriter0;
      IMAPCommand iMAPCommand0 = IMAPCommand.FETCH;
      try { 
        iMAP0.sendCommand(iMAPCommand0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      bufferedReader0.readLine();
      IMAPCommand iMAPCommand0 = IMAPCommand.XOAUTH;
      try { 
        iMAP0.sendCommand(iMAPCommand0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // Connection closed without indication.
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      try { 
        iMAP0.sendCommand("\r\n", "NOT_AUTH_STAE");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Received unexpected IMAP protocol response from server: ''.
         //
         verifyException("org.apache.commons.net.imap.IMAPReply", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      bufferedWriter0.close();
      iMAP0.__writer = bufferedWriter0;
      try { 
        iMAP0.sendCommand("AAAA", "AAAA");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      bufferedReader0.readLine();
      try { 
        iMAP0.sendCommand("", "\"#Q^>yus&*U");
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // Connection closed without indication.
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      try { 
        iMAP0.sendCommand("NOT_AUTH_STATE");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Received unexpected IMAP protocol response from server: ''.
         //
         verifyException("org.apache.commons.net.imap.IMAPReply", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringWriter stringWriter0 = new StringWriter(0);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      bufferedWriter0.close();
      iMAP0.__writer = bufferedWriter0;
      try { 
        iMAP0.sendCommand("NOT_AUTH_STATE");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      stringReader0.skip(143);
      iMAP0.__writer = bufferedWriter0;
      try { 
        iMAP0.sendCommand("NOT_AUTH_STATE");
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // Connection closed without indication.
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      IMAPCommand iMAPCommand0 = IMAPCommand.CHECK;
      try { 
        iMAP0.doCommand(iMAPCommand0, "G8,Ct7&/b_-lZm~/}q");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Received unexpected IMAP protocol response from server: ''.
         //
         verifyException("org.apache.commons.net.imap.IMAPReply", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("\r\n");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      IMAPCommand iMAPCommand0 = IMAPCommand.XOAUTH;
      MockFileWriter mockFileWriter0 = new MockFileWriter("\r\n");
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockFileWriter0);
      iMAP0.__writer = bufferedWriter0;
      try { 
        iMAP0.doCommand(iMAPCommand0, "$VLUES");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      bufferedReader0.readLine();
      IMAPCommand iMAPCommand0 = IMAPCommand.XOAUTH;
      try { 
        iMAP0.doCommand(iMAPCommand0, "AAAA");
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // Connection closed without indication.
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      stringReader0.close();
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      IMAPCommand iMAPCommand0 = IMAPCommand.LIST;
      try { 
        iMAP0.doCommand(iMAPCommand0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      bufferedReader0.readLine();
      IMAPCommand iMAPCommand0 = IMAPCommand.XOAUTH;
      try { 
        iMAP0.doCommand(iMAPCommand0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // Connection closed without indication.
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      // Undeclared exception!
      try { 
        iMAP0._connectAction_();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      iMAP0.getReplyString();
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      // Undeclared exception!
      try { 
        iMAP0.sendCommand("AszH7)Z_*_", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      IMAPCommand iMAPCommand0 = IMAPCommand.RENAME;
      // Undeclared exception!
      try { 
        iMAP0.sendCommand(iMAPCommand0, "\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = IMAP.quoteMailboxName("Pattern is missing");
      assertEquals("\"Pattern is missing\"", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = IMAP.quoteMailboxName("\"L!");
      assertEquals("\"L!", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = IMAP.quoteMailboxName("\"\"");
      assertEquals("\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = IMAP.quoteMailboxName("f");
      assertEquals("f", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = IMAP.quoteMailboxName((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = IMAP.quoteMailboxName("");
      assertNotNull(string0);
      assertEquals("\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      PrintCommandListener printCommandListener0 = new PrintCommandListener((PrintWriter) null, true, 'h');
      iMAP0.addProtocolCommandListener(printCommandListener0);
      // Undeclared exception!
      try { 
        iMAP0.fireReplyReceived(143, "\r\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.PrintCommandListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      iMAP0.fireReplyReceived(143, "\r\n");
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      bufferedReader0.readLine();
      try { 
        iMAP0.sendData("\"3!\"");
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // Connection closed without indication.
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringReader stringReader0 = new StringReader("\r\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      iMAP0._reader = bufferedReader0;
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      IMAPCommand iMAPCommand0 = IMAPCommand.AUTHENTICATE;
      try { 
        iMAP0.doCommand(iMAPCommand0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Received unexpected IMAP protocol response from server: ''.
         //
         verifyException("org.apache.commons.net.imap.IMAPReply", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      iMAP0.getReplyStrings();
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      IMAPCommand iMAPCommand0 = IMAPCommand.UNSUBSCRIBE;
      // Undeclared exception!
      try { 
        iMAP0.doCommand(iMAPCommand0, "DELETE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      // Undeclared exception!
      try { 
        iMAP0.sendData("\"3!\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      IMAPCommand iMAPCommand0 = IMAPCommand.XOAUTH;
      // Undeclared exception!
      try { 
        iMAP0.doCommand(iMAPCommand0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      // Undeclared exception!
      try { 
        iMAP0.sendCommand("NOT_AUTH_STATE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      StringWriter stringWriter0 = new StringWriter(143);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 143);
      iMAP0.__writer = bufferedWriter0;
      IMAPCommand iMAPCommand0 = IMAPCommand.XOAUTH;
      // Undeclared exception!
      try { 
        iMAP0.sendCommand(iMAPCommand0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.imap.IMAP", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      iMAP0.getState();
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      iMAP0.disconnect();
      assertEquals(143, iMAP0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IMAP iMAP0 = new IMAP();
      boolean boolean0 = iMAP0.TRUE_CHUNK_LISTENER.chunkReceived(iMAP0);
      assertTrue(boolean0);
      assertEquals(143, iMAP0.getDefaultPort());
  }
}
