/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 00:53:09 GMT 2022
 */

package org.apache.commons.configuration2.io;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.File;
import java.net.URL;
import java.net.URLStreamHandler;
import org.apache.commons.configuration2.io.FileUtils;
import org.apache.commons.vfs2.provider.DefaultURLStreamHandler;
import org.apache.commons.vfs2.provider.VfsComponentContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileUtils_ESTest extends FileUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = FileUtils.decodeUrl("D^N%eE$w%>9+v!L-");
      assertEquals("D^N\uFFFD$w%>9+v!L-", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = FileUtils.decodeUrl("%I6dw/<4*Bh");
      assertEquals("%I6dw/<4*Bh", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URL uRL1 = MockURL.URL(uRL0, "[a-z]+://.*");
      File file0 = FileUtils.toFile(uRL1);
      assertNotNull(file0);
      assertEquals(".*", file0.getName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/fake/but/wellformed/url");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = FileUtils.toFile(uRL0);
      assertTrue(file0.canRead());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URL uRL0 = MockURL.URL("file", "file", 3087, ":(?:[^/]+)@");
      File file0 = FileUtils.toFile(uRL0);
      assertEquals("]+)@", file0.getName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/fake/but/wellformed/url");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(arfz^#u");
      File file0 = FileUtils.toFile(uRL0);
      assertEquals(0L, file0.getTotalSpace());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = FileUtils.decodeUrl("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = FileUtils.decodeUrl("DX%eaNM&ys%)-");
      assertEquals("DX\uFFFDNM&ys%)-", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = FileUtils.decodeUrl("\u0006(7]Rf#a&A%1d%");
      assertEquals("\u0006(7]Rf#a&A\u001D%", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = FileUtils.decodeUrl("sF Vr%e6");
      assertEquals("sF Vr\uFFFD", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = FileUtils.decodeUrl((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultURLStreamHandler defaultURLStreamHandler0 = new DefaultURLStreamHandler((VfsComponentContext) null);
      URL uRL0 = MockURL.URL("EkjF", "sF Vr\uFFFD", 3, "sF Vr\uFFFD", (URLStreamHandler) defaultURLStreamHandler0);
      File file0 = FileUtils.toFile(uRL0);
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      File file0 = FileUtils.toFile((URL) null);
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileUtils fileUtils0 = new FileUtils();
  }
}
