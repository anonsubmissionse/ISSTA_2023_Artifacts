/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 01:11:55 GMT 2022
 */

package org.apache.commons.configuration2.interpol;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.configuration2.interpol.StringLookupAdapter;
import org.apache.commons.text.lookup.StringLookup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StringLookupAdapter_ESTest extends StringLookupAdapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringLookup stringLookup0 = mock(StringLookup.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(stringLookup0).lookup(anyString());
      StringLookupAdapter stringLookupAdapter0 = new StringLookupAdapter(stringLookup0);
      Object object0 = stringLookupAdapter0.lookup("");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringLookupAdapter stringLookupAdapter0 = null;
      try {
        stringLookupAdapter0 = new StringLookupAdapter((StringLookup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // stringLookup
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringLookup stringLookup0 = mock(StringLookup.class, new ViolatedAssumptionAnswer());
      doReturn("").when(stringLookup0).lookup(anyString());
      StringLookupAdapter stringLookupAdapter0 = new StringLookupAdapter(stringLookup0);
      Object object0 = stringLookupAdapter0.lookup("");
      assertEquals("", object0);
  }
}
