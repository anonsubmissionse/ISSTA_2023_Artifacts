/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 00:40:51 GMT 2022
 */

package org.apache.commons.configuration2.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import org.apache.commons.configuration2.convert.LegacyListDelimiterHandler;
import org.apache.commons.configuration2.convert.ListDelimiterHandler;
import org.apache.commons.configuration2.convert.ValueTransformer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LegacyListDelimiterHandler_ESTest extends LegacyListDelimiterHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('{');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("\\");
      ValueTransformer valueTransformer0 = ListDelimiterHandler.NOOP_TRANSFORMER;
      Object object0 = legacyListDelimiterHandler0.escapeList(linkedList0, valueTransformer0);
      assertNotNull(object0);
      assertEquals('{', legacyListDelimiterHandler0.getDelimiter());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('l');
      Collection<String> collection0 = legacyListDelimiterHandler0.splitString("q|T7x,+Pil!d-\n\"8P)", false);
      assertFalse(collection0.contains("q|T7x,+Pil!d-\n\"8P)"));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('F');
      Collection<String> collection0 = legacyListDelimiterHandler0.split("FS,zAmJ", false);
      assertFalse(collection0.contains("FS,zAmJ"));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('%');
      char char0 = legacyListDelimiterHandler0.getDelimiter();
      assertEquals('%', char0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('0');
      char char0 = legacyListDelimiterHandler0.getDelimiter();
      assertEquals('0', char0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('U');
      ValueTransformer valueTransformer0 = ListDelimiterHandler.NOOP_TRANSFORMER;
      legacyListDelimiterHandler0.escapeValue("", false, valueTransformer0);
      assertEquals('U', legacyListDelimiterHandler0.getDelimiter());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('F');
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      legacyListDelimiterHandler0.escapeBackslashs(linkedList0, false);
      assertEquals('F', legacyListDelimiterHandler0.getDelimiter());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('O');
      legacyListDelimiterHandler0.escapeBackslashs("", false);
      assertEquals('O', legacyListDelimiterHandler0.getDelimiter());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('y');
      // Undeclared exception!
      try { 
        legacyListDelimiterHandler0.splitString((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.convert.LegacyListDelimiterHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('[');
      // Undeclared exception!
      try { 
        legacyListDelimiterHandler0.escapeValue((Object) null, false, (ValueTransformer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.convert.LegacyListDelimiterHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('E');
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      linkedList0.add(integer0);
      // Undeclared exception!
      try { 
        legacyListDelimiterHandler0.escapeList(linkedList0, (ValueTransformer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.convert.LegacyListDelimiterHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('f');
      // Undeclared exception!
      try { 
        legacyListDelimiterHandler0.escape((Object) null, (ValueTransformer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.convert.LegacyListDelimiterHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler(';');
      ValueTransformer valueTransformer0 = ListDelimiterHandler.NOOP_TRANSFORMER;
      Collection<String> collection0 = legacyListDelimiterHandler0.splitString("\\\\", false);
      String string0 = legacyListDelimiterHandler0.escapeValue(collection0, true, valueTransformer0);
      assertEquals(';', legacyListDelimiterHandler0.getDelimiter());
      assertEquals("[\\\\\\\\]", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('{');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("\\");
      linkedList0.add("org.apache.commons.configuration2.convert.LegacyListDelimiterHandler@1");
      ValueTransformer valueTransformer0 = ListDelimiterHandler.NOOP_TRANSFORMER;
      Object object0 = legacyListDelimiterHandler0.escapeList(linkedList0, valueTransformer0);
      assertFalse(linkedList0.contains(object0));
      assertEquals('{', legacyListDelimiterHandler0.getDelimiter());
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('y');
      char char0 = legacyListDelimiterHandler0.getDelimiter();
      assertEquals('y', char0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('\u0000');
      ValueTransformer valueTransformer0 = ListDelimiterHandler.NOOP_TRANSFORMER;
      legacyListDelimiterHandler0.escape(valueTransformer0, valueTransformer0);
      assertEquals('\u0000', legacyListDelimiterHandler0.getDelimiter());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('m');
      Collection<String> collection0 = legacyListDelimiterHandler0.splitString("org,apche.commons.cnfguration2.convertLegacyListelimiterHandler@1\\", true);
      assertFalse(collection0.contains("org,apche.commons.cnfguration2.convertLegacyListelimiterHandler@1\\"));
      assertEquals('m', legacyListDelimiterHandler0.getDelimiter());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('\\');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("\\");
      linkedList0.add("or.apahe.commonsconfguration2.convert.LegacyListDelimiterHandler@");
      ValueTransformer valueTransformer0 = ListDelimiterHandler.NOOP_TRANSFORMER;
      Object object0 = legacyListDelimiterHandler0.escapeList(linkedList0, valueTransformer0);
      assertEquals("\\\\\\\\\\or.apahe.commonsconfguration2.convert.LegacyListDelimiterHandler@", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('\u0016');
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.add((Object) linkedList0);
      linkedList1.add((Object) linkedList0);
      ValueTransformer valueTransformer0 = ListDelimiterHandler.NOOP_TRANSFORMER;
      Object object0 = legacyListDelimiterHandler0.escapeList(linkedList1, valueTransformer0);
      assertNotNull(object0);
      assertEquals("[]\u0016[]", object0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('y');
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ValueTransformer valueTransformer0 = ListDelimiterHandler.NOOP_TRANSFORMER;
      legacyListDelimiterHandler0.escapeList(linkedList0, valueTransformer0);
      assertEquals('y', legacyListDelimiterHandler0.getDelimiter());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LegacyListDelimiterHandler legacyListDelimiterHandler0 = new LegacyListDelimiterHandler('\u0016');
      legacyListDelimiterHandler0.escapeString("[]\u0016[]");
      assertEquals('\u0016', legacyListDelimiterHandler0.getDelimiter());
  }
}
