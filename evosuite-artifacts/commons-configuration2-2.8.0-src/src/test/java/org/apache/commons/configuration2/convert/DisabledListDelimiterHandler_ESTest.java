/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 01:10:32 GMT 2022
 */

package org.apache.commons.configuration2.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import org.apache.commons.configuration2.convert.DisabledListDelimiterHandler;
import org.apache.commons.configuration2.convert.ListDelimiterHandler;
import org.apache.commons.configuration2.convert.ValueTransformer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DisabledListDelimiterHandler_ESTest extends DisabledListDelimiterHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DisabledListDelimiterHandler disabledListDelimiterHandler0 = (DisabledListDelimiterHandler)DisabledListDelimiterHandler.INSTANCE;
      String string0 = disabledListDelimiterHandler0.escapeString("WebTestClient-Request-Id");
      assertEquals("WebTestClient-Request-Id", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DisabledListDelimiterHandler disabledListDelimiterHandler0 = new DisabledListDelimiterHandler();
      String string0 = disabledListDelimiterHandler0.escapeString("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DisabledListDelimiterHandler disabledListDelimiterHandler0 = new DisabledListDelimiterHandler();
      Collection<String> collection0 = disabledListDelimiterHandler0.splitString((String) null, false);
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DisabledListDelimiterHandler disabledListDelimiterHandler0 = new DisabledListDelimiterHandler();
      ValueTransformer valueTransformer0 = ListDelimiterHandler.NOOP_TRANSFORMER;
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        disabledListDelimiterHandler0.escapeList(linkedList0, valueTransformer0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Escaping lists is not supported!
         //
         verifyException("org.apache.commons.configuration2.convert.DisabledListDelimiterHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DisabledListDelimiterHandler disabledListDelimiterHandler0 = new DisabledListDelimiterHandler();
      String string0 = disabledListDelimiterHandler0.escapeString((String) null);
      assertNull(string0);
  }
}
