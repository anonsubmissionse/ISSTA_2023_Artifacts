/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 01:08:28 GMT 2022
 */

package org.apache.commons.configuration2.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.OutputStream;
import java.net.URI;
import java.net.URL;
import org.apache.commons.configuration2.io.ConfigurationLogger;
import org.apache.commons.configuration2.io.DefaultFileSystem;
import org.apache.commons.configuration2.io.FileOptionsProvider;
import org.apache.commons.configuration2.io.URLConnectionOptions;
import org.apache.commons.configuration2.io.VFSFileSystem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileSystem_ESTest extends FileSystem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      URL uRL0 = vFSFileSystem0.locateFromURL("z$0xBLCea=}A)nE", "z$0xBLCea=}A)nE");
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      URL uRL0 = vFSFileSystem0.locateFromURL("file:///media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/commons-configuration2-2.8.0-src/", "");
      assertEquals((-1), uRL0.getPort());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      String string0 = vFSFileSystem0.getPath((File) null, (URL) null, "The xray of ref%xes muet not be null", "1BDW6i");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      URL uRL0 = mockFile0.toURL();
      String string0 = vFSFileSystem0.getPath(mockFile0, uRL0, "# 44G[4}TN", "# 44G[4}TN");
      assertEquals("/tmp/foo.bar", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultFileSystem defaultFileSystem0 = new DefaultFileSystem();
      URL uRL0 = defaultFileSystem0.getURL("%+wF.", "");
      OutputStream outputStream0 = defaultFileSystem0.getOutputStream(uRL0);
      assertNotNull(outputStream0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      MockFile mockFile0 = new MockFile("Z\"XIt1zAN8Y7Zr");
      OutputStream outputStream0 = vFSFileSystem0.getOutputStream((File) mockFile0);
      assertNotNull(outputStream0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      String string0 = vFSFileSystem0.getFileName("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultFileSystem defaultFileSystem0 = new DefaultFileSystem();
      String string0 = defaultFileSystem0.getFileName("org.apache.log4j.helpers.DateTimeDateFormat");
      assertEquals("org.apache.log4j.helpers.DateTimeDateFormat", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultFileSystem defaultFileSystem0 = new DefaultFileSystem();
      String string0 = defaultFileSystem0.getBasePath((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultFileSystem defaultFileSystem0 = new DefaultFileSystem();
      String string0 = defaultFileSystem0.getBasePath("Q:Flrfc8s'n03X");
      assertEquals("file:///media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/commons-configuration2-2.8.0-src/", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      // Undeclared exception!
      try { 
        vFSFileSystem0.locateFromURL("file:///media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/commons-configuration2-2.8.0-src/", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.provider.UriParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      // Undeclared exception!
      try { 
        vFSFileSystem0.getURL(":4Qjcx/~ps@C", "anz_nk");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not parse basePath: :4Qjcx/~ps@C and fileName: anz_nk
         //
         verifyException("org.apache.commons.configuration2.io.VFSFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      // Undeclared exception!
      try { 
        vFSFileSystem0.getURL((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.provider.UriParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      // Undeclared exception!
      try { 
        vFSFileSystem0.getOutputStream((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      MockFile mockFile0 = new MockFile("+RfNq=5iDE!");
      vFSFileSystem0.getOutputStream((File) mockFile0);
      MockFile mockFile1 = new MockFile(mockFile0, "0dhw<ze*?f-]8s~");
      try { 
        vFSFileSystem0.getOutputStream((File) mockFile1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to save to file /media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/commons-configuration2-2.8.0-src/+RfNq=5iDE!/0dhw<ze*?f-]8s~
         //
         verifyException("org.apache.commons.configuration2.io.DefaultFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultFileSystem defaultFileSystem0 = new DefaultFileSystem();
      // Undeclared exception!
      try { 
        defaultFileSystem0.getOutputStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultFileSystem defaultFileSystem0 = new DefaultFileSystem();
      URLConnectionOptions uRLConnectionOptions0 = URLConnectionOptions.DEFAULT;
      try { 
        defaultFileSystem0.getInputStream((URL) null, uRLConnectionOptions0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to load the configuration from the URL null
         //
         verifyException("org.apache.commons.configuration2.io.DefaultFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      URL uRL0 = vFSFileSystem0.getURL("", "YOot+`a>Pgu2:nInQ/");
      try { 
        vFSFileSystem0.getInputStream(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // File not found
         //
         verifyException("org.apache.commons.configuration2.io.VFSFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      // Undeclared exception!
      try { 
        vFSFileSystem0.getInputStream((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      // Undeclared exception!
      try { 
        vFSFileSystem0.getFileName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.provider.UriParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      // Undeclared exception!
      try { 
        vFSFileSystem0.getBasePath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.provider.UriParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultFileSystem defaultFileSystem0 = new DefaultFileSystem();
      FileOptionsProvider fileOptionsProvider0 = defaultFileSystem0.getFileOptionsProvider();
      assertNull(fileOptionsProvider0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      vFSFileSystem0.setFileOptionsProvider((FileOptionsProvider) null);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      ConfigurationLogger configurationLogger0 = vFSFileSystem0.getLogger();
      vFSFileSystem0.setLogger(configurationLogger0);
      ConfigurationLogger configurationLogger1 = vFSFileSystem0.getLogger();
      assertSame(configurationLogger1, configurationLogger0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VFSFileSystem vFSFileSystem0 = new VFSFileSystem();
      URL uRL0 = vFSFileSystem0.getURL((String) null, "");
      try { 
        vFSFileSystem0.getOutputStream(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot save a configuration to a directory
         //
         verifyException("org.apache.commons.configuration2.io.VFSFileSystem", e);
      }
  }
}
