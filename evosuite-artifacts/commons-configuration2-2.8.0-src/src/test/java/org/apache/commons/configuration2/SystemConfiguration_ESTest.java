/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 12 01:06:29 GMT 2022
 */

package org.apache.commons.configuration2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Properties;
import javax.naming.CompoundName;
import oracle.ucp.jdbc.PoolDataSourceImpl;
import org.apache.commons.configuration2.CombinedConfiguration;
import org.apache.commons.configuration2.CompositeConfiguration;
import org.apache.commons.configuration2.Configuration;
import org.apache.commons.configuration2.DynamicCombinedConfiguration;
import org.apache.commons.configuration2.MapConfiguration;
import org.apache.commons.configuration2.SubnodeConfiguration;
import org.apache.commons.configuration2.SystemConfiguration;
import org.apache.commons.configuration2.tree.NodeSelector;
import org.apache.commons.configuration2.tree.OverrideCombiner;
import org.apache.commons.configuration2.tree.TrackedNodeModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SystemConfiguration_ESTest extends SystemConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SystemConfiguration systemConfiguration0 = new SystemConfiguration();
      Iterator<String> iterator0 = systemConfiguration0.getKeysInternal();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OverrideCombiner overrideCombiner0 = new OverrideCombiner();
      DynamicCombinedConfiguration dynamicCombinedConfiguration0 = new DynamicCombinedConfiguration(overrideCombiner0);
      NodeSelector nodeSelector0 = new NodeSelector("ys6SSDt");
      TrackedNodeModel trackedNodeModel0 = new TrackedNodeModel(dynamicCombinedConfiguration0, nodeSelector0, false);
      SubnodeConfiguration subnodeConfiguration0 = new SubnodeConfiguration(dynamicCombinedConfiguration0, trackedNodeModel0);
      // Undeclared exception!
      try { 
        SystemConfiguration.setSystemProperties((Configuration) subnodeConfiguration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No tracked node found: org.apache.commons.configuration2.tree.NodeSelector@15[keys=[ys6SSDt]]
         //
         verifyException("org.apache.commons.configuration2.tree.NodeTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      SystemConfiguration systemConfiguration0 = new SystemConfiguration();
      combinedConfiguration0.addConfiguration((Configuration) systemConfiguration0, "", ".xml");
      // Undeclared exception!
      SystemConfiguration.setSystemProperties((Configuration) combinedConfiguration0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemConfiguration.setSystemProperties((Configuration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.SystemConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CombinedConfiguration combinedConfiguration0 = new CombinedConfiguration();
      HashSet<SystemConfiguration> hashSet0 = new HashSet<SystemConfiguration>();
      hashSet0.add((SystemConfiguration) null);
      CompositeConfiguration compositeConfiguration0 = new CompositeConfiguration(combinedConfiguration0, hashSet0);
      // Undeclared exception!
      try { 
        SystemConfiguration.setSystemProperties((Configuration) compositeConfiguration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.configuration2.CompositeConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SystemConfiguration systemConfiguration0 = new SystemConfiguration();
      systemConfiguration0.setPropertyInternal("", "");
      // Undeclared exception!
      try { 
        SystemConfiguration.setSystemProperties((Configuration) systemConfiguration0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PoolDataSourceImpl poolDataSourceImpl0 = new PoolDataSourceImpl();
      Properties properties0 = poolDataSourceImpl0.getConnectionFactoryProperties();
      CompoundName compoundName0 = new CompoundName("oracle.security.client.default_password", properties0);
      properties0.put(poolDataSourceImpl0, compoundName0);
      MapConfiguration mapConfiguration0 = new MapConfiguration(properties0);
      // Undeclared exception!
      try { 
        SystemConfiguration.setSystemProperties((Configuration) mapConfiguration0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // oracle.ucp.jdbc.PoolDataSourceImpl cannot be cast to java.lang.String
         //
         verifyException("org.apache.commons.configuration2.SystemConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemConfiguration.setSystemProperties((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SystemConfiguration systemConfiguration0 = new SystemConfiguration();
      systemConfiguration0.append(systemConfiguration0);
      // Undeclared exception!
      try { 
        SystemConfiguration.setSystemProperties(".xml");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      try { 
        SystemConfiguration.setSystemProperties("(;I)&1?iFWlKyESo$B", "SESSION_NLS_LXCNCHAREXCP");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to load the configuration from the URL file:/media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/commons-configuration2-2.8.0-src/(;I)&1%3FiFWlKyESo$B/SESSION_NLS_LXCNCHAREXCP
         //
         verifyException("org.apache.commons.configuration2.io.DefaultFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "\\uBQ)uoqO.xml";
      try { 
        SystemConfiguration.setSystemProperties(string0, string0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to load the configuration from the URL file:/media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/commons-configuration2-2.8.0-src/%5CuBQ)uoqO.xml/%5CuBQ)uoqO.xml
         //
         verifyException("org.apache.commons.configuration2.io.DefaultFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SystemConfiguration systemConfiguration0 = new SystemConfiguration();
      SystemConfiguration.setSystemProperties((Configuration) systemConfiguration0);
      assertFalse(systemConfiguration0.isTrimmingDisabled());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      try { 
        SystemConfiguration.setSystemProperties("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not locate: FileLocator [basePath=null, encoding=null, fileName=, fileSystem=null, locationStrategy=null, sourceURL=null, urlConnectionOptions=null]
         //
         verifyException("org.apache.commons.configuration2.io.FileLocatorUtils", e);
      }
  }
}
