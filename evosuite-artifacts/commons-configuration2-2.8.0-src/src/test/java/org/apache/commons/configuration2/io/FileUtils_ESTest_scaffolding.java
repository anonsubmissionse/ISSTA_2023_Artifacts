/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Oct 12 00:53:09 GMT 2022
 */

package org.apache.commons.configuration2.io;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class FileUtils_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.configuration2.io.FileUtils"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/media/ISSTA_USER/extradrive1/toga-eval-issta-2023/toga-eval/artifacts/commons-configuration2-2.8.0-src"); 
    java.lang.System.setProperty("user.home", "/home/ISSTA_USER"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "ISSTA_USER"); 
    java.lang.System.setProperty("user.timezone", ""); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FileUtils_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.commons.vfs2.FileSystem",
      "org.apache.commons.vfs2.FileChangeEvent",
      "org.apache.commons.vfs2.util.RandomAccessMode",
      "org.apache.commons.vfs2.operations.FileOperationProvider",
      "org.apache.commons.vfs2.FileSelector",
      "org.apache.commons.vfs2.provider.DefaultURLStreamHandler",
      "org.apache.commons.vfs2.NameScope",
      "org.apache.commons.vfs2.provider.FileReplicator",
      "org.apache.commons.vfs2.provider.TemporaryFileStore",
      "org.apache.commons.vfs2.FileSystemManager",
      "org.apache.commons.vfs2.provider.VfsComponentContext",
      "org.apache.commons.vfs2.CacheStrategy",
      "org.apache.commons.vfs2.operations.FileOperations",
      "org.apache.commons.vfs2.FileSelectInfo",
      "org.apache.commons.vfs2.FileContentInfo",
      "org.apache.commons.configuration2.io.FileUtils",
      "org.apache.commons.vfs2.provider.DefaultURLConnection",
      "org.apache.commons.vfs2.operations.FileOperation",
      "org.apache.commons.vfs2.FileSystemOptions",
      "org.apache.commons.vfs2.FileListener",
      "org.apache.commons.vfs2.RandomAccessContent",
      "org.apache.commons.vfs2.FilesCache",
      "org.apache.commons.vfs2.FileSystemException",
      "org.apache.commons.vfs2.FileObject",
      "org.apache.commons.vfs2.FileSystemConfigBuilder",
      "org.apache.commons.vfs2.FileName",
      "org.apache.commons.vfs2.Capability",
      "org.apache.commons.vfs2.FileType",
      "org.apache.commons.vfs2.FileContentInfoFactory",
      "org.apache.commons.vfs2.FileContent"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FileUtils_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.commons.configuration2.io.FileUtils",
      "org.apache.commons.vfs2.FileSystemOptions",
      "org.apache.commons.vfs2.provider.DefaultURLStreamHandler",
      "org.apache.commons.vfs2.FileObject"
    );
  }
}
