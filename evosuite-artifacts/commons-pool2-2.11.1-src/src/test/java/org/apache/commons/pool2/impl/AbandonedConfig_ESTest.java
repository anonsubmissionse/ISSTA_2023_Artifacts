/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 19:03:42 GMT 2022
 */

package org.apache.commons.pool2.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.PrintWriter;
import java.time.Duration;
import java.time.temporal.ChronoUnit;
import org.apache.commons.pool2.impl.AbandonedConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbandonedConfig_ESTest extends AbandonedConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setUseUsageTracking(true);
      boolean boolean0 = abandonedConfig0.getUseUsageTracking();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
      
      abandonedConfig0.setRequireFullStackTrace(false);
      boolean boolean0 = abandonedConfig0.getRequireFullStackTrace();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRemoveAbandonedTimeout(0);
      int int0 = abandonedConfig0.getRemoveAbandonedTimeout();
      assertEquals(0, int0);
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      ChronoUnit chronoUnit0 = ChronoUnit.CENTURIES;
      Duration duration0 = chronoUnit0.getDuration();
      abandonedConfig0.setRemoveAbandonedTimeout(duration0);
      abandonedConfig0.getRemoveAbandonedTimeout();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRemoveAbandonedOnMaintenance(true);
      boolean boolean0 = abandonedConfig0.getRemoveAbandonedOnMaintenance();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRemoveAbandonedOnBorrow(true);
      boolean boolean0 = abandonedConfig0.getRemoveAbandonedOnBorrow();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setLogAbandoned(true);
      boolean boolean0 = abandonedConfig0.getLogAbandoned();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setUseUsageTracking(true);
      AbandonedConfig.copy(abandonedConfig0);
      assertTrue(abandonedConfig0.getUseUsageTracking());
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRemoveAbandonedOnMaintenance(true);
      AbandonedConfig.copy(abandonedConfig0);
      assertTrue(abandonedConfig0.getRemoveAbandonedOnMaintenance());
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setLogWriter((PrintWriter) null);
      abandonedConfig0.getLogWriter();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getRemoveAbandonedTimeoutDuration();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setRemoveAbandonedOnBorrow(true);
      AbandonedConfig abandonedConfig1 = AbandonedConfig.copy(abandonedConfig0);
      assertTrue(abandonedConfig0.getRemoveAbandonedOnBorrow());
      assertTrue(abandonedConfig1.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      boolean boolean0 = abandonedConfig0.getRequireFullStackTrace();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getUseUsageTracking();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getRemoveAbandonedOnBorrow();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.setLogAbandoned(true);
      AbandonedConfig abandonedConfig1 = AbandonedConfig.copy(abandonedConfig0);
      assertTrue(abandonedConfig0.getLogAbandoned());
      assertTrue(abandonedConfig1.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
      
      abandonedConfig0.setRequireFullStackTrace(false);
      AbandonedConfig.copy(abandonedConfig0);
      assertFalse(abandonedConfig0.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getLogWriter();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getLogAbandoned();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getRemoveAbandonedOnMaintenance();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = AbandonedConfig.copy((AbandonedConfig) null);
      assertNull(abandonedConfig0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.toString();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AbandonedConfig abandonedConfig0 = new AbandonedConfig();
      abandonedConfig0.getRemoveAbandonedTimeout();
      assertTrue(abandonedConfig0.getRequireFullStackTrace());
  }
}
