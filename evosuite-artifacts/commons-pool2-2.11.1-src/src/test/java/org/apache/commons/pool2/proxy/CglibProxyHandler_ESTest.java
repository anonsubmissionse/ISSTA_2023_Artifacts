/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 19:06:48 GMT 2022
 */

package org.apache.commons.pool2.proxy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import net.sf.cglib.proxy.MethodProxy;
import org.apache.commons.pool2.PooledObjectFactory;
import org.apache.commons.pool2.UsageTracking;
import org.apache.commons.pool2.impl.GenericObjectPool;
import org.apache.commons.pool2.impl.GenericObjectPoolConfig;
import org.apache.commons.pool2.proxy.CglibProxyHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CglibProxyHandler_ESTest extends CglibProxyHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PooledObjectFactory<String> pooledObjectFactory0 = (PooledObjectFactory<String>) mock(PooledObjectFactory.class, new ViolatedAssumptionAnswer());
      GenericObjectPoolConfig<String> genericObjectPoolConfig0 = new GenericObjectPoolConfig<String>();
      GenericObjectPool<String> genericObjectPool0 = new GenericObjectPool<String>(pooledObjectFactory0, genericObjectPoolConfig0);
      CglibProxyHandler<String> cglibProxyHandler0 = new CglibProxyHandler<String>("a-s/ -rp>MFWSAiU", genericObjectPool0);
      cglibProxyHandler0.disableProxy();
      Object[] objectArray0 = new Object[6];
      try { 
        cglibProxyHandler0.intercept("a-s/ -rp>MFWSAiU", (Method) null, objectArray0, (MethodProxy) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // This object may no longer be used as it has been returned to the Object Pool.
         //
         verifyException("org.apache.commons.pool2.proxy.BaseProxyHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CglibProxyHandler<String> cglibProxyHandler0 = new CglibProxyHandler<String>("38Bj_YF;{8P", (UsageTracking<String>) null);
      Object[] objectArray0 = new Object[7];
      Class<String> class0 = String.class;
      Class<Object> class1 = Object.class;
      MethodProxy methodProxy0 = MethodProxy.create(class0, class1, "", "`{SW-zq\u0005/bw", "");
      try { 
        cglibProxyHandler0.intercept("38Bj_YF;{8P", (Method) null, objectArray0, methodProxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.pool2.proxy.BaseProxyHandler", e);
      }
  }
}
