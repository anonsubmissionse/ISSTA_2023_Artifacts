/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 00:09:28 GMT 2022
 */

package org.apache.commons.imaging.icc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.apache.commons.imaging.icc.IccTagDataTypes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IccTagDataTypes_ESTest extends IccTagDataTypes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IccTagDataTypes iccTagDataTypes0 = IccTagDataTypes.SIGNATURE_TYPE;
      byte[] byteArray0 = new byte[12];
      byteArray0[8] = (byte) (-1);
      iccTagDataTypes0.dump("DESC_TYPE", byteArray0);
      assertEquals(12, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IccTagDataTypes[] iccTagDataTypesArray0 = IccTagDataTypes.values();
      assertEquals(5, iccTagDataTypesArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IccTagDataTypes iccTagDataTypes0 = IccTagDataTypes.TEXT_TYPE;
      byte[] byteArray0 = new byte[2];
      try { 
        iccTagDataTypes0.dump("S{]", byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // ICC: corrupt tag data
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IccTagDataTypes iccTagDataTypes0 = IccTagDataTypes.TEXT_TYPE;
      byte[] byteArray0 = new byte[18];
      iccTagDataTypes0.dump("", byteArray0);
      assertEquals(18, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IccTagDataTypes iccTagDataTypes0 = IccTagDataTypes.SIGNATURE_TYPE;
      byte[] byteArray0 = new byte[1];
      try { 
        iccTagDataTypes0.dump("C", byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // ICC: corrupt tag data
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IccTagDataTypes iccTagDataTypes0 = IccTagDataTypes.MULTI_LOCALIZED_UNICODE_TYPE;
      byte[] byteArray0 = new byte[0];
      try { 
        iccTagDataTypes0.dump("", byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // ICC: corrupt tag data
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IccTagDataTypes iccTagDataTypes0 = IccTagDataTypes.MULTI_LOCALIZED_UNICODE_TYPE;
      byte[] byteArray0 = new byte[9];
      iccTagDataTypes0.dump("", byteArray0);
      assertEquals(9, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IccTagDataTypes iccTagDataTypes0 = IccTagDataTypes.DATA_TYPE;
      byte[] byteArray0 = new byte[1];
      try { 
        iccTagDataTypes0.dump("Unexpected EOF", byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // ICC: corrupt tag data
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IccTagDataTypes iccTagDataTypes0 = IccTagDataTypes.DATA_TYPE;
      byte[] byteArray0 = new byte[4];
      iccTagDataTypes0.dump((String) null, byteArray0);
      assertEquals(4, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IccTagDataTypes iccTagDataTypes0 = IccTagDataTypes.DESC_TYPE;
      byte[] byteArray0 = new byte[17];
      // Undeclared exception!
      try { 
        iccTagDataTypes0.dump("ignore", byteArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IccTagDataTypes iccTagDataTypes0 = IccTagDataTypes.MULTI_LOCALIZED_UNICODE_TYPE;
      int int0 = iccTagDataTypes0.getSignature();
      assertEquals(1835824483, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IccTagDataTypes iccTagDataTypes0 = IccTagDataTypes.TEXT_TYPE;
      String string0 = iccTagDataTypes0.getName();
      assertEquals("textType", string0);
  }
}
