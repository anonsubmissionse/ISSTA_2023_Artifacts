/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 00:02:28 GMT 2022
 */

package org.apache.commons.imaging.formats.png.chunks;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.formats.png.chunks.PngChunkText;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PngChunkText_ESTest extends PngChunkText_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      PngChunkText pngChunkText0 = new PngChunkText((byte)0, 0, (-1), byteArray0);
      String string0 = pngChunkText0.getText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-61);
      PngChunkText pngChunkText0 = new PngChunkText(0, 0, 1, byteArray0);
      String string0 = pngChunkText0.getKeyword();
      assertEquals("\u00C3", string0);
      assertEquals("\u0000\u0000\u0000", pngChunkText0.getText());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PngChunkText pngChunkText0 = null;
      try {
        pngChunkText0 = new PngChunkText(733, 1, 733, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.chunks.PngChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PngChunkText pngChunkText0 = null;
      try {
        pngChunkText0 = new PngChunkText(807, 807, 807, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // PNG tEXt chunk keyword is not terminated.
         //
         verifyException("org.apache.commons.imaging.formats.png.chunks.PngChunkText", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      PngChunkText pngChunkText0 = new PngChunkText((-2615), (-2615), (-2615), byteArray0);
      String string0 = pngChunkText0.getText();
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      PngChunkText pngChunkText0 = new PngChunkText((-2615), (-2615), (-2615), byteArray0);
      pngChunkText0.getContents();
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", pngChunkText0.getText());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      PngChunkText pngChunkText0 = new PngChunkText((-2615), (-2615), (-2615), byteArray0);
      String string0 = pngChunkText0.getKeyword();
      assertEquals("", string0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", pngChunkText0.getText());
  }
}
