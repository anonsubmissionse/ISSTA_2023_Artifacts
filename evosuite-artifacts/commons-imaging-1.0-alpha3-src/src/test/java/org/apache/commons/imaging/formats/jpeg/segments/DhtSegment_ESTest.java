/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 00:00:24 GMT 2022
 */

package org.apache.commons.imaging.formats.jpeg.segments;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import org.apache.commons.imaging.formats.jpeg.segments.DhtSegment;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DhtSegment_ESTest extends DhtSegment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      DhtSegment dhtSegment0 = new DhtSegment(255, byteArray0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(255, dhtSegment0.marker);
      assertEquals(0, dhtSegment0.length);
      assertEquals(0, byteArray0.length);
      assertNotNull(dhtSegment0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      DhtSegment dhtSegment0 = null;
      try {
        dhtSegment0 = new DhtSegment(0, byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Not a Valid JPEG File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DhtSegment dhtSegment0 = null;
      try {
        dhtSegment0 = new DhtSegment(65500, 65500, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(21, byteArrayInputStream0.available());
      assertEquals(21, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      DhtSegment dhtSegment0 = null;
      try {
        dhtSegment0 = new DhtSegment(1240, 1240, byteArrayInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Not a Valid JPEG File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[1] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(21, byteArrayInputStream0.available());
      assertEquals(21, byteArray0.length);
      assertNotNull(byteArrayInputStream0);
      
      DhtSegment dhtSegment0 = null;
      try {
        dhtSegment0 = new DhtSegment(1240, 1240, byteArrayInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Not a Valid JPEG File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[18];
      intArray0[1] = 1860;
      DhtSegment.HuffmanTable dhtSegment_HuffmanTable0 = new DhtSegment.HuffmanTable(1860, 1860, intArray0, intArray0);
      assertEquals(1860, dhtSegment_HuffmanTable0.tableClass);
      assertEquals(1860, dhtSegment_HuffmanTable0.destinationIdentifier);
      assertEquals(18, intArray0.length);
      assertNotNull(dhtSegment_HuffmanTable0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 1793;
      DhtSegment.HuffmanTable dhtSegment_HuffmanTable0 = null;
      try {
        dhtSegment_HuffmanTable0 = new DhtSegment.HuffmanTable(16, 1452, intArray0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[19];
      DhtSegment.HuffmanTable dhtSegment_HuffmanTable0 = new DhtSegment.HuffmanTable((-2477), (-2477), intArray0, intArray0);
      assertEquals((-2477), dhtSegment_HuffmanTable0.destinationIdentifier);
      assertEquals((-2477), dhtSegment_HuffmanTable0.tableClass);
      assertEquals(19, intArray0.length);
      assertNotNull(dhtSegment_HuffmanTable0);
      
      int int0 = dhtSegment_HuffmanTable0.getMaxCode(1);
      assertEquals((-1), int0);
      assertEquals((-2477), dhtSegment_HuffmanTable0.destinationIdentifier);
      assertEquals((-2477), dhtSegment_HuffmanTable0.tableClass);
      assertEquals(19, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[19];
      DhtSegment.HuffmanTable dhtSegment_HuffmanTable0 = new DhtSegment.HuffmanTable((-2477), (-2477), intArray0, intArray0);
      // Undeclared exception!
      try { 
        dhtSegment_HuffmanTable0.getHuffVal(3344);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3344
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[18];
      DhtSegment.HuffmanTable dhtSegment_HuffmanTable0 = new DhtSegment.HuffmanTable(1860, 1860, intArray0, intArray0);
      // Undeclared exception!
      try { 
        dhtSegment_HuffmanTable0.getValPtr(65482);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65482
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment$HuffmanTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      File file0 = MockFile.createTempFile("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment", "DHT (");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      DhtSegment dhtSegment0 = new DhtSegment(0, 0, mockFileInputStream0);
      String string0 = dhtSegment0.getDescription();
      assertEquals("DHT (Unknown)", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DhtSegment dhtSegment0 = null;
      try {
        dhtSegment0 = new DhtSegment(4, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.segments.DhtSegment", e);
      }
  }
}
