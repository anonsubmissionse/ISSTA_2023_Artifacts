/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 00:10:04 GMT 2022
 */

package org.apache.commons.imaging.formats.jpeg.iptc;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.formats.jpeg.iptc.IptcType;
import org.apache.commons.imaging.formats.jpeg.iptc.IptcTypes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IptcTypes_ESTest extends IptcTypes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IptcTypes[] iptcTypesArray0 = IptcTypes.values();
      assertEquals(57, iptcTypesArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IptcTypes iptcTypes0 = IptcTypes.valueOf("RECORD_VERSION");
      assertEquals(IptcTypes.RECORD_VERSION, iptcTypes0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IptcTypes iptcTypes0 = IptcTypes.valueOf("COUNTRY_PRIMARY_LOCATION_CODE");
      assertEquals(100, iptcTypes0.getType());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IptcTypes iptcTypes0 = IptcTypes.RECORD_VERSION;
      int int0 = iptcTypes0.getType();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IptcTypes iptcTypes0 = IptcTypes.CATEGORY;
      int int0 = iptcTypes0.getType();
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IptcTypes iptcTypes0 = IptcTypes.CATEGORY;
      String string0 = iptcTypes0.toString();
      assertEquals("Category (15)", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IptcTypes iptcTypes0 = IptcTypes.CATEGORY;
      String string0 = iptcTypes0.getName();
      assertEquals("Category", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IptcType iptcType0 = IptcTypes.getUnknown(15);
      assertNotNull(iptcType0);
  }
}
