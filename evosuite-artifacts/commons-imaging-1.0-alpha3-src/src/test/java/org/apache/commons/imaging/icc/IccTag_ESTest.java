/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:36:19 GMT 2022
 */

package org.apache.commons.imaging.icc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.PrintWriter;
import org.apache.commons.imaging.icc.IccTag;
import org.apache.commons.imaging.icc.IccTagType;
import org.apache.commons.imaging.icc.IccTagTypes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IccTag_ESTest extends IccTag_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IccTagTypes iccTagTypes0 = IccTagTypes.CALIBRATION_DATE_TIME_TAG;
      IccTag iccTag0 = new IccTag(66, 66, 66, iccTagTypes0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)111;
      iccTag0.setData(byteArray0);
      assertEquals(66, iccTag0.signature);
      assertEquals(66, iccTag0.offset);
      assertEquals(66, iccTag0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IccTagTypes iccTagTypes0 = IccTagTypes.GREEN_MATRIX_COLUMN_TAG;
      IccTag iccTag0 = new IccTag((-15), (-15), (-15), iccTagTypes0);
      // Undeclared exception!
      try { 
        iccTag0.setData((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IccTagTypes iccTagTypes0 = IccTagTypes.CHROMATIC_ADAPTATION_TAG;
      IccTag iccTag0 = new IccTag(1668051572, 1668051572, 1668051572, iccTagTypes0);
      // Undeclared exception!
      try { 
        iccTag0.dump((PrintWriter) null, "aM^WDwD");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.icc.IccTag", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IccTagTypes iccTagTypes0 = IccTagTypes.COLORANT_TABLE_TAG;
      IccTag iccTag0 = new IccTag((-3605), (-3605), 0, iccTagTypes0);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0);
      iccTag0.dump((PrintWriter) mockPrintWriter0, "BToA2Tag");
      assertEquals((-3605), iccTag0.signature);
      assertEquals((-3605), iccTag0.offset);
      assertEquals(0, iccTag0.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IccTag iccTag0 = new IccTag(1568, 1568, 1568, (IccTagType) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("2|T#:Z");
      byte[] byteArray0 = new byte[22];
      iccTag0.setData(byteArray0);
      iccTag0.dump((PrintWriter) mockPrintWriter0, "2|T#:Z");
      assertEquals(1568, iccTag0.length);
      assertEquals(1568, iccTag0.signature);
      assertEquals(1568, iccTag0.offset);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IccTagTypes iccTagTypes0 = IccTagTypes.MEDIA_BLACK_POINT_TAG;
      IccTag iccTag0 = new IccTag(80, 4, 0, iccTagTypes0);
      byte[] byteArray0 = new byte[4];
      iccTag0.setData(byteArray0);
      iccTag0.dump("p.*@7~,SI!We[K");
      assertEquals(80, iccTag0.signature);
      assertEquals(4, iccTag0.offset);
      assertEquals(0, iccTag0.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IccTagTypes iccTagTypes0 = IccTagTypes.OUTPUT_RESPONSE_TAG;
      IccTag iccTag0 = new IccTag((-825), (-825), (-825), iccTagTypes0);
      byte[] byteArray0 = new byte[1];
      try { 
        iccTag0.setData(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // ICC: corrupt tag data
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
}
