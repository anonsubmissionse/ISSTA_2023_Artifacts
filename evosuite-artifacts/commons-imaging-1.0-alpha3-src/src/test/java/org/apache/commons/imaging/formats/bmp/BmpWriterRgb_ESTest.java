/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:59:54 GMT 2022
 */

package org.apache.commons.imaging.formats.bmp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.LookupOp;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.nio.ByteOrder;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;
import org.apache.commons.imaging.common.BinaryOutputStream;
import org.apache.commons.imaging.formats.bmp.BmpWriterRgb;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BmpWriterRgb_ESTest extends BmpWriterRgb_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      bufferedImage0.flush();
      BmpWriterRgb bmpWriterRgb0 = new BmpWriterRgb();
      RescaleOp rescaleOp0 = new RescaleOp(7, 7, (RenderingHints) null);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, bufferedImage0);
      bmpWriterRgb0.getImageData(bufferedImage1);
      bmpWriterRgb0.getImageData(bufferedImage0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BmpWriterRgb bmpWriterRgb0 = new BmpWriterRgb();
      assertEquals(24, bmpWriterRgb0.getBitsPerPixel());
      
      int int0 = bmpWriterRgb0.getPaletteSize();
      assertEquals(0, int0);
      
      short[] shortArray0 = new short[5];
      shortArray0[0] = (short)2;
      shortArray0[1] = (short)6;
      shortArray0[2] = (short) (-1);
      shortArray0[3] = (short) (-144);
      shortArray0[4] = (short)2942;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(2602, shortArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Object object0 = new Object();
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, object0);
      LookupOp lookupOp0 = new LookupOp(shortLookupTable0, renderingHints0);
      BufferedImage bufferedImage0 = new BufferedImage((short)6, (short)2942, 12);
      BufferedImage bufferedImage1 = lookupOp0.createCompatibleDestImage(bufferedImage0, (ColorModel) null);
      // Undeclared exception!
      bmpWriterRgb0.getImageData(bufferedImage1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G:eUlCs/u");
      BmpWriterRgb bmpWriterRgb0 = new BmpWriterRgb();
      int int0 = 7;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G:eUlCs/u");
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      bmpWriterRgb0.getImageData(bufferedImage0);
      bmpWriterRgb0.getImageData(bufferedImage0);
      Object object0 = new Object();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode(object0, true);
      JTree jTree0 = new JTree(defaultMutableTreeNode0, false);
      jTree0.getPathBounds((TreePath) null);
      // Undeclared exception!
      try { 
        bufferedImage0.getData((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G:eUlCs/u");
      BmpWriterRgb bmpWriterRgb0 = new BmpWriterRgb();
      int int0 = 8;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "G:eUlCs/u");
      BufferedImage bufferedImage0 = new BufferedImage(8, 8, 8);
      bmpWriterRgb0.getImageData(bufferedImage0);
      bmpWriterRgb0.getImageData(bufferedImage0);
      Object object0 = new Object();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode(object0, true);
      JTree jTree0 = new JTree(defaultMutableTreeNode0, false);
      jTree0.getPathBounds((TreePath) null);
      // Undeclared exception!
      try { 
        bufferedImage0.getData((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BmpWriterRgb bmpWriterRgb0 = new BmpWriterRgb();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      BinaryOutputStream binaryOutputStream0 = new BinaryOutputStream((OutputStream) null, byteOrder0);
      bmpWriterRgb0.writePalette(binaryOutputStream0);
      assertEquals(0, binaryOutputStream0.getByteCount());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BmpWriterRgb bmpWriterRgb0 = new BmpWriterRgb();
      int int0 = bmpWriterRgb0.getBitsPerPixel();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BmpWriterRgb bmpWriterRgb0 = new BmpWriterRgb();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-94);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-21);
      byteArrayOutputStream0.write(byteArray0, 0, (int) (byte)0);
      BufferedImage bufferedImage0 = null;
      // Undeclared exception!
      try { 
        bmpWriterRgb0.getImageData((BufferedImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.bmp.BmpWriterRgb", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BmpWriterRgb bmpWriterRgb0 = new BmpWriterRgb();
      // Undeclared exception!
      try { 
        bmpWriterRgb0.getImageData((BufferedImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.bmp.BmpWriterRgb", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      BmpWriterRgb bmpWriterRgb0 = new BmpWriterRgb();
      byte[] byteArray0 = bmpWriterRgb0.getImageData(bufferedImage0);
      assertEquals(168, byteArray0.length);
      
      int int0 = bmpWriterRgb0.getBitsPerPixel();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      BmpWriterRgb bmpWriterRgb0 = new BmpWriterRgb();
      bmpWriterRgb0.writePalette((BinaryOutputStream) null);
      int int0 = bmpWriterRgb0.getPaletteSize();
      assertEquals(0, int0);
  }
}
