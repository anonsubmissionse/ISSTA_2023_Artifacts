/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:51:26 GMT 2022
 */

package org.apache.commons.imaging.color;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.color.ColorCieLuv;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ColorCieLuv_ESTest extends ColorCieLuv_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.RED;
      colorCieLuv0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-1.0), (-1.0), (-1.0));
      colorCieLuv0.hashCode();
      assertEquals((-1.0), colorCieLuv0.v, 0.01);
      assertEquals((-1.0), colorCieLuv0.u, 0.01);
      assertEquals((-1.0), colorCieLuv0.L, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-1.0), (-1.0), (-1.0));
      ColorCieLuv colorCieLuv1 = new ColorCieLuv((-1.0), 0.0, (-1.0));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertEquals((-1.0), colorCieLuv1.L, 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, colorCieLuv1.u, 0.01);
      assertEquals((-1.0), colorCieLuv1.v, 0.01);
      assertFalse(colorCieLuv1.equals((Object)colorCieLuv0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLUE;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(32.303, (-9.4), 0.0);
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertEquals(32.303, colorCieLuv1.L, 0.01);
      assertEquals(0.0, colorCieLuv1.v, 0.01);
      assertFalse(boolean0);
      assertEquals((-9.4), colorCieLuv1.u, 0.01);
      assertFalse(colorCieLuv1.equals((Object)colorCieLuv0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.RED;
      ColorCieLuv colorCieLuv1 = ColorCieLuv.BLACK;
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 0.0);
      String string0 = colorCieLuv0.BLUE.toString();
      assertEquals("{L: 32.303, u: -9.4, v: -130.358}", string0);
      assertEquals(0.0, colorCieLuv0.L, 0.01);
      assertEquals(0.0, colorCieLuv0.v, 0.01);
      assertEquals(0.0, colorCieLuv0.u, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-55.14756538419712), (-55.14756538419712), (-55.14756538419712));
      ColorCieLuv colorCieLuv1 = new ColorCieLuv((-55.14756538419712), (-55.14756538419712), (-55.14756538419712));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertTrue(boolean0);
      assertEquals((-55.14756538419712), colorCieLuv1.v, 0.01);
      assertEquals((-55.14756538419712), colorCieLuv1.L, 0.01);
      assertEquals((-55.14756538419712), colorCieLuv1.u, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLUE;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(32.303, 32.303, (-9.4));
      boolean boolean0 = colorCieLuv1.equals(colorCieLuv0);
      assertEquals(32.303, colorCieLuv1.L, 0.01);
      assertEquals((-9.4), colorCieLuv1.v, 0.01);
      assertFalse(boolean0);
      assertEquals(32.303, colorCieLuv1.u, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.GREEN;
      ColorCieLuv colorCieLuv1 = ColorCieLuv.WHITE;
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLACK;
      boolean boolean0 = colorCieLuv0.equals("{L: 0.0, u: 0.0, v: 0.0}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 0.0);
      boolean boolean0 = colorCieLuv0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0.0, colorCieLuv0.u, 0.01);
      assertEquals(0.0, colorCieLuv0.v, 0.01);
      assertEquals(0.0, colorCieLuv0.L, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLACK;
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLACK;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(0.0, 0.0, (-0.4888913042222018));
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertFalse(boolean0);
      assertEquals(0.0, colorCieLuv1.L, 0.01);
      assertEquals((-0.4888913042222018), colorCieLuv1.v, 0.01);
      assertEquals(0.0, colorCieLuv1.u, 0.01);
      assertFalse(colorCieLuv1.equals((Object)colorCieLuv0));
  }
}
