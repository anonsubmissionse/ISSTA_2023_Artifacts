/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:52:54 GMT 2022
 */

package org.apache.commons.imaging.color;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.color.ColorHsv;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ColorHsv_ESTest extends ColorHsv_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(0.0, (-1.0), (-1.0));
      colorHsv0.hashCode();
      assertEquals(0.0, colorHsv0.H, 0.01);
      assertEquals((-1.0), colorHsv0.V, 0.01);
      assertEquals((-1.0), colorHsv0.S, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv((-3777.09121461), 0.0, (-3777.09121461));
      colorHsv0.hashCode();
      assertEquals((-3777.09121461), colorHsv0.H, 0.01);
      assertEquals(0.0, colorHsv0.S, 0.01);
      assertEquals((-3777.09121461), colorHsv0.V, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(4269.98250534, 4269.98250534, 1.0);
      colorHsv0.hashCode();
      assertEquals(4269.98250534, colorHsv0.S, 0.01);
      assertEquals(4269.98250534, colorHsv0.H, 0.01);
      assertEquals(1.0, colorHsv0.V, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(0.0, 0.0, 0.0);
      ColorHsv colorHsv1 = ColorHsv.WHITE;
      boolean boolean0 = colorHsv0.equals(colorHsv1);
      assertEquals(0.0, colorHsv0.S, 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, colorHsv0.H, 0.01);
      assertEquals(0.0, colorHsv0.V, 0.01);
      assertFalse(colorHsv1.equals((Object)colorHsv0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColorHsv colorHsv0 = ColorHsv.WHITE;
      ColorHsv colorHsv1 = ColorHsv.RED;
      boolean boolean0 = colorHsv0.equals(colorHsv1);
      assertFalse(boolean0);
      assertFalse(colorHsv1.equals((Object)colorHsv0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ColorHsv colorHsv0 = ColorHsv.GREEN;
      ColorHsv colorHsv1 = new ColorHsv(0.0, 100.0, 120.0);
      boolean boolean0 = colorHsv0.equals(colorHsv1);
      assertEquals(100.0, colorHsv1.S, 0.01);
      assertFalse(boolean0);
      assertEquals(120.0, colorHsv1.V, 0.01);
      assertEquals(0.0, colorHsv1.H, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(0.0, 0.0, 0.0);
      ColorHsv colorHsv1 = ColorHsv.BLACK;
      boolean boolean0 = colorHsv0.equals(colorHsv1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColorHsv colorHsv0 = ColorHsv.RED;
      ColorHsv colorHsv1 = ColorHsv.BLACK;
      boolean boolean0 = colorHsv0.equals(colorHsv1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColorHsv colorHsv0 = ColorHsv.WHITE;
      ColorHsv colorHsv1 = ColorHsv.GREEN;
      boolean boolean0 = colorHsv0.equals(colorHsv1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(0.0, 0.0, 0.0);
      boolean boolean0 = colorHsv0.equals("{H: 0.0, S: 0.0, V: 0.0}");
      assertEquals(0.0, colorHsv0.V, 0.01);
      assertEquals(0.0, colorHsv0.S, 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, colorHsv0.H, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(0.0, 0.0, 0.0);
      ColorHsv colorHsv1 = ColorHsv.WHITE;
      boolean boolean0 = colorHsv1.equals(colorHsv0);
      assertFalse(boolean0);
      assertFalse(colorHsv0.equals((Object)colorHsv1));
      assertEquals(0.0, colorHsv0.S, 0.01);
      assertEquals(0.0, colorHsv0.V, 0.01);
      assertEquals(0.0, colorHsv0.H, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(0.0, 0.0, 0.0);
      boolean boolean0 = colorHsv0.equals(colorHsv0);
      assertEquals(0.0, colorHsv0.H, 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, colorHsv0.S, 0.01);
      assertEquals(0.0, colorHsv0.V, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(0.0, 0.0, 0.0);
      boolean boolean0 = colorHsv0.equals((Object) null);
      assertEquals(0.0, colorHsv0.S, 0.01);
      assertEquals(0.0, colorHsv0.V, 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, colorHsv0.H, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(0.0, 0.0, 0.0);
      String string0 = colorHsv0.toString();
      assertEquals("{H: 0.0, S: 0.0, V: 0.0}", string0);
  }
}
