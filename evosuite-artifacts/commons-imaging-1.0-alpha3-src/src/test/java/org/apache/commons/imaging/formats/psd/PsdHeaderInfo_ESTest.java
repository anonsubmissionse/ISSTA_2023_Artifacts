/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:47:24 GMT 2022
 */

package org.apache.commons.imaging.formats.psd;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import org.apache.commons.imaging.formats.psd.PsdHeaderInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PsdHeaderInfo_ESTest extends PsdHeaderInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      PsdHeaderInfo psdHeaderInfo0 = new PsdHeaderInfo((-804), byteArray0, (byte) (-4), (byte) (-1), (-804), (byte) (-4), (-1203));
      psdHeaderInfo0.dump();
      assertEquals((-4), psdHeaderInfo0.depth);
      assertEquals((-4), psdHeaderInfo0.channels);
      assertEquals((-1), psdHeaderInfo0.rows);
      assertEquals((-1203), psdHeaderInfo0.mode);
      assertEquals((-804), psdHeaderInfo0.version);
      assertEquals((-804), psdHeaderInfo0.columns);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      PsdHeaderInfo psdHeaderInfo0 = new PsdHeaderInfo(53, byteArray0, (byte)40, 53, 0, 0, (byte)40);
      psdHeaderInfo0.dump();
      assertEquals(53, psdHeaderInfo0.version);
      assertEquals(53, psdHeaderInfo0.rows);
      assertEquals(40, psdHeaderInfo0.mode);
      assertEquals(0, psdHeaderInfo0.columns);
      assertEquals(40, psdHeaderInfo0.channels);
      assertEquals(0, psdHeaderInfo0.depth);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PsdHeaderInfo psdHeaderInfo0 = new PsdHeaderInfo(0, byteArray0, 0, 0, (-591), 0, 0);
      MockFile mockFile0 = new MockFile("");
      File file0 = MockFile.createTempFile("9GeqoQ`7p0wC%P", "9GeqoQ`7p0wC%P", (File) mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      psdHeaderInfo0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(114L, file0.length());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PsdHeaderInfo psdHeaderInfo0 = new PsdHeaderInfo(0, byteArray0, 1294, 0, 1294, (-1), 0);
      psdHeaderInfo0.getReserved();
      assertEquals(0, psdHeaderInfo0.rows);
      assertEquals(0, psdHeaderInfo0.version);
      assertEquals(0, psdHeaderInfo0.mode);
      assertEquals((-1), psdHeaderInfo0.depth);
      assertEquals(1294, psdHeaderInfo0.channels);
      assertEquals(1294, psdHeaderInfo0.columns);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PsdHeaderInfo psdHeaderInfo0 = null;
      try {
        psdHeaderInfo0 = new PsdHeaderInfo(589, (byte[]) null, 589, 589, 589, 589, (-3499));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.psd.PsdHeaderInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      PsdHeaderInfo psdHeaderInfo0 = new PsdHeaderInfo(3, byteArray0, 0, (byte)0, (byte)68, 3778, (byte) (-102));
      // Undeclared exception!
      try { 
        psdHeaderInfo0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.psd.PsdHeaderInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      PsdHeaderInfo psdHeaderInfo0 = new PsdHeaderInfo(1786, byteArray0, 1786, 1786, 1786, 1786, 1786);
      psdHeaderInfo0.getReserved();
      assertEquals(1786, psdHeaderInfo0.version);
      assertEquals(1786, psdHeaderInfo0.columns);
      assertEquals(1786, psdHeaderInfo0.rows);
      assertEquals(1786, psdHeaderInfo0.mode);
      assertEquals(1786, psdHeaderInfo0.depth);
      assertEquals(1786, psdHeaderInfo0.channels);
  }
}
