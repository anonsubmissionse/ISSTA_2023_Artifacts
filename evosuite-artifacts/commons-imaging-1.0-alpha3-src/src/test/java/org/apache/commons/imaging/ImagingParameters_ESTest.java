/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 00:11:29 GMT 2022
 */

package org.apache.commons.imaging;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.ImagingParameters;
import org.apache.commons.imaging.PixelDensity;
import org.apache.commons.imaging.common.SimpleBufferedImageFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ImagingParameters_ESTest extends ImagingParameters_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImagingParameters imagingParameters0 = new ImagingParameters();
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre((-848.987729901), 1.0);
      imagingParameters0.setPixelDensity(pixelDensity0);
      imagingParameters0.getPixelDensity();
      assertFalse(imagingParameters0.isStrict());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImagingParameters imagingParameters0 = new ImagingParameters();
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerCentimetre((-4000.371), (-4000.371));
      imagingParameters0.setPixelDensity(pixelDensity0);
      imagingParameters0.getPixelDensity();
      assertFalse(imagingParameters0.isStrict());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImagingParameters imagingParameters0 = new ImagingParameters();
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerInch(0.0, 0.0);
      imagingParameters0.setPixelDensity(pixelDensity0);
      imagingParameters0.getPixelDensity();
      assertFalse(imagingParameters0.isStrict());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImagingParameters imagingParameters0 = new ImagingParameters();
      imagingParameters0.setFileName("");
      imagingParameters0.getFileName();
      assertFalse(imagingParameters0.isStrict());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImagingParameters imagingParameters0 = new ImagingParameters();
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      imagingParameters0.setBufferedImageFactory(simpleBufferedImageFactory0);
      imagingParameters0.getBufferedImageFactory();
      assertFalse(imagingParameters0.isStrict());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImagingParameters imagingParameters0 = new ImagingParameters();
      imagingParameters0.getPixelDensity();
      assertFalse(imagingParameters0.isStrict());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImagingParameters imagingParameters0 = new ImagingParameters();
      imagingParameters0.getBufferedImageFactory();
      assertFalse(imagingParameters0.isStrict());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImagingParameters imagingParameters0 = new ImagingParameters();
      PixelDensity pixelDensity0 = PixelDensity.createUnitless(1463.92989, 1463.92989);
      imagingParameters0.setPixelDensity(pixelDensity0);
      imagingParameters0.getPixelDensity();
      assertFalse(imagingParameters0.isStrict());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImagingParameters imagingParameters0 = new ImagingParameters();
      imagingParameters0.getFileName();
      assertFalse(imagingParameters0.isStrict());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImagingParameters imagingParameters0 = new ImagingParameters();
      boolean boolean0 = imagingParameters0.isStrict();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImagingParameters imagingParameters0 = new ImagingParameters();
      assertFalse(imagingParameters0.isStrict());
      
      imagingParameters0.setStrict(true);
      boolean boolean0 = imagingParameters0.isStrict();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImagingParameters imagingParameters0 = new ImagingParameters();
      imagingParameters0.setFileName("cM");
      imagingParameters0.getFileName();
      assertFalse(imagingParameters0.isStrict());
  }
}
