/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:51:06 GMT 2022
 */

package org.apache.commons.imaging.color;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.color.ColorCieLch;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ColorCieLch_ESTest extends ColorCieLch_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ColorCieLch colorCieLch0 = new ColorCieLch((-1060.02), (-1060.02), 2294.911728555165);
      colorCieLch0.hashCode();
      assertEquals((-1060.02), colorCieLch0.L, 0.01);
      assertEquals((-1060.02), colorCieLch0.C, 0.01);
      assertEquals(2294.911728555165, colorCieLch0.h, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ColorCieLch colorCieLch0 = new ColorCieLch((-566.0), 0.0, (-566.0));
      ColorCieLch colorCieLch1 = new ColorCieLch(32.0, 0.0, (-566.0));
      boolean boolean0 = colorCieLch0.equals(colorCieLch1);
      assertEquals((-566.0), colorCieLch1.h, 0.01);
      assertEquals(0.0, colorCieLch1.C, 0.01);
      assertFalse(colorCieLch1.equals((Object)colorCieLch0));
      assertEquals(32.0, colorCieLch1.L, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorCieLch.WHITE;
      ColorCieLch colorCieLch1 = ColorCieLch.BLACK;
      boolean boolean0 = colorCieLch1.equals(colorCieLch0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorCieLch.BLUE;
      ColorCieLch colorCieLch1 = ColorCieLch.BLACK;
      boolean boolean0 = colorCieLch0.equals(colorCieLch1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorCieLch.GREEN;
      ColorCieLch colorCieLch1 = new ColorCieLch((-86.0), (-86.0), 83.0);
      boolean boolean0 = colorCieLch0.equals(colorCieLch1);
      assertEquals((-86.0), colorCieLch1.L, 0.01);
      assertEquals((-86.0), colorCieLch1.C, 0.01);
      assertEquals(83.0, colorCieLch1.h, 0.01);
      assertFalse(boolean0);
      assertFalse(colorCieLch1.equals((Object)colorCieLch0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorCieLch.GREEN;
      ColorCieLch colorCieLch1 = new ColorCieLch(83.0, (-86.0), (-86.0));
      boolean boolean0 = colorCieLch0.equals(colorCieLch1);
      assertFalse(boolean0);
      assertEquals((-86.0), colorCieLch1.C, 0.01);
      assertEquals((-86.0), colorCieLch1.h, 0.01);
      assertEquals(83.0, colorCieLch1.L, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorCieLch.WHITE;
      ColorCieLch colorCieLch1 = new ColorCieLch(0.0, 100.0, 100.0);
      boolean boolean0 = colorCieLch0.equals(colorCieLch1);
      assertEquals(0.0, colorCieLch1.L, 0.01);
      assertEquals(100.0, colorCieLch1.h, 0.01);
      assertFalse(boolean0);
      assertEquals(100.0, colorCieLch1.C, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorCieLch.BLACK;
      ColorCieLch colorCieLch1 = new ColorCieLch(0.0, 0.0, 0.0);
      boolean boolean0 = colorCieLch0.equals(colorCieLch1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorCieLch.BLUE;
      boolean boolean0 = colorCieLch0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorCieLch.BLACK;
      boolean boolean0 = colorCieLch0.equals(colorCieLch0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorCieLch.BLACK;
      Object object0 = new Object();
      boolean boolean0 = colorCieLch0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorCieLch.BLUE;
      colorCieLch0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorCieLch colorCieLch0 = ColorCieLch.BLACK;
      String string0 = colorCieLch0.RED.toString();
      assertEquals("{L: 53.0, C: 80.0, h: 67.0}", string0);
  }
}
