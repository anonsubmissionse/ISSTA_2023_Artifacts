/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 22:44:34 GMT 2022
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "-77))3mdgLW\"");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-110);
      byteArray0[4] = (byte) (-110);
      TiffField tiffField0 = new TiffField(529, 529, fieldTypeRational0, 529, 2774L, byteArray0, (ByteOrder) null, (byte) (-26));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2774, tiffField0.getOffset());
      assertEquals(529, tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals((-26), tiffField0.getSortHint());
      assertEquals(529, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 2138L, 4L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(4, tiffField0.getOffset());
      assertEquals("", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte)0, "");
      TiffField tiffField0 = new TiffField((byte)27, (-3139), fieldTypeByte0, (-2014L), 1296L, byteArray0, byteOrder0, (-2435));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-3139), tiffField0.getDirectoryType());
      assertEquals((-2435), tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tagInfo0.tag);
      assertEquals(1296, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(400, 50, fieldTypeShort0, 1225L, (-1179L), byteArray0, byteOrder0, (byte)29);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1179), tiffField0.getOffset());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getTag());
      assertEquals(400, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32773, 32773, fieldTypeRational0, 32773, (-1079L), byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getTag();
      assertEquals(32773, int0);
      assertEquals((-1079), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(32773, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1616), "\"?1F");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1616), (-1616), fieldTypeAscii0, (-1616), (-1616), (byte[]) null, byteOrder0, (-1616));
      int int0 = tiffField0.getTag();
      assertEquals((-1616), tiffField0.getOffset());
      assertEquals((-1616), tiffField0.getDirectoryType());
      assertEquals((-1616), int0);
      assertEquals((-1616), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)102;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 1L, 1L, byteArray0, (ByteOrder) null, 0);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 1327L, (-479L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-479), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1387, 1387, fieldTypeAscii0, 1387, (-1L), byteArray0, byteOrder0, (byte)11);
      int int0 = tiffField0.getSortHint();
      assertEquals(1387, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(11, int0);
      assertEquals(1387, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50710, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50710, 0, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 50710);
      tiffField0.getOffset();
      assertEquals(50710, tiffField0.getSortHint());
      assertEquals(50710, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-4072), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4072), (-4072), fieldTypeAscii0, 300L, 2231L, (byte[]) null, byteOrder0, 1612);
      int int0 = tiffField0.getOffset();
      assertEquals(1612, tiffField0.getSortHint());
      assertEquals(2231, int0);
      assertEquals((-4072), tiffField0.getDirectoryType());
      assertEquals((-4072), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[23];
      byteArray0[2] = (byte)104;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, (-1315L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1315), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-100);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 1327L, (-479L), byteArray0, byteOrder0, (-1236));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1236), tiffField0.getSortHint());
      assertEquals((-479), tiffField0.getOffset());
      assertEquals((-25600), int0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 1L, (-401L), byteArray0, byteOrder0, (byte)98);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(98, tiffField0.getSortHint());
      assertEquals((-401), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)90;
      TiffField tiffField0 = new TiffField((-1554), 3199, fieldTypeByte0, 1L, 1683L, byteArray0, (ByteOrder) null, 1235);
      tiffField0.getIntValue();
      assertEquals((-1554), tiffField0.getTag());
      assertEquals(1683, tiffField0.getOffset());
      assertEquals(3199, tiffField0.getDirectoryType());
      assertEquals(1235, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-107);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 831, fieldTypeLong0, 1, 831, byteArray0, byteOrder0, (-3206));
      tiffField0.getIntValue();
      assertEquals(831, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-3206), tiffField0.getSortHint());
      assertEquals(831, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "-77))3mdgLW\"");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(529, 529, fieldTypeRational0, 0L, 2774L, byteArray0, (ByteOrder) null, (byte) (-26));
      tiffField0.getIntArrayValue();
      assertEquals(529, tiffField0.getTag());
      assertEquals(529, tiffField0.getDirectoryType());
      assertEquals(2774, tiffField0.getOffset());
      assertEquals((-26), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37395, 449, fieldTypeDouble0, 0L, 449, byteArray0, byteOrder0, 42035);
      tiffField0.getFieldTypeName();
      assertEquals(449, tiffField0.getDirectoryType());
      assertEquals(449, tiffField0.getOffset());
      assertEquals(37395, tiffField0.getTag());
      assertEquals(42035, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50710, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50710, 0, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 50710);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50710, tiffField0.getSortHint());
      assertEquals(50710, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 1844, (FieldType) null, 1459L, 1144L, byteArray0, (ByteOrder) null, (-1990));
      tiffField0.getFieldType();
      assertEquals((-1990), tiffField0.getSortHint());
      assertEquals(1144, tiffField0.getOffset());
      assertEquals(1844, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, ".aki_Lg1");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, (-1974L), (-318L), byteArray0, byteOrder0, (byte)3);
      tiffField0.getFieldType();
      assertEquals((-318), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1969), "Missing value: ");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1969), 18249, fieldTypeAscii0, 1L, 1L, byteArray0, (ByteOrder) null, (byte) (-1));
      tiffField0.getFieldType();
      assertEquals(18249, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1969), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)93;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 1, (-473L), byteArray0, byteOrder0, 5269);
      tiffField0.getDoubleValue();
      assertEquals(5269, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-473), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4, "7&&>I<{MC");
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-90);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "7&&>I<{MC");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeShort0, 1L, 4, byteArray0, byteOrder0, 1280);
      tiffField0.getDoubleValue();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
      assertEquals(1280, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2882, 2882, fieldTypeDouble0, 2882, 0L, byteArray0, byteOrder0, 2882);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2882, tiffField0.getDirectoryType());
      assertEquals(2882, tiffField0.getSortHint());
      assertEquals(2882, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, ".aki_Lg1");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, (-1974L), (-318L), byteArray0, byteOrder0, (byte)3);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-318), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2218, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2218, fieldTypeLong0, 2218, 1821L, byteArray0, byteOrder0, (byte)84);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2218, int0);
      assertEquals(84, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1821, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1, ")");
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37395, 449, fieldTypeDouble0, 449, 449, byteArray0, byteOrder0, 42035);
      tiffField0.getCount();
      assertEquals(42035, tiffField0.getSortHint());
      assertEquals(449, tiffField0.getOffset());
      assertEquals(37395, tiffField0.getTag());
      assertEquals(449, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(37395, ")");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37395, 449, fieldTypeDouble0, (-10L), 449, byteArray0, byteOrder0, 42035);
      tiffField0.getCount();
      assertEquals(42035, tiffField0.getSortHint());
      assertEquals(449, tiffField0.getOffset());
      assertEquals(449, tiffField0.getDirectoryType());
      assertEquals(37395, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-61), "S");
      TiffField tiffField0 = new TiffField(0, 1078, fieldTypeLong0, 0L, (-199L), (byte[]) null, (ByteOrder) null, (-1170));
      tiffField0.getBytesLength();
      assertEquals(1078, tiffField0.getDirectoryType());
      assertEquals((-199), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1170), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1411), "d(");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1411), (-1411), fieldTypeRational0, (-1411), (-1411), byteArray0, (ByteOrder) null, 0);
      tiffField0.getBytesLength();
      assertEquals((-1411), tiffField0.getOffset());
      assertEquals((-1411), tiffField0.getDirectoryType());
      assertEquals((-1411), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3540, 1793, fieldTypeLong0, (-2827L), 3540, byteArray0, (ByteOrder) null, (byte)33);
      tiffField0.getByteOrder();
      assertEquals(1793, tiffField0.getDirectoryType());
      assertEquals(3540, tiffField0.getOffset());
      assertEquals(3540, tiffField0.getTag());
      assertEquals(33, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50735, 50735, fieldTypeLong0, 50735, (-1891L), byteArray0, byteOrder0, 0);
      tiffField0.getByteArrayValue();
      assertEquals(50735, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1891), tiffField0.getOffset());
      assertEquals(50735, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1752), (-1752), fieldTypeLong0, 404L, 404L, (byte[]) null, byteOrder0, 3351);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, (-1L), (-302L), byteArray0, byteOrder0, (-1397));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1, "):l$");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(10, 10, (FieldType) null, (-1328L), 10, byteArray0, byteOrder0, (byte)84);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 2732L, 0, byteArray0, byteOrder0, (-2258));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2859, 2859, fieldTypeByte0, (-4442L), 3806L, byteArray0, byteOrder0, 3455);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "GDALNoData");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 784, fieldTypeRational0, 1L, 4L, byteArray0, byteOrder0, (-2));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte)0, "");
      TiffField tiffField0 = new TiffField((byte)27, (-3139), fieldTypeByte0, (-2014L), 1296L, byteArray0, byteOrder0, (-2435));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32773, 32773, (FieldType) null, 32773, 4L, byteArray0, byteOrder0, 924);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-737), "SpatialFrequencyResponse");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-737), (byte)0, fieldTypeRational0.FLOAT, (-938L), 0L, byteArray0, byteOrder0, 2410);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "-77))3mdgLW\"");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(529, 529, fieldTypeRational0, 1, 2795L, byteArray0, (ByteOrder) null, (byte) (-26));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1578, 1578, (FieldType) null, (-3277L), 3533L, byteArray0, byteOrder0, 1578);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2115), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-751), (-751), fieldTypeFloat0, (-751), (-2115), byteArray0, byteOrder0, (-1959));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(272, 0, fieldTypeFloat0, 1L, 0, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2145100203, 2145100203, (FieldType) null, 2145100203, 0L, byteArray0, byteOrder0, 3794);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-72), 250, (FieldType) null, (-72), 250, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(184, 184, fieldTypeShort0, (-1750L), 184, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "-77))3mdgLW\"");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(529, 529, fieldTypeRational0, 1, 2774L, byteArray0, (ByteOrder) null, (byte) (-26));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte)0, "");
      TiffField tiffField0 = new TiffField((byte)27, (-3139), fieldTypeByte0, (-2014L), 1296L, byteArray0, byteOrder0, (-2435));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 2666L, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-670), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 319, fieldTypeFloat0, (-544L), 65535, byteArray0, byteOrder0, 34908);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1, ")");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)99, fieldTypeDouble0, 1, 1332L, byteArray0, byteOrder0, 42034);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-4072), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4072), (-4072), fieldTypeAscii0, 300L, 2231L, (byte[]) null, byteOrder0, 1612);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1198, (-2299), fieldTypeByte0, (-4976L), (byte)37, byteArray0, byteOrder0, (byte)37);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(42, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(42, (-950), fieldTypeLong0, 1L, (-4255L), byteArray0, byteOrder0, 3);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2376), (-2376), (FieldType) null, 1558L, 0L, byteArray0, byteOrder0, (-3688));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte)0, "");
      TiffField tiffField0 = new TiffField((byte)27, (-3139), fieldTypeByte0, (-2014L), 1296L, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-978), 50, fieldTypeLong0, (-978), (-1215L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[61];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1443), 0, fieldTypeByte0, 1276L, 0, byteArray0, byteOrder0, (-1195));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0.FLOAT, 1L, (-3318L), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33922, 33922, (FieldType) null, 3005L, 3005L, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(440, 4641, fieldTypeShort0, (-1137L), 440, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1, ")");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, (byte)99, fieldTypeDouble0, (byte)1, 1L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1616), "\"?1F");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1616), (-1616), fieldTypeAscii0, (-1616), (-1616), (byte[]) null, byteOrder0, (-1616));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1021), "|Y,(f(&(+L\"OK8k3)");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3365, 50778, fieldTypeShort0, (-1021), (-813L), byteArray0, byteOrder0, 50969);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2144608837, 50, (FieldType) null, 50, 50, byteArray0, byteOrder0, (-962));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("TUCwyxkY3uK7s/");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "TUCwyxkY3uK7s/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, ".aki_Lg1");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, (-1974L), (-318L), byteArray0, byteOrder0, (byte)3);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-=");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "Y28tl]/.o6Oa");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5), (-5), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(37395, ")");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37395, 449, fieldTypeDouble0, (-10L), 449, byteArray0, byteOrder0, 42035);
      MockPrintStream mockPrintStream0 = new MockPrintStream("IrO");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2355), (-2355), (FieldType) null, 3923L, 0L, byteArray0, byteOrder0, 21);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(184, 184, fieldTypeShort0, (-1750L), 184, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[61];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1443), 0, fieldTypeByte0, 1276L, 0, byteArray0, byteOrder0, (-1195));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1195), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1443), tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50710, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)51, 0, fieldTypeDouble0.ASCII, (byte)51, 1L, byteArray0, byteOrder0, (-3214));
      tiffField0.getByteOrder();
      assertEquals((-3214), tiffField0.getSortHint());
      assertEquals(51, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3558), (-3558), fieldTypeAscii0, 0L, (-1024L), byteArray0, byteOrder0, (-3558));
      tiffField0.getByteArrayValue();
      assertEquals((-1024), tiffField0.getOffset());
      assertEquals((-3558), tiffField0.getSortHint());
      assertEquals((-3558), tiffField0.getDirectoryType());
      assertEquals((-3558), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[61];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1443), 0, fieldTypeByte0, 1276L, 0, byteArray0, byteOrder0, (-1195));
      tiffField0.getFieldType();
      assertEquals((-1443), tiffField0.getTag());
      assertEquals((-1195), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-2857), fieldTypeAscii0, (-118L), (-2857), byteArray0, byteOrder0, (-1467));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1467), tiffField0.getSortHint());
      assertEquals((-2857), tiffField0.getOffset());
      assertEquals((-2857), int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 1);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1167), "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1167), (-2320), fieldTypeAscii0, 1989L, (-1167), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals((-2320), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1167), int0);
      assertEquals((-1167), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3558), (-3558), fieldTypeAscii0, 0L, (-1024L), byteArray0, byteOrder0, (-3558));
      tiffField0.getCount();
      assertEquals((-3558), tiffField0.getDirectoryType());
      assertEquals((-1024), tiffField0.getOffset());
      assertEquals((-3558), tiffField0.getSortHint());
      assertEquals((-3558), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0, 50, 50, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getBytesLength();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37395, 449, fieldTypeDouble0, 0L, 449, byteArray0, byteOrder0, 42035);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeLong0, 18, 18, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getTag());
      assertEquals(18L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(18, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1595), (-1595), fieldTypeFloat0, 750L, (-1595), byteArray0, byteOrder0, (byte) (-62));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@6c0e2baa for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(529, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(529, 529, fieldTypeRational0, 529, 529, byteArray0, (ByteOrder) null, (byte) (-116));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1255), (-1255), fieldTypeByte0, 4L, (-1255), byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@52a29861 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[221];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)114, fieldTypeFloat0, (byte)114, (-464L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(114L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-464), tiffField0.getOffset());
      assertEquals(114, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "7ImG");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(263, 1, fieldTypeLong0, 750L, (-130L), byteArray0, byteOrder0, (byte) (-61));
      tiffField0.getDoubleArrayValue();
      assertEquals(263, tiffField0.getTag());
      assertEquals((-130), tiffField0.getOffset());
      assertEquals((-61), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(750L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 1327L, (-479L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals((-479), tiffField0.getOffset());
      assertEquals(1327L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2913, (String) null);
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2146870955), (-2146870955), fieldTypeRational0, (-2146870955), 2913, byteArray0, byteOrder0, (byte)2);
      assertEquals(4901544, tiffField0.getBytesLength());
      
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-2146870955), tiffField0.getTag());
      assertEquals((-2146870955), tiffField0.getDirectoryType());
      assertEquals((-2146870955L), tiffField0.getCount());
      assertEquals(2913, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[221];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)114, fieldTypeFloat0, (byte)114, (-464L), byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@128615b5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1291), (-1291), fieldTypeShort0, 1131L, (-1291), byteArray0, byteOrder0, (-1291));
      tiffField0.getIntArrayValue();
      assertEquals((-1291), tiffField0.getTag());
      assertEquals((-1291), tiffField0.getOffset());
      assertEquals(1131L, tiffField0.getCount());
      assertEquals((-1291), tiffField0.getSortHint());
      assertEquals(2262, tiffField0.getBytesLength());
      assertEquals((-1291), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(529, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[8];
      byteArray0[5] = (byte) (-116);
      TiffField tiffField0 = new TiffField(529, 529, fieldTypeRational0, 529, 529, byteArray0, (ByteOrder) null, (byte) (-116));
      tiffField0.getIntArrayValue();
      assertEquals((-116), tiffField0.getSortHint());
      assertEquals(529L, tiffField0.getCount());
      assertEquals(4232, tiffField0.getBytesLength());
      assertEquals(529, tiffField0.getOffset());
      assertEquals(529, tiffField0.getDirectoryType());
      assertEquals(529, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(529, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(529, 529, fieldTypeRational0, 529, 529, byteArray0, (ByteOrder) null, (byte) (-116));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, (-1315L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1315), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "7ImG");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(263, 1, fieldTypeLong0, 750L, (-130L), byteArray0, byteOrder0, (byte) (-61));
      tiffField0.getIntArrayValue();
      assertEquals(3000, tiffField0.getBytesLength());
      assertEquals((-130), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-61), tiffField0.getSortHint());
      assertEquals(750L, tiffField0.getCount());
      assertEquals(263, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2882, 2882, fieldTypeDouble0, 2882, 0L, byteArray0, byteOrder0, 2882);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@52584998
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 93, fieldTypeLong0, 93, 0, byteArray0, byteOrder0, (byte)69);
      String string0 = tiffField0.getTagName();
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(93, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x0)", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33446, 33446, fieldTypeLong0, 33446, 255L, byteArray0, byteOrder0, (byte)110);
      String string0 = tiffField0.getTagName();
      assertEquals(33446, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(33446, tiffField0.getTag());
      assertEquals("MD ScalePixel", string0);
      assertEquals(110, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(67, " 9`@e#b");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 67, fieldTypeDouble0, 1, 787L, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[221];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)114, fieldTypeFloat0, (byte)114, (-464L), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(114, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (55)", string0);
      assertEquals(114L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-464), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[74];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1417), (-1417), fieldTypeByte0, 1324L, (-1417), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1417), tiffField0.getOffset());
      assertEquals(1324, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1324L, tiffField0.getCount());
      assertEquals((-1417), tiffField0.getTag());
      assertEquals((-1417), tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1595), (-1595), fieldTypeFloat0, 750L, (-1595), byteArray0, byteOrder0, (byte) (-62));
      String string0 = tiffField0.getValueDescription();
      assertEquals(3000, tiffField0.getBytesLength());
      assertEquals((-62), tiffField0.getSortHint());
      assertEquals((-1595), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-1595), tiffField0.getTag());
      assertEquals(750L, tiffField0.getCount());
      assertEquals((-1595), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[319];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37305, 37305, fieldTypeDouble0, 37305, 37305, byteArray0, byteOrder0, 37305);
      String string0 = tiffField0.toString();
      assertEquals(298440, tiffField0.getBytesLength());
      assertEquals(37305, tiffField0.getOffset());
      assertEquals("37305 (0x91b9: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (37305 Double)", string0);
      assertEquals(37305, tiffField0.getDirectoryType());
      assertEquals(37305, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2882, 2882, fieldTypeDouble0, 2882, 0L, byteArray0, byteOrder0, 2882);
      MockFile mockFile0 = new MockFile("... (");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(23056, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2882, tiffField0.getTag());
      assertEquals(42L, mockFile0.length());
      assertEquals(2882, tiffField0.getSortHint());
      assertEquals(2882, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33446, 33446, fieldTypeLong0, 33446, 255L, byteArray0, byteOrder0, (byte)110);
      String string0 = tiffField0.toString();
      assertEquals(110, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals("33446 (0x82a6: MD ScalePixel): 0 (33446 SLong)", string0);
      assertEquals(133784, tiffField0.getBytesLength());
      assertEquals(33446, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1255), (-1255), fieldTypeByte0, 4L, (-1255), byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(4L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1255), tiffField0.getOffset());
      assertEquals((-1255), tiffField0.getTag());
      assertEquals((-1255), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[146];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)114, (byte)114, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.toString();
      assertEquals("0 (0x0: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (73) (114 SShort)", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(114, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1291), (-1291), fieldTypeShort0, 1131L, (-1291), byteArray0, byteOrder0, (-1291));
      String string0 = tiffField0.toString();
      assertEquals((-1291), tiffField0.getDirectoryType());
      assertEquals((-1291), tiffField0.getSortHint());
      assertEquals(2262, tiffField0.getBytesLength());
      assertEquals("-1291 (0xfffffaf5: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (1131 Short)", string0);
      assertEquals((-1291), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1168, "");
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-94), (byte) (-94), fieldTypeFloat0.ASCII, (byte)107, (byte) (-94), byteArray0, byteOrder0, (byte)107);
      try { 
        fieldTypeFloat0.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: -94 (0xffffffa2: Unknown Tag): java.lang.String@0000000004, java.lang.String@0000000005, java.lang.String@0000000006, java.lang.String@0000000007, java.lang.String@0000000008, java.lang.String@0000000009, java.lang.String@0000000010, java.lang.String@0000000011, java.lang.String@0000000012, java.lang.String@0000000013, java.lang.String@0000000014, java.lang.String@0000000015, java.lang.String@0000000016, java.lang.String@0000000017, java.lang.String@0000000018, java.lang.String@0000000019, java.lang.String@0000000020, java.lang.String@0000000021, java.lang.String@0000000022, java.lang.String@0000000023, java.lang.String@0000000024, java.lang.String@0000000025, java.lang.String@0000000026, java.lang.String@0000000027, java.lang.String@0000000028, java.lang.String@0000000029, java.lang.String@0000000030, java.lang.String@0000000031, java.lang.String@0000000032, java.lang.String@0000000033, java.lang.String@0000000034, java.lang.String@0000000035, java.lang.String@0000000036, java.lang.String@0000000037, java.lang.String@0000000038, java.lang.String@0000000039, java.lang.String@0000000040, java.lang.String@0000000041, java.lang.String@0000000042, java.lang.String@0000000043, java.lang.String@0000000044, java.lang.String@0000000045, java.lang.String@0000000046, java.lang.String@0000000047, java.lang.String@0000000048, java.lang.String@0000000049, java.lang.String@0000000050, java.lang.String@0000000051, java.lang.String@0000000052, java.lang.String@0000000053 (107 ASCII) (org.apache.commons.imaging.formats.tiff.TiffField)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)115, (byte)115, fieldTypeFloat0.ASCII, (byte)115, (byte)115, byteArray0, byteOrder0, (byte)115);
      try { 
        fieldTypeFloat0.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: 115 (0x73: Unknown Tag): java.lang.String@0000000003, java.lang.String@0000000004, java.lang.String@0000000005, java.lang.String@0000000006, java.lang.String@0000000007, java.lang.String@0000000008, java.lang.String@0000000009, java.lang.String@0000000010, java.lang.String@0000000011, java.lang.String@0000000012, java.lang.String@0000000013, java.lang.String@0000000014, java.lang.String@0000000015, java.lang.String@0000000016, java.lang.String@0000000017, java.lang.String@0000000018, java.lang.String@0000000019, java.lang.String@0000000020, java.lang.String@0000000021, java.lang.String@0000000022, java.lang.String@0000000023, java.lang.String@0000000024, java.lang.String@0000000025, java.lang.String@0000000026, java.lang.String@0000000027, java.lang.String@0000000028, java.lang.String@0000000029, java.lang.String@0000000030, java.lang.String@0000000031, java.lang.String@0000000032, java.lang.String@0000000033, java.lang.String@0000000034, java.lang.String@0000000035, java.lang.String@0000000036, java.lang.String@0000000037, java.lang.String@0000000038, java.lang.String@0000000039, java.lang.String@0000000040, java.lang.String@0000000041, java.lang.String@0000000042, java.lang.String@0000000043, java.lang.String@0000000044, java.lang.String@0000000045, java.lang.String@0000000046, java.lang.String@0000000047, java.lang.String@0000000048, java.lang.String@0000000049, java.lang.String@0000000050, java.lang.String@0000000051, java.lang.String@0000000052, java.lang.String@0000000053... (66) (115 ASCII) (org.apache.commons.imaging.formats.tiff.TiffField)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1224), (-1224), fieldTypeAscii0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "oI `yc7");
      assertEquals((-1224), tiffField0.getDirectoryType());
      assertEquals((-1224), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1255), (-1255), fieldTypeByte0, 4L, (-1255), byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1255), tiffField0.getDirectoryType());
      assertEquals((-1255), tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1255), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(184, 184, fieldTypeShort0, (-1750L), 184, byteArray0, byteOrder0, (byte)1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(184, tiffField0.getOffset());
      assertEquals(184, tiffField0.getDirectoryType());
      assertEquals(184, tiffField0.getTag());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[319];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37305, 37305, fieldTypeDouble0, 37305, 37305, byteArray0, byteOrder0, 37305);
      tiffField0.getFieldTypeName();
      assertEquals(37305, tiffField0.getTag());
      assertEquals(37305, tiffField0.getOffset());
      assertEquals(37305, tiffField0.getSortHint());
      assertEquals(37305, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte)0, "Missing value: ");
      TiffField tiffField0 = new TiffField((byte)27, (byte) (-123), fieldTypeByte0, (byte)27, (byte)27, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(27, tiffField0.getTag());
      assertEquals((-123), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 255L, 255L, byteArray0, byteOrder0, (byte) (-117));
      int int0 = tiffField0.getSortHint();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-117), int0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(184, 184, fieldTypeShort0, (-1750L), 184, byteArray0, byteOrder0, (byte)1);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals("184 (0xb8: Unknown Tag): ", string0);
      assertEquals(184, tiffField0.getDirectoryType());
      assertEquals(184, tiffField0.getOffset());
      assertEquals((-3500), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[224];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48, 93, fieldTypeLong0, 93, 48, byteArray0, byteOrder0, (byte)69);
      tiffField0.dump();
      assertEquals(93L, tiffField0.getCount());
      assertEquals(48, tiffField0.getOffset());
      assertEquals(372, tiffField0.getBytesLength());
      assertEquals(93, tiffField0.getDirectoryType());
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeLong0, 20, 20, byteArray0, (ByteOrder) null, 20);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(20, 20);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(20, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SLong", string0);
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(20, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(917, 917, fieldTypeDouble0, 917, 917, byteArray0, byteOrder0, 917);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(917, tiffField0.getDirectoryType());
      assertEquals(917, tiffField0.getTag());
      assertEquals(917, tiffField0.getSortHint());
      assertEquals(917L, tiffElement0.offset);
  }
}
