/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 00:09:20 GMT 2022
 */

package org.apache.commons.imaging.formats.tiff.taginfos;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteOrder;
import java.util.List;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TagInfo_ESTest extends TagInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TagInfo tagInfo0 = new TagInfo("", 1, fieldTypeLong0);
      String string0 = tagInfo0.toString();
      assertEquals((-1), tagInfo0.length);
      assertEquals("[TagInfo. tag: 1 (0x1, name: ]", string0);
      assertFalse(tagInfo0.isOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TagInfo tagInfo0 = new TagInfo("", 0, fieldTypeLong0, 197);
      String string0 = tagInfo0.getDescription();
      assertEquals(197, tagInfo0.length);
      assertFalse(tagInfo0.isOffset());
      assertEquals("0 (0x0: ): ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-796), "Cvh@pjwd~rIL%a");
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfo tagInfo0 = new TagInfo("z3)s$E", 2624, fieldTypeFloat0, 2624, tiffDirectoryType0, true);
      boolean boolean0 = tagInfo0.isOffset();
      assertEquals(2624, tagInfo0.tag);
      assertTrue(boolean0);
      assertEquals(2624, tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1070, (String) null);
      TagInfo tagInfo0 = new TagInfo((String) null, 1070, fieldTypeAscii0, 2323);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      tagInfo0.encodeValue(fieldTypeAscii0, "", byteOrder0);
      assertEquals(2323, tagInfo0.length);
      assertEquals(1070, tagInfo0.tag);
      assertFalse(tagInfo0.isOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-796), "Cvh@pjwd~rIL%a");
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfo tagInfo0 = new TagInfo("z3)s$E", 2624, fieldTypeFloat0, 2624, tiffDirectoryType0, true);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2624, (-1574), fieldTypeFloat0, 0L, (-1L), byteArray0, byteOrder0, 1750);
      Object object0 = tagInfo0.getValue(tiffField0);
      tagInfo0.encodeValue(fieldTypeFloat0, object0, byteOrder0);
      assertEquals(2624, tagInfo0.tag);
      assertTrue(tagInfo0.isOffset());
      assertEquals(2624, tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TagInfo tagInfo0 = new TagInfo("", (-1), (FieldType) null);
      // Undeclared exception!
      try { 
        tagInfo0.getValue((TiffField) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfo tagInfo0 = new TagInfo("", 0, fieldTypeByte0, 0, tiffDirectoryType0);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-243), fieldTypeByte0, (-1023L), (byte)1, byteArray0, byteOrder0, (-3565));
      // Undeclared exception!
      try { 
        tagInfo0.getValue(tiffField0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      List<FieldType> list0 = FieldType.SHORT_OR_LONG;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfo tagInfo0 = new TagInfo("/#LJBfL)qO3Q8*s", 1914, list0, 1914, tiffDirectoryType0, true);
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      try { 
        tagInfo0.encodeValue(fieldTypeLong0, fieldTypeLong0.ASCII, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii@2 (org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfo tagInfo0 = null;
      try {
        tagInfo0 = new TagInfo("", (-1), (List<FieldType>) null, (-273), tiffDirectoryType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfo tagInfo0 = null;
      try {
        tagInfo0 = new TagInfo(" (0x", (-3030), (List<FieldType>) null, (-3030), tiffDirectoryType0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      List<FieldType> list0 = FieldType.LONG_OR_IFD;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfo tagInfo0 = new TagInfo("X*) &V=Ze[>WBHuQ", (-1090), list0, (-1090), tiffDirectoryType0);
      assertFalse(tagInfo0.isOffset());
      assertEquals((-1090), tagInfo0.length);
      assertEquals((-1090), tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TagInfo tagInfo0 = new TagInfo("", 1, fieldTypeLong0);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeLong0, 1, (-1), byteArray0, byteOrder0, (-1957));
      // Undeclared exception!
      try { 
        tagInfo0.getValue(tiffField0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-614), "8'9w`tM'1iC");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-614), (-614), fieldTypeDouble0, (-1462L), 0L, byteArray0, byteOrder0, 517);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      // Undeclared exception!
      try { 
        tagInfo0.encodeValue(fieldTypeDouble0, tiffField0, byteOrder0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TagInfo tagInfo0 = new TagInfo("NOT(", (-1536), (FieldType) null, (-1536));
      boolean boolean0 = tagInfo0.isText();
      assertFalse(tagInfo0.isOffset());
      assertEquals((-1536), tagInfo0.tag);
      assertFalse(boolean0);
      assertEquals((-1536), tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfo tagInfo0 = new TagInfo("", (-2297), (FieldType) null, (-2297), tiffDirectoryType0, false);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        tagInfo0.encodeValue((FieldType) null, "", byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfo tagInfo0 = new TagInfo("", 0, fieldTypeByte0, 0, tiffDirectoryType0);
      boolean boolean0 = tagInfo0.isOffset();
      assertEquals(0, tagInfo0.length);
      assertFalse(boolean0);
      assertEquals(0, tagInfo0.tag);
  }
}
