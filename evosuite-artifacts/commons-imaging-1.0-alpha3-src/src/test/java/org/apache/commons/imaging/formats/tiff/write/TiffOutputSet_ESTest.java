/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:38:36 GMT 2022
 */

package org.apache.commons.imaging.formats.tiff.write;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteOrder;
import java.util.HashMap;
import java.util.List;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffImageData;
import org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputField;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputItem;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputSet;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputSummary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffOutputSet_ESTest extends TiffOutputSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      tiffOutputSet0.setGPSInDegrees((-235), 1703.925538071);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      tiffOutputSet0.setGPSInDegrees(0.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      tiffOutputSet0.setGPSInDegrees((-3279.416), (-3279.416));
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.getRootDirectory();
      assertNotNull(tiffOutputDirectory0);
      assertEquals(6, tiffOutputDirectory0.getItemLength());
      assertEquals(0, tiffOutputDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      HashMap<Integer, TiffOutputDirectory> hashMap0 = new HashMap<Integer, TiffOutputDirectory>();
      TiffOutputSummary tiffOutputSummary0 = new TiffOutputSummary(tiffOutputSet0.byteOrder, (TiffOutputDirectory) null, hashMap0);
      List<TiffOutputItem> list0 = tiffOutputSet0.getOutputItems(tiffOutputSummary0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      tiffOutputSet0.addInteroperabilityDirectory();
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.getInteroperabilityDirectory();
      assertNotNull(tiffOutputDirectory0);
      assertEquals((-4), tiffOutputDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      tiffOutputSet0.setGPSInDegrees((-3279.416), (-3279.416));
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.getExifDirectory();
      assertNotNull(tiffOutputDirectory0);
      assertEquals(6, tiffOutputDirectory0.getItemLength());
      assertEquals((-2), tiffOutputDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      tiffOutputSet0.getOrCreateRootDirectory();
      List<TiffOutputDirectory> list0 = tiffOutputSet0.getDirectories();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      tiffOutputSet0.setGPSInDegrees((-3279.416), (-3279.416));
      TiffOutputField tiffOutputField0 = tiffOutputSet0.findField(2);
      assertNotNull(tiffOutputField0);
      
      tiffOutputField0.setSortHint(2);
      TiffOutputField tiffOutputField1 = tiffOutputSet0.findField(tiffOutputField0.tagInfo);
      assertNotNull(tiffOutputField1);
      assertEquals(3, tiffOutputField1.count);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      tiffOutputSet0.setGPSInDegrees((-3279.416), (-3279.416));
      TiffOutputField tiffOutputField0 = tiffOutputSet0.findField(2);
      tiffOutputField0.setSortHint(2);
      TiffOutputField tiffOutputField1 = tiffOutputSet0.findField(2);
      assertEquals(2, tiffOutputField1.tag);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.addExifDirectory();
      assertEquals(6, tiffOutputDirectory0.getItemLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.addInteroperabilityDirectory();
      tiffOutputDirectory0.add((TiffOutputField) null);
      // Undeclared exception!
      try { 
        tiffOutputSet0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      // Undeclared exception!
      try { 
        tiffOutputSet0.removeField((TagInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.addGPSDirectory();
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips((TiffElement.DataElement[]) null, (-1073741824));
      tiffOutputDirectory0.setTiffImageData(tiffImageData_Strips0);
      HashMap<Integer, TiffOutputDirectory> hashMap0 = new HashMap<Integer, TiffOutputDirectory>();
      TiffOutputSummary tiffOutputSummary0 = new TiffOutputSummary(tiffOutputSet0.byteOrder, tiffOutputDirectory0, hashMap0);
      // Undeclared exception!
      try { 
        tiffOutputSet0.getOutputItems(tiffOutputSummary0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      TiffOutputSet tiffOutputSet1 = new TiffOutputSet(tiffOutputSet0.byteOrder);
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet1.getOrCreateExifDirectory();
      tiffOutputDirectory0.add((TiffOutputField) null);
      tiffOutputSet0.addDirectory(tiffOutputDirectory0);
      // Undeclared exception!
      try { 
        tiffOutputSet0.findField(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.addInteroperabilityDirectory();
      tiffOutputDirectory0.add((TiffOutputField) null);
      // Undeclared exception!
      try { 
        tiffOutputSet0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      tiffOutputSet0.getOrCreateRootDirectory();
      try { 
        tiffOutputSet0.addRootDirectory();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Output set already contains a directory of that type.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      tiffOutputSet0.addInteroperabilityDirectory();
      try { 
        tiffOutputSet0.addInteroperabilityDirectory();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Output set already contains a directory of that type.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      tiffOutputSet0.addGPSDirectory();
      try { 
        tiffOutputSet0.addGPSDirectory();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Output set already contains a directory of that type.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      // Undeclared exception!
      try { 
        tiffOutputSet0.addDirectory((TiffOutputDirectory) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.addInteroperabilityDirectory();
      tiffOutputDirectory0.add((TiffOutputField) null);
      // Undeclared exception!
      try { 
        tiffOutputSet0.toString("TiffOutputSet {\nbyteOrder: LITTLE_ENDIAN\n\tdirectory 0: Root (0)\n\tdirectory 1: Exif (-2)\n\tdirectory 2: Interoperability (-4)\n}\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      String string0 = tiffOutputSet0.toString((String) null);
      assertEquals("TiffOutputSet {\nbyteOrder: LITTLE_ENDIAN\n}\n", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      TiffOutputField tiffOutputField0 = tiffOutputSet0.findField(0);
      assertNull(tiffOutputField0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      tiffOutputSet0.getOrCreateGPSDirectory();
      tiffOutputSet0.removeField(3);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      tiffOutputSet0.addRootDirectory();
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.findDirectory(0);
      assertEquals(6, tiffOutputDirectory0.getItemLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      tiffOutputSet0.getOrCreateGPSDirectory();
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.findDirectory(6097);
      assertNull(tiffOutputDirectory0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.getOrCreateGPSDirectory();
      try { 
        tiffOutputSet0.addDirectory(tiffOutputDirectory0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Output set already contains a directory of that type.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.addGPSDirectory();
      TiffOutputDirectory tiffOutputDirectory1 = tiffOutputSet0.getGPSDirectory();
      assertSame(tiffOutputDirectory1, tiffOutputDirectory0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      String string0 = tiffOutputSet0.toString();
      assertEquals("TiffOutputSet {\nbyteOrder: LITTLE_ENDIAN\n}\n", string0);
      
      tiffOutputSet0.setGPSInDegrees(1382.04209618, (-1318.4978516));
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes(string0, 0, (-3), tiffDirectoryType0);
      TiffOutputField tiffOutputField0 = tiffOutputSet0.findField((TagInfo) tagInfoBytes0);
      assertNotNull(tiffOutputField0);
      assertEquals(0, tiffOutputField0.tag);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      tiffOutputSet0.setGPSInDegrees(16.0, 0.0);
      tiffOutputSet0.dump();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoByte tagInfoByte0 = new TagInfoByte("TiffOutputSet {\nbyteOrder: LITTLE_ENDIAN\n\tdirectory 0: Root (0)\n\tdirectory 1: Exif (-2)\n\tdirectory 2: Interoperability (-4)\n}\n", (-4), tiffDirectoryType0);
      TiffOutputField tiffOutputField0 = tiffOutputSet0.findField((TagInfo) tagInfoByte0);
      assertNull(tiffOutputField0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      tiffOutputSet0.setGPSInDegrees(16.0, 0.0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat("TiffOutputSet {\nbyteOrder: LITTLE_ENDIAN\n\tdirectory 0: Root (0)\n\tdirectory 1: Exif (-2)\n\tdirectory 2: Gps (-3)\n\t\tfield 2: [TagInfo. tag: 0 (0x0, name: GPSVersionID]\n\t\tfield 2: [TagInfo. tag: 3 (0x3, name: GPSLongitudeRef]\n\t\tfield 2: [TagInfo. tag: 1 (0x1, name: GPSLatitudeRef]\n\t\tfield 2: [TagInfo. tag: 4 (0x4, name: GPSLongitude]\n\t\tfield 2: [TagInfo. tag: 2 (0x2, name: GPSLatitude]\n}\n", (-2), tiffDirectoryType0);
      tiffOutputSet0.removeField((TagInfo) tagInfoFloat0);
      assertFalse(tagInfoFloat0.isText());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.getOrCreateGPSDirectory();
      assertEquals((-3), tiffOutputDirectory0.type);
      
      TiffOutputDirectory tiffOutputDirectory1 = tiffOutputSet0.getOrCreateGPSDirectory();
      assertSame(tiffOutputDirectory1, tiffOutputDirectory0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      tiffOutputSet0.setGPSInDegrees(16.0, 0.0);
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.getOrCreateExifDirectory();
      assertEquals(6, tiffOutputDirectory0.getItemLength());
      assertEquals((-2), tiffOutputDirectory0.type);
      assertNotNull(tiffOutputDirectory0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.getOrCreateExifDirectory();
      HashMap<Integer, TiffOutputDirectory> hashMap0 = new HashMap<Integer, TiffOutputDirectory>();
      TiffOutputSummary tiffOutputSummary0 = new TiffOutputSummary(tiffOutputSet0.byteOrder, tiffOutputDirectory0, hashMap0);
      List<TiffOutputItem> list0 = tiffOutputSet0.getOutputItems(tiffOutputSummary0);
      assertEquals(2, list0.size());
      assertEquals((-2), tiffOutputDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.getExifDirectory();
      assertNull(tiffOutputDirectory0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      List<TiffOutputDirectory> list0 = tiffOutputSet0.getDirectories();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.getRootDirectory();
      assertNull(tiffOutputDirectory0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.getInteroperabilityDirectory();
      assertNull(tiffOutputDirectory0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.addInteroperabilityDirectory();
      assertEquals((-4), tiffOutputDirectory0.type);
      
      TiffOutputDirectory tiffOutputDirectory1 = tiffOutputSet0.getOrCreateRootDirectory();
      assertNotNull(tiffOutputDirectory1);
      assertEquals(0, tiffOutputDirectory1.type);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      tiffOutputSet0.setGPSInDegrees(16.0, 0.0);
      try { 
        tiffOutputSet0.addExifDirectory();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Output set already contains a directory of that type.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      TiffOutputDirectory tiffOutputDirectory0 = tiffOutputSet0.getGPSDirectory();
      assertNull(tiffOutputDirectory0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      // Undeclared exception!
      try { 
        tiffOutputSet0.findField((TagInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.write.TiffOutputSet", e);
      }
  }
}
