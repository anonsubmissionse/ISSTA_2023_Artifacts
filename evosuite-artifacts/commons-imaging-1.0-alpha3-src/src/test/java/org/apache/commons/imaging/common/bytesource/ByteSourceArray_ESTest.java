/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:57:50 GMT 2022
 */

package org.apache.commons.imaging.common.bytesource;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ByteSourceArray_ESTest extends ByteSourceArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("", byteArray0);
      long long0 = byteSourceArray0.getLength();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      String string0 = byteSourceArray0.getDescription();
      assertEquals("2 byte array", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      byte[] byteArray1 = byteSourceArray0.getBlock((long) (byte)0, 1);
      assertFalse(byteArray1.equals((Object)byteArray0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("g~Uk!", (byte[]) null);
      byte[] byteArray0 = byteSourceArray0.getAll();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("", byteArray0);
      byte[] byteArray1 = byteSourceArray0.getAll();
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("BkgJ_j7Fb", (byte[]) null);
      // Undeclared exception!
      try { 
        byteSourceArray0.getLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("g~Uk!", (byte[]) null);
      // Undeclared exception!
      try { 
        byteSourceArray0.getBlock(0L, (-697));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      byte[] byteArray1 = byteSourceArray0.getBlock((long) (byte)0, (int) (byte)0);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("oSk&HU", byteArray0);
      try { 
        byteSourceArray0.getBlock(20L, (int) (byte)14);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not read block (block start: 20, block length: 14, data length: 20).
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        byteSourceArray0.getBlock((long) (byte) (-64), (int) (byte) (-64));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not read block (block start: -64, block length: -64, data length: 7).
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("oSk&HU", byteArray0);
      byte[] byteArray1 = byteSourceArray0.getAll();
      assertEquals(20, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((byte[]) null);
      // Undeclared exception!
      try { 
        byteSourceArray0.getInputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("j{zJ48Fh3", byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      assertEquals(5, inputStream0.available());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("oSk&HU", byteArray0);
      long long0 = byteSourceArray0.getLength();
      assertEquals(20L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("w-]Y~7S6FmgU\"", (byte[]) null);
      // Undeclared exception!
      try { 
        byteSourceArray0.getDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceArray", e);
      }
  }
}
