/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:51:35 GMT 2022
 */

package org.apache.commons.imaging.formats.png;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.formats.png.PngColorType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PngColorType_ESTest extends PngColorType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.getColorType(4);
      assertEquals(PngColorType.GREYSCALE_WITH_ALPHA, pngColorType0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PngColorType.getColorType((-1849));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.INDEXED_COLOR;
      boolean boolean0 = pngColorType0.isBitDepthAllowed(4);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PngColorType[] pngColorTypeArray0 = PngColorType.values();
      assertEquals(5, pngColorTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.valueOf("GREYSCALE");
      boolean boolean0 = pngColorType0.isGreyscale();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR_WITH_ALPHA;
      boolean boolean0 = pngColorType0.hasAlpha();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.getColorType(0);
      int int0 = pngColorType0.getValue();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.getColorType(false, false);
      assertEquals(PngColorType.TRUE_COLOR, pngColorType0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.getColorType(true, true);
      assertEquals(PngColorType.GREYSCALE_WITH_ALPHA, pngColorType0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.getColorType(true, false);
      assertEquals(PngColorType.TRUE_COLOR_WITH_ALPHA, pngColorType0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.getColorType(false, true);
      assertEquals(PngColorType.GREYSCALE, pngColorType0);
      
      boolean boolean0 = pngColorType0.isBitDepthAllowed(1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.getColorType(0);
      assertEquals(PngColorType.GREYSCALE, pngColorType0);
      
      boolean boolean0 = pngColorType0.isBitDepthAllowed(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.INDEXED_COLOR;
      int int0 = pngColorType0.getValue();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.INDEXED_COLOR;
      boolean boolean0 = pngColorType0.hasAlpha();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR_WITH_ALPHA;
      int int0 = pngColorType0.getSamplesPerPixel();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PngColorType pngColorType0 = PngColorType.TRUE_COLOR_WITH_ALPHA;
      boolean boolean0 = pngColorType0.isGreyscale();
      assertFalse(boolean0);
  }
}
