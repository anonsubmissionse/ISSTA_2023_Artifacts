/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 23:51:09 GMT 2022
 */

package org.apache.commons.imaging.color;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.color.ColorXyz;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ColorXyz_ESTest extends ColorXyz_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ColorXyz colorXyz0 = new ColorXyz((-250.81898), (-250.81898), (-250.81898));
      colorXyz0.hashCode();
      assertEquals((-250.81898), colorXyz0.Y, 0.01);
      assertEquals((-250.81898), colorXyz0.Z, 0.01);
      assertEquals((-250.81898), colorXyz0.X, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.GREEN;
      colorXyz0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.BLACK;
      ColorXyz colorXyz1 = new ColorXyz(0.0, 1184.361672794, (-1925.59888201));
      boolean boolean0 = colorXyz0.equals(colorXyz1);
      assertEquals(0.0, colorXyz1.X, 0.01);
      assertEquals(1184.361672794, colorXyz1.Y, 0.01);
      assertEquals((-1925.59888201), colorXyz1.Z, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.GREEN;
      ColorXyz colorXyz1 = ColorXyz.BLUE;
      boolean boolean0 = colorXyz0.equals(colorXyz1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColorXyz colorXyz0 = new ColorXyz(0.0, 0.0, 331.74923026);
      ColorXyz colorXyz1 = ColorXyz.BLACK;
      boolean boolean0 = colorXyz0.equals(colorXyz1);
      assertFalse(colorXyz1.equals((Object)colorXyz0));
      assertFalse(boolean0);
      assertEquals(0.0, colorXyz0.Y, 0.01);
      assertEquals(0.0, colorXyz0.X, 0.01);
      assertEquals(331.74923026, colorXyz0.Z, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ColorXyz colorXyz0 = new ColorXyz(0.0, 0.0, 3352.395075);
      ColorXyz colorXyz1 = new ColorXyz(0.0, 0.0, 0.0);
      boolean boolean0 = colorXyz1.equals(colorXyz0);
      assertFalse(colorXyz0.equals((Object)colorXyz1));
      assertFalse(boolean0);
      assertEquals(0.0, colorXyz1.Y, 0.01);
      assertEquals(0.0, colorXyz1.Z, 0.01);
      assertEquals(0.0, colorXyz1.X, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColorXyz colorXyz0 = new ColorXyz(0.0, 3379.672060069648, 0.0);
      ColorXyz colorXyz1 = ColorXyz.BLACK;
      boolean boolean0 = colorXyz0.equals(colorXyz1);
      assertFalse(colorXyz1.equals((Object)colorXyz0));
      assertEquals(3379.672060069648, colorXyz0.Y, 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, colorXyz0.X, 0.01);
      assertEquals(0.0, colorXyz0.Z, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColorXyz colorXyz0 = new ColorXyz(0.0, 3379.672060069648, 0.0);
      ColorXyz colorXyz1 = ColorXyz.GREEN;
      boolean boolean0 = colorXyz0.equals(colorXyz1);
      assertFalse(boolean0);
      assertEquals(0.0, colorXyz0.Z, 0.01);
      assertEquals(0.0, colorXyz0.X, 0.01);
      assertEquals(3379.672060069648, colorXyz0.Y, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColorXyz colorXyz0 = new ColorXyz(0.0, 0.0, 0.0);
      ColorXyz colorXyz1 = ColorXyz.BLACK;
      boolean boolean0 = colorXyz0.equals(colorXyz1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.BLACK;
      boolean boolean0 = colorXyz0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorXyz colorXyz0 = new ColorXyz(0.0, 0.0, 0.0);
      boolean boolean0 = colorXyz0.equals(colorXyz0);
      assertTrue(boolean0);
      assertEquals(0.0, colorXyz0.X, 0.01);
      assertEquals(0.0, colorXyz0.Z, 0.01);
      assertEquals(0.0, colorXyz0.Y, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorXyz colorXyz0 = new ColorXyz(0.0, 0.0, 0.0);
      boolean boolean0 = colorXyz0.equals("{X: 0.0, Y: 0.0, Z: 0.0}");
      assertFalse(boolean0);
      assertEquals(0.0, colorXyz0.X, 0.01);
      assertEquals(0.0, colorXyz0.Z, 0.01);
      assertEquals(0.0, colorXyz0.Y, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorXyz colorXyz0 = new ColorXyz(0.0, 0.0, 0.0);
      String string0 = colorXyz0.toString();
      assertEquals("{X: 0.0, Y: 0.0, Z: 0.0}", string0);
  }
}
