/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 07 15:40:40 GMT 2022
 */

package org.asynchttpclient;

import org.junit.Test;
import static org.junit.Assert.*;
import org.asynchttpclient.HostStats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HostStats_ESTest extends HostStats_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-1L), 1217L);
      HostStats hostStats1 = new HostStats((-1L), (-1L));
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertFalse(boolean0);
      assertFalse(hostStats1.equals((Object)hostStats0));
      assertEquals(1216L, hostStats0.getHostConnectionCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, (-1L));
      HostStats hostStats1 = new HostStats((-1L), (-1L));
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertFalse(hostStats1.equals((Object)hostStats0));
      assertEquals((-1L), hostStats0.getHostIdleConnectionCount());
      assertEquals((-2L), hostStats1.getHostConnectionCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, 0L);
      long long0 = hostStats0.getHostIdleConnectionCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HostStats hostStats0 = new HostStats(2281L, 2281L);
      long long0 = hostStats0.getHostIdleConnectionCount();
      assertEquals(4562L, hostStats0.getHostConnectionCount());
      assertEquals(2281L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, 0L);
      long long0 = hostStats0.getHostConnectionCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HostStats hostStats0 = new HostStats(1155L, 1155L);
      long long0 = hostStats0.getHostConnectionCount();
      assertEquals(2310L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, 0L);
      long long0 = hostStats0.getHostActiveConnectionCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HostStats hostStats0 = new HostStats(1L, (-3557L));
      long long0 = hostStats0.getHostActiveConnectionCount();
      assertEquals((-3556L), hostStats0.getHostConnectionCount());
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-344L), (-344L));
      long long0 = hostStats0.getHostIdleConnectionCount();
      assertEquals((-344L), hostStats0.getHostActiveConnectionCount());
      assertEquals((-344L), long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-4929L), (-4929L));
      long long0 = hostStats0.getHostActiveConnectionCount();
      assertEquals((-4929L), long0);
      assertEquals((-9858L), hostStats0.getHostConnectionCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-344L), (-344L));
      long long0 = hostStats0.getHostConnectionCount();
      assertEquals((-688L), long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HostStats hostStats0 = new HostStats(52L, 52L);
      HostStats hostStats1 = new HostStats(52L, 52L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertTrue(boolean0);
      assertEquals(104L, hostStats1.getHostConnectionCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HostStats hostStats0 = new HostStats(23L, 23L);
      HostStats hostStats1 = new HostStats(35L, 23L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertFalse(boolean0);
      assertFalse(hostStats1.equals((Object)hostStats0));
      assertEquals(58L, hostStats1.getHostConnectionCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HostStats hostStats0 = new HostStats(23L, 23L);
      HostStats hostStats1 = new HostStats(23L, 35L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertEquals(58L, hostStats1.getHostConnectionCount());
      assertFalse(boolean0);
      assertFalse(hostStats1.equals((Object)hostStats0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-655L), (-655L));
      boolean boolean0 = hostStats0.equals("There are -1310 total connections, -655 are active and -655 are idle.");
      assertFalse(boolean0);
      assertEquals((-1310L), hostStats0.getHostConnectionCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HostStats hostStats0 = new HostStats(52L, 52L);
      boolean boolean0 = hostStats0.equals(hostStats0);
      assertEquals(104L, hostStats0.getHostConnectionCount());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-655L), (-655L));
      boolean boolean0 = hostStats0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals((-1310L), hostStats0.getHostConnectionCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HostStats hostStats0 = new HostStats(52L, 52L);
      hostStats0.hashCode();
      assertEquals(104L, hostStats0.getHostConnectionCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-655L), (-655L));
      String string0 = hostStats0.toString();
      assertEquals("There are -1310 total connections, -655 are active and -655 are idle.", string0);
  }
}
