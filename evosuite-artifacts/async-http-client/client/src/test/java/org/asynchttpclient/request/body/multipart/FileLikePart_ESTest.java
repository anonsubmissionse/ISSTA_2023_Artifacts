/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 07 15:49:10 GMT 2022
 */

package org.asynchttpclient.request.body.multipart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.nio.charset.Charset;
import org.apache.tomcat.util.buf.Utf8Encoder;
import org.asynchttpclient.request.body.multipart.ByteArrayPart;
import org.asynchttpclient.request.body.multipart.InputStreamPart;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileLikePart_ESTest extends FileLikePart_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Utf8Encoder utf8Encoder0 = new Utf8Encoder();
      Charset charset0 = utf8Encoder0.charset();
      InputStreamPart inputStreamPart0 = new InputStreamPart("T`2ag-Mp7Jr(%(u.R@", pipedInputStream0, "d5zMY?J{q4i1Oi", 2246L, "", charset0, "T`2ag-Mp7Jr(%(u.R@", "");
      String string0 = inputStreamPart0.getFileName();
      assertEquals("", inputStreamPart0.getContentType());
      assertEquals("d5zMY?J{q4i1Oi", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayPart byteArrayPart0 = new ByteArrayPart("null", byteArray0, "", (Charset) null, "", "sdR1+FWEI", "wV");
      String string0 = byteArrayPart0.getFileName();
      assertEquals("", byteArrayPart0.getContentType());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InputStreamPart inputStreamPart0 = null;
      try {
        inputStreamPart0 = new InputStreamPart("org.apache.commons.io.filefilter.WildcardFileFilter", (InputStream) null, "org.apache.commons.io.filefilter.WildcardFileFilter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // inputStream
         //
         verifyException("org.asynchttpclient.util.Assertions", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayPart byteArrayPart0 = new ByteArrayPart("", byteArray0, "");
      String string0 = byteArrayPart0.toString();
      assertEquals("ByteArrayPart name= contentType= charset=null transferEncoding=null contentId=null dispositionType=null filename=null", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayPart byteArrayPart0 = new ByteArrayPart("", byteArray0, "");
      String string0 = byteArrayPart0.getFileName();
      assertNull(string0);
      assertEquals("", byteArrayPart0.getContentType());
  }
}
