/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 07 15:43:09 GMT 2022
 */

package org.asynchttpclient.ws;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.channel.Channel;
import io.netty.channel.embedded.EmbeddedChannel;
import io.netty.handler.codec.http.CombinedHttpHeaders;
import io.netty.handler.codec.http.HttpHeaders;
import java.sql.SQLTransientConnectionException;
import java.util.List;
import java.util.Vector;
import org.asynchttpclient.AsyncHandler;
import org.asynchttpclient.HttpResponseBodyPart;
import org.asynchttpclient.HttpResponseStatus;
import org.asynchttpclient.netty.ws.NettyWebSocket;
import org.asynchttpclient.ws.WebSocketListener;
import org.asynchttpclient.ws.WebSocketUpgradeHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WebSocketUpgradeHandler_ESTest extends WebSocketUpgradeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = new WebSocketUpgradeHandler((List<WebSocketListener>) null);
      HttpResponseStatus httpResponseStatus0 = mock(HttpResponseStatus.class, new ViolatedAssumptionAnswer());
      doReturn(614).when(httpResponseStatus0).getStatusCode();
      AsyncHandler.State asyncHandler_State0 = webSocketUpgradeHandler0.onStatusReceived(httpResponseStatus0);
      assertEquals(AsyncHandler.State.ABORT, asyncHandler_State0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder0.build();
      webSocketUpgradeHandler0.setWebSocket0((NettyWebSocket) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder0.build();
      Throwable throwable0 = mock(Throwable.class, new ViolatedAssumptionAnswer());
      webSocketUpgradeHandler0.onThrowable0(throwable0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder0.build();
      webSocketUpgradeHandler0.onStatusReceived0((HttpResponseStatus) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder0.build();
      webSocketUpgradeHandler0.onOpen0();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder0.build();
      HttpHeaders httpHeaders0 = mock(HttpHeaders.class, new ViolatedAssumptionAnswer());
      webSocketUpgradeHandler0.onHeadersReceived0(httpHeaders0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Vector<WebSocketListener> vector0 = new Vector<WebSocketListener>();
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = new WebSocketUpgradeHandler(vector0);
      webSocketUpgradeHandler0.onCompleted0();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = new WebSocketUpgradeHandler((List<WebSocketListener>) null);
      HttpResponseBodyPart httpResponseBodyPart0 = mock(HttpResponseBodyPart.class, new ViolatedAssumptionAnswer());
      webSocketUpgradeHandler0.onBodyPartReceived0(httpResponseBodyPart0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketListener webSocketListener0 = mock(WebSocketListener.class, new ViolatedAssumptionAnswer());
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder1 = webSocketUpgradeHandler_Builder0.addWebSocketListener(webSocketListener0);
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder1.build();
      CombinedHttpHeaders combinedHttpHeaders0 = new CombinedHttpHeaders(true);
      NettyWebSocket nettyWebSocket0 = new NettyWebSocket((Channel) null, combinedHttpHeaders0);
      webSocketUpgradeHandler0.setWebSocket(nettyWebSocket0);
      webSocketUpgradeHandler0.onOpen();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder0.build();
      EmbeddedChannel embeddedChannel0 = new EmbeddedChannel();
      NettyWebSocket nettyWebSocket0 = new NettyWebSocket(embeddedChannel0, (HttpHeaders) null);
      webSocketUpgradeHandler0.setWebSocket(nettyWebSocket0);
      NettyWebSocket nettyWebSocket1 = webSocketUpgradeHandler0.onCompleted();
      assertFalse(nettyWebSocket1.isReady());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      webSocketUpgradeHandler_Builder0.addWebSocketListener((WebSocketListener) null);
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder0.build();
      Throwable throwable0 = mock(Throwable.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        webSocketUpgradeHandler0.onThrowable(throwable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.ws.WebSocketUpgradeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder0.build();
      try { 
        webSocketUpgradeHandler0.onStatusReceived((HttpResponseStatus) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.ws.WebSocketUpgradeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketListener webSocketListener0 = mock(WebSocketListener.class, new ViolatedAssumptionAnswer());
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder1 = webSocketUpgradeHandler_Builder0.addWebSocketListener(webSocketListener0);
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder1.build();
      CombinedHttpHeaders combinedHttpHeaders0 = new CombinedHttpHeaders(true);
      NettyWebSocket nettyWebSocket0 = new NettyWebSocket((Channel) null, combinedHttpHeaders0);
      webSocketUpgradeHandler0.setWebSocket(nettyWebSocket0);
      SQLTransientConnectionException sQLTransientConnectionException0 = new SQLTransientConnectionException();
      webSocketUpgradeHandler0.onThrowable(sQLTransientConnectionException0);
      assertNull(sQLTransientConnectionException0.getSQLState());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = new WebSocketUpgradeHandler((List<WebSocketListener>) null);
      HttpResponseStatus httpResponseStatus0 = mock(HttpResponseStatus.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(httpResponseStatus0).getStatusCode();
      AsyncHandler.State asyncHandler_State0 = webSocketUpgradeHandler0.onStatusReceived(httpResponseStatus0);
      assertEquals(AsyncHandler.State.ABORT, asyncHandler_State0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = new WebSocketUpgradeHandler((List<WebSocketListener>) null);
      NettyWebSocket nettyWebSocket0 = webSocketUpgradeHandler0.onCompleted();
      assertNull(nettyWebSocket0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder0.build();
      HttpResponseStatus httpResponseStatus0 = mock(HttpResponseStatus.class, new ViolatedAssumptionAnswer());
      doReturn(101).when(httpResponseStatus0).getStatusCode();
      AsyncHandler.State asyncHandler_State0 = webSocketUpgradeHandler0.onStatusReceived(httpResponseStatus0);
      assertEquals(AsyncHandler.State.CONTINUE, asyncHandler_State0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder0.build();
      CombinedHttpHeaders combinedHttpHeaders0 = new CombinedHttpHeaders(true);
      NettyWebSocket nettyWebSocket0 = new NettyWebSocket((Channel) null, combinedHttpHeaders0);
      webSocketUpgradeHandler0.setWebSocket(nettyWebSocket0);
      webSocketUpgradeHandler0.onOpen();
      NettyWebSocket nettyWebSocket1 = webSocketUpgradeHandler0.onCompleted();
      assertTrue(nettyWebSocket1.isReady());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder0.build();
      // Undeclared exception!
      try { 
        webSocketUpgradeHandler0.onOpen();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.ws.WebSocketUpgradeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder0.build();
      HttpResponseBodyPart httpResponseBodyPart0 = mock(HttpResponseBodyPart.class, new ViolatedAssumptionAnswer());
      AsyncHandler.State asyncHandler_State0 = webSocketUpgradeHandler0.onBodyPartReceived(httpResponseBodyPart0);
      assertEquals(AsyncHandler.State.CONTINUE, asyncHandler_State0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketListener webSocketListener0 = mock(WebSocketListener.class, new ViolatedAssumptionAnswer());
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder1 = webSocketUpgradeHandler_Builder0.removeWebSocketListener(webSocketListener0);
      assertSame(webSocketUpgradeHandler_Builder0, webSocketUpgradeHandler_Builder1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WebSocketUpgradeHandler.Builder webSocketUpgradeHandler_Builder0 = new WebSocketUpgradeHandler.Builder();
      WebSocketUpgradeHandler webSocketUpgradeHandler0 = webSocketUpgradeHandler_Builder0.build();
      CombinedHttpHeaders combinedHttpHeaders0 = new CombinedHttpHeaders(true);
      AsyncHandler.State asyncHandler_State0 = webSocketUpgradeHandler0.onHeadersReceived(combinedHttpHeaders0);
      assertEquals(AsyncHandler.State.CONTINUE, asyncHandler_State0);
  }
}
