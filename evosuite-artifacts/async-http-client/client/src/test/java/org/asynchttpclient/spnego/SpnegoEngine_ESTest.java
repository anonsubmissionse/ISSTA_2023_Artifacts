/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 07 14:48:53 GMT 2022
 */

package org.asynchttpclient.spnego;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import javax.security.auth.login.Configuration;
import org.asynchttpclient.spnego.SpnegoEngine;
import org.asynchttpclient.spnego.SpnegoTokenGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SpnegoEngine_ESTest extends SpnegoEngine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SpnegoEngine spnegoEngine0 = SpnegoEngine.instance("com.sun.security.auth.module.Krb5LoginModule", "com.sun.security.auth.module.Krb5LoginModule", "com.sun.security.auth.module.Krb5LoginModule", "com.sun.security.auth.module.Krb5LoginModule", false, hashMap0, "");
      assertNotNull(spnegoEngine0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SpnegoEngine spnegoEngine0 = SpnegoEngine.instance("org.ietf.jgss.GSSException", "com.sun.security.auth.module.Krb5LoginModule", "org.ietf.jgss.GSSException", "org.ietf.jgss.GSSException", false, hashMap0, (String) null);
      assertNotNull(spnegoEngine0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.putIfAbsent("gUd}ZwcSB[x]Mz#", "gUd}ZwcSB[x]Mz#");
      SpnegoEngine spnegoEngine0 = SpnegoEngine.instance("", "", "", "", true, hashMap0, "");
      assertNotNull(spnegoEngine0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SpnegoEngine spnegoEngine0 = new SpnegoEngine("", "", "", (String) null, true, hashMap0, "", (SpnegoTokenGenerator) null);
      String string0 = spnegoEngine0.getCompleteServicePrincipalName("Resolved hostname={} to canonicalHostname={}");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SpnegoEngine spnegoEngine0 = SpnegoEngine.instance((String) null, (String) null, "YMq", "YMq", false, hashMap0, "YMq");
      Configuration configuration0 = spnegoEngine0.getLoginConfiguration();
      assertNull(configuration0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SpnegoEngine spnegoEngine0 = SpnegoEngine.instance("g:>O<4", "", "", "g:>O<4", false, (Map<String, String>) null, "");
      Configuration configuration0 = spnegoEngine0.getLoginConfiguration();
      assertNull(configuration0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SpnegoEngine spnegoEngine0 = SpnegoEngine.instance("A later token has already been processed", "A later token has already been processed", "FTeu?Ry @Jk&1+", "", false, hashMap0, "FTeu?Ry @Jk&1+");
      // Undeclared exception!
      try { 
        spnegoEngine0.generateToken("");
        fail("Expecting exception: VerifyError");
      
      } catch(VerifyError e) {
         //
         // Bad return type
         // Exception Details:
         //   Location:
         //     org/ietf/jgss/GSSManager.getInstance()Lorg/ietf/jgss/GSSManager; @10: areturn
         //   Reason:
         //     Type 'sun/security/jgss/GSSManagerImpl' (current frame, stack[0]) is not assignable to 'org/ietf/jgss/GSSManager' (from method signature)
         //   Current Frame:
         //     bci: @10
         //     flags: { }
         //     locals: { }
         //     stack: { 'sun/security/jgss/GSSManagerImpl' }
         //   Bytecode:
         //     0x0000000: b800 18bb 001a 59b7 001b b0            
         //
         verifyException("org.asynchttpclient.spnego.SpnegoEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SpnegoEngine spnegoEngine0 = SpnegoEngine.instance((String) null, (String) null, (String) null, (String) null, false, (Map<String, String>) null, "org.asynchttpclient.spnego.SpnegoEngine");
      // Undeclared exception!
      try { 
        spnegoEngine0.generateToken("HTTP@");
        fail("Expecting exception: VerifyError");
      
      } catch(VerifyError e) {
         //
         // Bad return type
         // Exception Details:
         //   Location:
         //     org/ietf/jgss/GSSManager.getInstance()Lorg/ietf/jgss/GSSManager; @10: areturn
         //   Reason:
         //     Type 'sun/security/jgss/GSSManagerImpl' (current frame, stack[0]) is not assignable to 'org/ietf/jgss/GSSManager' (from method signature)
         //   Current Frame:
         //     bci: @10
         //     flags: { }
         //     locals: { }
         //     stack: { 'sun/security/jgss/GSSManagerImpl' }
         //   Bytecode:
         //     0x0000000: b800 18bb 001a 59b7 001b b0            
         //
         verifyException("org.asynchttpclient.spnego.SpnegoEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SpnegoEngine spnegoEngine0 = SpnegoEngine.instance("sHtgOD^@", "sHtgOD^@", "sHtgOD^@", (String) null, true, hashMap0, "sHtgOD^@");
      String string0 = spnegoEngine0.getCompleteServicePrincipalName((String) null);
      assertEquals("sHtgOD^@", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SpnegoEngine spnegoEngine0 = SpnegoEngine.instance((String) null, (String) null, "YMq", "YMq", false, hashMap0, "YMq");
      // Undeclared exception!
      try { 
        spnegoEngine0.generateToken((String) null);
        fail("Expecting exception: VerifyError");
      
      } catch(VerifyError e) {
         //
         // Bad return type
         // Exception Details:
         //   Location:
         //     org/ietf/jgss/GSSManager.getInstance()Lorg/ietf/jgss/GSSManager; @10: areturn
         //   Reason:
         //     Type 'sun/security/jgss/GSSManagerImpl' (current frame, stack[0]) is not assignable to 'org/ietf/jgss/GSSManager' (from method signature)
         //   Current Frame:
         //     bci: @10
         //     flags: { }
         //     locals: { }
         //     stack: { 'sun/security/jgss/GSSManagerImpl' }
         //   Bytecode:
         //     0x0000000: b800 18bb 001a 59b7 001b b0            
         //
         verifyException("org.asynchttpclient.spnego.SpnegoEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SpnegoEngine spnegoEngine0 = new SpnegoEngine();
      String string0 = spnegoEngine0.getCompleteServicePrincipalName("GSSException _RO&Q");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put((String) null, "sHtgOD^@");
      SpnegoEngine spnegoEngine0 = SpnegoEngine.instance("sHtgOD^@", "sHtgOD^@", "sHtgOD^@", (String) null, true, hashMap0, "sHtgOD^@");
      Configuration configuration0 = spnegoEngine0.getLoginConfiguration();
      assertNotNull(configuration0);
  }
}
