/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 07 15:52:02 GMT 2022
 */

package org.asynchttpclient;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.atomic.AtomicBoolean;
import org.asynchttpclient.AsyncHttpClientState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AsyncHttpClientState_ESTest extends AsyncHttpClientState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AtomicBoolean atomicBoolean0 = new AtomicBoolean(true);
      AsyncHttpClientState asyncHttpClientState0 = new AsyncHttpClientState(atomicBoolean0);
      boolean boolean0 = asyncHttpClientState0.isClosed();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AtomicBoolean atomicBoolean0 = mock(AtomicBoolean.class, new ViolatedAssumptionAnswer());
      AsyncHttpClientState asyncHttpClientState0 = new AsyncHttpClientState(atomicBoolean0);
      boolean boolean0 = asyncHttpClientState0.isClosed();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AsyncHttpClientState asyncHttpClientState0 = new AsyncHttpClientState((AtomicBoolean) null);
      // Undeclared exception!
      try { 
        asyncHttpClientState0.isClosed();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.AsyncHttpClientState", e);
      }
  }
}
