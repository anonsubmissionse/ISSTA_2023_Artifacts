/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 06 22:10:55 GMT 2022
 */

package org.asynchttpclient.netty;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.channel.Channel;
import java.util.concurrent.Executor;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import org.asynchttpclient.AsyncHandler;
import org.asynchttpclient.Realm;
import org.asynchttpclient.Request;
import org.asynchttpclient.channel.ChannelPoolPartitioning;
import org.asynchttpclient.netty.NettyResponseFuture;
import org.asynchttpclient.netty.channel.ChannelState;
import org.asynchttpclient.netty.channel.ConnectionSemaphore;
import org.asynchttpclient.netty.request.NettyRequest;
import org.asynchttpclient.netty.timeout.TimeoutsHolder;
import org.asynchttpclient.proxy.ProxyServer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NettyResponseFuture_ESTest extends NettyResponseFuture_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AsyncHandler<TimeoutsHolder> asyncHandler0 = (AsyncHandler<TimeoutsHolder>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<TimeoutsHolder> nettyResponseFuture0 = new NettyResponseFuture<TimeoutsHolder>((Request) null, asyncHandler0, (NettyRequest) null, 2755, channelPoolPartitioning0, connectionSemaphore0, (ProxyServer) null);
      nettyResponseFuture0.setStreamConsumed(false);
      AsyncHandler<Object> asyncHandler1 = (AsyncHandler<Object>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning1 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore1 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<Object> nettyResponseFuture1 = new NettyResponseFuture<Object>((Request) null, asyncHandler1, (NettyRequest) null, 2755, channelPoolPartitioning1, connectionSemaphore1, (ProxyServer) null);
      nettyResponseFuture1.isAndSetInProxyAuth(false);
      nettyResponseFuture1.incrementAndGetCurrentRedirectCount();
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      try { 
        nettyResponseFuture1.get(0L, timeUnit0);
        fail("Expecting exception: TimeoutException");
      
      } catch(TimeoutException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.CompletableFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AsyncHandler<Object> asyncHandler0 = (AsyncHandler<Object>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(asyncHandler0).toString();
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<Object> nettyResponseFuture0 = new NettyResponseFuture<Object>((Request) null, asyncHandler0, (NettyRequest) null, 334, (ChannelPoolPartitioning) null, connectionSemaphore0, (ProxyServer) null);
      nettyResponseFuture0.isReuseChannel();
      nettyResponseFuture0.getRealm();
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      Executor executor0 = mock(Executor.class, new ViolatedAssumptionAnswer());
      nettyResponseFuture0.addListener(runnable0, executor0);
      nettyResponseFuture0.getTimeoutsHolder();
      nettyResponseFuture0.getLastTouch();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AsyncHandler<TimeoutsHolder> asyncHandler0 = (AsyncHandler<TimeoutsHolder>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<TimeoutsHolder> nettyResponseFuture0 = new NettyResponseFuture<TimeoutsHolder>((Request) null, asyncHandler0, (NettyRequest) null, (-120), channelPoolPartitioning0, connectionSemaphore0, (ProxyServer) null);
      nettyResponseFuture0.setTimeoutsHolder((TimeoutsHolder) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Request request0 = null;
      AsyncHandler<NettyResponseFuture<Integer>> asyncHandler0 = (AsyncHandler<NettyResponseFuture<Integer>>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      NettyRequest nettyRequest0 = null;
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      ProxyServer proxyServer0 = null;
      NettyResponseFuture<NettyResponseFuture<Integer>> nettyResponseFuture0 = new NettyResponseFuture<NettyResponseFuture<Integer>>((Request) null, asyncHandler0, (NettyRequest) null, 0, channelPoolPartitioning0, connectionSemaphore0, (ProxyServer) null);
      nettyResponseFuture0.cancel(false);
      // Undeclared exception!
      try { 
        nettyResponseFuture0.getUri();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.NettyResponseFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Request request0 = null;
      AsyncHandler<Object> asyncHandler0 = (AsyncHandler<Object>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(asyncHandler0).toString();
      NettyRequest nettyRequest0 = null;
      int int0 = 0;
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      ProxyServer proxyServer0 = null;
      NettyResponseFuture<Object> nettyResponseFuture0 = new NettyResponseFuture<Object>((Request) null, asyncHandler0, (NettyRequest) null, 0, channelPoolPartitioning0, connectionSemaphore0, (ProxyServer) null);
      nettyResponseFuture0.takePartitionKeyLock();
      nettyResponseFuture0.getAsyncHandler();
      AsyncHandler<NettyResponseFuture<String>> asyncHandler1 = (AsyncHandler<NettyResponseFuture<String>>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning1 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore1 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<NettyResponseFuture<String>> nettyResponseFuture1 = new NettyResponseFuture<NettyResponseFuture<String>>((Request) null, asyncHandler1, (NettyRequest) null, 0, channelPoolPartitioning1, connectionSemaphore1, (ProxyServer) null);
      // Undeclared exception!
      try { 
        nettyResponseFuture1.getPartitionKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.NettyResponseFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AsyncHandler<Object> asyncHandler0 = (AsyncHandler<Object>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<Object> nettyResponseFuture0 = new NettyResponseFuture<Object>((Request) null, asyncHandler0, (NettyRequest) null, 98, channelPoolPartitioning0, connectionSemaphore0, (ProxyServer) null);
      nettyResponseFuture0.getTargetRequest();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AsyncHandler<TimeoutsHolder> asyncHandler0 = (AsyncHandler<TimeoutsHolder>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(asyncHandler0).toString();
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<TimeoutsHolder> nettyResponseFuture0 = new NettyResponseFuture<TimeoutsHolder>((Request) null, asyncHandler0, (NettyRequest) null, 0, channelPoolPartitioning0, connectionSemaphore0, (ProxyServer) null);
      nettyResponseFuture0.getAsyncHandler();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AsyncHandler<Object> asyncHandler0 = (AsyncHandler<Object>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<Object> nettyResponseFuture0 = new NettyResponseFuture<Object>((Request) null, asyncHandler0, (NettyRequest) null, 773, (ChannelPoolPartitioning) null, connectionSemaphore0, (ProxyServer) null);
      nettyResponseFuture0.setNettyRequest((NettyRequest) null);
      nettyResponseFuture0.setTargetRequest((Request) null);
      nettyResponseFuture0.isAndSetInProxyAuth(false);
      nettyResponseFuture0.incrementAndGetCurrentRedirectCount();
      ChannelState channelState0 = ChannelState.CLOSED;
      nettyResponseFuture0.setChannelState(channelState0);
      nettyResponseFuture0.setTargetRequest((Request) null);
      nettyResponseFuture0.takePartitionKeyLock();
      nettyResponseFuture0.takePartitionKeyLock();
      AsyncHandler<TimeoutsHolder> asyncHandler1 = (AsyncHandler<TimeoutsHolder>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore1 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<TimeoutsHolder> nettyResponseFuture1 = new NettyResponseFuture<TimeoutsHolder>((Request) null, asyncHandler1, (NettyRequest) null, 817, (ChannelPoolPartitioning) null, connectionSemaphore1, (ProxyServer) null);
      nettyResponseFuture1.setTargetRequest((Request) null);
      nettyResponseFuture1.isKeepAlive();
      nettyResponseFuture0.isStreamConsumed();
      nettyResponseFuture0.setConnectAllowed(false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<String> nettyResponseFuture0 = new NettyResponseFuture<String>((Request) null, (AsyncHandler<String>) null, (NettyRequest) null, 2413, channelPoolPartitioning0, connectionSemaphore0, (ProxyServer) null);
      nettyResponseFuture0.isAndSetInAuth(false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Request request0 = null;
      AsyncHandler<Object> asyncHandler0 = (AsyncHandler<Object>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      NettyRequest nettyRequest0 = null;
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      ProxyServer proxyServer0 = null;
      NettyResponseFuture<Object> nettyResponseFuture0 = new NettyResponseFuture<Object>((Request) null, asyncHandler0, (NettyRequest) null, (-511), channelPoolPartitioning0, connectionSemaphore0, (ProxyServer) null);
      nettyResponseFuture0.getChannelState();
      ChannelPoolPartitioning channelPoolPartitioning1 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore1 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      nettyResponseFuture0.incrementRetryAndCheck();
      NettyResponseFuture<NettyResponseFuture<TimeoutsHolder>> nettyResponseFuture1 = new NettyResponseFuture<NettyResponseFuture<TimeoutsHolder>>((Request) null, (AsyncHandler<NettyResponseFuture<TimeoutsHolder>>) null, (NettyRequest) null, 0, channelPoolPartitioning1, connectionSemaphore1, (ProxyServer) null);
      // Undeclared exception!
      try { 
        nettyResponseFuture0.acquirePartitionLockLazily();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.NettyResponseFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AsyncHandler<TimeoutsHolder> asyncHandler0 = (AsyncHandler<TimeoutsHolder>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<TimeoutsHolder> nettyResponseFuture0 = new NettyResponseFuture<TimeoutsHolder>((Request) null, asyncHandler0, (NettyRequest) null, (-1662), channelPoolPartitioning0, connectionSemaphore0, (ProxyServer) null);
      nettyResponseFuture0.incrementAndGetCurrentRedirectCount();
      nettyResponseFuture0.incrementAndGetCurrentRedirectCount();
      nettyResponseFuture0.cancelTimeouts();
      nettyResponseFuture0.isAndSetInAuth(true);
      nettyResponseFuture0.getCurrentRequest();
      AsyncHandler<Object> asyncHandler1 = (AsyncHandler<Object>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning1 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore1 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<Object> nettyResponseFuture1 = new NettyResponseFuture<Object>((Request) null, asyncHandler1, (NettyRequest) null, 2404, channelPoolPartitioning1, connectionSemaphore1, (ProxyServer) null);
      nettyResponseFuture1.setKeepAlive(false);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AsyncHandler<TimeoutsHolder> asyncHandler0 = (AsyncHandler<TimeoutsHolder>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      NettyRequest nettyRequest0 = mock(NettyRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(nettyRequest0).toString();
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<TimeoutsHolder> nettyResponseFuture0 = new NettyResponseFuture<TimeoutsHolder>((Request) null, asyncHandler0, nettyRequest0, 155, channelPoolPartitioning0, connectionSemaphore0, (ProxyServer) null);
      NettyRequest nettyRequest1 = nettyResponseFuture0.getNettyRequest();
      ChannelPoolPartitioning channelPoolPartitioning1 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore1 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<TimeoutsHolder> nettyResponseFuture1 = new NettyResponseFuture<TimeoutsHolder>((Request) null, asyncHandler0, nettyRequest1, 4409, channelPoolPartitioning1, connectionSemaphore1, (ProxyServer) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Request request0 = null;
      AsyncHandler<Object> asyncHandler0 = (AsyncHandler<Object>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      NettyRequest nettyRequest0 = null;
      int int0 = 0;
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      ProxyServer proxyServer0 = null;
      NettyResponseFuture<Object> nettyResponseFuture0 = new NettyResponseFuture<Object>((Request) null, asyncHandler0, (NettyRequest) null, 0, channelPoolPartitioning0, connectionSemaphore0, (ProxyServer) null);
      ChannelState channelState0 = ChannelState.RECONNECTED;
      nettyResponseFuture0.setChannelState(channelState0);
      nettyResponseFuture0.getRealm();
      AsyncHandler<NettyResponseFuture<Object>> asyncHandler1 = (AsyncHandler<NettyResponseFuture<Object>>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning1 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore1 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<NettyResponseFuture<Object>> nettyResponseFuture1 = new NettyResponseFuture<NettyResponseFuture<Object>>((Request) null, asyncHandler1, (NettyRequest) null, 2077, channelPoolPartitioning1, connectionSemaphore1, (ProxyServer) null);
      nettyResponseFuture1.setConnectAllowed(true);
      // Undeclared exception!
      try { 
        nettyResponseFuture1.acquirePartitionLockLazily();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.NettyResponseFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<TimeoutsHolder> nettyResponseFuture0 = new NettyResponseFuture<TimeoutsHolder>((Request) null, (AsyncHandler<TimeoutsHolder>) null, (NettyRequest) null, (-3824), channelPoolPartitioning0, (ConnectionSemaphore) null, (ProxyServer) null);
      // Undeclared exception!
      try { 
        nettyResponseFuture0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.NettyResponseFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AsyncHandler<Object> asyncHandler0 = (AsyncHandler<Object>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(asyncHandler0).onCompleted();
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<Object> nettyResponseFuture0 = new NettyResponseFuture<Object>((Request) null, asyncHandler0, (NettyRequest) null, 1132, channelPoolPartitioning0, (ConnectionSemaphore) null, (ProxyServer) null);
      ChannelPoolPartitioning channelPoolPartitioning1 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<String> nettyResponseFuture1 = new NettyResponseFuture<String>((Request) null, (AsyncHandler<String>) null, (NettyRequest) null, 1132, channelPoolPartitioning1, (ConnectionSemaphore) null, (ProxyServer) null);
      nettyResponseFuture0.touch();
      nettyResponseFuture1.setAsyncHandler((AsyncHandler<String>) null);
      nettyResponseFuture1.getProxyRealm();
      nettyResponseFuture0.setProxyRealm((Realm) null);
      nettyResponseFuture0.touch();
      nettyResponseFuture0.setConnectAllowed(true);
      nettyResponseFuture0.isHeadersAlreadyWrittenOnContinue();
      nettyResponseFuture0.setTargetRequest((Request) null);
      nettyResponseFuture0.setTargetRequest((Request) null);
      nettyResponseFuture1.incrementRetryAndCheck();
      nettyResponseFuture0.done();
      nettyResponseFuture1.isInProxyAuth();
      AsyncHandler<NettyResponseFuture<String>> asyncHandler1 = (AsyncHandler<NettyResponseFuture<String>>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning2 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<NettyResponseFuture<String>> nettyResponseFuture2 = new NettyResponseFuture<NettyResponseFuture<String>>((Request) null, asyncHandler1, (NettyRequest) null, 1132, channelPoolPartitioning2, (ConnectionSemaphore) null, (ProxyServer) null);
      nettyResponseFuture2.getCurrentRequest();
      AsyncHandler<NettyResponseFuture<Integer>> asyncHandler2 = (AsyncHandler<NettyResponseFuture<Integer>>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning3 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<NettyResponseFuture<Integer>> nettyResponseFuture3 = new NettyResponseFuture<NettyResponseFuture<Integer>>((Request) null, asyncHandler2, (NettyRequest) null, 3047, channelPoolPartitioning3, (ConnectionSemaphore) null, (ProxyServer) null);
      nettyResponseFuture3.attachChannel((Channel) null, false);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AsyncHandler<NettyResponseFuture<Integer>> asyncHandler0 = (AsyncHandler<NettyResponseFuture<Integer>>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<NettyResponseFuture<Integer>> nettyResponseFuture0 = new NettyResponseFuture<NettyResponseFuture<Integer>>((Request) null, asyncHandler0, (NettyRequest) null, 0, channelPoolPartitioning0, connectionSemaphore0, (ProxyServer) null);
      ChannelState channelState0 = ChannelState.NEW;
      nettyResponseFuture0.setChannelState(channelState0);
      AsyncHandler<Object> asyncHandler1 = (AsyncHandler<Object>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning1 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore1 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<Object> nettyResponseFuture1 = new NettyResponseFuture<Object>((Request) null, asyncHandler1, (NettyRequest) null, 0, channelPoolPartitioning1, connectionSemaphore1, (ProxyServer) null);
      nettyResponseFuture1.getTimeoutsHolder();
      AsyncHandler<TimeoutsHolder> asyncHandler2 = (AsyncHandler<TimeoutsHolder>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning2 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore2 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<TimeoutsHolder> nettyResponseFuture2 = new NettyResponseFuture<TimeoutsHolder>((Request) null, asyncHandler2, (NettyRequest) null, 0, channelPoolPartitioning2, connectionSemaphore2, (ProxyServer) null);
      nettyResponseFuture2.getProxyServer();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AsyncHandler<Object> asyncHandler0 = (AsyncHandler<Object>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      ChannelPoolPartitioning channelPoolPartitioning0 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      ConnectionSemaphore connectionSemaphore0 = mock(ConnectionSemaphore.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<Object> nettyResponseFuture0 = new NettyResponseFuture<Object>((Request) null, asyncHandler0, (NettyRequest) null, (-1800), channelPoolPartitioning0, connectionSemaphore0, (ProxyServer) null);
      nettyResponseFuture0.incrementRetryAndCheck();
      nettyResponseFuture0.setCurrentRequest((Request) null);
      nettyResponseFuture0.isReplayPossible();
      nettyResponseFuture0.setCurrentRequest((Request) null);
      nettyResponseFuture0.setKeepAlive(true);
      nettyResponseFuture0.getProxyServer();
      nettyResponseFuture0.toCompletableFuture();
      AsyncHandler<TimeoutsHolder> asyncHandler1 = (AsyncHandler<TimeoutsHolder>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(asyncHandler1).toString();
      ChannelPoolPartitioning channelPoolPartitioning1 = mock(ChannelPoolPartitioning.class, new ViolatedAssumptionAnswer());
      NettyResponseFuture<TimeoutsHolder> nettyResponseFuture1 = new NettyResponseFuture<TimeoutsHolder>((Request) null, asyncHandler1, (NettyRequest) null, (-1423), channelPoolPartitioning1, (ConnectionSemaphore) null, (ProxyServer) null);
      nettyResponseFuture1.cancel(true);
      nettyResponseFuture1.touch();
      nettyResponseFuture0.setTargetRequest((Request) null);
      nettyResponseFuture1.setStreamConsumed(true);
      nettyResponseFuture1.isInAuth();
      // Undeclared exception!
      try { 
        nettyResponseFuture1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.NettyResponseFuture", e);
      }
  }
}
