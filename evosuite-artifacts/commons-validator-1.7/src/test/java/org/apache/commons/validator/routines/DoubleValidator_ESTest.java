/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 15:52:38 GMT 2022
 */

package org.apache.commons.validator.routines;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DecimalFormat;
import java.text.Format;
import java.text.NumberFormat;
import java.util.Locale;
import org.apache.commons.validator.routines.DoubleValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DoubleValidator_ESTest extends DoubleValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      boolean boolean0 = doubleValidator0.isInRange((-2918.89), (-2918.89), (-1.0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Double double0 = doubleValidator0.validate("0", locale0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      Locale locale0 = Locale.forLanguageTag("\"G>$bVnY#9PqCL(");
      Double double0 = doubleValidator0.validate("526", locale0);
      assertEquals(526.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Double double0 = doubleValidator0.validate("-355", locale0);
      assertEquals((-355.0), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      Locale locale0 = Locale.ENGLISH;
      Double double0 = doubleValidator0.validate("`T0", "`T0", locale0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      Locale locale0 = Locale.forLanguageTag("\"G>$bVnY#9PqCL(");
      Double double0 = doubleValidator0.validate("526", "", locale0);
      assertEquals(526.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Double double0 = doubleValidator0.validate("899.6", "", locale0);
      assertEquals(899.6, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator(false, 0);
      Double double0 = doubleValidator0.validate("0", "0");
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      Double double0 = doubleValidator0.validate("526", "");
      assertEquals(526.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      Double double0 = doubleValidator0.validate("899.6", "");
      assertEquals(899.6, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      Double double0 = doubleValidator0.validate("-852.07");
      assertEquals((-852.07), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      Double double0 = doubleValidator0.validate("0");
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator(false, 0);
      Double double0 = doubleValidator0.validate("95XHp x|HSW{");
      assertEquals(95.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      Double double0 = new Double((-1338.0437589907));
      boolean boolean0 = doubleValidator0.minValue(double0, (-1338.0437589907));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      Double double0 = new Double(2679.496);
      boolean boolean0 = doubleValidator0.maxValue(double0, 0.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator(false, (-1));
      Double double0 = new Double(4475.3);
      boolean boolean0 = doubleValidator0.isInRange(double0, (double) (-1), 4475.3);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator(true, (-3249));
      // Undeclared exception!
      try { 
        doubleValidator0.validate("N8H$niYN:YeQ{+:", "$M;|k", (Locale) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unquoted special character ';' in pattern \"$M;|k\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator(true, 0);
      // Undeclared exception!
      try { 
        doubleValidator0.validate("org.apache.commons.validator.routines.DoubleValidator", "org.apache.commons.validator.routines.DoubleValidator");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Multiple decimal separators in pattern \"org.apache.commons.validator.routines.DoubleValidator\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      // Undeclared exception!
      try { 
        doubleValidator0.processParsedValue((Object) null, numberFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.DoubleValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      Object object0 = new Object();
      Format format0 = doubleValidator0.getFormat((Locale) null);
      // Undeclared exception!
      try { 
        doubleValidator0.processParsedValue(object0, format0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.validator.routines.DoubleValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      // Undeclared exception!
      try { 
        doubleValidator0.minValue((Double) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.DoubleValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      // Undeclared exception!
      try { 
        doubleValidator0.isInRange((Double) null, 0.0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.DoubleValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      boolean boolean0 = doubleValidator0.maxValue(0.0, 1404.13735238142);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      boolean boolean0 = doubleValidator0.minValue((-1690.41), (-1102.12309441081));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      boolean boolean0 = doubleValidator0.isInRange(1351.416551918381, 1351.416551918381, 1.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator(true, 0);
      boolean boolean0 = doubleValidator0.isInRange((-1.0), 0.0, 0.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      Double double0 = new Double(87.74002150990971);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      Object object0 = doubleValidator0.processParsedValue(double0, decimalFormat0);
      assertEquals(87.74002150990971, object0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      Double double0 = new Double((-8.7));
      boolean boolean0 = doubleValidator0.maxValue(double0, (-8.7));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      boolean boolean0 = doubleValidator0.maxValue((double) 2, (double) 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      boolean boolean0 = doubleValidator0.minValue((double) 2, (-8.7));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      Double double0 = new Double((-8.7));
      boolean boolean0 = doubleValidator0.isInRange(double0, (double) 1, (double) 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      Double double0 = doubleValidator0.validate((String) null);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DoubleValidator doubleValidator0 = new DoubleValidator();
      Double double0 = new Double((-8.7));
      boolean boolean0 = doubleValidator0.minValue(double0, (double) 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      Locale locale0 = Locale.ITALY;
      Double double0 = doubleValidator0.validate(")v+c2sg", "", locale0);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      Locale locale0 = Locale.ITALY;
      Double double0 = doubleValidator0.validate("org.apache.commons.validator.routines.AbstractFormatValidator", locale0);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      // Undeclared exception!
      try { 
        doubleValidator0.maxValue((Double) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.DoubleValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DoubleValidator doubleValidator0 = DoubleValidator.getInstance();
      Double double0 = doubleValidator0.validate("(cz4o", "");
      assertNull(double0);
  }
}
