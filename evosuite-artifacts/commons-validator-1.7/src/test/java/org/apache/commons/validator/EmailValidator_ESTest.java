/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 15:47:23 GMT 2022
 */

package org.apache.commons.validator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.validator.EmailValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EmailValidator_ESTest extends EmailValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator();
      assertNotNull(emailValidator0);
      
      String string0 = emailValidator0.stripComments("");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance();
      assertNotNull(emailValidator0);
      
      boolean boolean0 = emailValidator0.isValidUser("z0#{r0h}V~TkxR/");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance();
      assertNotNull(emailValidator0);
      
      // Undeclared exception!
      try { 
        emailValidator0.stripComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator();
      assertNotNull(emailValidator0);
      
      // Undeclared exception!
      try { 
        emailValidator0.isValidUser((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance();
      assertNotNull(emailValidator0);
      
      // Undeclared exception!
      emailValidator0.isValidSymbolicDomain("");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator();
      assertNotNull(emailValidator0);
      
      // Undeclared exception!
      try { 
        emailValidator0.isValidSymbolicDomain((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator();
      assertNotNull(emailValidator0);
      
      // Undeclared exception!
      try { 
        emailValidator0.isValidSymbolicDomain("WtohQqjbfvLPF");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance();
      assertNotNull(emailValidator0);
      
      // Undeclared exception!
      try { 
        emailValidator0.isValidIpAddress((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator();
      assertNotNull(emailValidator0);
      
      // Undeclared exception!
      try { 
        emailValidator0.isValidDomain((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator();
      assertNotNull(emailValidator0);
      
      String string0 = emailValidator0.stripComments("B@g<#W'%5v~*vb%16a%");
      assertNotNull(string0);
      assertEquals("B@g<#W'%5v~*vb%16a%", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance();
      // Undeclared exception!
      emailValidator0.isValidDomain("org.apache.commons.validator.EmailValidator");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator();
      // Undeclared exception!
      try { 
        emailValidator0.isValidIpAddress("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance();
      // Undeclared exception!
      try { 
        emailValidator0.isValidDomain("agakhan");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator();
      // Undeclared exception!
      try { 
        emailValidator0.isValidDomain("[]");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance();
      boolean boolean0 = emailValidator0.isValidDomain("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EmailValidator emailValidator0 = EmailValidator.getInstance();
      boolean boolean0 = emailValidator0.isValidUser("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EmailValidator emailValidator0 = new EmailValidator();
      boolean boolean0 = emailValidator0.isValid((String) null);
      assertFalse(boolean0);
  }
}
