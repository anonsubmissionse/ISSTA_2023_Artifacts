/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 15:52:38 GMT 2022
 */

package org.apache.commons.validator.routines;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import org.apache.commons.validator.routines.BigIntegerValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BigIntegerValidator_ESTest extends BigIntegerValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, (-1307));
      BigInteger bigInteger0 = BigInteger.TEN;
      boolean boolean0 = bigIntegerValidator0.maxValue(bigInteger0, 1724L);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(false, 1995);
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.isInRange(bigInteger0, 0L, 915L);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, (-1307));
      BigInteger bigInteger0 = BigInteger.ONE;
      boolean boolean0 = bigIntegerValidator0.isInRange(bigInteger0, 1L, (-2497L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      Locale locale0 = new Locale(">um5RuCPVzr", ">um5RuCPVzr");
      BigInteger bigInteger0 = bigIntegerValidator0.validate("0", locale0);
      assertEquals((short)0, bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(false, 0);
      Locale locale0 = Locale.KOREAN;
      BigInteger bigInteger0 = bigIntegerValidator0.validate("9DV>OB1w0,~{OQ'", locale0);
      boolean boolean0 = bigIntegerValidator0.minValue(bigInteger0, (-1L));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, (-1307));
      Locale locale0 = Locale.FRENCH;
      BigInteger bigInteger0 = bigIntegerValidator0.validate("-1", locale0);
      assertEquals((short) (-1), bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      Locale locale0 = Locale.FRANCE;
      BigInteger bigInteger0 = bigIntegerValidator0.validate("%c p[`@0", "%c p[`@0", locale0);
      assertEquals((byte)0, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(false, (-1274));
      Locale locale0 = Locale.GERMANY;
      BigInteger bigInteger0 = bigIntegerValidator0.validate("1COTfR<$C", "", locale0);
      assertEquals((byte)1, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      Locale locale0 = Locale.UK;
      BigInteger bigInteger0 = bigIntegerValidator0.validate("-1,033", (String) null, locale0);
      assertEquals((short) (-1033), bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = bigIntegerValidator0.validate("A^D$80mWR}uj>@g", "A^D$80mWR}uj>@g");
      assertEquals((short)0, bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      BigInteger bigInteger0 = bigIntegerValidator0.validate("2", "");
      assertEquals((short)2, bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = bigIntegerValidator0.validate("-1,033", "");
      assertEquals((short) (-1033), bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      BigInteger bigInteger0 = bigIntegerValidator0.validate("0");
      assertEquals((byte)0, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, 1000);
      BigInteger bigInteger0 = bigIntegerValidator0.validate("10");
      assertEquals((short)10, bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(false, 1995);
      Locale locale0 = Locale.CANADA_FRENCH;
      // Undeclared exception!
      try { 
        bigIntegerValidator0.validate("org.apache.commons.validator.routines.AbstractFormatValidator", "org.apache.commons.validator.routines.AbstractFormatValidator", locale0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Multiple decimal separators in pattern \"org.apache.commons.validator.routines.AbstractFormatValidator\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, (-4354));
      // Undeclared exception!
      try { 
        bigIntegerValidator0.validate("org.apache.commons.validator.routines.AbstractFormatValidator", "org.apache.commons.validator.routines.AbstractFormatValidator");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Multiple decimal separators in pattern \"org.apache.commons.validator.routines.AbstractFormatValidator\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, (-1));
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      // Undeclared exception!
      try { 
        bigIntegerValidator0.processParsedValue((Object) null, numberFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.BigIntegerValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      Locale locale0 = Locale.ITALIAN;
      DateFormat dateFormat0 = DateFormat.getDateTimeInstance(1, 0);
      // Undeclared exception!
      try { 
        bigIntegerValidator0.processParsedValue(locale0, dateFormat0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.validator.routines.BigIntegerValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      // Undeclared exception!
      try { 
        bigIntegerValidator0.minValue((BigInteger) null, 241L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.BigIntegerValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      // Undeclared exception!
      try { 
        bigIntegerValidator0.maxValue((BigInteger) null, (-37L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.BigIntegerValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, 692);
      // Undeclared exception!
      try { 
        bigIntegerValidator0.isInRange((BigInteger) null, (long) 692, (long) 692);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.routines.BigIntegerValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator(true, (-1307));
      BigInteger bigInteger0 = bigIntegerValidator0.validate("-1");
      assertEquals((byte) (-1), bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.maxValue(bigInteger0, (long) 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      BigInteger bigInteger0 = BigInteger.TEN;
      boolean boolean0 = bigIntegerValidator0.maxValue(bigInteger0, (long) 2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.minValue(bigInteger0, (long) 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.minValue(bigInteger0, (long) 2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      BigInteger bigInteger0 = BigInteger.TEN;
      boolean boolean0 = bigIntegerValidator0.isInRange(bigInteger0, (long) 2, (long) 2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.isInRange(bigInteger0, (long) 0, (long) 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      BigInteger bigInteger0 = BigInteger.ZERO;
      boolean boolean0 = bigIntegerValidator0.isInRange(bigInteger0, (long) 2, (long) 2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      Locale locale0 = Locale.GERMANY;
      BigInteger bigInteger0 = bigIntegerValidator0.validate("$/l6IZ-w<fQyK=I", ",_ih&V5(MN0_O9", locale0);
      assertNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      BigInteger bigInteger0 = bigIntegerValidator0.validate(">um5nuCPVzr", ">um5nuCPVzr");
      assertNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      Float float0 = new Float((float) 2);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      BigInteger bigInteger0 = (BigInteger)bigIntegerValidator0.processParsedValue(float0, decimalFormat0);
      assertEquals((short)2, bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = BigIntegerValidator.getInstance();
      Locale locale0 = Locale.GERMANY;
      BigInteger bigInteger0 = bigIntegerValidator0.validate("}P*iqxS!CCZ}D:", locale0);
      assertNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BigIntegerValidator bigIntegerValidator0 = new BigIntegerValidator();
      BigInteger bigInteger0 = bigIntegerValidator0.validate("org.apache.commons.validator.routines.BigIntegerValidator");
      assertNull(bigInteger0);
  }
}
