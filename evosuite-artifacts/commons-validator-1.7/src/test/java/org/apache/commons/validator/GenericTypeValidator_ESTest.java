/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 15:38:23 GMT 2022
 */

package org.apache.commons.validator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import java.util.Locale;
import org.apache.commons.validator.GenericTypeValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GenericTypeValidator_ESTest extends GenericTypeValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Short short0 = GenericTypeValidator.formatShort("2_a*EN*[agb_");
      assertNull(short0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.US;
      Short short0 = GenericTypeValidator.formatShort("0", locale0);
      assertEquals((short)0, (short)short0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Short short0 = GenericTypeValidator.formatShort("1", (Locale) null);
      assertEquals((short)1, (short)short0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Short short0 = GenericTypeValidator.formatShort("0");
      assertEquals((short)0, (short)short0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Short short0 = GenericTypeValidator.formatShort("88");
      assertEquals((short)88, (short)short0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = GenericTypeValidator.formatLong("0", (Locale) null);
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("-1");
      Long long0 = GenericTypeValidator.formatLong("-1", locale0);
      assertNotNull(long0);
      assertEquals((-1L), (long)long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Long long0 = GenericTypeValidator.formatLong("0");
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = GenericTypeValidator.formatLong("9");
      assertEquals(9L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Long long0 = GenericTypeValidator.formatLong("-1");
      assertEquals((-1L), (long)long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = GenericTypeValidator.formatInt("1", (Locale) null);
      assertEquals(1, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Integer integer0 = GenericTypeValidator.formatInt("0", locale0);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = GenericTypeValidator.formatInt("-1", (Locale) null);
      assertNotNull(integer0);
      assertEquals((-1), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = GenericTypeValidator.formatInt("0");
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = GenericTypeValidator.formatInt("9");
      assertEquals(9, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = GenericTypeValidator.formatInt("-1");
      assertEquals((-1), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Float float0 = GenericTypeValidator.formatFloat("0", locale0);
      assertEquals(0.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Float float0 = GenericTypeValidator.formatFloat("-1", (Locale) null);
      assertEquals((-1.0F), (float)float0, 0.01F);
      assertNotNull(float0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Float float0 = GenericTypeValidator.formatFloat("8E75");
      assertEquals(Float.POSITIVE_INFINITY, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Float float0 = GenericTypeValidator.formatFloat("0");
      assertEquals(0.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Float float0 = GenericTypeValidator.formatFloat("9");
      assertEquals(9.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Float float0 = GenericTypeValidator.formatFloat("-76.");
      assertEquals((-76.0F), (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Double double0 = GenericTypeValidator.formatDouble("0", locale0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Double double0 = GenericTypeValidator.formatDouble("9", (Locale) null);
      assertEquals(9.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Double double0 = GenericTypeValidator.formatDouble("8E725");
      assertEquals(Double.POSITIVE_INFINITY, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Double double0 = GenericTypeValidator.formatDouble("0");
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Double double0 = GenericTypeValidator.formatDouble("1");
      assertEquals(1.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Double double0 = GenericTypeValidator.formatDouble("-5");
      assertEquals((-5.0), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Byte byte0 = GenericTypeValidator.formatByte("0", locale0);
      assertEquals((byte)0, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Byte byte0 = GenericTypeValidator.formatByte("-5", (Locale) null);
      assertEquals((byte) (-5), (byte)byte0);
      assertNotNull(byte0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Byte byte0 = GenericTypeValidator.formatByte("0");
      assertEquals((byte)0, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Byte byte0 = GenericTypeValidator.formatByte("7");
      assertEquals((byte)7, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Byte byte0 = GenericTypeValidator.formatByte("-5");
      assertEquals((byte) (-5), (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        GenericTypeValidator.formatDate("], locale=[", "], locale=[", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'l'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Long long0 = GenericTypeValidator.formatCreditCard("7_qU63");
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Date date0 = GenericTypeValidator.formatDate("-3fb#gEG>kyF'", "Y", true);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Date date0 = GenericTypeValidator.formatDate("-", "-", true);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Date date0 = GenericTypeValidator.formatDate("] ", "] ", false);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Date date0 = GenericTypeValidator.formatDate("j'u`{V", "] ", true);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Date date0 = GenericTypeValidator.formatDate("b", (String) null, false);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Date date0 = GenericTypeValidator.formatDate("], locale=[", "", false);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Date date0 = GenericTypeValidator.formatDate((String) null, "of{X`>g#+j", false);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      Date date0 = GenericTypeValidator.formatDate("", locale0);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Date date0 = GenericTypeValidator.formatDate((String) null, (Locale) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Date date0 = GenericTypeValidator.formatDate("7_qU63", (Locale) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Double double0 = GenericTypeValidator.formatDouble("2A?", locale0);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Double double0 = GenericTypeValidator.formatDouble("], locale=[", (Locale) null);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Double double0 = GenericTypeValidator.formatDouble("-5", (Locale) null);
      assertEquals((-5.0), (double)double0, 0.01);
      assertNotNull(double0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("8E725");
      Double double0 = GenericTypeValidator.formatDouble("8E725", locale0);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Double double0 = GenericTypeValidator.formatDouble((String) null, (Locale) null);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Double double0 = GenericTypeValidator.formatDouble((String) null);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Double double0 = GenericTypeValidator.formatDouble("f");
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Float float0 = GenericTypeValidator.formatFloat("6", (Locale) null);
      assertEquals(6.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Float float0 = GenericTypeValidator.formatFloat("f", locale0);
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Float float0 = GenericTypeValidator.formatFloat("7_qU63", (Locale) null);
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("8E725");
      Float float0 = GenericTypeValidator.formatFloat("8E725", locale0);
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Float float0 = GenericTypeValidator.formatFloat((String) null, (Locale) null);
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Float float0 = GenericTypeValidator.formatFloat((String) null);
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Float float0 = GenericTypeValidator.formatFloat("German");
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Long long0 = GenericTypeValidator.formatLong("6", (Locale) null);
      assertEquals(6L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      Long long0 = GenericTypeValidator.formatLong("0K6%&dz~g nL>=uT,", locale0);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Long long0 = GenericTypeValidator.formatLong("] ", (Locale) null);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("8E725");
      Long long0 = GenericTypeValidator.formatLong("8E725", locale0);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      Long long0 = GenericTypeValidator.formatLong((String) null, locale0);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Long long0 = GenericTypeValidator.formatLong((String) null);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Long long0 = GenericTypeValidator.formatLong("reviews");
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("8E725");
      Integer integer0 = GenericTypeValidator.formatInt("", locale0);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("8E725");
      Integer integer0 = GenericTypeValidator.formatInt("8E725", locale0);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Integer integer0 = GenericTypeValidator.formatInt("7_qU63", (Locale) null);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Integer integer0 = GenericTypeValidator.formatInt((String) null, locale0);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Integer integer0 = GenericTypeValidator.formatInt((String) null);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Integer integer0 = GenericTypeValidator.formatInt("87E5");
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Short short0 = GenericTypeValidator.formatShort("-5", (Locale) null);
      assertNotNull(short0);
      assertEquals((short) (-5), (short)short0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      Short short0 = GenericTypeValidator.formatShort("0K6%&dz~g nL>=uT,", locale0);
      assertNull(short0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("8E725");
      Short short0 = GenericTypeValidator.formatShort("8E725", locale0);
      assertNull(short0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Short short0 = GenericTypeValidator.formatShort("", (Locale) null);
      assertNull(short0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      Short short0 = GenericTypeValidator.formatShort((String) null, locale0);
      assertNull(short0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Short short0 = GenericTypeValidator.formatShort((String) null);
      assertNull(short0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Short short0 = GenericTypeValidator.formatShort("-5");
      assertEquals((short) (-5), (short)short0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Byte byte0 = GenericTypeValidator.formatByte("88", (Locale) null);
      assertNotNull(byte0);
      assertEquals((byte)88, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("8E725");
      Byte byte0 = GenericTypeValidator.formatByte("8E725", locale0);
      assertNull(byte0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Byte byte0 = GenericTypeValidator.formatByte("2A?", locale0);
      assertNull(byte0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Byte byte0 = GenericTypeValidator.formatByte("", (Locale) null);
      assertNull(byte0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      Byte byte0 = GenericTypeValidator.formatByte((String) null, locale0);
      assertNull(byte0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Byte byte0 = GenericTypeValidator.formatByte((String) null);
      assertNull(byte0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Byte byte0 = GenericTypeValidator.formatByte("7_qU63");
      assertNull(byte0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      GenericTypeValidator genericTypeValidator0 = new GenericTypeValidator();
  }
}
