/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 15:53:34 GMT 2022
 */

package org.apache.commons.validator;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.validator.Var;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Var_ESTest extends Var_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Var var0 = new Var();
      assertFalse(var0.isResource());
      
      var0.setResource(true);
      boolean boolean0 = var0.isResource();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Var var0 = new Var();
      String string0 = var0.getValue();
      assertFalse(var0.isResource());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Var var0 = new Var("R:q-u_%~scpVR!Q ", "", "R:q-u_%~scpVR!Q ");
      String string0 = var0.getValue();
      assertFalse(var0.isResource());
      assertEquals("R:q-u_%~scpVR!Q ", var0.getName());
      assertEquals("", string0);
      assertEquals("R:q-u_%~scpVR!Q ", var0.getJsType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Var var0 = new Var();
      String string0 = var0.getName();
      assertNull(string0);
      assertFalse(var0.isResource());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Var var0 = new Var("", "", "");
      String string0 = var0.getName();
      assertEquals("", string0);
      assertEquals("", var0.getValue());
      assertEquals("", var0.getJsType());
      assertFalse(var0.isResource());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Var var0 = new Var();
      String string0 = var0.getJsType();
      assertNull(string0);
      assertFalse(var0.isResource());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Var var0 = new Var();
      var0.setJsType("");
      String string0 = var0.getJsType();
      assertFalse(var0.isResource());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Var var0 = new Var();
      var0.setBundle("'");
      String string0 = var0.getBundle();
      assertEquals("'", string0);
      assertFalse(var0.isResource());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Var var0 = new Var();
      var0.setBundle("");
      String string0 = var0.getBundle();
      assertFalse(var0.isResource());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Var var0 = new Var(",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N");
      assertEquals(",V-D]EO.q( GjN7N", var0.getValue());
      
      var0.setValue("int");
      assertEquals(",V-D]EO.q( GjN7N", var0.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Var var0 = new Var(",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N");
      Var var1 = (Var)var0.clone();
      assertEquals(",V-D]EO.q( GjN7N", var1.getValue());
      assertEquals(",V-D]EO.q( GjN7N", var1.getJsType());
      assertFalse(var1.isResource());
      assertEquals(",V-D]EO.q( GjN7N", var1.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Var var0 = new Var(",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N");
      String string0 = var0.getValue();
      assertEquals(",V-D]EO.q( GjN7N", string0);
      assertFalse(var0.isResource());
      assertEquals(",V-D]EO.q( GjN7N", var0.getJsType());
      assertEquals(",V-D]EO.q( GjN7N", var0.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Var var0 = new Var(",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N");
      String string0 = var0.getName();
      assertEquals(",V-D]EO.q( GjN7N", var0.getJsType());
      assertEquals(",V-D]EO.q( GjN7N", var0.getValue());
      assertEquals(",V-D]EO.q( GjN7N", string0);
      assertFalse(var0.isResource());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Var var0 = new Var(",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N");
      var0.setName(",V-D]EO.q( GjN7N");
      assertEquals(",V-D]EO.q( GjN7N", var0.getJsType());
      assertFalse(var0.isResource());
      assertEquals(",V-D]EO.q( GjN7N", var0.getName());
      assertEquals(",V-D]EO.q( GjN7N", var0.getValue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Var var0 = new Var();
      String string0 = var0.toString();
      assertEquals("Var: name=null  value=null  resource=false  jsType=null\n", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Var var0 = new Var(",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N");
      String string0 = var0.getJsType();
      assertEquals(",V-D]EO.q( GjN7N", var0.getValue());
      assertEquals(",V-D]EO.q( GjN7N", var0.getName());
      assertEquals(",V-D]EO.q( GjN7N", string0);
      assertFalse(var0.isResource());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Var var0 = new Var(",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N");
      String string0 = var0.getBundle();
      assertEquals(",V-D]EO.q( GjN7N", var0.getJsType());
      assertNull(string0);
      assertEquals(",V-D]EO.q( GjN7N", var0.getName());
      assertFalse(var0.isResource());
      assertEquals(",V-D]EO.q( GjN7N", var0.getValue());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Var var0 = new Var(",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N");
      boolean boolean0 = var0.isResource();
      assertFalse(boolean0);
      assertEquals(",V-D]EO.q( GjN7N", var0.getName());
      assertEquals(",V-D]EO.q( GjN7N", var0.getJsType());
      assertEquals(",V-D]EO.q( GjN7N", var0.getValue());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Var var0 = new Var(",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N", ",V-D]EO.q( GjN7N");
      assertFalse(var0.isResource());
      
      var0.setResource(true);
      var0.toString();
      assertTrue(var0.isResource());
  }
}
