/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 15:48:57 GMT 2022
 */

package org.apache.commons.validator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.validator.FormSet;
import org.apache.commons.validator.Validator;
import org.apache.commons.validator.ValidatorResources;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Validator_ESTest extends Validator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0);
      validator0.fieldName = "";
      // Undeclared exception!
      try { 
        validator0.validate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.ValidatorResources", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0, "+WCu.\",-^mG", "v~dx,e#(_V)f{\"wL");
      assertFalse(validator0.getUseContextClassLoader());
      
      validator0.setUseContextClassLoader(true);
      boolean boolean0 = validator0.getUseContextClassLoader();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0, "Zlc9!hUJ ");
      validator0.setPage(11);
      int int0 = validator0.getPage();
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0, "SaL>e", "\"s7a");
      validator0.setPage((-1845));
      int int0 = validator0.getPage();
      assertEquals((-1845), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0, (String) null);
      String string0 = validator0.getFormName();
      assertEquals(0, validator0.getPage());
      assertFalse(validator0.getUseContextClassLoader());
      assertFalse(validator0.getOnlyReturnErrors());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0, "SaL>e", "\"s7a");
      assertEquals("SaL>e", validator0.getFormName());
      
      validator0.setFormName("");
      String string0 = validator0.getFormName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0);
      validator0.parameters = null;
      // Undeclared exception!
      try { 
        validator0.setParameter("z]r}3xIG5.M@|WlX", "z]r}3xIG5.M@|WlX");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.Validator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Validator validator0 = null;
      try {
        validator0 = new Validator((ValidatorResources) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Resources cannot be null.
         //
         verifyException("org.apache.commons.validator.Validator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0);
      validator0.setParameter("RV,M4L| ", "RV,M4L| ");
      Object object0 = validator0.getParameterValue("RV,M4L| ");
      assertNotNull(object0);
      assertFalse(validator0.getUseContextClassLoader());
      assertFalse(validator0.getOnlyReturnErrors());
      assertEquals(0, validator0.getPage());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0);
      validator0.getParameterValue("RV,M4L| ");
      assertEquals(0, validator0.getPage());
      assertFalse(validator0.getOnlyReturnErrors());
      assertFalse(validator0.getUseContextClassLoader());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      FormSet formSet0 = new FormSet();
      validatorResources0.defaultFormSet = formSet0;
      Validator validator0 = new Validator(validatorResources0);
      validator0.validate();
      assertFalse(validator0.getUseContextClassLoader());
      assertFalse(validator0.getOnlyReturnErrors());
      assertEquals(0, validator0.getPage());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0, "Zlc9!hUJ ");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      validator0.setClassLoader(classLoader0);
      validator0.getClassLoader();
      assertFalse(validator0.getUseContextClassLoader());
      assertFalse(validator0.getOnlyReturnErrors());
      assertEquals(0, validator0.getPage());
      assertEquals("Zlc9!hUJ ", validator0.getFormName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0, "Zlc9!hUJ ");
      ClassLoader classLoader0 = validator0.getClassLoader();
      assertFalse(validator0.getUseContextClassLoader());
      assertFalse(validator0.getOnlyReturnErrors());
      assertEquals(0, validator0.getPage());
      assertNotNull(classLoader0);
      assertEquals("Zlc9!hUJ ", validator0.getFormName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Validator validator0 = null;
      try {
        validator0 = new Validator((ValidatorResources) null, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Resources cannot be null.
         //
         verifyException("org.apache.commons.validator.Validator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Validator validator0 = null;
      try {
        validator0 = new Validator((ValidatorResources) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Resources cannot be null.
         //
         verifyException("org.apache.commons.validator.Validator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0);
      int int0 = validator0.getPage();
      assertEquals(0, int0);
      assertFalse(validator0.getOnlyReturnErrors());
      assertFalse(validator0.getUseContextClassLoader());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0);
      validator0.clear();
      assertEquals(0, validator0.getPage());
      assertFalse(validator0.getUseContextClassLoader());
      assertFalse(validator0.getOnlyReturnErrors());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0);
      assertFalse(validator0.getOnlyReturnErrors());
      
      validator0.setOnlyReturnErrors(true);
      boolean boolean0 = validator0.getOnlyReturnErrors();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0);
      boolean boolean0 = validator0.getOnlyReturnErrors();
      assertFalse(validator0.getUseContextClassLoader());
      assertFalse(boolean0);
      assertEquals(0, validator0.getPage());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0);
      boolean boolean0 = validator0.getUseContextClassLoader();
      assertEquals(0, validator0.getPage());
      assertFalse(boolean0);
      assertFalse(validator0.getOnlyReturnErrors());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0);
      assertFalse(validator0.getUseContextClassLoader());
      
      validator0.setUseContextClassLoader(true);
      validator0.getClassLoader();
      assertTrue(validator0.getUseContextClassLoader());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0);
      validator0.setFieldName("~\"sV");
      assertFalse(validator0.getUseContextClassLoader());
      assertFalse(validator0.getOnlyReturnErrors());
      assertEquals(0, validator0.getPage());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ValidatorResources validatorResources0 = new ValidatorResources();
      Validator validator0 = new Validator(validatorResources0, "O`y'X.(@9'S)TD", "O`y'X.(@9'S)TD");
      String string0 = validator0.getFormName();
      assertEquals(0, validator0.getPage());
      assertNotNull(string0);
      assertFalse(validator0.getOnlyReturnErrors());
      assertFalse(validator0.getUseContextClassLoader());
      assertEquals("O`y'X.(@9'S)TD", string0);
  }
}
