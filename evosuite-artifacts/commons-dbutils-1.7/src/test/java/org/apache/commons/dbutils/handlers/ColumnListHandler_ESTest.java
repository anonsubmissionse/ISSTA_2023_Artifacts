/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 15:07:20 GMT 2022
 */

package org.apache.commons.dbutils.handlers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.ResultSet;
import org.apache.commons.dbutils.handlers.ColumnListHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ColumnListHandler_ESTest extends ColumnListHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ColumnListHandler<Object> columnListHandler0 = new ColumnListHandler<Object>();
      // Undeclared exception!
      try { 
        columnListHandler0.handleRow((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.dbutils.handlers.ColumnListHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ColumnListHandler<String> columnListHandler0 = new ColumnListHandler<String>(0);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(resultSet0).getObject(anyInt());
      String string0 = columnListHandler0.handleRow(resultSet0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ColumnListHandler<Object> columnListHandler0 = new ColumnListHandler<Object>("");
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(resultSet0).getObject(anyString());
      Object object0 = columnListHandler0.handleRow(resultSet0);
      //  // Unstable assertion: assertNotNull(object0);
  }
}
