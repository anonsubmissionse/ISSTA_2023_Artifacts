/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 15:04:53 GMT 2022
 */

package org.apache.commons.dbutils.handlers.properties;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.dbutils.handlers.properties.StringEnumPropertyHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.Answers;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StringEnumPropertyHandler_ESTest extends StringEnumPropertyHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringEnumPropertyHandler stringEnumPropertyHandler0 = new StringEnumPropertyHandler();
      Class<Answers> class0 = Answers.class;
      Object object0 = stringEnumPropertyHandler0.apply(class0, "RETURNS_SMART_NULLS");
      assertEquals(Answers.RETURNS_SMART_NULLS, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringEnumPropertyHandler stringEnumPropertyHandler0 = new StringEnumPropertyHandler();
      // Undeclared exception!
      try { 
        stringEnumPropertyHandler0.match((Class<?>) null, "RETURNS_MOCKS");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.dbutils.handlers.properties.StringEnumPropertyHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringEnumPropertyHandler stringEnumPropertyHandler0 = new StringEnumPropertyHandler();
      // Undeclared exception!
      try { 
        stringEnumPropertyHandler0.apply((Class<?>) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.dbutils.handlers.properties.StringEnumPropertyHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringEnumPropertyHandler stringEnumPropertyHandler0 = new StringEnumPropertyHandler();
      Class<String> class0 = String.class;
      boolean boolean0 = stringEnumPropertyHandler0.match(class0, ":o-x8fpC)f");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringEnumPropertyHandler stringEnumPropertyHandler0 = new StringEnumPropertyHandler();
      Class<Answers> class0 = Answers.class;
      boolean boolean0 = stringEnumPropertyHandler0.match(class0, "$");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringEnumPropertyHandler stringEnumPropertyHandler0 = new StringEnumPropertyHandler();
      Class<Integer> class0 = Integer.class;
      boolean boolean0 = stringEnumPropertyHandler0.match(class0, stringEnumPropertyHandler0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringEnumPropertyHandler stringEnumPropertyHandler0 = new StringEnumPropertyHandler();
      Class<Answers> class0 = Answers.class;
      Class<Integer> class1 = Integer.class;
      // Undeclared exception!
      try { 
        stringEnumPropertyHandler0.apply(class1, class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
      }
  }
}
