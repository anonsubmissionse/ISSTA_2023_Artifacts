/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 14:59:43 GMT 2022
 */

package org.apache.commons.dbutils.wrappers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.net.URL;
import java.net.URLStreamHandler;
import java.sql.Date;
import java.sql.Ref;
import java.sql.ResultSet;
import java.sql.Time;
import java.sql.Timestamp;
import javax.sql.rowset.serial.SerialBlob;
import javax.sql.rowset.serial.SerialClob;
import org.apache.commons.dbutils.wrappers.SqlNullCheckedResultSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SqlNullCheckedResultSet_ESTest extends SqlNullCheckedResultSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("?", "?", 1285, "?", uRLStreamHandler0);
      sqlNullCheckedResultSet0.setNullURL(uRL0);
      sqlNullCheckedResultSet0.getNullURL();
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap((ResultSet) null);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("Y!G", "shutdown", 0, "9:H#q0%Py8q.6_", uRLStreamHandler0);
      sqlNullCheckedResultSet0.setNullURL(uRL0);
      sqlNullCheckedResultSet0.getNullURL();
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      URL uRL0 = MockURL.getHttpExample();
      sqlNullCheckedResultSet0.setNullURL(uRL0);
      sqlNullCheckedResultSet0.getNullURL();
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      Timestamp timestamp0 = new Timestamp(164L);
      sqlNullCheckedResultSet0.setNullTimestamp(timestamp0);
      sqlNullCheckedResultSet0.getNullTimestamp();
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullString("getNullgetNullDate");
      sqlNullCheckedResultSet0.getNullString();
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullString("");
      sqlNullCheckedResultSet0.getNullString();
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullShort((short)1248);
      short short0 = sqlNullCheckedResultSet0.getNullShort();
      assertEquals((short)1248, short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullShort((short) (-568));
      short short0 = sqlNullCheckedResultSet0.getNullShort();
      assertEquals((short) (-568), short0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullObject(proxy0);
      sqlNullCheckedResultSet0.getNullObject();
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullLong(669L);
      long long0 = sqlNullCheckedResultSet0.getNullLong();
      assertEquals(669L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullLong((-1354L));
      long long0 = sqlNullCheckedResultSet0.getNullLong();
      assertEquals((-1354L), long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullInt(1027);
      int int0 = sqlNullCheckedResultSet0.getNullInt();
      assertEquals(1027, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullInt((-337));
      int int0 = sqlNullCheckedResultSet0.getNullInt();
      assertEquals((-337), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullFloat(146.0F);
      float float0 = sqlNullCheckedResultSet0.getNullFloat();
      assertEquals(146.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap((ResultSet) null);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullFloat((-1131.085F));
      float float0 = sqlNullCheckedResultSet0.getNullFloat();
      assertEquals((-1131.085F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullDouble(1856.11469);
      double double0 = sqlNullCheckedResultSet0.getNullDouble();
      assertEquals(1856.11469, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("/Z|Q").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullDouble((-10.287749087018899));
      double double0 = sqlNullCheckedResultSet0.getNullDouble();
      assertEquals((-10.287749087018899), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      char[] charArray0 = new char[3];
      SerialClob serialClob0 = new SerialClob(charArray0);
      sqlNullCheckedResultSet0.setNullClob(serialClob0);
      sqlNullCheckedResultSet0.getNullClob();
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      StringReader stringReader0 = new StringReader("getNullgetNullRef");
      sqlNullCheckedResultSet0.setNullCharacterStream(stringReader0);
      sqlNullCheckedResultSet0.getNullCharacterStream();
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      byte[] byteArray0 = new byte[0];
      sqlNullCheckedResultSet0.setNullBytes(byteArray0);
      sqlNullCheckedResultSet0.getNullBytes();
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      
      sqlNullCheckedResultSet0.setNullByte((byte)1);
      byte byte0 = sqlNullCheckedResultSet0.getNullByte();
      assertEquals((byte)1, byte0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("get_column_name").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullByte((byte) (-99));
      byte byte0 = sqlNullCheckedResultSet0.getNullByte();
      assertEquals((byte) (-99), byte0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("getNullinvoke").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      
      sqlNullCheckedResultSet0.setNullBoolean(true);
      boolean boolean0 = sqlNullCheckedResultSet0.getNullBoolean();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("Iq7nyOiJ<N").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      byte[] byteArray0 = new byte[7];
      SerialBlob serialBlob0 = new SerialBlob(byteArray0);
      sqlNullCheckedResultSet0.setNullBlob(serialBlob0);
      sqlNullCheckedResultSet0.getNullBlob();
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("c}g^m6;o3/w").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
      sqlNullCheckedResultSet0.setNullBinaryStream(pipedInputStream0);
      sqlNullCheckedResultSet0.getNullBinaryStream();
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      sqlNullCheckedResultSet0.setNullBigDecimal(bigDecimal0);
      sqlNullCheckedResultSet0.getNullBigDecimal();
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      sqlNullCheckedResultSet0.setNullBigDecimal(bigDecimal0);
      sqlNullCheckedResultSet0.getNullBigDecimal();
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("org.apache.commons.dbutils.wrappers.SqlNullCheckedResultSet").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      BigDecimal bigDecimal0 = new BigDecimal((-1340L));
      sqlNullCheckedResultSet0.setNullBigDecimal(bigDecimal0);
      sqlNullCheckedResultSet0.getNullBigDecimal();
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      sqlNullCheckedResultSet0.setNullAsciiStream(pipedInputStream0);
      sqlNullCheckedResultSet0.getNullAsciiStream();
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      // Undeclared exception!
      try { 
        sqlNullCheckedResultSet0.setNullBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.dbutils.wrappers.SqlNullCheckedResultSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("getNuwrap").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      Object[] objectArray0 = new Object[1];
      try { 
        sqlNullCheckedResultSet0.invoke((Object) null, (Method) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.dbutils.wrappers.SqlNullCheckedResultSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("y8Q^Q?z)`4?s&_").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullTimestamp((Timestamp) null);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("Q],Y-Y*`").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullDate((Date) null);
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      Timestamp timestamp0 = new Timestamp(0);
      sqlNullCheckedResultSet0.setNullTimestamp(timestamp0);
      Timestamp timestamp1 = sqlNullCheckedResultSet0.getNullTimestamp();
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertNotNull(timestamp1);
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("y8Q^Q?z)`4?s&_").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullTimestamp();
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap((ResultSet) null);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      Date date0 = new Date((-34L));
      sqlNullCheckedResultSet0.setNullDate(date0);
      Date date1 = sqlNullCheckedResultSet0.getNullDate();
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertNotNull(date1);
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("Q],Y-Y*`").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullDate();
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("org.apache.commons.dbutils.ProxyFactory").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullBytes();
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("getNuwrap").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullString();
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(">F1k>;zLoh+As.Q").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullRef();
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("org.apache.commons.dbutils.ProxyFactory").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      float float0 = sqlNullCheckedResultSet0.getNullFloat();
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullBinaryStream();
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("Q],Y-Y*`").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      byte byte0 = sqlNullCheckedResultSet0.getNullByte();
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, byte0);
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(">F1k>;zLoh+As.Q").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullAsciiStream();
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      short short0 = sqlNullCheckedResultSet0.getNullShort();
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals((short)0, short0);
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(">F1k>;zLoh+As.Q").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullRef((Ref) null);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(">F1k>;zLoh+As.Q").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullURL();
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      double double0 = sqlNullCheckedResultSet0.getNullDouble();
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0.0, double0, 0.01);
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap((ResultSet) null);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullBlob();
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullTime();
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(">F1k>;zLoh+As.Q").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      long long0 = sqlNullCheckedResultSet0.getNullLong();
      assertEquals(0L, long0);
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap((ResultSet) null);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullObject();
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("getNuwrap").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      boolean boolean0 = sqlNullCheckedResultSet0.getNullBoolean();
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertFalse(boolean0);
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(">F1k>;zLoh+As.Q").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullBigDecimal();
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullClob();
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      byte[] byteArray0 = new byte[1];
      sqlNullCheckedResultSet0.setNullBytes(byteArray0);
      byte[] byteArray1 = sqlNullCheckedResultSet0.getNullBytes();
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertNotNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(">F1k>;zLoh+As.Q").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.getNullCharacterStream();
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      int int0 = sqlNullCheckedResultSet0.getNullInt();
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals(0, int0);
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("").when(resultSet0).toString();
      Proxy proxy0 = (Proxy)SqlNullCheckedResultSet.wrap(resultSet0);
      SqlNullCheckedResultSet sqlNullCheckedResultSet0 = new SqlNullCheckedResultSet((ResultSet) proxy0);
      sqlNullCheckedResultSet0.setNullTime((Time) null);
      assertFalse(sqlNullCheckedResultSet0.getNullBoolean());
      assertEquals(0L, sqlNullCheckedResultSet0.getNullLong());
      assertEquals((byte)0, sqlNullCheckedResultSet0.getNullByte());
      assertEquals(0.0F, sqlNullCheckedResultSet0.getNullFloat(), 0.01F);
      assertEquals(0.0, sqlNullCheckedResultSet0.getNullDouble(), 0.01);
      assertEquals((short)0, sqlNullCheckedResultSet0.getNullShort());
      assertEquals(0, sqlNullCheckedResultSet0.getNullInt());
  }
}
