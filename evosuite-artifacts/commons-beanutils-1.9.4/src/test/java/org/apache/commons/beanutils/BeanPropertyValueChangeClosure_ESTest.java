/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 18:28:36 GMT 2022
 */

package org.apache.commons.beanutils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.beanutils.BeanPropertyValueChangeClosure;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BeanPropertyValueChangeClosure_ESTest extends BeanPropertyValueChangeClosure_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BeanPropertyValueChangeClosure beanPropertyValueChangeClosure0 = new BeanPropertyValueChangeClosure("zs)|SLx{gP/&}lMF<yk", "zs)|SLx{gP/&}lMF<yk");
      boolean boolean0 = beanPropertyValueChangeClosure0.isIgnoreNull();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BeanPropertyValueChangeClosure beanPropertyValueChangeClosure0 = new BeanPropertyValueChangeClosure(" ", (Object) null, true);
      Object object0 = beanPropertyValueChangeClosure0.getPropertyValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BeanPropertyValueChangeClosure beanPropertyValueChangeClosure0 = null;
      try {
        beanPropertyValueChangeClosure0 = new BeanPropertyValueChangeClosure((String) null, (Object) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // propertyName cannot be null or empty
         //
         verifyException("org.apache.commons.beanutils.BeanPropertyValueChangeClosure", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BeanPropertyValueChangeClosure beanPropertyValueChangeClosure0 = null;
      try {
        beanPropertyValueChangeClosure0 = new BeanPropertyValueChangeClosure("", "", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // propertyName cannot be null or empty
         //
         verifyException("org.apache.commons.beanutils.BeanPropertyValueChangeClosure", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BeanPropertyValueChangeClosure beanPropertyValueChangeClosure0 = new BeanPropertyValueChangeClosure("setSimpleProperty: Invoking m'thod ", "setSimpleProperty: Invoking m'thod ");
      // Undeclared exception!
      try { 
        beanPropertyValueChangeClosure0.execute("setSimpleProperty: Invoking m'thod ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Property not found
         //
         verifyException("org.apache.commons.beanutils.BeanPropertyValueChangeClosure", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BeanPropertyValueChangeClosure beanPropertyValueChangeClosure0 = new BeanPropertyValueChangeClosure("aM=\"(ybr%nJ", "aM=\"(ybr%nJ", true);
      beanPropertyValueChangeClosure0.execute("aM=\"(ybr%nJ");
      assertTrue(beanPropertyValueChangeClosure0.isIgnoreNull());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BeanPropertyValueChangeClosure beanPropertyValueChangeClosure0 = new BeanPropertyValueChangeClosure("(XuR M", "(XuR M");
      // Undeclared exception!
      try { 
        beanPropertyValueChangeClosure0.execute("(XuR M");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unable to execute Closure. Null value encountered in property path...
         //
         verifyException("org.apache.commons.beanutils.BeanPropertyValueChangeClosure", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BeanPropertyValueChangeClosure beanPropertyValueChangeClosure0 = null;
      try {
        beanPropertyValueChangeClosure0 = new BeanPropertyValueChangeClosure((String) null, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // propertyName cannot be null or empty
         //
         verifyException("org.apache.commons.beanutils.BeanPropertyValueChangeClosure", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BeanPropertyValueChangeClosure beanPropertyValueChangeClosure0 = new BeanPropertyValueChangeClosure("aM=\"(ybr%nJ", "aM=\"(ybr%nJ", true);
      boolean boolean0 = beanPropertyValueChangeClosure0.isIgnoreNull();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BeanPropertyValueChangeClosure beanPropertyValueChangeClosure0 = new BeanPropertyValueChangeClosure("aM=\"(ybr%nJ", "aM=\"(ybr%nJ", true);
      beanPropertyValueChangeClosure0.getPropertyName();
      assertTrue(beanPropertyValueChangeClosure0.isIgnoreNull());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BeanPropertyValueChangeClosure beanPropertyValueChangeClosure0 = new BeanPropertyValueChangeClosure("aM=\"(ybr%nJ", "aM=\"(ybr%nJ", true);
      beanPropertyValueChangeClosure0.getPropertyValue();
      assertTrue(beanPropertyValueChangeClosure0.isIgnoreNull());
  }
}
