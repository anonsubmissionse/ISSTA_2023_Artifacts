/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 18:27:01 GMT 2022
 */

package org.apache.commons.beanutils.converters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.beanutils.converters.ShortArrayConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ShortArrayConverter_ESTest extends ShortArrayConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      ShortArrayConverter shortArrayConverter0 = new ShortArrayConverter(object0);
      Class<String> class0 = String.class;
      Object object1 = shortArrayConverter0.convert(class0, class0);
      assertNotNull(object1);
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ShortArrayConverter shortArrayConverter0 = new ShortArrayConverter((Object) null);
      Class<Object> class0 = Object.class;
      Object object0 = shortArrayConverter0.convert(class0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ShortArrayConverter shortArrayConverter0 = new ShortArrayConverter();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        shortArrayConverter0.convert(class0, shortArrayConverter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.commons.beanutils.converters.ShortArrayConverter@0000000001
         //
         verifyException("org.apache.commons.beanutils.converters.ShortArrayConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ShortArrayConverter shortArrayConverter0 = new ShortArrayConverter(class0);
      Class class1 = (Class)shortArrayConverter0.convert(class0, (Object) null);
      assertFalse(class1.isInterface());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ShortArrayConverter shortArrayConverter0 = new ShortArrayConverter();
      // Undeclared exception!
      try { 
        shortArrayConverter0.convert((Class) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No value specified
         //
         verifyException("org.apache.commons.beanutils.converters.ShortArrayConverter", e);
      }
  }
}
