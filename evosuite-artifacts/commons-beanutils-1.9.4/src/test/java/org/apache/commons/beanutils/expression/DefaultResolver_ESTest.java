/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 18:13:57 GMT 2022
 */

package org.apache.commons.beanutils.expression;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.beanutils.expression.DefaultResolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultResolver_ESTest extends DefaultResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.remove("(a-u=?'T)AY(rYhpm");
      assertNotNull(string0);
      assertEquals("AY(rYhpm", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.isIndexed("jmdLF;@hI'i/R");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      int int0 = defaultResolver0.getIndex("\"`L");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      // Undeclared exception!
      try { 
        defaultResolver0.getIndex("oIJV[.a]L!y]<>c");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid index value '.a'
         //
         verifyException("org.apache.commons.beanutils.expression.DefaultResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.getKey("*(Vmh@xb_gx)!");
      assertNotNull(string0);
      assertEquals("Vmh@xb_gx", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.remove("H*JD#a_?.");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.remove("(D,;|&ZrI`'YX{Km]");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.next("U[].5W91K|Th#");
      assertEquals("U[]", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.remove("*(Vmh@xb_gx)!");
      assertEquals("!", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.remove("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.remove((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.next(".WeCX(zP6ZD");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.next("G!)`4(~Y[)57`4");
      assertEquals("G!)`4(~Y[)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.hasNested("uj(,3[Wh5\u0007Z=Y9");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.next("[^Jgf(\" ~F0/=_Q27W");
      assertEquals("[^Jgf(\" ~F0/=_Q27W", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.next("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.next((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.isMapped("uj(,3[Wh5\u0007Z=Y9");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.isMapped("Q9J[N^.Z&");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.isMapped("cF|.@/I_d]=1^K");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.isMapped("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.isMapped("rXdt&` qcOM*FwG!Y");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.isMapped((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.isIndexed("Fa1@[F.C?F|N");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.isIndexed("FeT6(c");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.isIndexed("cF|.@/I_d]=1^K");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.isIndexed("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.isIndexed((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.hasNested("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.hasNested("U[].5W91K|Th#");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      boolean boolean0 = defaultResolver0.hasNested((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.getProperty("[^Jgf(\" ~F0/=_Q27W");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.getProperty("T(UO}P$^<V|D`");
      assertEquals("T", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.getProperty("D7t s");
      assertEquals("D7t s", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.getProperty("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.getProperty("0k-.MEV0si9xCUykB*");
      assertEquals("0k-", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.getProperty((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.getKey("V()");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      // Undeclared exception!
      try { 
        defaultResolver0.getKey("Z`jthf(.{WU@;$oP");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Missing End Delimiter
         //
         verifyException("org.apache.commons.beanutils.expression.DefaultResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.getKey("Fa1@[F.C?F|N");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.getKey("org.aach.commons.beanutils.uxression.DefultResover");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.getKey("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.getKey("J~$rss')f:");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      String string0 = defaultResolver0.getKey((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      int int0 = defaultResolver0.getIndex("[0],-T/{3[]N");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      // Undeclared exception!
      try { 
        defaultResolver0.getIndex("L[].mJ`h9F|2");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No Index Value
         //
         verifyException("org.apache.commons.beanutils.expression.DefaultResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      // Undeclared exception!
      try { 
        defaultResolver0.getIndex("^ckv-[=[`0QOCmZ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Missing End Delimiter
         //
         verifyException("org.apache.commons.beanutils.expression.DefaultResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      int int0 = defaultResolver0.getIndex("0k-.MEV0si9xCUykB*");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      int int0 = defaultResolver0.getIndex("");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      int int0 = defaultResolver0.getIndex("(D,;|&ZrI`'YX{Km]");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultResolver defaultResolver0 = new DefaultResolver();
      int int0 = defaultResolver0.getIndex((String) null);
      assertEquals((-1), int0);
  }
}
