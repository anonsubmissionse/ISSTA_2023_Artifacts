/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 09 18:32:31 GMT 2022
 */

package org.apache.commons.beanutils.locale.converters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.ParseException;
import java.util.Locale;
import org.apache.commons.beanutils.locale.converters.IntegerLocaleConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IntegerLocaleConverter_ESTest extends IntegerLocaleConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Double double0 = new Double((-2452.5988036908548));
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter(double0);
      Object object0 = integerLocaleConverter0.parse(double0, "Z+ xP#)U=/(;7");
      assertEquals((-2452), object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("");
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter((Object) null, locale0);
      // Undeclared exception!
      try { 
        integerLocaleConverter0.parse((Object) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Double double0 = new Double((-2452.5988036908548));
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter(double0);
      // Undeclared exception!
      try { 
        integerLocaleConverter0.parse((Object) null, "]],)lT]t9][yl|O|8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed pattern \"]],)lT]t9][yl|O|8\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter("", locale0);
      // Undeclared exception!
      try { 
        integerLocaleConverter0.parse(locale0, "\":+A%3!#A#B<rx");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to java.lang.String
         //
         verifyException("org.apache.commons.beanutils.locale.converters.DecimalLocaleConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter(locale0, (String) null, true);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Byte byte0 = new Byte((byte)1);
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter(byte0, (Locale) null, true);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter(locale0, false);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter(true);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter(integer0, true);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Locale locale0 = Locale.GERMAN;
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter(integer0, locale0, "v7", false);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter((Locale) null, "");
      try { 
        integerLocaleConverter0.parse("]-v|", "Oth}zhoE m4iuF<e!p");
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Unparseable number: \"]-v|\"
         //
         verifyException("java.text.NumberFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter("N(z7-db;D[@lj.J", locale0, "N(z7-db;D[@lj.J");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter(locale0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IntegerLocaleConverter integerLocaleConverter0 = new IntegerLocaleConverter();
  }
}
