/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 05:06:23 GMT 2022
 */

package org.apache.commons.vfs2.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.vfs2.FileFilter;
import org.apache.commons.vfs2.FileSelectInfo;
import org.apache.commons.vfs2.filter.NotFileFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NotFileFilter_ESTest extends NotFileFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileFilter fileFilter0 = mock(FileFilter.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(fileFilter0).accept(any(org.apache.commons.vfs2.FileSelectInfo.class));
      NotFileFilter notFileFilter0 = new NotFileFilter(fileFilter0);
      NotFileFilter notFileFilter1 = new NotFileFilter(notFileFilter0);
      FileSelectInfo fileSelectInfo0 = mock(FileSelectInfo.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = notFileFilter1.accept(fileSelectInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileFilter fileFilter0 = mock(FileFilter.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(fileFilter0).accept(any(org.apache.commons.vfs2.FileSelectInfo.class));
      NotFileFilter notFileFilter0 = new NotFileFilter(fileFilter0);
      FileSelectInfo fileSelectInfo0 = mock(FileSelectInfo.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = notFileFilter0.accept(fileSelectInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NotFileFilter notFileFilter0 = null;
      try {
        notFileFilter0 = new NotFileFilter((FileFilter) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The filter must not be null
         //
         verifyException("org.apache.commons.vfs2.filter.NotFileFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileFilter fileFilter0 = mock(FileFilter.class, new ViolatedAssumptionAnswer());
      NotFileFilter notFileFilter0 = new NotFileFilter(fileFilter0);
      String string0 = notFileFilter0.toString();
      assertNotNull(string0);
  }
}
