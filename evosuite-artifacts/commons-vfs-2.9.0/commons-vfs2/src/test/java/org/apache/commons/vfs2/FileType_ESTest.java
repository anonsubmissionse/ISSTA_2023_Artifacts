/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 05:17:19 GMT 2022
 */

package org.apache.commons.vfs2;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.vfs2.FileType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileType_ESTest extends FileType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileType[] fileTypeArray0 = FileType.values();
      assertEquals(4, fileTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileType fileType0 = FileType.valueOf("FILE_OR_FOLDER");
      assertEquals(FileType.FILE_OR_FOLDER, fileType0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileType fileType0 = FileType.valueOf("IMAGINARY");
      assertFalse(fileType0.hasAttributes());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileType fileType0 = FileType.FOLDER;
      boolean boolean0 = fileType0.hasContent();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileType fileType0 = FileType.FOLDER;
      boolean boolean0 = fileType0.hasChildren();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileType fileType0 = FileType.IMAGINARY;
      boolean boolean0 = fileType0.hasAttributes();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileType fileType0 = FileType.FILE;
      boolean boolean0 = fileType0.hasChildren();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileType fileType0 = FileType.FILE;
      String string0 = fileType0.getName();
      assertEquals("file", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileType fileType0 = FileType.FILE;
      String string0 = fileType0.toString();
      assertEquals("file", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileType fileType0 = FileType.FILE;
      boolean boolean0 = fileType0.hasContent();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileType fileType0 = FileType.FILE;
      boolean boolean0 = fileType0.hasAttributes();
      assertTrue(boolean0);
  }
}
