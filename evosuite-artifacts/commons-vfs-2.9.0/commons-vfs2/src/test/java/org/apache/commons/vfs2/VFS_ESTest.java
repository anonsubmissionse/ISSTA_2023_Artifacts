/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 04:54:26 GMT 2022
 */

package org.apache.commons.vfs2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.vfs2.CacheStrategy;
import org.apache.commons.vfs2.FileSystemManager;
import org.apache.commons.vfs2.VFS;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VFS_ESTest extends VFS_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      VFS.setUriStyle(true);
      boolean boolean0 = VFS.isUriStyle();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      VFS.close();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      VFS.setUriStyle(false);
      VFS.setUriStyle(false);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      VFS.isUriStyle();
      // Undeclared exception!
      try { 
        VFS.setUriStyle(true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // VFS.uriStyle was already set differently.
         //
         verifyException("org.apache.commons.vfs2.VFS", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileSystemManager fileSystemManager0 = VFS.reset();
      FileSystemManager fileSystemManager1 = VFS.getManager();
      assertSame(fileSystemManager1, fileSystemManager0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      VFS.getManager();
      VFS.close();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileSystemManager fileSystemManager0 = VFS.getManager();
      VFS.setManager(fileSystemManager0);
      assertEquals(CacheStrategy.ON_RESOLVE, fileSystemManager0.getCacheStrategy());
  }
}
