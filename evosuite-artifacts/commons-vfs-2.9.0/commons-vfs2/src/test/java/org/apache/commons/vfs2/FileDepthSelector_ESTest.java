/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 05:12:41 GMT 2022
 */

package org.apache.commons.vfs2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.vfs2.FileDepthSelector;
import org.apache.commons.vfs2.FileSelectInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileDepthSelector_ESTest extends FileDepthSelector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileDepthSelector fileDepthSelector0 = new FileDepthSelector((-2333), (-953));
      FileSelectInfo fileSelectInfo0 = mock(FileSelectInfo.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fileSelectInfo0).getDepth();
      boolean boolean0 = fileDepthSelector0.traverseDescendents(fileSelectInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileDepthSelector fileDepthSelector0 = new FileDepthSelector(2, 736);
      FileSelectInfo fileSelectInfo0 = mock(FileSelectInfo.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fileSelectInfo0).getDepth();
      boolean boolean0 = fileDepthSelector0.includeFile(fileSelectInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileDepthSelector fileDepthSelector0 = new FileDepthSelector(2, 736);
      try { 
        fileDepthSelector0.traverseDescendents((FileSelectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.FileDepthSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileDepthSelector fileDepthSelector0 = new FileDepthSelector();
      try { 
        fileDepthSelector0.includeFile((FileSelectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.FileDepthSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileDepthSelector fileDepthSelector0 = new FileDepthSelector(2, 736);
      FileSelectInfo fileSelectInfo0 = mock(FileSelectInfo.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fileSelectInfo0).getDepth();
      boolean boolean0 = fileDepthSelector0.traverseDescendents(fileSelectInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileDepthSelector fileDepthSelector0 = new FileDepthSelector();
      FileSelectInfo fileSelectInfo0 = mock(FileSelectInfo.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fileSelectInfo0).getDepth();
      boolean boolean0 = fileDepthSelector0.traverseDescendents(fileSelectInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileDepthSelector fileDepthSelector0 = new FileDepthSelector(764);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FileDepthSelector fileDepthSelector0 = new FileDepthSelector();
      FileSelectInfo fileSelectInfo0 = mock(FileSelectInfo.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(fileSelectInfo0).getDepth();
      boolean boolean0 = fileDepthSelector0.includeFile(fileSelectInfo0);
      assertTrue(boolean0);
  }
}
