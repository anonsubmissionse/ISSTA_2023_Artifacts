/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 04:50:09 GMT 2022
 */

package org.apache.commons.vfs2.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import org.apache.commons.vfs2.FileContent;
import org.apache.commons.vfs2.FileName;
import org.apache.commons.vfs2.FileObject;
import org.apache.commons.vfs2.FileSelectInfo;
import org.apache.commons.vfs2.FileSystemOptions;
import org.apache.commons.vfs2.FileType;
import org.apache.commons.vfs2.filter.AgeFileFilter;
import org.apache.commons.vfs2.impl.SynchronizedFileObject;
import org.apache.commons.vfs2.provider.DelegateFileObject;
import org.apache.commons.vfs2.provider.LayeredFileName;
import org.apache.commons.vfs2.provider.local.LocalFileSystem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AgeFileFilter_ESTest extends AgeFileFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AgeFileFilter ageFileFilter0 = new AgeFileFilter((-1L), true);
      FileSelectInfo fileSelectInfo0 = mock(FileSelectInfo.class, new ViolatedAssumptionAnswer());
      doReturn((FileObject) null).when(fileSelectInfo0).getFile();
      // Undeclared exception!
      try { 
        ageFileFilter0.accept(fileSelectInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // fileObject
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SynchronizedFileObject synchronizedFileObject0 = new SynchronizedFileObject((FileObject) null);
      AgeFileFilter ageFileFilter0 = null;
      try {
        ageFileFilter0 = new AgeFileFilter(synchronizedFileObject0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DecoratedFileObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileType fileType0 = FileType.IMAGINARY;
      LayeredFileName layeredFileName0 = new LayeredFileName("period: 0 (expected: != 0)", (FileName) null, "", fileType0);
      FileSystemOptions fileSystemOptions0 = new FileSystemOptions();
      LocalFileSystem localFileSystem0 = new LocalFileSystem((FileName) null, "period: 0 (expected: != 0)", fileSystemOptions0);
      DelegateFileObject<LocalFileSystem> delegateFileObject0 = new DelegateFileObject<LocalFileSystem>(layeredFileName0, localFileSystem0, (FileObject) null);
      AgeFileFilter ageFileFilter0 = null;
      try {
        ageFileFilter0 = new AgeFileFilter(delegateFileObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.provider.AbstractFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AgeFileFilter ageFileFilter0 = null;
      try {
        ageFileFilter0 = new AgeFileFilter((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.filter.AgeFileFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0L);
      AgeFileFilter ageFileFilter0 = new AgeFileFilter(mockDate0, false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      AgeFileFilter ageFileFilter0 = new AgeFileFilter(mockDate0);
      String string0 = ageFileFilter0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AgeFileFilter ageFileFilter0 = new AgeFileFilter((-688L), false);
      String string0 = ageFileFilter0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AgeFileFilter ageFileFilter0 = new AgeFileFilter((-688L), false);
      FileObject fileObject0 = mock(FileObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(fileObject0).exists();
      FileSelectInfo fileSelectInfo0 = mock(FileSelectInfo.class, new ViolatedAssumptionAnswer());
      doReturn(fileObject0).when(fileSelectInfo0).getFile();
      boolean boolean0 = ageFileFilter0.accept(fileSelectInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AgeFileFilter ageFileFilter0 = new AgeFileFilter((-691L), false);
      FileObject fileObject0 = mock(FileObject.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(fileObject0).exists();
      doReturn((FileContent) null).when(fileObject0).getContent();
      FileSelectInfo fileSelectInfo0 = mock(FileSelectInfo.class, new ViolatedAssumptionAnswer());
      doReturn(fileObject0).when(fileSelectInfo0).getFile();
      // Undeclared exception!
      try { 
        ageFileFilter0.accept(fileSelectInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.filter.AgeFileFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      AgeFileFilter ageFileFilter0 = new AgeFileFilter(mockDate0);
      FileObject fileObject0 = mock(FileObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(fileObject0).exists();
      FileSelectInfo fileSelectInfo0 = mock(FileSelectInfo.class, new ViolatedAssumptionAnswer());
      doReturn(fileObject0).when(fileSelectInfo0).getFile();
      boolean boolean0 = ageFileFilter0.accept(fileSelectInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AgeFileFilter ageFileFilter0 = null;
      try {
        ageFileFilter0 = new AgeFileFilter((Date) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.filter.AgeFileFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AgeFileFilter ageFileFilter0 = new AgeFileFilter((-54L));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AgeFileFilter ageFileFilter0 = null;
      try {
        ageFileFilter0 = new AgeFileFilter((FileObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.filter.AgeFileFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AgeFileFilter ageFileFilter0 = null;
      try {
        ageFileFilter0 = new AgeFileFilter((FileObject) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.filter.AgeFileFilter", e);
      }
  }
}
