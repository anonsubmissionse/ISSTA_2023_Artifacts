/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 04:06:37 GMT 2022
 */

package org.apache.commons.vfs2.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URL;
import java.security.AllPermission;
import java.security.CodeSigner;
import java.security.CodeSource;
import java.security.PermissionCollection;
import java.security.SecurityPermission;
import java.util.Enumeration;
import org.apache.commons.vfs2.FileObject;
import org.apache.commons.vfs2.FileSystemManager;
import org.apache.commons.vfs2.cache.OnCallRefreshFileObject;
import org.apache.commons.vfs2.impl.DecoratedFileObject;
import org.apache.commons.vfs2.impl.DefaultFileSystemManager;
import org.apache.commons.vfs2.impl.StandardFileSystemManager;
import org.apache.commons.vfs2.impl.SynchronizedFileObject;
import org.apache.commons.vfs2.impl.VFSClassLoader;
import org.apache.hadoop.util.Daemon;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VFSClassLoader_ESTest extends VFSClassLoader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileObject[] fileObjectArray0 = new FileObject[1];
      Daemon.DaemonFactory daemon_DaemonFactory0 = new Daemon.DaemonFactory();
      ClassLoader classLoader0 = daemon_DaemonFactory0.getContextClassLoader();
      VFSClassLoader vFSClassLoader0 = new VFSClassLoader(fileObjectArray0, (FileSystemManager) null, classLoader0);
      CodeSigner[] codeSignerArray0 = new CodeSigner[3];
      CodeSource codeSource0 = new CodeSource((URL) null, codeSignerArray0);
      // Undeclared exception!
      try { 
        vFSClassLoader0.getPermissions(codeSource0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardFileSystemManager standardFileSystemManager0 = new StandardFileSystemManager();
      VFSClassLoader vFSClassLoader0 = new VFSClassLoader((FileObject) null, standardFileSystemManager0);
      // Undeclared exception!
      try { 
        vFSClassLoader0.copyPermissions((PermissionCollection) null, (PermissionCollection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.VFSClassLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VFSClassLoader vFSClassLoader0 = new VFSClassLoader((FileObject) null, (FileSystemManager) null);
      URL uRL0 = MockURL.getHttpExample();
      CodeSource codeSource0 = new CodeSource(uRL0, (CodeSigner[]) null);
      PermissionCollection permissionCollection0 = vFSClassLoader0.getPermissions(codeSource0);
      SecurityPermission securityPermission0 = new SecurityPermission("-0B:H-", "-0B:H-");
      permissionCollection0.add(securityPermission0);
      AllPermission allPermission0 = new AllPermission("&H;N}-GZJb4", "-0B:H-");
      PermissionCollection permissionCollection1 = allPermission0.newPermissionCollection();
      // Undeclared exception!
      try { 
        vFSClassLoader0.copyPermissions(permissionCollection0, permissionCollection1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid permission: (\"java.security.SecurityPermission\" \"-0B:H-\")
         //
         verifyException("java.security.AllPermissionCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardFileSystemManager standardFileSystemManager0 = new StandardFileSystemManager();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      VFSClassLoader vFSClassLoader0 = null;
      try {
        vFSClassLoader0 = new VFSClassLoader((FileObject[]) null, standardFileSystemManager0, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.VFSClassLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      FileObject[] fileObjectArray0 = new FileObject[6];
      SynchronizedFileObject synchronizedFileObject0 = new SynchronizedFileObject((FileObject) null);
      fileObjectArray0[5] = (FileObject) synchronizedFileObject0;
      MockThread mockThread0 = new MockThread("LEh^_*rJHUUppW2");
      ClassLoader classLoader0 = mockThread0.getContextClassLoader();
      VFSClassLoader vFSClassLoader0 = null;
      try {
        vFSClassLoader0 = new VFSClassLoader(fileObjectArray0, defaultFileSystemManager0, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DecoratedFileObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardFileSystemManager standardFileSystemManager0 = new StandardFileSystemManager();
      VFSClassLoader vFSClassLoader0 = null;
      try {
        vFSClassLoader0 = new VFSClassLoader((FileObject[]) null, standardFileSystemManager0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.VFSClassLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileObject[] fileObjectArray0 = new FileObject[3];
      SynchronizedFileObject synchronizedFileObject0 = new SynchronizedFileObject((FileObject) null);
      fileObjectArray0[0] = (FileObject) synchronizedFileObject0;
      VFSClassLoader vFSClassLoader0 = null;
      try {
        vFSClassLoader0 = new VFSClassLoader(fileObjectArray0, (FileSystemManager) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DecoratedFileObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OnCallRefreshFileObject onCallRefreshFileObject0 = new OnCallRefreshFileObject((FileObject) null);
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread0 = new MockThread(thread0);
      ClassLoader classLoader0 = mockThread0.getContextClassLoader();
      VFSClassLoader vFSClassLoader0 = null;
      try {
        vFSClassLoader0 = new VFSClassLoader(onCallRefreshFileObject0, defaultFileSystemManager0, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DecoratedFileObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SynchronizedFileObject synchronizedFileObject0 = new SynchronizedFileObject((FileObject) null);
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "Unexpected xml 'standalone' pseudo-attribute value '");
      ClassLoader classLoader0 = mockThread0.getContextClassLoader();
      VFSClassLoader vFSClassLoader0 = null;
      try {
        vFSClassLoader0 = new VFSClassLoader(synchronizedFileObject0, defaultFileSystemManager0, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DecoratedFileObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SynchronizedFileObject synchronizedFileObject0 = new SynchronizedFileObject((FileObject) null);
      StandardFileSystemManager standardFileSystemManager0 = new StandardFileSystemManager();
      VFSClassLoader vFSClassLoader0 = null;
      try {
        vFSClassLoader0 = new VFSClassLoader(synchronizedFileObject0, standardFileSystemManager0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DecoratedFileObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VFSClassLoader vFSClassLoader0 = new VFSClassLoader((FileObject) null, (FileSystemManager) null);
      Enumeration<URL> enumeration0 = vFSClassLoader0.findResources("auth");
      assertNotNull(enumeration0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileObject[] fileObjectArray0 = new FileObject[1];
      Daemon.DaemonFactory daemon_DaemonFactory0 = new Daemon.DaemonFactory();
      ClassLoader classLoader0 = daemon_DaemonFactory0.getContextClassLoader();
      VFSClassLoader vFSClassLoader0 = new VFSClassLoader(fileObjectArray0, (FileSystemManager) null, classLoader0);
      URL uRL0 = vFSClassLoader0.findResource("p$L/g1*A)");
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VFSClassLoader vFSClassLoader0 = new VFSClassLoader((FileObject) null, (FileSystemManager) null);
      URL uRL0 = MockURL.getFtpExample();
      CodeSource codeSource0 = new CodeSource(uRL0, (CodeSigner[]) null);
      PermissionCollection permissionCollection0 = vFSClassLoader0.getPermissions(codeSource0);
      SecurityPermission securityPermission0 = new SecurityPermission("auth", "auth");
      permissionCollection0.add(securityPermission0);
      vFSClassLoader0.copyPermissions(permissionCollection0, permissionCollection0);
      assertFalse(permissionCollection0.isReadOnly());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      VFSClassLoader vFSClassLoader0 = new VFSClassLoader((FileObject) null, defaultFileSystemManager0);
      try { 
        vFSClassLoader0.findClass("g!Hm+iE+");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // g!Hm+iE+
         //
         verifyException("org.apache.commons.vfs2.impl.VFSClassLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileObject[] fileObjectArray0 = new FileObject[1];
      VFSClassLoader vFSClassLoader0 = new VFSClassLoader(fileObjectArray0, (FileSystemManager) null);
      // Undeclared exception!
      try { 
        vFSClassLoader0.findClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.VFSClassLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      StandardFileSystemManager standardFileSystemManager0 = new StandardFileSystemManager();
      VFSClassLoader vFSClassLoader0 = new VFSClassLoader((FileObject) null, standardFileSystemManager0, classLoader0);
      FileObject[] fileObjectArray0 = vFSClassLoader0.getFileObjects();
      assertEquals(0, fileObjectArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DecoratedFileObject decoratedFileObject0 = new DecoratedFileObject((FileObject) null);
      DefaultFileSystemManager defaultFileSystemManager0 = new DefaultFileSystemManager();
      VFSClassLoader vFSClassLoader0 = null;
      try {
        vFSClassLoader0 = new VFSClassLoader(decoratedFileObject0, defaultFileSystemManager0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.vfs2.impl.DecoratedFileObject", e);
      }
  }
}
