/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 05:05:30 GMT 2022
 */

package org.apache.commons.vfs2.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.vfs2.util.RandomAccessMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RandomAccessMode_ESTest extends RandomAccessMode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RandomAccessMode[] randomAccessModeArray0 = RandomAccessMode.values();
      assertEquals(2, randomAccessModeArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RandomAccessMode randomAccessMode0 = RandomAccessMode.valueOf("READWRITE");
      assertTrue(randomAccessMode0.requestWrite());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RandomAccessMode randomAccessMode0 = RandomAccessMode.valueOf("READ");
      assertEquals("r", randomAccessMode0.getModeString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RandomAccessMode randomAccessMode0 = RandomAccessMode.READWRITE;
      boolean boolean0 = randomAccessMode0.requestWrite();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RandomAccessMode randomAccessMode0 = RandomAccessMode.READ;
      boolean boolean0 = randomAccessMode0.requestRead();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RandomAccessMode randomAccessMode0 = RandomAccessMode.READ;
      boolean boolean0 = randomAccessMode0.requestWrite();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RandomAccessMode randomAccessMode0 = RandomAccessMode.READWRITE;
      String string0 = randomAccessMode0.getModeString();
      assertEquals("rw", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RandomAccessMode randomAccessMode0 = RandomAccessMode.READ;
      String string0 = randomAccessMode0.getModeString();
      assertEquals("r", string0);
  }
}
