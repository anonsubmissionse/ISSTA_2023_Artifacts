/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 06 17:02:16 GMT 2022
 */

package spark.resource;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import spark.resource.UriPath;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UriPath_ESTest extends UriPath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = UriPath.canonical(".'");
      assertEquals(".'", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = UriPath.canonical("%x");
      assertEquals("%x", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = UriPath.canonical("/v)*Wd1QP'/UbR2eD}:");
      assertEquals("/v)*Wd1QP'/UbR2eD}:", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = UriPath.canonical("-//..");
      assertEquals("-/", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = UriPath.canonical("2pXR/a/..");
      assertEquals("2pXR/", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = UriPath.canonical("l1/..");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = UriPath.canonical(" /0\"/../V");
      assertEquals(" /V", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = UriPath.canonical(".?/.");
      assertEquals(".?/", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = UriPath.canonical(",/.//.");
      assertEquals(",//", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = UriPath.canonical("/.");
      assertEquals("/", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = UriPath.canonical(".//_q");
      assertEquals(".//_q", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = UriPath.canonical("./");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = UriPath.canonical("./..");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = UriPath.canonical("|Uj/K/..");
      assertEquals("|Uj/", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = UriPath.canonical(",/..");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = UriPath.canonical("( YeA/../");
      assertNotNull(string0);
      assertEquals("/", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = UriPath.canonical(".?/");
      assertEquals(".?/", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = UriPath.canonical(" /\"/../V");
      assertEquals(" /V", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = UriPath.canonical(" /V");
      assertEquals(" /V", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = UriPath.canonical("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = UriPath.canonical("../.");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = UriPath.canonical((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UriPath uriPath0 = new UriPath();
  }
}
