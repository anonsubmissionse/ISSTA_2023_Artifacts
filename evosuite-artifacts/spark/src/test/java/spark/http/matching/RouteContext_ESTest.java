/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 06 17:20:03 GMT 2022
 */

package spark.http.matching;

import org.junit.Test;
import static org.junit.Assert.*;
import javax.servlet.http.HttpServletRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import spark.Response;
import spark.http.matching.Body;
import spark.http.matching.RequestWrapper;
import spark.http.matching.ResponseWrapper;
import spark.http.matching.RouteContext;
import spark.route.HttpMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RouteContext_ESTest extends RouteContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RouteContext routeContext1 = routeContext0.withUri("+b?ndiW7G\"");
      String string0 = routeContext1.uri();
      assertEquals("+b?ndiW7G\"", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      routeContext0.withUri("");
      String string0 = routeContext0.uri();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      HttpMethod httpMethod0 = HttpMethod.before;
      routeContext0.withHttpMethod(httpMethod0);
      HttpMethod httpMethod1 = routeContext0.httpMethod();
      assertSame(httpMethod1, httpMethod0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      RouteContext routeContext1 = routeContext0.withBody(body0);
      Object object0 = new Object();
      body0.set(object0);
      Body body1 = routeContext1.body();
      assertSame(body1, body0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RouteContext routeContext1 = routeContext0.withAcceptType("org.eclipse.jetty.util.PathWatcher");
      String string0 = routeContext1.acceptType();
      assertEquals("org.eclipse.jetty.util.PathWatcher", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      routeContext0.withAcceptType("");
      String string0 = routeContext0.acceptType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      routeContext0.withResponseWrapper(responseWrapper0);
      ResponseWrapper responseWrapper1 = routeContext0.responseWrapper();
      assertSame(responseWrapper1, responseWrapper0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      spark.route.Routes routes0 = spark.route.Routes.create();
      RouteContext routeContext1 = routeContext0.withMatcher(routes0);
      spark.route.Routes routes1 = routeContext1.routeMatcher();
      assertSame(routes1, routes0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      routeContext0.httpMethod();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      spark.route.Routes routes0 = routeContext0.routeMatcher();
      assertNull(routes0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RequestWrapper requestWrapper0 = RequestWrapper.create();
      routeContext0.withRequestWrapper(requestWrapper0);
      RequestWrapper requestWrapper1 = routeContext0.requestWrapper();
      assertSame(requestWrapper1, requestWrapper0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      ResponseWrapper responseWrapper0 = routeContext0.responseWrapper();
      assertNull(responseWrapper0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = routeContext0.body();
      assertNull(body0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      String string0 = routeContext0.uri();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      HttpServletRequest httpServletRequest0 = routeContext0.httpRequest();
      assertNull(httpServletRequest0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RouteContext routeContext1 = routeContext0.withHttpRequest((HttpServletRequest) null);
      assertSame(routeContext0, routeContext1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Response response0 = routeContext0.response();
      assertNull(response0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RouteContext routeContext1 = routeContext0.withResponse(responseWrapper0);
      Response response0 = routeContext1.response();
      assertSame(responseWrapper0, response0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      RouteContext routeContext1 = routeContext0.withBody(body0);
      Body body1 = routeContext1.body();
      assertTrue(body1.notSet());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      String string0 = routeContext0.acceptType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RequestWrapper requestWrapper0 = routeContext0.requestWrapper();
      assertNull(requestWrapper0);
  }
}
