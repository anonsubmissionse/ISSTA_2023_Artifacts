/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 02:16:45 GMT 2022
 */

package org.apache.commons.collections4.functors;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Array;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.functors.AllPredicate;
import org.apache.commons.collections4.functors.OnePredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractQuantifierPredicate_ESTest extends AbstractQuantifierPredicate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 3);
      OnePredicate<String> onePredicate0 = new OnePredicate<String>(predicateArray0);
      Predicate<? super String>[] predicateArray1 = onePredicate0.getPredicates();
      assertEquals(3, predicateArray1.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 0);
      OnePredicate<Predicate<Object>> onePredicate0 = new OnePredicate<Predicate<Object>>(predicateArray0);
      Predicate<? super Predicate<Object>>[] predicateArray1 = onePredicate0.getPredicates();
      assertEquals(0, predicateArray1.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AllPredicate<String> allPredicate0 = new AllPredicate<String>((Predicate<? super String>[]) null);
      Predicate<? super String>[] predicateArray0 = allPredicate0.getPredicates();
      assertNull(predicateArray0);
  }
}
