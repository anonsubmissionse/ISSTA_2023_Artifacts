/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 18:18:29 GMT 2022
 */

package org.apache.commons.jexl3;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.jexl3.MapContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MapContext_ESTest extends MapContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MapContext mapContext0 = new MapContext(hashMap0);
      mapContext0.set("dPe3S{&K,Dy-Yq4RmH", "dPe3S{&K,Dy-Yq4RmH");
      mapContext0.get("dPe3S{&K,Dy-Yq4RmH");
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MapContext mapContext0 = new MapContext((Map<String, Object>) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MapContext mapContext0 = new MapContext(hashMap0);
      boolean boolean0 = mapContext0.has("uu6m+C$jN+2Pdu");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MapContext mapContext0 = new MapContext(hashMap0);
      Object object0 = mapContext0.get("dPe3S{&K,Dy-Yq4RmH");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MapContext mapContext0 = new MapContext(hashMap0);
      mapContext0.set("dPe3S{&K,Dy-Yq4RmH", "dPe3S{&K,Dy-Yq4RmH");
      boolean boolean0 = mapContext0.has("dPe3S{&K,Dy-Yq4RmH");
      assertEquals(1, hashMap0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MapContext mapContext0 = new MapContext();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MapContext mapContext0 = new MapContext(hashMap0);
      mapContext0.clear();
  }
}
