/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 18:25:02 GMT 2022
 */

package org.apache.commons.jexl3.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.AbstractMap;
import java.util.Map;
import org.apache.commons.jexl3.internal.SoftCacheEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SoftCacheEntry_ESTest extends SoftCacheEntry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AbstractMap.SimpleImmutableEntry<String, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, String>("Not supported.", "Not supported.");
      SoftCacheEntry<String, String> softCacheEntry0 = new SoftCacheEntry<String, String>(abstractMap_SimpleImmutableEntry0);
      String string0 = softCacheEntry0.getValue();
      assertEquals("Not supported.", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>((String) null, "dNd%7Q_D9");
      SoftCacheEntry<String, String> softCacheEntry0 = new SoftCacheEntry<String, String>(abstractMap_SimpleEntry0);
      String string0 = softCacheEntry0.getKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SoftCacheEntry<Object, Object> softCacheEntry0 = null;
      try {
        softCacheEntry0 = new SoftCacheEntry<Object, Object>((Map.Entry<Object, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.SoftCacheEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AbstractMap.SimpleImmutableEntry<String, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, String>("", (String) null);
      AbstractMap.SimpleImmutableEntry<String, Object> abstractMap_SimpleImmutableEntry1 = new AbstractMap.SimpleImmutableEntry<String, Object>(abstractMap_SimpleImmutableEntry0);
      SoftCacheEntry<String, Object> softCacheEntry0 = new SoftCacheEntry<String, Object>(abstractMap_SimpleImmutableEntry1);
      Object object0 = softCacheEntry0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AbstractMap.SimpleImmutableEntry<String, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, Object>("", "");
      AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry1 = new AbstractMap.SimpleImmutableEntry<Object, Object>(abstractMap_SimpleImmutableEntry0);
      SoftCacheEntry<Object, Object> softCacheEntry0 = new SoftCacheEntry<Object, Object>(abstractMap_SimpleImmutableEntry1);
      Object object0 = softCacheEntry0.getKey();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>("+)N~go+hE`|KM{", "+)N~go+hE`|KM{");
      AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>(abstractMap_SimpleEntry0);
      SoftCacheEntry<Object, Object> softCacheEntry0 = new SoftCacheEntry<Object, Object>(abstractMap_SimpleImmutableEntry0);
      // Undeclared exception!
      try { 
        softCacheEntry0.setValue(abstractMap_SimpleEntry0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported.
         //
         verifyException("org.apache.commons.jexl3.internal.SoftCacheEntry", e);
      }
  }
}
