/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 18:21:40 GMT 2022
 */

package org.apache.commons.jexl3.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jexl3.parser.ASTAmbiguous;
import org.apache.commons.jexl3.parser.ASTBitwiseComplNode;
import org.apache.commons.jexl3.parser.OperatorController;
import org.apache.commons.jexl3.parser.SimpleNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ParserVisitor_ESTest extends ParserVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OperatorController operatorController0 = new OperatorController();
      // Undeclared exception!
      try { 
        operatorController0.visit((SimpleNode) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.ParserVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OperatorController operatorController0 = OperatorController.INSTANCE;
      ASTAmbiguous aSTAmbiguous0 = new ASTAmbiguous(2226);
      // Undeclared exception!
      try { 
        operatorController0.visit(aSTAmbiguous0, aSTAmbiguous0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // unexpected type of node
         //
         verifyException("org.apache.commons.jexl3.parser.ParserVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OperatorController operatorController0 = new OperatorController();
      ASTBitwiseComplNode aSTBitwiseComplNode0 = new ASTBitwiseComplNode((-2305));
      Integer integer0 = new Integer((-2305));
      // Undeclared exception!
      try { 
        operatorController0.visit(aSTBitwiseComplNode0, integer0);
       //  fail("Expecting exception: UnsupportedOperationException");
       // Unstable assertion
      } catch(UnsupportedOperationException e) {
         //
         // ASTBitwiseComplNode : not supported yet.
         //
         verifyException("org.apache.commons.jexl3.parser.ParserVisitor", e);
      }
  }
}
