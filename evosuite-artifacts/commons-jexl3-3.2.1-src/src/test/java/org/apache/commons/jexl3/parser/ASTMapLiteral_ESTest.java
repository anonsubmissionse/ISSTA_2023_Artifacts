/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 18:15:59 GMT 2022
 */

package org.apache.commons.jexl3.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jexl3.JexlFeatures;
import org.apache.commons.jexl3.parser.ASTJxltLiteral;
import org.apache.commons.jexl3.parser.ASTMapLiteral;
import org.apache.commons.jexl3.parser.ASTNENode;
import org.apache.commons.jexl3.parser.ASTNumberLiteral;
import org.apache.commons.jexl3.parser.FeatureController;
import org.apache.commons.jexl3.parser.JexlNode;
import org.apache.commons.jexl3.parser.OperatorController;
import org.apache.commons.jexl3.parser.Parser;
import org.apache.commons.jexl3.parser.ParserVisitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ASTMapLiteral_ESTest extends ASTMapLiteral_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTMapLiteral aSTMapLiteral0 = new ASTMapLiteral(0);
      JexlFeatures jexlFeatures0 = new JexlFeatures();
      FeatureController featureController0 = new FeatureController(jexlFeatures0);
      aSTMapLiteral0.jjtAccept(featureController0, (Object) null);
      assertFalse(aSTMapLiteral0.isConstant());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTMapLiteral aSTMapLiteral0 = new ASTMapLiteral(0);
      OperatorController operatorController0 = OperatorController.INSTANCE;
      aSTMapLiteral0.jjtAccept(operatorController0, operatorController0);
      assertFalse(aSTMapLiteral0.isConstant());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTMapLiteral aSTMapLiteral0 = new ASTMapLiteral(192);
      assertFalse(aSTMapLiteral0.isConstant());
      
      aSTMapLiteral0.jjtClose();
      boolean boolean0 = aSTMapLiteral0.isConstant(false);
      assertTrue(aSTMapLiteral0.isConstant());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Parser parser0 = new Parser("");
      ASTMapLiteral aSTMapLiteral0 = new ASTMapLiteral(parser0, (-1056));
      ASTNumberLiteral aSTNumberLiteral0 = new ASTNumberLiteral(parser0, 104);
      aSTMapLiteral0.jjtAddChild(aSTNumberLiteral0, 70);
      // Undeclared exception!
      try { 
        aSTMapLiteral0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.Debugger", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ASTMapLiteral aSTMapLiteral0 = new ASTMapLiteral((Parser) null, (-360));
      // Undeclared exception!
      try { 
        aSTMapLiteral0.jjtAccept((ParserVisitor) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.ASTMapLiteral", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ASTMapLiteral aSTMapLiteral0 = new ASTMapLiteral((Parser) null, 3351);
      JexlNode[] jexlNodeArray0 = new JexlNode[8];
      jexlNodeArray0[0] = (JexlNode) aSTMapLiteral0;
      ASTNENode aSTNENode0 = new ASTNENode(3351);
      jexlNodeArray0[1] = (JexlNode) aSTNENode0;
      aSTMapLiteral0.jjtSetChildren(jexlNodeArray0);
      aSTMapLiteral0.jjtClose();
      assertFalse(aSTMapLiteral0.isConstant());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ASTMapLiteral aSTMapLiteral0 = new ASTMapLiteral(7);
      ASTJxltLiteral aSTJxltLiteral0 = new ASTJxltLiteral((Parser) null, 7);
      aSTMapLiteral0.jjtAddChild(aSTJxltLiteral0, 7);
      // Undeclared exception!
      try { 
        aSTMapLiteral0.jjtClose();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.ASTMapLiteral", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ASTMapLiteral aSTMapLiteral0 = new ASTMapLiteral(0);
      aSTMapLiteral0.toString();
      assertFalse(aSTMapLiteral0.isConstant());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ASTMapLiteral aSTMapLiteral0 = new ASTMapLiteral((Parser) null, 3351);
      boolean boolean0 = aSTMapLiteral0.isConstant(true);
      assertFalse(boolean0);
  }
}
