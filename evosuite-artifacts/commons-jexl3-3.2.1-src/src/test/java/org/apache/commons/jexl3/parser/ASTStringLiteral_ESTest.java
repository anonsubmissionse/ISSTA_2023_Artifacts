/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 18:21:34 GMT 2022
 */

package org.apache.commons.jexl3.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jexl3.JexlFeatures;
import org.apache.commons.jexl3.parser.ASTStringLiteral;
import org.apache.commons.jexl3.parser.FeatureController;
import org.apache.commons.jexl3.parser.Parser;
import org.apache.commons.jexl3.parser.ParserVisitor;
import org.apache.commons.jexl3.parser.StringProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ASTStringLiteral_ESTest extends ASTStringLiteral_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTStringLiteral aSTStringLiteral0 = new ASTStringLiteral(952);
      aSTStringLiteral0.setLiteral("S");
      String string0 = aSTStringLiteral0.toString();
      assertEquals("S", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTStringLiteral aSTStringLiteral0 = new ASTStringLiteral(0);
      aSTStringLiteral0.setLiteral("");
      String string0 = aSTStringLiteral0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTStringLiteral aSTStringLiteral0 = new ASTStringLiteral(0);
      Parser parser0 = new Parser("");
      JexlFeatures jexlFeatures0 = parser0.getFeatures();
      FeatureController featureController0 = new FeatureController(jexlFeatures0);
      Object object0 = aSTStringLiteral0.jjtAccept(featureController0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("UA6sPp_");
      Parser parser0 = new Parser(stringProvider0);
      ASTStringLiteral aSTStringLiteral0 = new ASTStringLiteral(parser0, 0);
      JexlFeatures jexlFeatures0 = parser0.getFeatures();
      FeatureController featureController0 = new FeatureController(jexlFeatures0);
      JexlFeatures jexlFeatures1 = (JexlFeatures)aSTStringLiteral0.jjtAccept(featureController0, jexlFeatures0);
      assertFalse(jexlFeatures1.isLexical());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ASTStringLiteral aSTStringLiteral0 = new ASTStringLiteral((-468));
      boolean boolean0 = aSTStringLiteral0.isConstant(false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ASTStringLiteral aSTStringLiteral0 = new ASTStringLiteral(0);
      aSTStringLiteral0.setLiteral("Continue");
      String string0 = aSTStringLiteral0.getLiteral();
      assertEquals("Continue", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ASTStringLiteral aSTStringLiteral0 = new ASTStringLiteral(0);
      aSTStringLiteral0.setLiteral("");
      String string0 = aSTStringLiteral0.getLiteral();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ASTStringLiteral aSTStringLiteral0 = new ASTStringLiteral((Parser) null, (-3095));
      String string0 = aSTStringLiteral0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ASTStringLiteral aSTStringLiteral0 = new ASTStringLiteral((Parser) null, (-3095));
      String string0 = aSTStringLiteral0.getLiteral();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ASTStringLiteral aSTStringLiteral0 = new ASTStringLiteral(0);
      // Undeclared exception!
      try { 
        aSTStringLiteral0.jjtAccept((ParserVisitor) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.ASTStringLiteral", e);
      }
  }
}
