/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 18:06:56 GMT 2022
 */

package org.apache.commons.jexl3.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jexl3.internal.Frame;
import org.apache.commons.jexl3.internal.LexicalFrame;
import org.apache.commons.jexl3.internal.Scope;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LexicalFrame_ESTest extends LexicalFrame_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Scope scope0 = mock(Scope.class, new ViolatedAssumptionAnswer());
      doReturn((-265)).when(scope0).getArgCount();
      String[] stringArray0 = new String[7];
      Frame frame0 = new Frame(scope0, stringArray0, 106);
      LexicalFrame lexicalFrame0 = new LexicalFrame(frame0, (LexicalFrame) null);
      LexicalFrame lexicalFrame1 = lexicalFrame0.defineArgs();
      assertEquals(0, lexicalFrame1.getSymbolCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Scope scope0 = mock(Scope.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[8];
      Scope scope1 = new Scope(scope0, stringArray0);
      Frame frame0 = new Frame(scope1, stringArray0, 1);
      LexicalFrame lexicalFrame0 = new LexicalFrame(frame0, (LexicalFrame) null);
      LexicalFrame lexicalFrame1 = new LexicalFrame(frame0, lexicalFrame0);
      LexicalFrame lexicalFrame2 = lexicalFrame1.pop();
      assertSame(lexicalFrame2, lexicalFrame0);
      assertNotNull(lexicalFrame2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Scope scope0 = mock(Scope.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[3];
      Scope scope1 = new Scope(scope0, stringArray0);
      Frame frame0 = new Frame(scope1, stringArray0, 0);
      LexicalFrame lexicalFrame0 = new LexicalFrame(frame0, (LexicalFrame) null);
      LexicalFrame lexicalFrame1 = new LexicalFrame(frame0, lexicalFrame0);
      boolean boolean0 = lexicalFrame0.defineSymbol(2031, false);
      assertTrue(boolean0);
      
      LexicalFrame lexicalFrame2 = lexicalFrame1.pop();
      assertNotNull(lexicalFrame2);
      assertEquals(1, lexicalFrame2.getSymbolCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LexicalFrame lexicalFrame0 = new LexicalFrame((Frame) null, (LexicalFrame) null);
      lexicalFrame0.addSymbol((-2000));
      // Undeclared exception!
      try { 
        lexicalFrame0.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.LexicalFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Scope scope0 = mock(Scope.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[6];
      Scope scope1 = new Scope(scope0, stringArray0);
      Frame frame0 = new Frame(scope1, stringArray0, 0);
      LexicalFrame lexicalFrame0 = new LexicalFrame(frame0, (LexicalFrame) null);
      lexicalFrame0.defineArgs();
      // Undeclared exception!
      try { 
        lexicalFrame0.pop();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // org.apache.commons.jexl3.internal.Scope$2
         //
         verifyException("org.apache.commons.jexl3.internal.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Scope scope0 = mock(Scope.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[3];
      Scope scope1 = new Scope(scope0, stringArray0);
      Frame frame0 = new Frame(scope1, stringArray0, 0);
      LexicalFrame lexicalFrame0 = new LexicalFrame(frame0, (LexicalFrame) null);
      lexicalFrame0.defineSymbol(2031, false);
      // Undeclared exception!
      try { 
        lexicalFrame0.pop();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2031
         //
         verifyException("org.apache.commons.jexl3.internal.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LexicalFrame lexicalFrame0 = new LexicalFrame((Frame) null, (LexicalFrame) null);
      // Undeclared exception!
      try { 
        lexicalFrame0.defineSymbol((-217), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.LexicalFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Scope scope0 = mock(Scope.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[1];
      Scope scope1 = new Scope(scope0, stringArray0);
      Frame frame0 = new Frame(scope1, stringArray0, 1273);
      LexicalFrame lexicalFrame0 = new LexicalFrame(frame0, (LexicalFrame) null);
      // Undeclared exception!
      try { 
        lexicalFrame0.defineSymbol(846, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 846
         //
         verifyException("org.apache.commons.jexl3.internal.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      Frame frame0 = new Frame((Scope) null, objectArray0, 0);
      LexicalFrame lexicalFrame0 = new LexicalFrame(frame0, (LexicalFrame) null);
      // Undeclared exception!
      try { 
        lexicalFrame0.defineArgs();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.LexicalFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LexicalFrame lexicalFrame0 = null;
      try {
        lexicalFrame0 = new LexicalFrame((LexicalFrame) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.internal.LexicalFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Scope scope0 = mock(Scope.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[2];
      stringArray0[1] = "^";
      Scope scope1 = new Scope(scope0, stringArray0);
      Frame frame0 = new Frame(scope1, stringArray0, (-2224));
      Frame frame1 = scope1.createFrame(frame0, stringArray0);
      LexicalFrame lexicalFrame0 = new LexicalFrame(frame1, (LexicalFrame) null);
      lexicalFrame0.defineSymbol(0, true);
      LexicalFrame lexicalFrame1 = new LexicalFrame(lexicalFrame0);
      lexicalFrame1.pop();
      assertFalse(frame1.equals((Object)frame0));
      assertFalse(frame0.equals((Object)frame1));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Scope scope0 = mock(Scope.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      Scope scope1 = new Scope(scope0, stringArray0);
      Frame frame0 = new Frame(scope1, stringArray0, 4276);
      Frame frame1 = scope1.createFrame(frame0, stringArray0);
      LexicalFrame lexicalFrame0 = new LexicalFrame(frame1, (LexicalFrame) null);
      boolean boolean0 = lexicalFrame0.defineSymbol(1, true);
      assertTrue(boolean0);
      
      LexicalFrame lexicalFrame1 = lexicalFrame0.pop();
      assertTrue(frame1.equals((Object)frame0));
      assertNull(lexicalFrame1);
      assertTrue(frame0.equals((Object)frame1));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Scope scope0 = mock(Scope.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      Scope scope1 = new Scope(scope0, stringArray0);
      Frame frame0 = new Frame(scope1, stringArray0, (-2224));
      LexicalFrame lexicalFrame0 = new LexicalFrame(frame0, (LexicalFrame) null);
      boolean boolean0 = lexicalFrame0.defineSymbol(0, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Scope scope0 = mock(Scope.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[2];
      Scope scope1 = new Scope(scope0, stringArray0);
      Frame frame0 = new Frame(scope1, stringArray0, 4276);
      LexicalFrame lexicalFrame0 = new LexicalFrame(frame0, (LexicalFrame) null);
      lexicalFrame0.defineSymbol(1, true);
      boolean boolean0 = lexicalFrame0.defineSymbol(0, true);
      assertEquals(2, lexicalFrame0.getSymbolCount());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Scope scope0 = mock(Scope.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[7];
      Frame frame0 = new Frame(scope0, stringArray0, 106);
      LexicalFrame lexicalFrame0 = new LexicalFrame(frame0, (LexicalFrame) null);
      boolean boolean0 = lexicalFrame0.defineSymbol(106, false);
      assertTrue(boolean0);
      
      boolean boolean1 = lexicalFrame0.defineSymbol(106, true);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Scope scope0 = mock(Scope.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[23];
      Scope scope1 = new Scope(scope0, stringArray0);
      Frame frame0 = new Frame(scope1, stringArray0, 127);
      LexicalFrame lexicalFrame0 = new LexicalFrame(frame0, (LexicalFrame) null);
      LexicalFrame lexicalFrame1 = new LexicalFrame(lexicalFrame0);
      assertEquals(0, lexicalFrame1.getSymbolCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LexicalFrame lexicalFrame0 = new LexicalFrame((Frame) null, (LexicalFrame) null);
      LexicalFrame lexicalFrame1 = lexicalFrame0.defineArgs();
      assertSame(lexicalFrame1, lexicalFrame0);
  }
}
