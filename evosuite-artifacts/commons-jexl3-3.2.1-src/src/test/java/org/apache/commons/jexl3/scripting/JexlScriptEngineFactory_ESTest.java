/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 17:54:41 GMT 2022
 */

package org.apache.commons.jexl3.scripting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import javax.script.ScriptEngine;
import org.apache.commons.jexl3.scripting.JexlScriptEngineFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JexlScriptEngineFactory_ESTest extends JexlScriptEngineFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      String[] stringArray0 = new String[0];
      String string0 = jexlScriptEngineFactory0.getProgram(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      // Undeclared exception!
      try { 
        jexlScriptEngineFactory0.getParameter((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.scripting.JexlScriptEngineFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      // Undeclared exception!
      try { 
        jexlScriptEngineFactory0.getMethodCallSyntax("", "", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.scripting.JexlScriptEngineFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      String string0 = jexlScriptEngineFactory0.getEngineVersion();
      assertEquals("3.2", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      String string0 = jexlScriptEngineFactory0.getLanguageName();
      assertEquals("JEXL", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      String string0 = jexlScriptEngineFactory0.getEngineName();
      assertEquals("JEXL Engine", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      String string0 = jexlScriptEngineFactory0.getLanguageVersion();
      assertEquals("3.2", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      List<String> list0 = jexlScriptEngineFactory0.getNames();
      assertEquals(9, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "3.@cTC(T";
      // Undeclared exception!
      try { 
        jexlScriptEngineFactory0.getProgram(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.scripting.JexlScriptEngineFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "B2K4xQhI?= &:;";
      String string0 = jexlScriptEngineFactory0.getProgram(stringArray0);
      assertEquals("B2K4xQhI?= &:;", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      Object object0 = jexlScriptEngineFactory0.getParameter("B2K4xQhI?= &:;");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      Object object0 = jexlScriptEngineFactory0.getParameter("THREADING");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      String string0 = jexlScriptEngineFactory0.getOutputStatement((String) null);
      assertEquals("JEXL.out.print(null)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      String string0 = jexlScriptEngineFactory0.getOutputStatement("javax.script.name");
      assertEquals("JEXL.out.print('javax.script.name')", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      String[] stringArray0 = new String[6];
      String string0 = jexlScriptEngineFactory0.getMethodCallSyntax("3.@cTC(T", "3.@cTC(T", stringArray0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      List<String> list0 = jexlScriptEngineFactory0.getExtensions();
      assertEquals(3, list0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      Object object0 = jexlScriptEngineFactory0.getParameter("javax.script.language");
      assertNotNull(object0);
      assertEquals("JEXL", object0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      Object object0 = jexlScriptEngineFactory0.getParameter("javax.script.engine_version");
      assertEquals("3.2", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      List<String> list0 = jexlScriptEngineFactory0.getMimeTypes();
      assertEquals(3, list0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      ScriptEngine scriptEngine0 = jexlScriptEngineFactory0.getScriptEngine();
      assertNotNull(scriptEngine0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      Object object0 = jexlScriptEngineFactory0.getParameter("javax.script.language_version");
      assertNotNull(object0);
      assertEquals("3.2", object0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      Object object0 = jexlScriptEngineFactory0.getParameter("javax.script.engine");
      assertEquals("JEXL Engine", object0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JexlScriptEngineFactory jexlScriptEngineFactory0 = new JexlScriptEngineFactory();
      Object object0 = jexlScriptEngineFactory0.getParameter("javax.script.name");
      assertNotNull(object0);
  }
}
