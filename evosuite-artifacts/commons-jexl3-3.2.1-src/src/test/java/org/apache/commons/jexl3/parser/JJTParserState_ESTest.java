/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 18:13:58 GMT 2022
 */

package org.apache.commons.jexl3.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringReader;
import org.apache.commons.jexl3.internal.Scope;
import org.apache.commons.jexl3.parser.ASTAmbiguous;
import org.apache.commons.jexl3.parser.ASTDoWhileStatement;
import org.apache.commons.jexl3.parser.ASTIdentifierAccess;
import org.apache.commons.jexl3.parser.ASTIdentifierAccessJxlt;
import org.apache.commons.jexl3.parser.ASTJexlScript;
import org.apache.commons.jexl3.parser.ASTLENode;
import org.apache.commons.jexl3.parser.ASTLTNode;
import org.apache.commons.jexl3.parser.ASTMapLiteral;
import org.apache.commons.jexl3.parser.ASTNSWNode;
import org.apache.commons.jexl3.parser.ASTSizeFunction;
import org.apache.commons.jexl3.parser.JJTParserState;
import org.apache.commons.jexl3.parser.JexlNode;
import org.apache.commons.jexl3.parser.Node;
import org.apache.commons.jexl3.parser.Parser;
import org.apache.commons.jexl3.parser.ParserTokenManager;
import org.apache.commons.jexl3.parser.SimpleCharStream;
import org.apache.commons.jexl3.parser.SimpleNode;
import org.apache.commons.jexl3.parser.StreamProvider;
import org.apache.commons.jexl3.parser.StringProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JJTParserState_ESTest extends JJTParserState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      SimpleNode simpleNode0 = new SimpleNode(0);
      jJTParserState0.pushNode(simpleNode0);
      jJTParserState0.openNodeScope(simpleNode0);
      jJTParserState0.closeNodeScope((Node) simpleNode0, true);
      assertTrue(jJTParserState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      SimpleNode simpleNode0 = new SimpleNode(0);
      jJTParserState0.openNodeScope(simpleNode0);
      jJTParserState0.openNodeScope(simpleNode0);
      jJTParserState0.closeNodeScope((Node) simpleNode0, true);
      jJTParserState0.closeNodeScope((Node) simpleNode0, (-1199));
      // Undeclared exception!
      try { 
        jJTParserState0.clearNodeScope(simpleNode0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      ASTIdentifierAccess aSTIdentifierAccess0 = new ASTIdentifierAccess(17);
      jJTParserState0.openNodeScope(aSTIdentifierAccess0);
      jJTParserState0.pushNode(aSTIdentifierAccess0);
      ASTSizeFunction aSTSizeFunction0 = new ASTSizeFunction(1022);
      // Undeclared exception!
      try { 
        jJTParserState0.closeNodeScope((Node) aSTSizeFunction0, 1022);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      jJTParserState0.pushNode((Node) null);
      jJTParserState0.rootNode();
      assertEquals(1, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("");
      Parser parser0 = new Parser(stringProvider0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTNSWNode aSTNSWNode0 = new ASTNSWNode(parser0, 1);
      jJTParserState0.openNodeScope(aSTNSWNode0);
      ASTLENode aSTLENode0 = new ASTLENode(0);
      jJTParserState0.pushNode(aSTLENode0);
      jJTParserState0.closeNodeScope((Node) aSTLENode0, true);
      jJTParserState0.rootNode();
      assertTrue(jJTParserState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("");
      Parser parser0 = new Parser(stringProvider0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTLENode aSTLENode0 = new ASTLENode(0);
      jJTParserState0.pushNode(aSTLENode0);
      jJTParserState0.rootNode();
      assertEquals(1, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      Parser parser0 = new Parser("");
      ASTMapLiteral aSTMapLiteral0 = new ASTMapLiteral(parser0, 630);
      jJTParserState0.openNodeScope(aSTMapLiteral0);
      jJTParserState0.closeNodeScope((Node) aSTMapLiteral0, true);
      jJTParserState0.rootNode();
      assertTrue(jJTParserState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      ASTLTNode aSTLTNode0 = new ASTLTNode((-1025));
      jJTParserState0.pushNode(aSTLTNode0);
      jJTParserState0.rootNode();
      assertEquals(1, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      jJTParserState0.pushNode((Node) null);
      jJTParserState0.popNode();
      assertEquals(0, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("");
      Parser parser0 = new Parser(stringProvider0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTNSWNode aSTNSWNode0 = new ASTNSWNode(parser0, 1);
      jJTParserState0.openNodeScope(aSTNSWNode0);
      ASTLENode aSTLENode0 = new ASTLENode(0);
      jJTParserState0.pushNode(aSTLENode0);
      jJTParserState0.closeNodeScope((Node) aSTLENode0, true);
      jJTParserState0.popNode();
      assertTrue(jJTParserState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Parser parser0 = new Parser("reserved variable");
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTAmbiguous aSTAmbiguous0 = new ASTAmbiguous(1209);
      jJTParserState0.pushNode(aSTAmbiguous0);
      jJTParserState0.popNode();
      assertEquals(0, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      ASTLTNode aSTLTNode0 = new ASTLTNode((-1025));
      jJTParserState0.pushNode(aSTLTNode0);
      assertEquals(1, jJTParserState0.nodeArity());
      
      jJTParserState0.popNode();
      assertEquals(0, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      jJTParserState0.pushNode((Node) null);
      jJTParserState0.peekNode();
      assertEquals(1, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("");
      Parser parser0 = new Parser(stringProvider0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTLENode aSTLENode0 = new ASTLENode(0);
      jJTParserState0.pushNode(aSTLENode0);
      jJTParserState0.peekNode();
      assertEquals(1, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      Parser parser0 = new Parser("");
      ASTMapLiteral aSTMapLiteral0 = new ASTMapLiteral(parser0, 630);
      jJTParserState0.openNodeScope(aSTMapLiteral0);
      jJTParserState0.closeNodeScope((Node) aSTMapLiteral0, true);
      jJTParserState0.peekNode();
      assertTrue(jJTParserState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StreamProvider streamProvider0 = new StreamProvider(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(streamProvider0);
      ParserTokenManager parserTokenManager0 = new ParserTokenManager(simpleCharStream0);
      Parser parser0 = new Parser(parserTokenManager0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTDoWhileStatement aSTDoWhileStatement0 = new ASTDoWhileStatement(parser0, (-3475));
      jJTParserState0.pushNode(aSTDoWhileStatement0);
      jJTParserState0.peekNode();
      assertEquals(1, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      SimpleNode simpleNode0 = new SimpleNode(0);
      jJTParserState0.openNodeScope(simpleNode0);
      jJTParserState0.closeNodeScope((Node) simpleNode0, true);
      boolean boolean0 = jJTParserState0.nodeCreated();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("");
      Parser parser0 = new Parser(stringProvider0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTLENode aSTLENode0 = new ASTLENode(0);
      jJTParserState0.pushNode(aSTLENode0);
      int int0 = jJTParserState0.nodeArity();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Parser parser0 = new Parser("");
      JJTParserState jJTParserState0 = parser0.jjtree;
      // Undeclared exception!
      try { 
        jJTParserState0.openNodeScope((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JJTParserState", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      Parser parser0 = new Parser("");
      ASTMapLiteral aSTMapLiteral0 = new ASTMapLiteral(parser0, 630);
      JexlNode[] jexlNodeArray0 = new JexlNode[2];
      aSTMapLiteral0.jjtSetChildren(jexlNodeArray0);
      jJTParserState0.openNodeScope(aSTMapLiteral0);
      // Undeclared exception!
      try { 
        jJTParserState0.closeNodeScope((Node) aSTMapLiteral0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.ASTMapLiteral", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      SimpleNode simpleNode0 = new SimpleNode(0);
      jJTParserState0.openNodeScope(simpleNode0);
      jJTParserState0.openNodeScope(simpleNode0);
      jJTParserState0.closeNodeScope((Node) simpleNode0, 0);
      jJTParserState0.openNodeScope(simpleNode0);
      jJTParserState0.openNodeScope(simpleNode0);
      jJTParserState0.clearNodeScope(simpleNode0);
      jJTParserState0.openNodeScope(simpleNode0);
      jJTParserState0.clearNodeScope(simpleNode0);
      jJTParserState0.clearNodeScope(simpleNode0);
      // Undeclared exception!
      try { 
        jJTParserState0.closeNodeScope((Node) simpleNode0, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jexl3.parser.SimpleNode cannot be cast to org.apache.commons.jexl3.parser.JexlNode
         //
         verifyException("org.apache.commons.jexl3.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      SimpleNode simpleNode0 = new SimpleNode(0);
      jJTParserState0.pushNode((Node) null);
      jJTParserState0.openNodeScope(simpleNode0);
      // Undeclared exception!
      try { 
        jJTParserState0.closeNodeScope((Node) simpleNode0, 98);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jexl3.parser.JJTParserState", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("");
      Parser parser0 = new Parser(stringProvider0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTNSWNode aSTNSWNode0 = new ASTNSWNode(parser0, 1);
      jJTParserState0.openNodeScope(aSTNSWNode0);
      ASTLENode aSTLENode0 = new ASTLENode(0);
      jJTParserState0.pushNode(aSTLENode0);
      jJTParserState0.closeNodeScope((Node) aSTLENode0, true);
      jJTParserState0.peekNode();
      assertTrue(jJTParserState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringProvider stringProvider0 = new StringProvider("");
      Parser parser0 = new Parser(stringProvider0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTLENode aSTLENode0 = new ASTLENode(0);
      // Undeclared exception!
      try { 
        jJTParserState0.closeNodeScope((Node) aSTLENode0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      ASTIdentifierAccessJxlt aSTIdentifierAccessJxlt0 = new ASTIdentifierAccessJxlt(0);
      // Undeclared exception!
      try { 
        jJTParserState0.closeNodeScope((Node) aSTIdentifierAccessJxlt0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      // Undeclared exception!
      try { 
        jJTParserState0.popNode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Parser parser0 = new Parser("5");
      ASTJexlScript aSTJexlScript0 = parser0.JexlScript((Scope) null);
      assertEquals(1, aSTJexlScript0.jjtGetNumChildren());
      assertFalse(aSTJexlScript0.isLeftValue());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      SimpleNode simpleNode0 = new SimpleNode(0);
      jJTParserState0.pushNode(simpleNode0);
      jJTParserState0.openNodeScope(simpleNode0);
      // Undeclared exception!
      try { 
        jJTParserState0.closeNodeScope((Node) simpleNode0, 98);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jexl3.parser.SimpleNode cannot be cast to org.apache.commons.jexl3.parser.JexlNode
         //
         verifyException("org.apache.commons.jexl3.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      // Undeclared exception!
      try { 
        jJTParserState0.rootNode();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      jJTParserState0.reset();
      assertEquals(0, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      jJTParserState0.nodeCreated();
      assertEquals(0, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      int int0 = jJTParserState0.nodeArity();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      // Undeclared exception!
      try { 
        jJTParserState0.peekNode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
