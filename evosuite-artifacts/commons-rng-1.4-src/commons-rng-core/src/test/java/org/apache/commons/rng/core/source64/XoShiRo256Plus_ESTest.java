/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 03:11:12 GMT 2022
 */

package org.apache.commons.rng.core.source64;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.rng.core.source64.XoShiRo256Plus;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XoShiRo256Plus_ESTest extends XoShiRo256Plus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XoShiRo256Plus xoShiRo256Plus0 = new XoShiRo256Plus(0L, 0L, 1L, 0L);
      long long0 = xoShiRo256Plus0.nextOutput();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XoShiRo256Plus xoShiRo256Plus0 = new XoShiRo256Plus(1040L, 1040L, (-1L), (-1L));
      long long0 = xoShiRo256Plus0.nextOutput();
      assertEquals(1039L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XoShiRo256Plus xoShiRo256Plus0 = null;
      try {
        xoShiRo256Plus0 = new XoShiRo256Plus((long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.source64.AbstractXoShiRo256", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XoShiRo256Plus xoShiRo256Plus0 = null;
      try {
        xoShiRo256Plus0 = new XoShiRo256Plus((XoShiRo256Plus) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.source64.LongProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[42];
      XoShiRo256Plus xoShiRo256Plus0 = new XoShiRo256Plus(longArray0);
      XoShiRo256Plus xoShiRo256Plus1 = xoShiRo256Plus0.copy();
      assertNotSame(xoShiRo256Plus0, xoShiRo256Plus1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XoShiRo256Plus xoShiRo256Plus0 = new XoShiRo256Plus(0L, (-7046029254386353131L), (-2617L), (-2617L));
      XoShiRo256Plus xoShiRo256Plus1 = new XoShiRo256Plus(xoShiRo256Plus0);
      assertFalse(xoShiRo256Plus1.equals((Object)xoShiRo256Plus0));
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XoShiRo256Plus xoShiRo256Plus0 = new XoShiRo256Plus(0L, (-7046029254386353131L), (-2617L), (-2617L));
      long long0 = xoShiRo256Plus0.nextOutput();
      assertEquals((-2617L), long0);
  }
}
