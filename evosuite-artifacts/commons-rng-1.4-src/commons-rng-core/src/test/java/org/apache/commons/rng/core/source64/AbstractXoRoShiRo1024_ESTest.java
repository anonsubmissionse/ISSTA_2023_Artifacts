/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 03:05:49 GMT 2022
 */

package org.apache.commons.rng.core.source64;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.rng.UniformRandomProvider;
import org.apache.commons.rng.core.source64.XoRoShiRo1024PlusPlus;
import org.apache.commons.rng.core.source64.XoRoShiRo1024Star;
import org.apache.commons.rng.core.source64.XoRoShiRo1024StarStar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractXoRoShiRo1024_ESTest extends AbstractXoRoShiRo1024_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      long[] longArray0 = new long[0];
      XoRoShiRo1024Star xoRoShiRo1024Star0 = new XoRoShiRo1024Star(longArray0);
      assertNotNull(xoRoShiRo1024Star0);
      assertEquals(0, longArray0.length);
      assertArrayEquals(new long[] {}, longArray0);
      
      byte[] byteArray0 = xoRoShiRo1024Star0.getStateInternal();
      assertNotNull(byteArray0);
      assertEquals(0, longArray0.length);
      assertEquals(168, byteArray0.length);
      assertArrayEquals(new long[] {}, longArray0);
      
      XoRoShiRo1024PlusPlus xoRoShiRo1024PlusPlus0 = new XoRoShiRo1024PlusPlus(longArray0);
      assertNotNull(xoRoShiRo1024PlusPlus0);
      assertEquals(0, longArray0.length);
      assertArrayEquals(new long[] {}, longArray0);
      
      xoRoShiRo1024PlusPlus0.nextBytes(byteArray0, 3, 3);
      assertEquals(0, longArray0.length);
      assertEquals(168, byteArray0.length);
      assertArrayEquals(new long[] {}, longArray0);
      
      UniformRandomProvider uniformRandomProvider0 = xoRoShiRo1024PlusPlus0.jump();
      assertFalse(uniformRandomProvider0.equals((Object)xoRoShiRo1024PlusPlus0));
      assertNotNull(uniformRandomProvider0);
      assertEquals(0, longArray0.length);
      assertArrayEquals(new long[] {}, longArray0);
      assertNotSame(xoRoShiRo1024PlusPlus0, uniformRandomProvider0);
      assertNotSame(uniformRandomProvider0, xoRoShiRo1024PlusPlus0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      long[] longArray0 = new long[7];
      XoRoShiRo1024StarStar xoRoShiRo1024StarStar0 = new XoRoShiRo1024StarStar(longArray0);
      assertNotNull(xoRoShiRo1024StarStar0);
      assertEquals(7, longArray0.length);
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
      
      long long0 = xoRoShiRo1024StarStar0.next();
      assertEquals(0L, long0);
      assertEquals(7, longArray0.length);
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[0];
      XoRoShiRo1024StarStar xoRoShiRo1024StarStar0 = new XoRoShiRo1024StarStar(longArray0);
      assertNotNull(xoRoShiRo1024StarStar0);
      assertEquals(0, longArray0.length);
      assertArrayEquals(new long[] {}, longArray0);
      
      long long0 = xoRoShiRo1024StarStar0.next();
      assertEquals(5760L, long0);
      assertEquals(0, longArray0.length);
      assertArrayEquals(new long[] {}, longArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      long[] longArray0 = new long[0];
      XoRoShiRo1024Star xoRoShiRo1024Star0 = new XoRoShiRo1024Star(longArray0);
      assertNotNull(xoRoShiRo1024Star0);
      assertEquals(0, longArray0.length);
      assertArrayEquals(new long[] {}, longArray0);
      
      long long0 = xoRoShiRo1024Star0.next();
      assertEquals((-7046029254386353133L), long0);
      assertEquals(0, longArray0.length);
      assertArrayEquals(new long[] {}, longArray0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      long[] longArray0 = new long[9];
      XoRoShiRo1024StarStar xoRoShiRo1024StarStar0 = new XoRoShiRo1024StarStar(longArray0);
      assertNotNull(xoRoShiRo1024StarStar0);
      assertEquals(9, longArray0.length);
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
      
      // Undeclared exception!
      try { 
        xoRoShiRo1024StarStar0.setStateInternal((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.core.BaseProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      long[] longArray0 = new long[0];
      XoRoShiRo1024StarStar xoRoShiRo1024StarStar0 = new XoRoShiRo1024StarStar(longArray0);
      assertNotNull(xoRoShiRo1024StarStar0);
      assertEquals(0, longArray0.length);
      assertArrayEquals(new long[] {}, longArray0);
      
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        xoRoShiRo1024StarStar0.setStateInternal(byteArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // State size must be larger than 136 but was 9
         //
         verifyException("org.apache.commons.rng.core.BaseProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      long[] longArray0 = new long[4];
      XoRoShiRo1024StarStar xoRoShiRo1024StarStar0 = new XoRoShiRo1024StarStar(longArray0);
      xoRoShiRo1024StarStar0.jump();
      // Undeclared exception!
      xoRoShiRo1024StarStar0.longJump();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      long[] longArray0 = new long[2];
      XoRoShiRo1024Star xoRoShiRo1024Star0 = new XoRoShiRo1024Star(longArray0);
      byte[] byteArray0 = xoRoShiRo1024Star0.getStateInternal();
      xoRoShiRo1024Star0.nextBytes(byteArray0);
      xoRoShiRo1024Star0.setStateInternal(byteArray0);
      // Undeclared exception!
      try { 
        xoRoShiRo1024Star0.longJump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      long[] longArray0 = new long[2];
      XoRoShiRo1024Star xoRoShiRo1024Star0 = new XoRoShiRo1024Star(longArray0);
      byte[] byteArray0 = xoRoShiRo1024Star0.getStateInternal();
      xoRoShiRo1024Star0.nextBytes(byteArray0);
      xoRoShiRo1024Star0.setStateInternal(byteArray0);
      // Undeclared exception!
      try { 
        xoRoShiRo1024Star0.jump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      long[] longArray0 = new long[1];
      XoRoShiRo1024StarStar xoRoShiRo1024StarStar0 = new XoRoShiRo1024StarStar(longArray0);
      xoRoShiRo1024StarStar0.longJump();
      // Undeclared exception!
      xoRoShiRo1024StarStar0.jump();
  }
}
