/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 03:20:11 GMT 2022
 */

package org.apache.commons.rng.simple.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.rng.simple.internal.ByteArray2LongArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ByteArray2LongArray_ESTest extends ByteArray2LongArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ByteArray2LongArray byteArray2LongArray0 = new ByteArray2LongArray();
      byte[] byteArray0 = new byte[0];
      long[] longArray0 = byteArray2LongArray0.convert(byteArray0);
      assertEquals(0, longArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ByteArray2LongArray byteArray2LongArray0 = new ByteArray2LongArray();
      // Undeclared exception!
      try { 
        byteArray2LongArray0.convert((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.simple.internal.ByteArray2LongArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArray2LongArray byteArray2LongArray0 = new ByteArray2LongArray();
      long[] longArray0 = byteArray2LongArray0.convert(byteArray0);
      assertEquals(1, longArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ByteArray2LongArray byteArray2LongArray0 = new ByteArray2LongArray();
      byte[] byteArray0 = new byte[13];
      long[] longArray0 = byteArray2LongArray0.convert(byteArray0);
      assertEquals(2, longArray0.length);
  }
}
