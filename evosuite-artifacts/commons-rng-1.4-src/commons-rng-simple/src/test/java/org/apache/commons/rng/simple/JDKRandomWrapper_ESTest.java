/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 03:16:36 GMT 2022
 */

package org.apache.commons.rng.simple;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.rng.simple.JDKRandomWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDKRandomWrapper_ESTest extends JDKRandomWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Random.setNextRandom(2147483646);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      long long0 = jDKRandomWrapper0.nextLong(611L);
      assertEquals(362L, long0);
      
      long long1 = jDKRandomWrapper0.nextLong(1L);
      assertEquals(0L, long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextLong((-487L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be strictly positive: -487
         //
         verifyException("org.apache.commons.rng.simple.JDKRandomWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      byte[] byteArray0 = new byte[7];
      jDKRandomWrapper0.nextBytes(byteArray0, (int) (byte)0, (int) (byte)0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      long long0 = jDKRandomWrapper0.nextLong((long) 1);
      assertEquals(0L, long0);
      
      long long1 = jDKRandomWrapper0.nextLong();
      assertEquals(1L, long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Random.setNextRandom(2147483646);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      long long0 = jDKRandomWrapper0.nextLong(611L);
      assertEquals(362L, long0);
      
      long long1 = jDKRandomWrapper0.nextLong();
      assertEquals((-2147483648L), long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(597L);
      mockRandom0.nextLong();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      int int0 = jDKRandomWrapper0.nextInt((-645));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Random.setNextRandom(2147483646);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      long long0 = jDKRandomWrapper0.nextLong(611L);
      assertEquals(362L, long0);
      
      int int0 = jDKRandomWrapper0.nextInt(2734);
      assertEquals((-466), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Random.setNextRandom(2147483646);
      MockRandom mockRandom0 = new MockRandom(256L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      jDKRandomWrapper0.nextFloat();
      int int0 = jDKRandomWrapper0.nextInt();
      int int1 = jDKRandomWrapper0.nextInt();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(4101L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      jDKRandomWrapper0.nextLong();
      float float0 = jDKRandomWrapper0.nextFloat();
      assertEquals(0.1F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Random.setNextRandom(2147483646);
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextFloat();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      jDKRandomWrapper0.nextLong(611L);
      float float0 = jDKRandomWrapper0.nextFloat();
      assertEquals((-0.8F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      long long0 = jDKRandomWrapper0.nextLong((long) 1);
      assertEquals(0L, long0);
      
      double double0 = jDKRandomWrapper0.nextDouble();
      assertEquals(0.1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Random.setNextRandom((-2147483645));
      MockRandom mockRandom0 = new MockRandom((-2147483645));
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      jDKRandomWrapper0.nextInt();
      byte[] byteArray0 = new byte[8];
      jDKRandomWrapper0.nextBytes(byteArray0);
      double double0 = jDKRandomWrapper0.nextDouble();
      assertEquals((-0.8), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper((java.util.Random) null);
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextLong(1748L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper((java.util.Random) null);
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextInt(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.simple.JDKRandomWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextInt(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper((java.util.Random) null);
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.simple.JDKRandomWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper((java.util.Random) null);
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextFloat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.simple.JDKRandomWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper((java.util.Random) null);
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.simple.JDKRandomWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextBytes(byteArray0, (-87), (-87));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.simple.JDKRandomWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-219L));
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextBytes(byteArray0, (int) (byte)116, (int) (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper((java.util.Random) null);
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextBytes(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.simple.JDKRandomWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper((java.util.Random) null);
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextBoolean();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.simple.JDKRandomWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextLong((long) 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be strictly positive: 0
         //
         verifyException("org.apache.commons.rng.simple.JDKRandomWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      float float0 = jDKRandomWrapper0.nextFloat();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      double double0 = jDKRandomWrapper0.nextDouble();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      int int0 = jDKRandomWrapper0.nextInt(1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      int int0 = jDKRandomWrapper0.nextInt();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      boolean boolean0 = jDKRandomWrapper0.nextBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper((java.util.Random) null);
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextBytes(byteArray0, (int) (byte)89, (int) (byte)89);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.simple.JDKRandomWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper((java.util.Random) null);
      // Undeclared exception!
      try { 
        jDKRandomWrapper0.nextLong();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
