/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 03:16:58 GMT 2022
 */

package org.apache.commons.rng.simple.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.rng.simple.internal.Long2IntArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Long2IntArray_ESTest extends Long2IntArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Long2IntArray long2IntArray0 = new Long2IntArray(5854);
      Long long0 = new Long(5854);
      int[] intArray0 = long2IntArray0.convert(long0, 0);
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Long2IntArray long2IntArray0 = new Long2IntArray(0);
      Long long0 = new Long(0L);
      int[] intArray0 = long2IntArray0.convert(long0);
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Long2IntArray long2IntArray0 = new Long2IntArray(5854);
      Long long0 = new Long(5854);
      long2IntArray0.convert(long0);
      long2IntArray0.convert(long0);
      long2IntArray0.convert(long0, 5854);
      // Undeclared exception!
      long2IntArray0.convert(long0, 5854);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Long2IntArray long2IntArray0 = new Long2IntArray(1);
      // Undeclared exception!
      try { 
        long2IntArray0.convert((Long) null, 456);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Long2IntArray long2IntArray0 = new Long2IntArray((-1));
      Long long0 = new Long(1060L);
      // Undeclared exception!
      try { 
        long2IntArray0.convert(long0, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.simple.internal.Long2IntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Long2IntArray long2IntArray0 = new Long2IntArray(5854);
      Long long0 = new Long(5854);
      long2IntArray0.convert(long0, 5854);
      long2IntArray0.convert(long0);
      long2IntArray0.convert(long0);
      // Undeclared exception!
      long2IntArray0.convert(long0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Long2IntArray long2IntArray0 = new Long2IntArray(257);
      // Undeclared exception!
      try { 
        long2IntArray0.convert((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Long2IntArray long2IntArray0 = new Long2IntArray((-1));
      Long long0 = new Long(0L);
      // Undeclared exception!
      try { 
        long2IntArray0.convert(long0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.rng.simple.internal.Long2IntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Long long0 = new Long(12);
      Long2IntArray long2IntArray0 = new Long2IntArray(12);
      int[] intArray0 = long2IntArray0.convert(long0, 2527);
      assertEquals(2527, intArray0.length);
  }
}
