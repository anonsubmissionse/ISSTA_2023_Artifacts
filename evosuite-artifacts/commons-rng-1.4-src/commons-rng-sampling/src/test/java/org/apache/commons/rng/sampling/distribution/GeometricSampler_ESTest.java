/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 03:41:58 GMT 2022
 */

package org.apache.commons.rng.sampling.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.rng.UniformRandomProvider;
import org.apache.commons.rng.sampling.distribution.GeometricSampler;
import org.apache.commons.rng.sampling.distribution.SharedStateDiscreteSampler;
import org.apache.commons.rng.simple.JDKRandomWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GeometricSampler_ESTest extends GeometricSampler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        GeometricSampler.of((UniformRandomProvider) null, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Probability of success (p) must be in the range [0 < p <= 1]: 0.0
         //
         verifyException("org.apache.commons.rng.sampling.distribution.GeometricSampler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SharedStateDiscreteSampler sharedStateDiscreteSampler0 = GeometricSampler.of((UniformRandomProvider) null, 1.0);
      assertNotNull(sharedStateDiscreteSampler0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      // Undeclared exception!
      try { 
        GeometricSampler.of(jDKRandomWrapper0, 1570.224);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Probability of success (p) must be in the range [0 < p <= 1]: 1570.224
         //
         verifyException("org.apache.commons.rng.sampling.distribution.GeometricSampler", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        GeometricSampler.of((UniformRandomProvider) null, (-426.377629135));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Probability of success (p) must be in the range [0 < p <= 1]: -426.377629135
         //
         verifyException("org.apache.commons.rng.sampling.distribution.GeometricSampler", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      SharedStateDiscreteSampler sharedStateDiscreteSampler0 = GeometricSampler.of(jDKRandomWrapper0, 0.04779091967506745);
      assertNotNull(sharedStateDiscreteSampler0);
  }
}
