/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 03:45:14 GMT 2022
 */

package org.apache.commons.rng.sampling.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.rng.UniformRandomProvider;
import org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler;
import org.apache.commons.rng.simple.JDKRandomWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MarsagliaTsangWangDiscreteSampler_ESTest extends MarsagliaTsangWangDiscreteSampler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 940;
      Random.setNextRandom(940);
      java.util.Random random0 = null;
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper((java.util.Random) null);
      // Undeclared exception!
      MarsagliaTsangWangDiscreteSampler.Binomial.of(jDKRandomWrapper0, 940, 0.12686886871343844);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)124;
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.ints();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, 0.5);
      MarsagliaTsangWangDiscreteSampler.Binomial.of(jDKRandomWrapper0, (byte)124, 0.5);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Random.setNextRandom((-158));
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, 21.4);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-725L));
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      int int0 = 2633;
      jDKRandomWrapper0.nextInt();
      MarsagliaTsangWangDiscreteSampler.Binomial.of(jDKRandomWrapper0, 2633, 4.9E-324);
      int int1 = 1918;
      // Undeclared exception!
      try { 
        MarsagliaTsangWangDiscreteSampler.Binomial.of(jDKRandomWrapper0, 1918, (-725L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Probability is not in range [0,1]: -725.0
         //
         verifyException("org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler$Binomial", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      mockRandom0.nextLong();
      MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, 11.389636465214434);
      Random.setNextRandom(55);
      Random.setNextRandom(55);
      Random.setNextRandom(2003);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.doubles();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, 45.578);
      double[] doubleArray0 = new double[5];
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      jDKRandomWrapper0.nextBytes(byteArray0);
      doubleArray0[0] = 45.578;
      doubleArray0[1] = 45.578;
      doubleArray0[2] = 45.578;
      doubleArray0[3] = 45.578;
      doubleArray0[4] = 45.578;
      MarsagliaTsangWangDiscreteSampler.Enumerated.of(jDKRandomWrapper0, doubleArray0);
      MarsagliaTsangWangDiscreteSampler.Enumerated.of(jDKRandomWrapper0, doubleArray0);
      MarsagliaTsangWangDiscreteSampler.Enumerated.of(jDKRandomWrapper0, doubleArray0);
      // Undeclared exception!
      try { 
        MarsagliaTsangWangDiscreteSampler.Binomial.of(jDKRandomWrapper0, 0, (-1687.804975));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Probability is not in range [0,1]: -1687.804975
         //
         verifyException("org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler$Binomial", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, 1L);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.nextDouble();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      double double0 = 1024.0;
      // Undeclared exception!
      MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, 1024.0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-987L));
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      // Undeclared exception!
      try { 
        MarsagliaTsangWangDiscreteSampler.Binomial.of(jDKRandomWrapper0, (-1816), 1025.8789042902604);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Trials is not positive: -1816
         //
         verifyException("org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler$Binomial", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(4294967295L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      // Undeclared exception!
      try { 
        MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, 4294967295L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // mean 4.294967295E9 > 1024.0
         //
         verifyException("org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler$Poisson", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper((java.util.Random) null);
      MarsagliaTsangWangDiscreteSampler.Binomial.of(jDKRandomWrapper0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-4393L));
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      jDKRandomWrapper0.nextDouble();
      // Undeclared exception!
      try { 
        MarsagliaTsangWangDiscreteSampler.Binomial.of(jDKRandomWrapper0, 1, (-4393L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Probability is not in range [0,1]: -4393.0
         //
         verifyException("org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler$Binomial", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      // Undeclared exception!
      try { 
        MarsagliaTsangWangDiscreteSampler.Binomial.of((UniformRandomProvider) null, 1476, 3199.8313);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Probability is not in range [0,1]: 3199.8313
         //
         verifyException("org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler$Binomial", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-2516L));
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      // Undeclared exception!
      try { 
        MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, (-2516L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // mean is not strictly positive: -2516.0
         //
         verifyException("org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler$Poisson", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(552L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      // Undeclared exception!
      MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, 552L);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 3417;
      Random.setNextRandom(3417);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper((java.util.Random) null);
      double double0 = 0.5;
      // Undeclared exception!
      try { 
        MarsagliaTsangWangDiscreteSampler.Binomial.of(jDKRandomWrapper0, 3417, 0.5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unable to compute distribution
         //
         verifyException("org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler$Binomial", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UniformRandomProvider uniformRandomProvider0 = null;
      int int0 = 14;
      // Undeclared exception!
      try { 
        MarsagliaTsangWangDiscreteSampler.Binomial.of((UniformRandomProvider) null, 14, 39.24918019880259);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Probability is not in range [0,1]: 39.24918019880259
         //
         verifyException("org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler$Binomial", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UniformRandomProvider uniformRandomProvider0 = null;
      MarsagliaTsangWangDiscreteSampler.Poisson.of((UniformRandomProvider) null, 0.5);
      int int0 = 0;
      MarsagliaTsangWangDiscreteSampler.Binomial.of((UniformRandomProvider) null, 0, 0.5);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = 0.5;
      doubleArray0[3] = (double) 0;
      MarsagliaTsangWangDiscreteSampler.Enumerated.of((UniformRandomProvider) null, doubleArray0);
      MarsagliaTsangWangDiscreteSampler.Enumerated.of((UniformRandomProvider) null, doubleArray0);
      int int1 = 0;
      MarsagliaTsangWangDiscreteSampler.Binomial.of((UniformRandomProvider) null, 0, 1.0);
      MarsagliaTsangWangDiscreteSampler.Binomial.of((UniformRandomProvider) null, 0, 0.5);
      MarsagliaTsangWangDiscreteSampler.Enumerated.of((UniformRandomProvider) null, doubleArray0);
      // Undeclared exception!
      try { 
        MarsagliaTsangWangDiscreteSampler.Poisson.of((UniformRandomProvider) null, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // mean is not strictly positive: 0.0
         //
         verifyException("org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler$Poisson", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UniformRandomProvider uniformRandomProvider0 = null;
      int int0 = (-1464);
      // Undeclared exception!
      try { 
        MarsagliaTsangWangDiscreteSampler.Binomial.of((UniformRandomProvider) null, (-1464), 9.331443022575228E7);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Trials is not positive: -1464
         //
         verifyException("org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler$Binomial", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long long0 = 552L;
      MockRandom mockRandom0 = new MockRandom(552L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      // Undeclared exception!
      MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, 552L);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[3];
      mockRandom0.nextBoolean();
      byteArray0[0] = (byte)56;
      byteArray0[2] = (byte)26;
      mockRandom0.nextBytes(byteArray0);
      mockRandom0.ints();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, 0.5);
      MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, 1.0);
      jDKRandomWrapper0.nextDouble();
      MarsagliaTsangWangDiscreteSampler.Binomial.of(jDKRandomWrapper0, 503, 0.0);
      // Undeclared exception!
      try { 
        MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, 1234.3228610066153);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // mean 1234.3228610066153 > 1024.0
         //
         verifyException("org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler$Poisson", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      mockRandom0.ints();
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      MarsagliaTsangWangDiscreteSampler.Poisson.of(jDKRandomWrapper0, 0.5);
      // Undeclared exception!
      MarsagliaTsangWangDiscreteSampler.Binomial.of(jDKRandomWrapper0, 494, 0.5);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      JDKRandomWrapper jDKRandomWrapper0 = new JDKRandomWrapper(mockRandom0);
      double[] doubleArray0 = new double[7];
      mockRandom0.nextInt(12);
      doubleArray0[0] = (double) 0L;
      doubleArray0[1] = (double) 0L;
      jDKRandomWrapper0.nextFloat();
      doubleArray0[2] = 1.0;
      doubleArray0[3] = (double) 0L;
      doubleArray0[4] = (double) 0L;
      doubleArray0[5] = (double) 0L;
      int int0 = 5297;
      jDKRandomWrapper0.nextInt(5297);
      doubleArray0[6] = (double) 0L;
      MarsagliaTsangWangDiscreteSampler.Enumerated.of(jDKRandomWrapper0, doubleArray0);
      MarsagliaTsangWangDiscreteSampler.Binomial.of(jDKRandomWrapper0, 65536, 1.0);
      JDKRandomWrapper jDKRandomWrapper1 = new JDKRandomWrapper(mockRandom0);
      // Undeclared exception!
      try { 
        MarsagliaTsangWangDiscreteSampler.Binomial.of(jDKRandomWrapper1, 65536, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Probability is not in range [0,1]: -1.0
         //
         verifyException("org.apache.commons.rng.sampling.distribution.MarsagliaTsangWangDiscreteSampler$Binomial", e);
      }
  }
}
