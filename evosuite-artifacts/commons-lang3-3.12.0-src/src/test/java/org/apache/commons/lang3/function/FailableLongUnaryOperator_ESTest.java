/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 18:27:53 GMT 2022
 */

package org.apache.commons.lang3.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.function.FailableLongUnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FailableLongUnaryOperator_ESTest extends FailableLongUnaryOperator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FailableLongUnaryOperator<Throwable> failableLongUnaryOperator0 = FailableLongUnaryOperator.identity();
      FailableLongUnaryOperator<Throwable> failableLongUnaryOperator1 = FailableLongUnaryOperator.nop();
      FailableLongUnaryOperator<Throwable> failableLongUnaryOperator2 = failableLongUnaryOperator0.andThen(failableLongUnaryOperator1);
      assertFalse(failableLongUnaryOperator2.equals((Object)failableLongUnaryOperator1));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FailableLongUnaryOperator<Throwable> failableLongUnaryOperator0 = FailableLongUnaryOperator.identity();
      long long0 = failableLongUnaryOperator0.applyAsLong(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FailableLongUnaryOperator<Throwable> failableLongUnaryOperator0 = FailableLongUnaryOperator.identity();
      long long0 = failableLongUnaryOperator0.applyAsLong(1L);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FailableLongUnaryOperator<Throwable> failableLongUnaryOperator0 = FailableLongUnaryOperator.identity();
      long long0 = failableLongUnaryOperator0.applyAsLong((-36L));
      assertEquals((-36L), long0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FailableLongUnaryOperator<Throwable> failableLongUnaryOperator0 = FailableLongUnaryOperator.identity();
      // Undeclared exception!
      try { 
        failableLongUnaryOperator0.compose((FailableLongUnaryOperator<Throwable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FailableLongUnaryOperator<Throwable> failableLongUnaryOperator0 = FailableLongUnaryOperator.identity();
      // Undeclared exception!
      try { 
        failableLongUnaryOperator0.andThen((FailableLongUnaryOperator<Throwable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FailableLongUnaryOperator<Throwable> failableLongUnaryOperator0 = FailableLongUnaryOperator.identity();
      FailableLongUnaryOperator<Throwable> failableLongUnaryOperator1 = failableLongUnaryOperator0.andThen(failableLongUnaryOperator0);
      FailableLongUnaryOperator<Throwable> failableLongUnaryOperator2 = failableLongUnaryOperator0.compose(failableLongUnaryOperator1);
      assertFalse(failableLongUnaryOperator2.equals((Object)failableLongUnaryOperator1));
  }
}
