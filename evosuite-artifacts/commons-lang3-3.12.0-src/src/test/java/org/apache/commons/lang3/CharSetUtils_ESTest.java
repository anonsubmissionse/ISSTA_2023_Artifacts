/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 18:03:26 GMT 2022
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.lang3.CharSetUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharSetUtils_ESTest extends CharSetUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "maxWith cannot be negative";
      String string0 = CharSetUtils.squeeze("Aborting to protect against StackOverflowError - output of one loop is the input of another", stringArray0);
      assertEquals("Aborting to protect against StackOverflowError - output of one lop is the input of another", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[1] = "Minimm abbreviaton width with offset is %d";
      String string0 = CharSetUtils.squeeze("Minimm abbreviaton width with offset is %d", stringArray0);
      assertEquals("Minim abreviaton width with ofset is %d", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[10];
      String string0 = CharSetUtils.squeeze(stringArray0[0], stringArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "k=Q'26Hk'&y4u(";
      String string0 = CharSetUtils.squeeze("...", stringArray0);
      assertEquals("...", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "org.apache.commons.lang3.CharSetUtils";
      String string0 = CharSetUtils.squeeze("Minimum abbreviation width with offset is %d", stringArray0);
      assertEquals("Minimum abbreviation width with offset is %d", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "org.apache.commons.lang3.CharSetUtils";
      String string0 = CharSetUtils.squeeze("...", stringArray0);
      assertEquals(".", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = CharSetUtils.squeeze("Minimum abbreviation width with offset is %d", stringArray0);
      assertEquals("Minimum abbreviation width with offset is %d", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = CharSetUtils.squeeze("", (String[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Minimum abbreviation width with offset is %d";
      String string0 = CharSetUtils.keep("org.apache.commons.lang3.CharSetUtils", stringArray0);
      assertEquals("oraaheommonsanharettis", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[6];
      String string0 = CharSetUtils.keep("", stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = CharSetUtils.keep(stringArray0[3], stringArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = CharSetUtils.keep("org.apache.commons.lang3.CharSetUtils", stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[1] = "org.apache.commons.lang3.CharSetUtils";
      String string0 = CharSetUtils.delete("org.apache.commons.lang3.CharSetUtils", stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = CharSetUtils.delete("org.apache_commons.lan[3.CharSetUtils", (String[]) null);
      assertEquals("org.apache_commons.lan[3.CharSetUtils", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = CharSetUtils.delete(stringArray0[5], stringArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "org.apache.commons.lang3.CharSetUtils";
      int int0 = CharSetUtils.count("Minimum abreviation width with ofset is %d", stringArray0);
      assertEquals(26, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = CharSetUtils.count("E3Ja#tjNIc", (String[]) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = CharSetUtils.count("", (String[]) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[2] = "ah]'mTrVU,sZD$";
      boolean boolean0 = CharSetUtils.containsAny("E089Sqfo", stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "org.apache.commons.lang3.CharSetUtils";
      boolean boolean0 = CharSetUtils.containsAny("org.apache.commons.lang3.CharSet", stringArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[5];
      boolean boolean0 = CharSetUtils.containsAny("org.apache.commons.lang3.CharSet", stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[5];
      boolean boolean0 = CharSetUtils.containsAny("", stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharSetUtils charSetUtils0 = new CharSetUtils();
  }
}
