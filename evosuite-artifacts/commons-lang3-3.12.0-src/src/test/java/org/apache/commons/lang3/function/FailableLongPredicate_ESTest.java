/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 18:23:43 GMT 2022
 */

package org.apache.commons.lang3.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.function.FailableLongPredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FailableLongPredicate_ESTest extends FailableLongPredicate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.falsePredicate();
      FailableLongPredicate<Throwable> failableLongPredicate1 = failableLongPredicate0.negate();
      FailableLongPredicate<Throwable> failableLongPredicate2 = failableLongPredicate0.or(failableLongPredicate1);
      assertFalse(failableLongPredicate2.equals((Object)failableLongPredicate0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.truePredicate();
      boolean boolean0 = failableLongPredicate0.test(0L);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.falsePredicate();
      boolean boolean0 = failableLongPredicate0.test((-3946L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.falsePredicate();
      // Undeclared exception!
      try { 
        failableLongPredicate0.and((FailableLongPredicate<Throwable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.falsePredicate();
      FailableLongPredicate<Throwable> failableLongPredicate1 = failableLongPredicate0.and(failableLongPredicate0);
      assertFalse(failableLongPredicate1.equals((Object)failableLongPredicate0));
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.truePredicate();
      // Undeclared exception!
      try { 
        failableLongPredicate0.or((FailableLongPredicate<Throwable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FailableLongPredicate<Throwable> failableLongPredicate0 = FailableLongPredicate.falsePredicate();
      FailableLongPredicate<Throwable> failableLongPredicate1 = failableLongPredicate0.negate();
      FailableLongPredicate<Throwable> failableLongPredicate2 = failableLongPredicate0.and(failableLongPredicate1);
      assertFalse(failableLongPredicate2.equals((Object)failableLongPredicate1));
  }
}
