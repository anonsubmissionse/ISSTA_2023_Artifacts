/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 18:22:22 GMT 2022
 */

package org.apache.commons.lang3.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import java.util.Set;
import org.apache.commons.lang3.exception.ContextedException;
import org.apache.commons.lang3.exception.ExceptionContext;
import org.apache.commons.lang3.tuple.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContextedException_ESTest extends ContextedException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("S[6sNq-}a9wjmv%PqHq");
      String string0 = contextedException0.getRawMessage();
      assertEquals("S[6sNq-}a9wjmv%PqHq", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("Exception thrown on toString(): ");
      String string0 = contextedException0.getMessage();
      assertEquals("Exception thrown on toString(): ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      String string0 = contextedException0.getFormattedExceptionMessage("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      ContextedException contextedException1 = contextedException0.addContextValue("", "");
      Object object0 = contextedException1.getFirstContextValue("");
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException((String) null);
      contextedException0.setContextValue((String) null, (Object) null);
      List<Object> list0 = contextedException0.getContextValues((String) null);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      Object object0 = new Object();
      ContextedException contextedException1 = contextedException0.addContextValue("-GiTwSQ;rK)7p|x\"h", object0);
      Set<String> set0 = contextedException1.getContextLabels();
      assertEquals(1, set0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      Object object0 = new Object();
      ContextedException contextedException1 = contextedException0.addContextValue("-GiTwSQ;rK)7p|x\"h", object0);
      List<Pair<String, Object>> list0 = contextedException1.getContextEntries();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("~,VFL9^eX`G=iu", (Throwable) null, (ExceptionContext) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      ContextedException contextedException1 = new ContextedException("", contextedException0, contextedException0);
      String string0 = contextedException1.getRawMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException((String) null);
      List<Object> list0 = contextedException0.getContextValues((String) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      ContextedException contextedException1 = new ContextedException(contextedException0);
      assertFalse(contextedException1.equals((Object)contextedException0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("org.apache.commons.lang3.exception.ContextedException");
      Set<String> set0 = contextedException0.getContextLabels();
      ContextedException contextedException1 = contextedException0.setContextValue("org.apache.commons.lang3.exception.ContextedException", set0);
      assertSame(contextedException1, contextedException0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      List<Pair<String, Object>> list0 = contextedException0.getContextEntries();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      String string0 = contextedException0.getRawMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      Object object0 = contextedException0.getFirstContextValue("{rnY[$");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("", (Throwable) null);
      String string0 = contextedException0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      String string0 = contextedException0.getFormattedExceptionMessage("-GiTwSQ;rK)7p|x\"h");
      assertEquals("-GiTwSQ;rK)7p|x\"h", string0);
  }
}
