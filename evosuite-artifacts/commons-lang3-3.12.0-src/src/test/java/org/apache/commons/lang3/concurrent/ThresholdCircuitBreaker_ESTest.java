/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 18:19:34 GMT 2022
 */

package org.apache.commons.lang3.concurrent;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ThresholdCircuitBreaker_ESTest extends ThresholdCircuitBreaker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(2310L);
      Long long0 = new Long(0L);
      boolean boolean0 = thresholdCircuitBreaker0.incrementAndCheckState(long0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(0L);
      long long0 = thresholdCircuitBreaker0.getThreshold();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(2310L);
      long long0 = thresholdCircuitBreaker0.getThreshold();
      assertEquals(2310L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(1429L);
      // Undeclared exception!
      try { 
        thresholdCircuitBreaker0.incrementAndCheckState((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(0L);
      boolean boolean0 = thresholdCircuitBreaker0.checkState();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(0L);
      Long long0 = new Long(2305L);
      boolean boolean0 = thresholdCircuitBreaker0.incrementAndCheckState(long0);
      boolean boolean1 = thresholdCircuitBreaker0.checkState();
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker((-1097L));
      thresholdCircuitBreaker0.close();
      assertEquals((-1097L), thresholdCircuitBreaker0.getThreshold());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker((-1097L));
      Long long0 = new Long((-1097L));
      boolean boolean0 = thresholdCircuitBreaker0.incrementAndCheckState(long0);
      assertFalse(boolean0);
      assertEquals((-1097L), thresholdCircuitBreaker0.getThreshold());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker((-1097L));
      long long0 = thresholdCircuitBreaker0.getThreshold();
      assertEquals((-1097L), long0);
  }
}
