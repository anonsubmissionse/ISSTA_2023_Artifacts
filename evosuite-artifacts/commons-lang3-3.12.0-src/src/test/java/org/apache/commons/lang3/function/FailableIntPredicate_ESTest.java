/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 18:23:15 GMT 2022
 */

package org.apache.commons.lang3.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.function.FailableIntPredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FailableIntPredicate_ESTest extends FailableIntPredicate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FailableIntPredicate<Throwable> failableIntPredicate0 = FailableIntPredicate.truePredicate();
      boolean boolean0 = failableIntPredicate0.test((-1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FailableIntPredicate<Throwable> failableIntPredicate0 = FailableIntPredicate.falsePredicate();
      boolean boolean0 = failableIntPredicate0.test((-1420));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FailableIntPredicate<Throwable> failableIntPredicate0 = FailableIntPredicate.falsePredicate();
      // Undeclared exception!
      try { 
        failableIntPredicate0.and((FailableIntPredicate<Throwable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FailableIntPredicate<Throwable> failableIntPredicate0 = FailableIntPredicate.falsePredicate();
      FailableIntPredicate<Throwable> failableIntPredicate1 = failableIntPredicate0.negate();
      FailableIntPredicate<Throwable> failableIntPredicate2 = failableIntPredicate0.or(failableIntPredicate1);
      assertFalse(failableIntPredicate2.equals((Object)failableIntPredicate0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FailableIntPredicate<Throwable> failableIntPredicate0 = FailableIntPredicate.truePredicate();
      // Undeclared exception!
      try { 
        failableIntPredicate0.or((FailableIntPredicate<Throwable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FailableIntPredicate<Throwable> failableIntPredicate0 = FailableIntPredicate.falsePredicate();
      FailableIntPredicate<Throwable> failableIntPredicate1 = failableIntPredicate0.or(failableIntPredicate0);
      FailableIntPredicate<Throwable> failableIntPredicate2 = failableIntPredicate0.and(failableIntPredicate1);
      assertFalse(failableIntPredicate2.equals((Object)failableIntPredicate0));
  }
}
