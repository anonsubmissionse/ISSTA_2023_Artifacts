/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 10 18:15:03 GMT 2022
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.lang3.BitField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BitField_ESTest extends BitField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BitField bitField0 = new BitField((-1352));
      boolean boolean0 = bitField0.isAllSet(1397);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BitField bitField0 = new BitField((-1643));
      boolean boolean0 = bitField0.isSet((-34));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      int int0 = bitField0.setValue(498, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      int int0 = bitField0.setValue((-2442), (-2442));
      assertEquals((-2442), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      short short0 = bitField0.setShortValue((short)0, (short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BitField bitField0 = new BitField((-1352));
      short short0 = bitField0.setShortValue((short) (-253), (short)0);
      assertEquals((short)1283, short0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BitField bitField0 = new BitField((-155));
      short short0 = bitField0.setShortBoolean((short) (-1508), false);
      assertEquals((short)24, short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShort((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      short short0 = bitField0.setShort((short)0);
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.setByteBoolean((byte)0, false);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.setByte((byte)0);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BitField bitField0 = new BitField(1749);
      byte byte0 = bitField0.setByte((byte) (-117));
      assertEquals((byte) (-33), byte0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BitField bitField0 = new BitField(1435);
      int int0 = bitField0.setBoolean((short)1, true);
      assertEquals(1435, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.set(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BitField bitField0 = new BitField(237);
      int int0 = bitField0.set(237);
      assertEquals(237, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BitField bitField0 = new BitField((-2463));
      int int0 = bitField0.getValue(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      int int0 = bitField0.getValue((-1));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BitField bitField0 = new BitField((-2463));
      short short0 = bitField0.getShortValue((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BitField bitField0 = new BitField((-1352));
      short short0 = bitField0.getShortValue((short) (-936));
      assertEquals((short) (-253), short0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      short short0 = bitField0.getShortRawValue((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BitField bitField0 = new BitField((-2463));
      short short0 = bitField0.getShortRawValue((short) (-481));
      assertEquals((short) (-2559), short0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BitField bitField0 = new BitField((-1643));
      int int0 = bitField0.getRawValue((short)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BitField bitField0 = new BitField((-1352));
      int int0 = bitField0.getRawValue((short) (-253));
      assertEquals((-1536), int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BitField bitField0 = new BitField(3466);
      short short0 = bitField0.clearShort((byte)1);
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.clearShort((short) (-1889));
      assertEquals((short) (-1889), short0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      byte byte0 = bitField0.clearByte((byte)0);
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BitField bitField0 = new BitField(1);
      byte byte0 = bitField0.clearByte((byte) (-32));
      assertEquals((byte) (-32), byte0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.clear(1370);
      assertEquals(1370, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.clear((-58));
      assertEquals((-58), int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      int int0 = bitField0.getValue((-218));
      assertEquals((-218), int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BitField bitField0 = new BitField((-2463));
      byte byte0 = bitField0.clearByte((byte)25);
      assertEquals((byte)24, byte0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BitField bitField0 = new BitField((-2463));
      short short0 = bitField0.setShort((short)1);
      assertEquals((short) (-2463), short0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BitField bitField0 = new BitField((-1));
      int int0 = bitField0.set((short)0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.clear((short)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.setByte((byte)104);
      assertEquals((byte)104, byte0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BitField bitField0 = new BitField((-1352));
      int int0 = bitField0.setValue((-1), 1);
      assertEquals(1359, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.clearShort((short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BitField bitField0 = new BitField((-1352));
      int int0 = bitField0.getRawValue(33);
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BitField bitField0 = new BitField((-229));
      int int0 = bitField0.setBoolean((-229), true);
      assertEquals((-229), int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      int int0 = bitField0.setBoolean(0, false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BitField bitField0 = new BitField((-229));
      boolean boolean0 = bitField0.isAllSet((-229));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BitField bitField0 = new BitField(3394);
      boolean boolean0 = bitField0.isAllSet(180);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BitField bitField0 = new BitField(3394);
      boolean boolean0 = bitField0.isSet(3394);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      boolean boolean0 = bitField0.isSet(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BitField bitField0 = new BitField(3394);
      short short0 = bitField0.getShortRawValue((byte)26);
      assertEquals((short)2, short0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BitField bitField0 = new BitField(3394);
      short short0 = bitField0.setShortBoolean((short) (-4), true);
      assertEquals((short) (-2), short0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      byte byte0 = bitField0.setByteBoolean((byte) (-51), false);
      assertEquals((byte) (-51), byte0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BitField bitField0 = new BitField(3394);
      short short0 = bitField0.getShortValue((short) (-4));
      assertEquals((short)1696, short0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BitField bitField0 = new BitField(0);
      short short0 = bitField0.setShortValue((byte) (-51), (byte) (-51));
      assertEquals((short) (-51), short0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BitField bitField0 = new BitField((-229));
      short short0 = bitField0.setShortBoolean((short)2563, false);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BitField bitField0 = new BitField(3394);
      byte byte0 = bitField0.setByteBoolean((byte)26, true);
      assertEquals((byte)90, byte0);
  }
}
