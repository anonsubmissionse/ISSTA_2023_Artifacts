/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 07 03:44:00 GMT 2022
 */

package org.springside.modules.utils.concurrent.jsr166e;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springside.modules.utils.concurrent.jsr166e.LongAdder;
import org.springside.modules.utils.concurrent.jsr166e.Striped64;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Striped64_ESTest extends Striped64_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.sumThenReset();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      longAdder0.casBase((-1113L), 0);
      intArray0[1] = (-1);
      longAdder0.retryUpdate(3707L, intArray0, true);
      longAdder0.reset();
      longAdder0.floatValue();
      longAdder0.retryUpdate((-1), intArray0, false);
      longAdder0.busy = (-1);
      longAdder0.casBase(514L, 0L);
      longAdder0.decrement();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Striped64.Cell striped64_Cell0 = new Striped64.Cell((-1L));
      striped64_Cell0.cas(1L, 1L);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.internalReset((-1L));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.busy = 1;
      longAdder0.casBusy();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.casBase(0L, 0L);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.casBase((-1452L), (-1452L));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.retryUpdate(194L, (int[]) null, true);
      longAdder0.casBusy();
      int[] intArray0 = new int[4];
      // Undeclared exception!
      longAdder0.retryUpdate(388L, intArray0, true);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        longAdder0.retryUpdate(2700L, intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      int[] intArray0 = new int[4];
      longAdder0.casBusy();
      longAdder0.retryUpdate((-2814L), intArray0, true);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.retryUpdate(194L, (int[]) null, true);
      longAdder0.casBusy();
      longAdder0.retryUpdate(0L, (int[]) null, true);
      longAdder0.retryUpdate(0L, (int[]) null, true);
      assertEquals(194L, longAdder0.sum());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[0];
      longAdder0.cells = striped64_CellArray0;
      longAdder0.decrement();
      int[] intArray0 = new int[8];
      longAdder0.reset();
      longAdder0.retryUpdate(10L, intArray0, false);
      assertEquals(10.0F, longAdder0.floatValue(), 0.01F);
  }
}
