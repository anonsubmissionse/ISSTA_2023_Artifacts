/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Oct 06 21:05:36 GMT 2022
 */

package org.springside.modules.utils.concurrent.jsr166e;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class ConcurrentHashMapV8_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ConcurrentHashMapV8_ESTest_scaffolding.class.getClassLoader() ,
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$CollectionView",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ValuesView",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$Segment",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$TreeNode",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$TreeBin",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$KeySetView",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$1",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$CounterCell",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ReservationNode",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ForwardingNode",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$Node",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$EntrySetView"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ConcurrentHashMapV8_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$1",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$Node",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ForwardingNode",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$TreeNode",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$TreeBin",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$CounterHashCode",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$CounterCell",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$Traverser",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$TableStack",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$CollectionView",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$KeySetView",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ValuesView",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$EntrySetView",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$Segment",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ReservationNode",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$BaseIterator",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$KeyIterator",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ValueIterator",
      "org.springside.modules.utils.concurrent.jsr166e.ForkJoinTask$1",
      "org.springside.modules.utils.concurrent.jsr166e.ForkJoinTask",
      "org.springside.modules.utils.concurrent.jsr166e.CountedCompleter$1",
      "org.springside.modules.utils.concurrent.jsr166e.CountedCompleter",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$BulkTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ForEachMappingTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ForEachTransformedMappingTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$SearchMappingsTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceMappingsTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceMappingsToDoubleTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceMappingsToLongTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceMappingsToIntTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ForEachKeyTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ForEachTransformedKeyTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$SearchKeysTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ReduceKeysTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceKeysTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceKeysToDoubleTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceKeysToLongTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceKeysToIntTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ForEachValueTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ForEachTransformedValueTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$SearchValuesTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ReduceValuesTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceValuesTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceValuesToDoubleTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceValuesToLongTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceValuesToIntTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ForEachEntryTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ForEachTransformedEntryTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$SearchEntriesTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$ReduceEntriesTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceEntriesTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceEntriesToDoubleTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceEntriesToLongTask",
      "org.springside.modules.utils.concurrent.jsr166e.ConcurrentHashMapV8$MapReduceEntriesToIntTask",
      "org.springside.modules.utils.concurrent.jsr166e.ForkJoinPool$2",
      "org.springside.modules.utils.concurrent.jsr166e.ForkJoinPool$DefaultForkJoinWorkerThreadFactory",
      "org.springside.modules.utils.concurrent.jsr166e.ForkJoinPool$1",
      "org.springside.modules.utils.concurrent.jsr166e.ForkJoinPool"
    );
  }
}
