/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 07 04:04:11 GMT 2022
 */

package org.springside.modules.utils.mapper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springside.modules.utils.mapper.XmlMapper;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlMapper_ESTest extends XmlMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<XmlMapper.CollectionWrapper> linkedList0 = new LinkedList<XmlMapper.CollectionWrapper>();
      String string0 = ")yoNY\\u%F+CBR39";
      XmlMapper.CollectionWrapper xmlMapper_CollectionWrapper0 = new XmlMapper.CollectionWrapper();
      linkedList0.add(xmlMapper_CollectionWrapper0);
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        XmlMapper.toXml((Collection<?>) linkedList0, string0, (Class) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.base.ExceptionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        XmlMapper.toXml((Object) null, "+;uHFjl1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Instance must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        XmlMapper.toXml((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Instance must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        XmlMapper.getJaxbContext((Class) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // 'clazz' must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        XmlMapper.fromXml("", (Class<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // 'clazz' must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        XmlMapper.createUnmarshaller((Class) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // 'clazz' must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        XmlMapper.createMarshaller((Class) null, "]: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // 'clazz' must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      XmlMapper xmlMapper0 = new XmlMapper();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        XmlMapper.toXml((Object) linkedList0, "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<\u0002w#dcB:7svk7jVdi/>\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.base.ExceptionUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try { 
        XmlMapper.toXml((Collection<?>) null, "$`v[l[", (Class) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // 'clazz' must not be null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
}
