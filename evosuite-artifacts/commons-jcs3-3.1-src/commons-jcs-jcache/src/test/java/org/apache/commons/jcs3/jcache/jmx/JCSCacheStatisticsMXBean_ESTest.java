/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 22:12:28 GMT 2022
 */

package org.apache.commons.jcs3.jcache.jmx;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jcs3.jcache.Statistics;
import org.apache.commons.jcs3.jcache.jmx.JCSCacheStatisticsMXBean;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JCSCacheStatisticsMXBean_ESTest extends JCSCacheStatisticsMXBean_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      statistics0.increaseMisses(2169L);
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      float float0 = jCSCacheStatisticsMXBean0.getCacheMissPercentage();
      assertEquals(100.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      statistics0.increaseRemovals(949L);
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      long long0 = jCSCacheStatisticsMXBean0.getCacheRemovals();
      assertEquals(949L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.increaseRemovals((-985L));
      long long0 = jCSCacheStatisticsMXBean0.getCacheRemovals();
      assertEquals((-985L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      statistics0.increasePuts(1L);
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      long long0 = jCSCacheStatisticsMXBean0.getCachePuts();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.increasePuts((-3213L));
      long long0 = jCSCacheStatisticsMXBean0.getCachePuts();
      assertEquals((-3213L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      statistics0.increaseMisses(643L);
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      long long0 = jCSCacheStatisticsMXBean0.getCacheMisses();
      assertEquals(643L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.increaseMisses((-2768L));
      long long0 = jCSCacheStatisticsMXBean0.getCacheMisses();
      assertEquals((-2768L), long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.increaseMisses((-1586L));
      statistics0.increaseHits(1419L);
      statistics0.increaseHits(965L);
      float float0 = jCSCacheStatisticsMXBean0.getCacheMissPercentage();
      assertEquals(798L, jCSCacheStatisticsMXBean0.getCacheGets());
      assertEquals((-198.74687F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      statistics0.increaseHits(1L);
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      long long0 = jCSCacheStatisticsMXBean0.getCacheHits();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.increaseHits((-1L));
      long long0 = jCSCacheStatisticsMXBean0.getCacheHits();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.increaseMisses((-1586L));
      statistics0.increaseHits(1419L);
      float float0 = jCSCacheStatisticsMXBean0.getCacheHitPercentage();
      assertEquals(949.7006F, jCSCacheStatisticsMXBean0.getCacheMissPercentage(), 0.01F);
      assertEquals((-849.7006F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      long long0 = jCSCacheStatisticsMXBean0.getCacheGets();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      statistics0.increaseMisses(2169L);
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      long long0 = jCSCacheStatisticsMXBean0.getCacheGets();
      assertEquals(2169L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.increaseHits((-1L));
      long long0 = jCSCacheStatisticsMXBean0.getCacheGets();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      long long0 = jCSCacheStatisticsMXBean0.getCacheEvictions();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      statistics0.increaseEvictions(59L);
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      long long0 = jCSCacheStatisticsMXBean0.getCacheEvictions();
      assertEquals(59L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.increaseEvictions((-607L));
      long long0 = jCSCacheStatisticsMXBean0.getCacheEvictions();
      assertEquals((-607L), long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      statistics0.addRemoveTime(2771L);
      statistics0.increaseMisses(2771L);
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      float float0 = jCSCacheStatisticsMXBean0.getAverageRemoveTime();
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.addRemoveTime((-3133L));
      statistics0.increaseHits(949L);
      float float0 = jCSCacheStatisticsMXBean0.getAverageRemoveTime();
      assertEquals(949L, jCSCacheStatisticsMXBean0.getCacheGets());
      assertEquals((-3.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.increaseMisses((-1586L));
      statistics0.increaseHits(1419L);
      statistics0.increaseHits(965L);
      statistics0.addPutTime(935L);
      float float0 = jCSCacheStatisticsMXBean0.getAveragePutTime();
      assertEquals((-198.74687F), jCSCacheStatisticsMXBean0.getCacheMissPercentage(), 0.01F);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.addGetTime((-1L));
      statistics0.increaseHits((-1L));
      float float0 = jCSCacheStatisticsMXBean0.getAverageGetTime();
      assertEquals(100.0F, jCSCacheStatisticsMXBean0.getCacheHitPercentage(), 0.01F);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      statistics0.addGetTime((-1L));
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.increaseMisses(1L);
      float float0 = jCSCacheStatisticsMXBean0.getAverageGetTime();
      assertEquals(100.0F, jCSCacheStatisticsMXBean0.getCacheMissPercentage(), 0.01F);
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean((Statistics) null);
      // Undeclared exception!
      try { 
        jCSCacheStatisticsMXBean0.getCacheRemovals();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.jmx.JCSCacheStatisticsMXBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean((Statistics) null);
      // Undeclared exception!
      try { 
        jCSCacheStatisticsMXBean0.getCacheMissPercentage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.jmx.JCSCacheStatisticsMXBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean((Statistics) null);
      // Undeclared exception!
      try { 
        jCSCacheStatisticsMXBean0.getAverageRemoveTime();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.jmx.JCSCacheStatisticsMXBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean((Statistics) null);
      // Undeclared exception!
      try { 
        jCSCacheStatisticsMXBean0.getAveragePutTime();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.jmx.JCSCacheStatisticsMXBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean((Statistics) null);
      // Undeclared exception!
      try { 
        jCSCacheStatisticsMXBean0.getAverageGetTime();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.jmx.JCSCacheStatisticsMXBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean((Statistics) null);
      // Undeclared exception!
      try { 
        jCSCacheStatisticsMXBean0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.jmx.JCSCacheStatisticsMXBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      long long0 = jCSCacheStatisticsMXBean0.getCacheHits();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      long long0 = jCSCacheStatisticsMXBean0.getCacheMisses();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.increaseMisses((-320L));
      statistics0.addPutTime(935L);
      float float0 = jCSCacheStatisticsMXBean0.getAveragePutTime();
      assertEquals((-320L), jCSCacheStatisticsMXBean0.getCacheGets());
      assertEquals((-2.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.addPutTime(935L);
      float float0 = jCSCacheStatisticsMXBean0.getAveragePutTime();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      float float0 = jCSCacheStatisticsMXBean0.getCacheMissPercentage();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      float float0 = jCSCacheStatisticsMXBean0.getCacheHitPercentage();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      statistics0.increaseHits((-320L));
      float float0 = jCSCacheStatisticsMXBean0.getCacheHitPercentage();
      assertEquals((-320L), jCSCacheStatisticsMXBean0.getCacheGets());
      assertEquals(100.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      float float0 = jCSCacheStatisticsMXBean0.getAveragePutTime();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      long long0 = jCSCacheStatisticsMXBean0.getCacheRemovals();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean((Statistics) null);
      // Undeclared exception!
      try { 
        jCSCacheStatisticsMXBean0.getCacheEvictions();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.jmx.JCSCacheStatisticsMXBean", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      jCSCacheStatisticsMXBean0.clear();
      assertEquals(0.0F, jCSCacheStatisticsMXBean0.getCacheHitPercentage(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      float float0 = jCSCacheStatisticsMXBean0.getAverageGetTime();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      float float0 = jCSCacheStatisticsMXBean0.getAverageRemoveTime();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Statistics statistics0 = new Statistics();
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean(statistics0);
      long long0 = jCSCacheStatisticsMXBean0.getCachePuts();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JCSCacheStatisticsMXBean jCSCacheStatisticsMXBean0 = new JCSCacheStatisticsMXBean((Statistics) null);
      // Undeclared exception!
      try { 
        jCSCacheStatisticsMXBean0.getCacheGets();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.jcache.jmx.JCSCacheStatisticsMXBean", e);
      }
  }
}
