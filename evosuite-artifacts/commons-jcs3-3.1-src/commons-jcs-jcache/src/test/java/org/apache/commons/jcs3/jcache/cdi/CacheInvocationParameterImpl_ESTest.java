/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 22:19:55 GMT 2022
 */

package org.apache.commons.jcs3.jcache.cdi;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.annotation.Annotation;
import java.util.LinkedHashSet;
import java.util.Set;
import org.apache.commons.jcs3.jcache.cdi.CacheInvocationParameterImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CacheInvocationParameterImpl_ESTest extends CacheInvocationParameterImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      CacheInvocationParameterImpl cacheInvocationParameterImpl0 = new CacheInvocationParameterImpl((Class<?>) null, (Object) null, linkedHashSet0, (-747));
      cacheInvocationParameterImpl0.getValue();
      assertEquals((-747), cacheInvocationParameterImpl0.getParameterPosition());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      CacheInvocationParameterImpl cacheInvocationParameterImpl0 = new CacheInvocationParameterImpl((Class<?>) null, (Object) null, linkedHashSet0, (-747));
      cacheInvocationParameterImpl0.getRawType();
      assertEquals((-747), cacheInvocationParameterImpl0.getParameterPosition());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      Object object0 = new Object();
      CacheInvocationParameterImpl cacheInvocationParameterImpl0 = new CacheInvocationParameterImpl(class0, object0, (Set<Annotation>) null, 0);
      cacheInvocationParameterImpl0.getRawType();
      assertEquals(0, cacheInvocationParameterImpl0.getParameterPosition());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      Object object0 = new Object();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      CacheInvocationParameterImpl cacheInvocationParameterImpl0 = new CacheInvocationParameterImpl(class0, object0, linkedHashSet0, 0);
      int int0 = cacheInvocationParameterImpl0.getParameterPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Object object0 = new Object();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      CacheInvocationParameterImpl cacheInvocationParameterImpl0 = new CacheInvocationParameterImpl(class0, object0, linkedHashSet0, 1);
      int int0 = cacheInvocationParameterImpl0.getParameterPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<String> class0 = String.class;
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      CacheInvocationParameterImpl cacheInvocationParameterImpl0 = new CacheInvocationParameterImpl(class0, (Object) null, linkedHashSet0, (-552));
      cacheInvocationParameterImpl0.getAnnotations();
      assertEquals((-552), cacheInvocationParameterImpl0.getParameterPosition());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      CacheInvocationParameterImpl cacheInvocationParameterImpl0 = new CacheInvocationParameterImpl((Class<?>) null, (Object) null, linkedHashSet0, (-747));
      linkedHashSet0.add((Annotation) null);
      cacheInvocationParameterImpl0.getAnnotations();
      assertEquals((-747), cacheInvocationParameterImpl0.getParameterPosition());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object object0 = new Object();
      CacheInvocationParameterImpl cacheInvocationParameterImpl0 = new CacheInvocationParameterImpl(class0, object0, (Set<Annotation>) null, (-62));
      cacheInvocationParameterImpl0.getValue();
      assertEquals((-62), cacheInvocationParameterImpl0.getParameterPosition());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object object0 = new Object();
      CacheInvocationParameterImpl cacheInvocationParameterImpl0 = new CacheInvocationParameterImpl(class0, object0, (Set<Annotation>) null, (-62));
      int int0 = cacheInvocationParameterImpl0.getParameterPosition();
      assertEquals((-62), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object object0 = new Object();
      CacheInvocationParameterImpl cacheInvocationParameterImpl0 = new CacheInvocationParameterImpl(class0, object0, (Set<Annotation>) null, (-62));
      cacheInvocationParameterImpl0.getAnnotations();
      assertEquals((-62), cacheInvocationParameterImpl0.getParameterPosition());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object object0 = new Object();
      CacheInvocationParameterImpl cacheInvocationParameterImpl0 = new CacheInvocationParameterImpl(class0, object0, (Set<Annotation>) null, (-62));
      cacheInvocationParameterImpl0.getRawType();
      assertEquals((-62), cacheInvocationParameterImpl0.getParameterPosition());
  }
}
