/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 21:52:07 GMT 2022
 */

package org.apache.commons.jcs3.log;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.function.Supplier;
import org.apache.commons.jcs3.log.MessageFormatter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Supplier<Object>[] supplierArray0 = (Supplier<Object>[]) Array.newInstance(Supplier.class, 0);
      MessageFormatter messageFormatter0 = new MessageFormatter("", (Supplier<?>[]) supplierArray0);
      String string0 = messageFormatter0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Supplier<Object>[] supplierArray0 = (Supplier<Object>[]) Array.newInstance(Supplier.class, 0);
      MessageFormatter messageFormatter0 = new MessageFormatter("", (Supplier<?>[]) supplierArray0);
      String string0 = messageFormatter0.getFormattedMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Supplier<Object>[] supplierArray0 = (Supplier<Object>[]) Array.newInstance(Supplier.class, 0);
      MessageFormatter messageFormatter0 = new MessageFormatter("", (Supplier<?>[]) supplierArray0);
      String string0 = messageFormatter0.formatMessage("wLhXW5", supplierArray0);
      assertEquals("wLhXW5", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      MessageFormatter messageFormatter0 = new MessageFormatter("'9C]", objectArray0);
      String string0 = messageFormatter0.formatMessage("", objectArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter((String) null, (Object[]) null);
      // Undeclared exception!
      try { 
        messageFormatter0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      MessageFormatter messageFormatter0 = new MessageFormatter("4d>F2CP,{qFx", objectArray0);
      // Undeclared exception!
      try { 
        messageFormatter0.getFormattedMessage();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unmatched braces in the pattern.
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      MessageFormatter messageFormatter0 = new MessageFormatter((String) null, objectArray0);
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      MessageFormatter messageFormatter0 = new MessageFormatter("'9C]", objectArray0);
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("hR5{m~Tw#,qBZl", objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unmatched braces in the pattern.
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MessageFormatter messageFormatter0 = null;
      try {
        messageFormatter0 = new MessageFormatter("bo>sv|%df\"!Yd}", (Supplier<?>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      MessageFormatter messageFormatter0 = new MessageFormatter("'9C]", objectArray0);
      boolean boolean0 = messageFormatter0.hasThrowable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      MessageFormatter messageFormatter0 = new MessageFormatter("'9C]", objectArray0);
      messageFormatter0.getFormattedMessage();
      String string0 = messageFormatter0.getFormattedMessage();
      assertEquals("9C]", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Supplier<Object>[] supplierArray0 = (Supplier<Object>[]) Array.newInstance(Supplier.class, 0);
      MessageFormatter messageFormatter0 = new MessageFormatter("{~3RX;J:", (Supplier<?>[]) supplierArray0);
      // Undeclared exception!
      try { 
        messageFormatter0.toString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unmatched braces in the pattern.
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      MessageFormatter messageFormatter0 = new MessageFormatter("'9C]", objectArray0);
      Throwable throwable0 = messageFormatter0.getThrowable();
      assertNull(throwable0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[18];
      MessageFormatter messageFormatter0 = new MessageFormatter("orgeapahe.commons.jcs3logvMessageFormatte", objectArray0);
      String string0 = messageFormatter0.toString();
      assertEquals("orgeapahe.commons.jcs3logvMessageFormatte", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      MessageFormatter messageFormatter0 = new MessageFormatter((String) null, objectArray0);
      // Undeclared exception!
      try { 
        messageFormatter0.getFormattedMessage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
