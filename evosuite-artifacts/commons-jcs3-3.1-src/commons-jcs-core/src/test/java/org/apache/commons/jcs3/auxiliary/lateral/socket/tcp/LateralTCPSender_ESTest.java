/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 21:49:22 GMT 2022
 */

package org.apache.commons.jcs3.auxiliary.lateral.socket.tcp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.LateralTCPSender;
import org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.TCPLateralCacheAttributes;
import org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.behavior.ITCPLateralCacheAttributes;
import org.apache.commons.jcs3.engine.behavior.IElementSerializer;
import org.apache.commons.jcs3.utils.serialization.EncryptingSerializer;
import org.apache.commons.jcs3.utils.serialization.StandardSerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LateralTCPSender_ESTest extends LateralTCPSender_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      tCPLateralCacheAttributes0.setTcpServer("9~:u");
      EncryptingSerializer encryptingSerializer0 = new EncryptingSerializer();
      LateralTCPSender lateralTCPSender0 = null;
      try {
        lateralTCPSender0 = new LateralTCPSender(tCPLateralCacheAttributes0, encryptingSerializer0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"u\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EncryptingSerializer encryptingSerializer0 = new EncryptingSerializer();
      LateralTCPSender lateralTCPSender0 = null;
      try {
        lateralTCPSender0 = new LateralTCPSender((ITCPLateralCacheAttributes) null, encryptingSerializer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.LateralTCPSender", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      tCPLateralCacheAttributes0.setTcpServer(".C=~w~JL0:!5");
      LateralTCPSender lateralTCPSender0 = null;
      try {
        lateralTCPSender0 = new LateralTCPSender(tCPLateralCacheAttributes0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"!5\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      tCPLateralCacheAttributes0.setTcpServer("9/:5");
      StandardSerializer standardSerializer0 = new StandardSerializer();
      LateralTCPSender lateralTCPSender0 = null;
      try {
        lateralTCPSender0 = new LateralTCPSender(tCPLateralCacheAttributes0, standardSerializer0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder
         //
         verifyException("java.nio.channels.spi.AsynchronousChannelProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      tCPLateralCacheAttributes0.toString();
      tCPLateralCacheAttributes0.setTcpServer(":0");
      LateralTCPSender lateralTCPSender0 = null;
      try {
        lateralTCPSender0 = new LateralTCPSender(tCPLateralCacheAttributes0, (IElementSerializer) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Cannot connect to invalid address [:0]
         //
         verifyException("org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.LateralTCPSender", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      tCPLateralCacheAttributes0.setTcpServer((String) null);
      LateralTCPSender lateralTCPSender0 = null;
      try {
        lateralTCPSender0 = new LateralTCPSender(tCPLateralCacheAttributes0, (IElementSerializer) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Invalid server (null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.LateralTCPSender", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      EncryptingSerializer encryptingSerializer0 = new EncryptingSerializer();
      LateralTCPSender lateralTCPSender0 = null;
      try {
        lateralTCPSender0 = new LateralTCPSender(tCPLateralCacheAttributes0, encryptingSerializer0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Invalid address []
         //
         verifyException("org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.LateralTCPSender", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      tCPLateralCacheAttributes0.setTcpServer("9/:5");
      LateralTCPSender lateralTCPSender0 = null;
      try {
        lateralTCPSender0 = new LateralTCPSender(tCPLateralCacheAttributes0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder
         //
         verifyException("java.nio.channels.spi.AsynchronousChannelProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      tCPLateralCacheAttributes0.setTcpServer((String) null);
      LateralTCPSender lateralTCPSender0 = null;
      try {
        lateralTCPSender0 = new LateralTCPSender(tCPLateralCacheAttributes0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Invalid server (null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.LateralTCPSender", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      LateralTCPSender lateralTCPSender0 = null;
      try {
        lateralTCPSender0 = new LateralTCPSender((ITCPLateralCacheAttributes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.LateralTCPSender", e);
      }
  }
}
