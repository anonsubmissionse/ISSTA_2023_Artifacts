/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 22:07:36 GMT 2022
 */

package org.apache.commons.jcs3.auxiliary.remote;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheAttributes;
import org.apache.commons.jcs3.auxiliary.remote.RemoteLocation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RemoteCacheAttributes_ESTest extends RemoteCacheAttributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      assertTrue(remoteCacheAttributes0.isReceive());
      
      remoteCacheAttributes0.setReceive(false);
      boolean boolean0 = remoteCacheAttributes0.isReceive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
      
      remoteCacheAttributes0.setZombieQueueMaxSize(0);
      int int0 = remoteCacheAttributes0.getZombieQueueMaxSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      remoteCacheAttributes0.setZombieQueueMaxSize((-1575));
      int int0 = remoteCacheAttributes0.getZombieQueueMaxSize();
      assertEquals((-1575), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      assertEquals("remote_cache_client", remoteCacheAttributes0.getThreadPoolName());
      
      remoteCacheAttributes0.setThreadPoolName((String) null);
      remoteCacheAttributes0.getThreadPoolName();
      assertTrue(remoteCacheAttributes0.isReceive());
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      assertEquals("remote_cache_client", remoteCacheAttributes0.getThreadPoolName());
      
      remoteCacheAttributes0.setThreadPoolName("");
      remoteCacheAttributes0.getThreadPoolName();
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      assertEquals(0, remoteCacheAttributes0.getLocalPort());
      
      remoteCacheAttributes0.setLocalPort(1000);
      int int0 = remoteCacheAttributes0.getLocalPort();
      assertEquals(1000, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      remoteCacheAttributes0.setLocalPort((-811));
      int int0 = remoteCacheAttributes0.getLocalPort();
      assertEquals((-811), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
      
      remoteCacheAttributes0.setGetTimeoutMillis(0);
      int int0 = remoteCacheAttributes0.getGetTimeoutMillis();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      LinkedList<RemoteLocation> linkedList0 = new LinkedList<RemoteLocation>();
      remoteCacheAttributes0.setFailovers(linkedList0);
      remoteCacheAttributes0.getFailovers();
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
      assertEquals("remote_cache_client", remoteCacheAttributes0.getThreadPoolName());
      assertTrue(remoteCacheAttributes0.isReceive());
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      LinkedList<RemoteLocation> linkedList0 = new LinkedList<RemoteLocation>();
      RemoteLocation remoteLocation0 = remoteCacheAttributes0.getRemoteLocation();
      linkedList0.add(remoteLocation0);
      remoteCacheAttributes0.setFailovers(linkedList0);
      remoteCacheAttributes0.getFailovers();
      assertEquals("remote_cache_client", remoteCacheAttributes0.getThreadPoolName());
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
      assertTrue(remoteCacheAttributes0.isReceive());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      remoteCacheAttributes0.setFailoverServers((String) null);
      remoteCacheAttributes0.getFailoverServers();
      assertEquals("remote_cache_client", remoteCacheAttributes0.getThreadPoolName());
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
      assertTrue(remoteCacheAttributes0.isReceive());
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      remoteCacheAttributes0.setFailoverServers("9YZbQCr+\"C");
      remoteCacheAttributes0.getFailoverServers();
      assertTrue(remoteCacheAttributes0.isReceive());
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
      assertEquals("remote_cache_client", remoteCacheAttributes0.getThreadPoolName());
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      remoteCacheAttributes0.setFailoverIndex(1047);
      int int0 = remoteCacheAttributes0.getFailoverIndex();
      assertEquals(1047, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      remoteCacheAttributes0.setFailoverIndex((-811));
      int int0 = remoteCacheAttributes0.getFailoverIndex();
      assertEquals((-811), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      String string0 = remoteCacheAttributes0.getThreadPoolName();
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
      assertEquals("remote_cache_client", string0);
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
      assertTrue(remoteCacheAttributes0.isReceive());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      int int0 = remoteCacheAttributes0.getZombieQueueMaxSize();
      assertEquals(1000, int0);
      assertEquals("remote_cache_client", remoteCacheAttributes0.getThreadPoolName());
      assertTrue(remoteCacheAttributes0.isReceive());
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      boolean boolean0 = remoteCacheAttributes0.isReceive();
      assertEquals("remote_cache_client", remoteCacheAttributes0.getThreadPoolName());
      assertTrue(boolean0);
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      int int0 = remoteCacheAttributes0.getGetTimeoutMillis();
      assertEquals((-1), int0);
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
      assertEquals("remote_cache_client", remoteCacheAttributes0.getThreadPoolName());
      assertTrue(remoteCacheAttributes0.isReceive());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      remoteCacheAttributes0.getFailovers();
      assertEquals("remote_cache_client", remoteCacheAttributes0.getThreadPoolName());
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
      assertTrue(remoteCacheAttributes0.isReceive());
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      remoteCacheAttributes0.getFailoverServers();
      assertEquals("remote_cache_client", remoteCacheAttributes0.getThreadPoolName());
      assertTrue(remoteCacheAttributes0.isReceive());
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      int int0 = remoteCacheAttributes0.getLocalPort();
      assertTrue(remoteCacheAttributes0.isReceive());
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
      assertEquals(0, int0);
      assertEquals("remote_cache_client", remoteCacheAttributes0.getThreadPoolName());
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
      
      remoteCacheAttributes0.setGetTimeoutMillis(1000);
      int int0 = remoteCacheAttributes0.getGetTimeoutMillis();
      assertEquals(1000, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      String string0 = remoteCacheAttributes0.toString();
      assertEquals("\n RemoteCacheAttributes \n cacheName = [null]\n remoteType = [LOCAL]\n removeUponRemotePut = [true]\n getOnly = [false]\n receive = [true]\n getTimeoutMillis = [-1]\n threadPoolName = [remote_cache_client]\n localClusterConsistency = [false]\n zombieQueueMaxSize = [1000]", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      int int0 = remoteCacheAttributes0.getFailoverIndex();
      assertTrue(remoteCacheAttributes0.isReceive());
      assertEquals(1000, remoteCacheAttributes0.getZombieQueueMaxSize());
      assertEquals(0, int0);
      assertEquals("remote_cache_client", remoteCacheAttributes0.getThreadPoolName());
      assertEquals((-1), remoteCacheAttributes0.getGetTimeoutMillis());
  }
}
