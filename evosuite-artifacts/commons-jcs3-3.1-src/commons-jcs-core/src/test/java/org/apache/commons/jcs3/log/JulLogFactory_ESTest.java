/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 22:04:50 GMT 2022
 */

package org.apache.commons.jcs3.log;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jcs3.log.JulLogFactory;
import org.apache.commons.jcs3.log.Log;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JulLogFactory_ESTest extends JulLogFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JulLogFactory julLogFactory0 = new JulLogFactory();
      // Undeclared exception!
      try { 
        julLogFactory0.getLog((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JulLogFactory julLogFactory0 = new JulLogFactory();
      // Undeclared exception!
      try { 
        julLogFactory0.getLog((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.log.JulLogFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JulLogFactory julLogFactory0 = new JulLogFactory();
      Log log0 = julLogFactory0.getLog("jul");
      assertEquals("jul", log0.getName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JulLogFactory julLogFactory0 = new JulLogFactory();
      julLogFactory0.shutdown();
      assertEquals("jul", julLogFactory0.getName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JulLogFactory julLogFactory0 = new JulLogFactory();
      String string0 = julLogFactory0.getName();
      assertEquals("jul", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JulLogFactory julLogFactory0 = new JulLogFactory();
      Class<String> class0 = String.class;
      Log log0 = julLogFactory0.getLog(class0);
      assertEquals("java.lang.String", log0.getName());
  }
}
