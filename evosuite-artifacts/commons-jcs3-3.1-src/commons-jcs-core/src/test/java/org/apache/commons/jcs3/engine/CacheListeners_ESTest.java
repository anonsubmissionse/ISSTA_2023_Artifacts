/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 22:03:15 GMT 2022
 */

package org.apache.commons.jcs3.engine;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.SequenceInputStream;
import java.util.ArrayList;
import java.util.LinkedList;
import org.apache.commons.jcs3.auxiliary.lateral.LateralCacheNoWait;
import org.apache.commons.jcs3.auxiliary.lateral.LateralCacheNoWaitFacade;
import org.apache.commons.jcs3.auxiliary.lateral.behavior.ILateralCacheListener;
import org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.TCPLateralCacheAttributes;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheFactory;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheNoWait;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheNoWaitFacade;
import org.apache.commons.jcs3.auxiliary.remote.behavior.IRemoteCacheAttributes;
import org.apache.commons.jcs3.engine.CacheListeners;
import org.apache.commons.jcs3.engine.behavior.ICache;
import org.apache.commons.jcs3.engine.logging.CacheEventLoggerDebugLogger;
import org.apache.commons.jcs3.utils.serialization.CompressingSerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CacheListeners_ESTest extends CacheListeners_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<RemoteCacheNoWait<String, String>> linkedList0 = new LinkedList<RemoteCacheNoWait<String, String>>();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      CompressingSerializer compressingSerializer0 = new CompressingSerializer();
      RemoteCacheNoWaitFacade<String, String> remoteCacheNoWaitFacade0 = new RemoteCacheNoWaitFacade<String, String>(linkedList0, (IRemoteCacheAttributes) null, cacheEventLoggerDebugLogger0, compressingSerializer0, (RemoteCacheFactory) null);
      CacheListeners<String, String> cacheListeners0 = new CacheListeners<String, String>(remoteCacheNoWaitFacade0);
      // Undeclared exception!
      try { 
        cacheListeners0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.AbstractRemoteCacheNoWaitFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CacheListeners<Object, Integer> cacheListeners0 = null;
      try {
        cacheListeners0 = new CacheListeners<Object, Integer>((ICache<Object, Integer>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cache must not be null
         //
         verifyException("org.apache.commons.jcs3.engine.CacheListeners", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrayList<LateralCacheNoWait<Object, SequenceInputStream>> arrayList0 = new ArrayList<LateralCacheNoWait<Object, SequenceInputStream>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<Object, SequenceInputStream> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<Object, SequenceInputStream>((ILateralCacheListener<Object, SequenceInputStream>) null, arrayList0, tCPLateralCacheAttributes0);
      CacheListeners<Object, SequenceInputStream> cacheListeners0 = new CacheListeners<Object, SequenceInputStream>(lateralCacheNoWaitFacade0);
      String string0 = cacheListeners0.toString();
      assertEquals("\n CacheListeners\n Region = null\n Event Queue Map \n size = 0", string0);
  }
}
