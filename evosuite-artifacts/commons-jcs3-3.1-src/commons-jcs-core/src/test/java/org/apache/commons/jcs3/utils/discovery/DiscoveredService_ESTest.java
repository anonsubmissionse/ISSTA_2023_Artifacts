/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 21:56:38 GMT 2022
 */

package org.apache.commons.jcs3.utils.discovery;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.apache.commons.jcs3.utils.discovery.DiscoveredService;
import org.apache.commons.jcs3.utils.discovery.UDPDiscoveryMessage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DiscoveredService_ESTest extends DiscoveredService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UDPDiscoveryMessage uDPDiscoveryMessage0 = new UDPDiscoveryMessage();
      DiscoveredService discoveredService0 = new DiscoveredService(uDPDiscoveryMessage0);
      discoveredService0.setServicePort(87);
      DiscoveredService discoveredService1 = new DiscoveredService(uDPDiscoveryMessage0);
      boolean boolean0 = discoveredService0.equals(discoveredService1);
      assertEquals(87, discoveredService0.getServicePort());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UDPDiscoveryMessage uDPDiscoveryMessage0 = new UDPDiscoveryMessage();
      DiscoveredService discoveredService0 = new DiscoveredService(uDPDiscoveryMessage0);
      int int0 = discoveredService0.getServicePort();
      assertEquals(6789, int0);
      assertEquals(1392409281320L, discoveredService0.getLastHearFromTime());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UDPDiscoveryMessage uDPDiscoveryMessage0 = new UDPDiscoveryMessage();
      DiscoveredService discoveredService0 = new DiscoveredService(uDPDiscoveryMessage0);
      discoveredService0.setServicePort((-319));
      int int0 = discoveredService0.getServicePort();
      assertEquals((-319), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UDPDiscoveryMessage uDPDiscoveryMessage0 = new UDPDiscoveryMessage();
      DiscoveredService discoveredService0 = new DiscoveredService(uDPDiscoveryMessage0);
      discoveredService0.getServiceAddress();
      assertEquals(1392409281320L, discoveredService0.getLastHearFromTime());
      assertEquals(6789, discoveredService0.getServicePort());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DiscoveredService discoveredService0 = new DiscoveredService();
      discoveredService0.setServiceAddress("");
      String string0 = discoveredService0.getServiceAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DiscoveredService discoveredService0 = new DiscoveredService();
      discoveredService0.setLastHearFromTime(2);
      long long0 = discoveredService0.getLastHearFromTime();
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UDPDiscoveryMessage uDPDiscoveryMessage0 = new UDPDiscoveryMessage();
      DiscoveredService discoveredService0 = new DiscoveredService(uDPDiscoveryMessage0);
      ArrayList<String> arrayList0 = discoveredService0.getCacheNames();
      arrayList0.add("6 :1(9<Z");
      discoveredService0.getCacheNames();
      assertEquals(6789, discoveredService0.getServicePort());
      assertEquals(1392409281320L, discoveredService0.getLastHearFromTime());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DiscoveredService discoveredService0 = null;
      try {
        discoveredService0 = new DiscoveredService((UDPDiscoveryMessage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.discovery.DiscoveredService", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UDPDiscoveryMessage uDPDiscoveryMessage0 = new UDPDiscoveryMessage();
      DiscoveredService discoveredService0 = new DiscoveredService(uDPDiscoveryMessage0);
      ArrayList<String> arrayList0 = discoveredService0.getCacheNames();
      discoveredService0.setCacheNames(arrayList0);
      assertEquals(1392409281320L, discoveredService0.getLastHearFromTime());
      assertEquals(6789, discoveredService0.getServicePort());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DiscoveredService discoveredService0 = new DiscoveredService();
      ArrayList<String> arrayList0 = discoveredService0.getCacheNames();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DiscoveredService discoveredService0 = new DiscoveredService();
      discoveredService0.setLastHearFromTime((-2417L));
      long long0 = discoveredService0.getLastHearFromTime();
      assertEquals((-2417L), long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DiscoveredService discoveredService0 = new DiscoveredService();
      long long0 = discoveredService0.getLastHearFromTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DiscoveredService discoveredService0 = new DiscoveredService();
      int int0 = discoveredService0.getServicePort();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DiscoveredService discoveredService0 = new DiscoveredService();
      String string0 = discoveredService0.getServiceAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DiscoveredService discoveredService0 = new DiscoveredService();
      DiscoveredService discoveredService1 = new DiscoveredService();
      boolean boolean0 = discoveredService0.equals(discoveredService1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UDPDiscoveryMessage uDPDiscoveryMessage0 = new UDPDiscoveryMessage();
      DiscoveredService discoveredService0 = new DiscoveredService(uDPDiscoveryMessage0);
      discoveredService0.setServiceAddress((String) null);
      DiscoveredService discoveredService1 = new DiscoveredService();
      boolean boolean0 = discoveredService0.equals(discoveredService1);
      assertFalse(boolean0);
      assertEquals(1392409281320L, discoveredService0.getLastHearFromTime());
      assertEquals(6789, discoveredService0.getServicePort());
      assertFalse(discoveredService1.equals((Object)discoveredService0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DiscoveredService discoveredService0 = new DiscoveredService();
      boolean boolean0 = discoveredService0.equals("j");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UDPDiscoveryMessage uDPDiscoveryMessage0 = new UDPDiscoveryMessage();
      DiscoveredService discoveredService0 = new DiscoveredService(uDPDiscoveryMessage0);
      boolean boolean0 = discoveredService0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(6789, discoveredService0.getServicePort());
      assertEquals(1392409281320L, discoveredService0.getLastHearFromTime());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DiscoveredService discoveredService0 = new DiscoveredService();
      boolean boolean0 = discoveredService0.equals(discoveredService0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UDPDiscoveryMessage uDPDiscoveryMessage0 = new UDPDiscoveryMessage();
      DiscoveredService discoveredService0 = new DiscoveredService(uDPDiscoveryMessage0);
      DiscoveredService discoveredService1 = new DiscoveredService();
      boolean boolean0 = discoveredService0.equals(discoveredService1);
      assertFalse(boolean0);
      assertEquals(1392409281320L, discoveredService0.getLastHearFromTime());
      assertEquals(6789, discoveredService0.getServicePort());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DiscoveredService discoveredService0 = new DiscoveredService();
      discoveredService0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UDPDiscoveryMessage uDPDiscoveryMessage0 = new UDPDiscoveryMessage();
      DiscoveredService discoveredService0 = new DiscoveredService(uDPDiscoveryMessage0);
      String string0 = discoveredService0.toString();
      assertEquals("\n DiscoveredService\n CacheNames = [[]]\n ServiceAddress = [228.5.6.7]\n ServicePort = [6789]\n LastHearFromTime = [1392409281320]", string0);
  }
}
