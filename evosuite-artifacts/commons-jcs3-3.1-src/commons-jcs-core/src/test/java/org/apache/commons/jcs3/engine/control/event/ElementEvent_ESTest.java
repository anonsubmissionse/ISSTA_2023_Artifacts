/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 22:06:49 GMT 2022
 */

package org.apache.commons.jcs3.engine.control.event;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jcs3.engine.control.event.ElementEvent;
import org.apache.commons.jcs3.engine.control.event.behavior.ElementEventType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ElementEvent_ESTest extends ElementEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ElementEvent<String> elementEvent0 = new ElementEvent<String>(".DURf1ut5l6.ce,,[", (ElementEventType) null);
      elementEvent0.getElementEvent();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      ElementEventType elementEventType0 = ElementEventType.SPOOLED_DISK_AVAILABLE;
      ElementEvent<Object> elementEvent0 = new ElementEvent<Object>(object0, elementEventType0);
      Object object1 = elementEvent0.getSource();
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      ElementEventType elementEventType0 = ElementEventType.SPOOLED_DISK_AVAILABLE;
      ElementEvent<Object> elementEvent0 = new ElementEvent<Object>(object0, elementEventType0);
      ElementEventType elementEventType1 = elementEvent0.getElementEvent();
      ElementEvent<String> elementEvent1 = null;
      try {
        elementEvent1 = new ElementEvent<String>((String) null, elementEventType1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }
}
