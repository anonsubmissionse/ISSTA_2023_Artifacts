/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 21:03:27 GMT 2022
 */

package org.apache.commons.jcs3.utils.discovery;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.concurrent.Callable;
import org.apache.commons.jcs3.engine.behavior.IElementSerializer;
import org.apache.commons.jcs3.utils.discovery.DiscoveredService;
import org.apache.commons.jcs3.utils.discovery.UDPDiscoveryAttributes;
import org.apache.commons.jcs3.utils.discovery.UDPDiscoveryMessage;
import org.apache.commons.jcs3.utils.discovery.UDPDiscoveryService;
import org.apache.commons.jcs3.utils.discovery.behavior.IDiscoveryListener;
import org.apache.commons.jcs3.utils.serialization.CompressingSerializer;
import org.apache.commons.jcs3.utils.serialization.EncryptingSerializer;
import org.apache.commons.jcs3.utils.serialization.StandardSerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UDPDiscoveryService_ESTest extends UDPDiscoveryService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IDiscoveryListener iDiscoveryListener0 = mock(IDiscoveryListener.class, new ViolatedAssumptionAnswer());
      IDiscoveryListener iDiscoveryListener1 = null;
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1, (IElementSerializer) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      uDPDiscoveryAttributes0.setServicePort((-3154));
      uDPDiscoveryAttributes0.setUdpTTL(98);
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      uDPDiscoveryAttributes1.setServicePort((-3154));
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      uDPDiscoveryAttributes0.setUdpDiscoveryPort((-111));
      uDPDiscoveryAttributes1.setDark(false);
      uDPDiscoveryAttributes1.setServiceName("0=zsS");
      MockThread mockThread0 = new MockThread();
      Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
      IDiscoveryListener iDiscoveryListener0 = null;
      UDPDiscoveryMessage uDPDiscoveryMessage0 = new UDPDiscoveryMessage();
      uDPDiscoveryMessage0.toString();
      Callable<String> callable1 = (Callable<String>) mock(Callable.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      DiscoveredService discoveredService0 = new DiscoveredService(uDPDiscoveryMessage0);
      DiscoveredService discoveredService1 = new DiscoveredService(uDPDiscoveryMessage0);
      EncryptingSerializer encryptingSerializer0 = new EncryptingSerializer();
      UDPDiscoveryService uDPDiscoveryService0 = null;
      try {
        uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes0, encryptingSerializer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-111
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      EncryptingSerializer encryptingSerializer0 = new EncryptingSerializer();
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1, encryptingSerializer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      uDPDiscoveryAttributes0.setServicePort((-3154));
      uDPDiscoveryAttributes0.setUdpTTL(98);
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      uDPDiscoveryAttributes1.setServicePort(991);
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      int int0 = (-2292);
      uDPDiscoveryAttributes0.setMaxIdleTimeSec((-2292));
      uDPDiscoveryAttributes1.clone();
      String string0 = "";
      uDPDiscoveryAttributes1.setUdpDiscoveryInterface("");
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1, (IElementSerializer) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      String string0 = "}ZNmc+o-,_Y#EoV";
      uDPDiscoveryAttributes1.setUdpDiscoveryInterface("}ZNmc+o-,_Y#EoV");
      uDPDiscoveryAttributes0.setUdpDiscoveryInterface("}ZNmc+o-,_Y#EoV");
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1, (IElementSerializer) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      int int0 = 1000;
      uDPDiscoveryAttributes1.setSendDelaySec(1000);
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      int int0 = 0;
      uDPDiscoveryAttributes0.setMaxIdleTimeSec(0);
      uDPDiscoveryAttributes0.setUdpDiscoveryPort(0);
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      uDPDiscoveryAttributes0.setUdpTTL((-94));
      CompressingSerializer compressingSerializer0 = new CompressingSerializer();
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes0, compressingSerializer0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      StandardSerializer standardSerializer0 = new StandardSerializer();
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes0, standardSerializer0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      StandardSerializer standardSerializer0 = new StandardSerializer();
      EncryptingSerializer encryptingSerializer0 = new EncryptingSerializer(standardSerializer0);
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1, encryptingSerializer0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      uDPDiscoveryAttributes0.setUdpDiscoveryInterface("G3DP\"");
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      uDPDiscoveryAttributes0.setServiceName("%`MXa*`5i-h:(::EsH");
      StandardSerializer standardSerializer0 = new StandardSerializer();
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1, standardSerializer0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      EncryptingSerializer encryptingSerializer0 = new EncryptingSerializer();
      EncryptingSerializer encryptingSerializer1 = new EncryptingSerializer(encryptingSerializer0);
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1, encryptingSerializer1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      uDPDiscoveryAttributes1.setServiceName((String) null);
      uDPDiscoveryAttributes0.setServiceName((String) null);
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      uDPDiscoveryAttributes0.setDark(false);
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      EncryptingSerializer encryptingSerializer0 = new EncryptingSerializer();
      CompressingSerializer compressingSerializer0 = new CompressingSerializer(encryptingSerializer0);
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1, compressingSerializer0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      uDPDiscoveryAttributes0.setDark(true);
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      uDPDiscoveryAttributes1.setServicePort(991);
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      UDPDiscoveryAttributes uDPDiscoveryAttributes1 = uDPDiscoveryAttributes0.clone();
      uDPDiscoveryAttributes0.setServiceName("Shutting down UDP discovery service sender.");
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      uDPDiscoveryAttributes0.setServicePort(1296);
      CompressingSerializer compressingSerializer0 = new CompressingSerializer();
      UDPDiscoveryMessage uDPDiscoveryMessage0 = new UDPDiscoveryMessage();
      uDPDiscoveryMessage0.setCacheNames((ArrayList<String>) null);
      UDPDiscoveryService uDPDiscoveryService0 = new UDPDiscoveryService(uDPDiscoveryAttributes0, compressingSerializer0);
  }
}
