/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 21:54:35 GMT 2022
 */

package org.apache.commons.jcs3.auxiliary.remote;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.concurrent.Delayed;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheAttributes;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheManager;
import org.apache.commons.jcs3.auxiliary.remote.RemoteCacheMonitor;
import org.apache.commons.jcs3.auxiliary.remote.behavior.IRemoteCacheAttributes;
import org.apache.commons.jcs3.auxiliary.remote.behavior.IRemoteCacheListener;
import org.apache.commons.jcs3.engine.CacheWatchRepairable;
import org.apache.commons.jcs3.engine.behavior.ICompositeCacheManager;
import org.apache.commons.jcs3.engine.control.CompositeCacheManager;
import org.apache.commons.jcs3.engine.logging.CacheEventLoggerDebugLogger;
import org.apache.commons.jcs3.engine.logging.behavior.ICacheEventLogger;
import org.apache.commons.jcs3.utils.serialization.CompressingSerializer;
import org.apache.commons.jcs3.utils.serialization.StandardSerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RemoteCacheManager_ESTest extends RemoteCacheManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      remoteCacheAttributes0.setRemoteServiceName("");
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      remoteCacheAttributes0.setRemoteLocation("w", 116);
      StandardSerializer standardSerializer0 = new StandardSerializer();
      RemoteCacheManager remoteCacheManager0 = new RemoteCacheManager(remoteCacheAttributes0, (ICompositeCacheManager) null, remoteCacheMonitor0, cacheEventLoggerDebugLogger0, standardSerializer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      remoteCacheAttributes0.setRemoteLocation("w", 116);
      StandardSerializer standardSerializer0 = new StandardSerializer();
      RemoteCacheManager remoteCacheManager0 = new RemoteCacheManager(remoteCacheAttributes0, (ICompositeCacheManager) null, remoteCacheMonitor0, cacheEventLoggerDebugLogger0, standardSerializer0);
      // Undeclared exception!
      try { 
        remoteCacheManager0.removeRemoteCacheListener(remoteCacheAttributes0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      remoteCacheAttributes0.setRemoteLocation("w", 116);
      StandardSerializer standardSerializer0 = new StandardSerializer();
      RemoteCacheManager remoteCacheManager0 = new RemoteCacheManager(remoteCacheAttributes0, (ICompositeCacheManager) null, remoteCacheMonitor0, cacheEventLoggerDebugLogger0, standardSerializer0);
      // Undeclared exception!
      try { 
        remoteCacheManager0.newRemoteCacheNoWait((IRemoteCacheAttributes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.RemoteCacheListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      remoteCacheAttributes0.setLocalPort((-377));
      remoteCacheAttributes0.setRemoteLocation("w", (-2055));
      StandardSerializer standardSerializer0 = new StandardSerializer();
      RemoteCacheManager remoteCacheManager0 = new RemoteCacheManager(remoteCacheAttributes0, (ICompositeCacheManager) null, remoteCacheMonitor0, cacheEventLoggerDebugLogger0, standardSerializer0);
      // Undeclared exception!
      try { 
        remoteCacheManager0.newRemoteCacheNoWait((IRemoteCacheAttributes) remoteCacheAttributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Port value out of range: -377
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockServerSocket", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      remoteCacheAttributes0.setRemoteLocation("w", 116);
      StandardSerializer standardSerializer0 = new StandardSerializer();
      RemoteCacheManager remoteCacheManager0 = new RemoteCacheManager(remoteCacheAttributes0, (ICompositeCacheManager) null, remoteCacheMonitor0, cacheEventLoggerDebugLogger0, standardSerializer0);
      try { 
        remoteCacheManager0.lookupRemoteService();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Problem finding server at [//w:116/org.apache.commons.jcs3.engine.behavior.ICacheServiceNonLocal]
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.RemoteCacheManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      remoteCacheAttributes0.setLocalPort((-377));
      remoteCacheAttributes0.setRemoteLocation("w", 116);
      StandardSerializer standardSerializer0 = new StandardSerializer();
      remoteCacheAttributes0.setCacheName("vh;f.+N~)UaqiOez");
      RemoteCacheManager remoteCacheManager0 = new RemoteCacheManager(remoteCacheAttributes0, (ICompositeCacheManager) null, remoteCacheMonitor0, cacheEventLoggerDebugLogger0, standardSerializer0);
      // Undeclared exception!
      try { 
        remoteCacheManager0.getCache((IRemoteCacheAttributes) remoteCacheAttributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Port value out of range: -377
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockServerSocket", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      CompressingSerializer compressingSerializer0 = new CompressingSerializer();
      CompositeCacheManager compositeCacheManager0 = CompositeCacheManager.getUnconfiguredInstance();
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      RemoteCacheManager remoteCacheManager0 = null;
      try {
        remoteCacheManager0 = new RemoteCacheManager(remoteCacheAttributes0, compositeCacheManager0, remoteCacheMonitor0, cacheEventLoggerDebugLogger0, compressingSerializer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.remote.RemoteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      remoteCacheAttributes0.setReceive(false);
      remoteCacheAttributes0.setRemoteLocation("w", 116);
      StandardSerializer standardSerializer0 = new StandardSerializer();
      RemoteCacheManager remoteCacheManager0 = new RemoteCacheManager(remoteCacheAttributes0, (ICompositeCacheManager) null, remoteCacheMonitor0, cacheEventLoggerDebugLogger0, standardSerializer0);
      remoteCacheManager0.addRemoteCacheListener((IRemoteCacheAttributes) remoteCacheAttributes0, (IRemoteCacheListener<ByteArrayInputStream, Delayed>) null);
      assertEquals("", remoteCacheAttributes0.getClusterServers());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      remoteCacheAttributes0.setRemoteLocation("w", 94);
      StandardSerializer standardSerializer0 = new StandardSerializer();
      RemoteCacheManager remoteCacheManager0 = new RemoteCacheManager(remoteCacheAttributes0, (ICompositeCacheManager) null, remoteCacheMonitor0, cacheEventLoggerDebugLogger0, standardSerializer0);
      remoteCacheManager0.fixCaches();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      remoteCacheAttributes0.setRemoteLocation("sYmquIJwE%a6e}?En", 116);
      StandardSerializer standardSerializer0 = new StandardSerializer();
      RemoteCacheManager remoteCacheManager0 = new RemoteCacheManager(remoteCacheAttributes0, (ICompositeCacheManager) null, remoteCacheMonitor0, cacheEventLoggerDebugLogger0, standardSerializer0);
      remoteCacheManager0.canFixCaches();
      remoteCacheManager0.fixCaches();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      remoteCacheAttributes0.setRemoteLocation("^t=>c}p.B~N lyI.sQ", 116);
      StandardSerializer standardSerializer0 = new StandardSerializer();
      RemoteCacheManager remoteCacheManager0 = new RemoteCacheManager(remoteCacheAttributes0, (ICompositeCacheManager) null, remoteCacheMonitor0, (ICacheEventLogger) null, standardSerializer0);
      remoteCacheManager0.fixCaches();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      remoteCacheAttributes0.setRemoteLocation("w", 116);
      StandardSerializer standardSerializer0 = new StandardSerializer();
      RemoteCacheManager remoteCacheManager0 = new RemoteCacheManager(remoteCacheAttributes0, (ICompositeCacheManager) null, remoteCacheMonitor0, cacheEventLoggerDebugLogger0, standardSerializer0);
      // Undeclared exception!
      try { 
        remoteCacheManager0.addRemoteCacheListener((IRemoteCacheAttributes) remoteCacheAttributes0, (IRemoteCacheListener<Delayed, CacheWatchRepairable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RemoteCacheAttributes remoteCacheAttributes0 = new RemoteCacheAttributes();
      CacheEventLoggerDebugLogger cacheEventLoggerDebugLogger0 = new CacheEventLoggerDebugLogger();
      RemoteCacheMonitor remoteCacheMonitor0 = new RemoteCacheMonitor();
      remoteCacheAttributes0.setRemoteLocation("w", (-2055));
      StandardSerializer standardSerializer0 = new StandardSerializer();
      RemoteCacheManager remoteCacheManager0 = new RemoteCacheManager(remoteCacheAttributes0, (ICompositeCacheManager) null, remoteCacheMonitor0, cacheEventLoggerDebugLogger0, standardSerializer0);
      remoteCacheManager0.release();
  }
}
