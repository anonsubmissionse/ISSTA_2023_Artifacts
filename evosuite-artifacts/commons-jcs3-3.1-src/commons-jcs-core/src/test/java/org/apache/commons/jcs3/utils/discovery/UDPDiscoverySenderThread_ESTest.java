/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 21:45:14 GMT 2022
 */

package org.apache.commons.jcs3.utils.discovery;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.apache.commons.jcs3.utils.discovery.UDPDiscoveryAttributes;
import org.apache.commons.jcs3.utils.discovery.UDPDiscoverySenderThread;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UDPDiscoverySenderThread_ESTest extends UDPDiscoverySenderThread_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      UDPDiscoverySenderThread uDPDiscoverySenderThread0 = null;
      try {
        uDPDiscoverySenderThread0 = new UDPDiscoverySenderThread((UDPDiscoveryAttributes) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.utils.discovery.UDPDiscoverySenderThread", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UDPDiscoveryAttributes uDPDiscoveryAttributes0 = new UDPDiscoveryAttributes();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      uDPDiscoveryAttributes0.setUdpDiscoveryPort((-1));
      UDPDiscoverySenderThread uDPDiscoverySenderThread0 = null;
      try {
        uDPDiscoverySenderThread0 = new UDPDiscoverySenderThread(uDPDiscoveryAttributes0, arrayList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }
}
