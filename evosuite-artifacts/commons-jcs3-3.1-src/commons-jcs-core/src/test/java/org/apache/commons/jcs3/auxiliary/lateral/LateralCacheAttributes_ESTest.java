/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 22:04:18 GMT 2022
 */

package org.apache.commons.jcs3.auxiliary.lateral;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jcs3.auxiliary.lateral.LateralCacheAttributes;
import org.apache.commons.jcs3.auxiliary.lateral.behavior.ILateralCacheAttributes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LateralCacheAttributes_ESTest extends LateralCacheAttributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.setTransmissionTypeName("HTTP");
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
      assertTrue(lateralCacheAttributes0.isReceive());
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      assertTrue(lateralCacheAttributes0.isReceive());
      
      lateralCacheAttributes0.setReceive(false);
      boolean boolean0 = lateralCacheAttributes0.isReceive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.setZombieQueueMaxSize((-825));
      int int0 = lateralCacheAttributes0.getZombieQueueMaxSize();
      assertEquals((-825), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.setUdpMulticastPort((-4189));
      int int0 = lateralCacheAttributes0.getUdpMulticastPort();
      assertEquals((-4189), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      
      lateralCacheAttributes0.setUdpMulticastAddr((String) null);
      lateralCacheAttributes0.getUdpMulticastAddr();
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertTrue(lateralCacheAttributes0.isReceive());
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      
      lateralCacheAttributes0.setUdpMulticastAddr("");
      lateralCacheAttributes0.getUdpMulticastAddr();
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.setTransmissionType((ILateralCacheAttributes.Type) null);
      lateralCacheAttributes0.getTransmissionType();
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      assertTrue(lateralCacheAttributes0.isReceive());
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
      
      lateralCacheAttributes0.setPutOnlyMode(false);
      boolean boolean0 = lateralCacheAttributes0.getPutOnlyMode();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.setHttpServers("HTTP228.5.6.76789");
      lateralCacheAttributes0.getHttpServers();
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertTrue(lateralCacheAttributes0.isReceive());
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.setHttpServers("");
      lateralCacheAttributes0.getHttpServers();
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertTrue(lateralCacheAttributes0.isReceive());
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.setHttpServer((String) null);
      lateralCacheAttributes0.getHttpServer();
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertTrue(lateralCacheAttributes0.isReceive());
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.setHttpServer("6O");
      lateralCacheAttributes0.getHttpServer();
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertTrue(lateralCacheAttributes0.isReceive());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.setHttpListenerPort((-6769));
      int int0 = lateralCacheAttributes0.getHttpListenerPort();
      assertEquals((-6769), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.setTransmissionType((ILateralCacheAttributes.Type) null);
      // Undeclared exception!
      try { 
        lateralCacheAttributes0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.lateral.LateralCacheAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      String string0 = lateralCacheAttributes0.getUdpMulticastAddr();
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertTrue(lateralCacheAttributes0.isReceive());
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertEquals("228.5.6.7", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.setTransmissionType((ILateralCacheAttributes.Type) null);
      // Undeclared exception!
      try { 
        lateralCacheAttributes0.getTransmissionTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.lateral.LateralCacheAttributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      boolean boolean0 = lateralCacheAttributes0.getPutOnlyMode();
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertTrue(lateralCacheAttributes0.isReceive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      
      lateralCacheAttributes0.setZombieQueueMaxSize(0);
      int int0 = lateralCacheAttributes0.getZombieQueueMaxSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      int int0 = lateralCacheAttributes0.getHttpListenerPort();
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      assertEquals(8080, int0);
      assertTrue(lateralCacheAttributes0.isReceive());
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      int int0 = lateralCacheAttributes0.getZombieQueueMaxSize();
      assertTrue(lateralCacheAttributes0.isReceive());
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertEquals(1000, int0);
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.getTransmissionTypeName();
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertTrue(lateralCacheAttributes0.isReceive());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.getHttpServer();
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      assertTrue(lateralCacheAttributes0.isReceive());
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      int int0 = lateralCacheAttributes0.getUdpMulticastPort();
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertEquals(6789, int0);
      assertTrue(lateralCacheAttributes0.isReceive());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      boolean boolean0 = lateralCacheAttributes0.isReceive();
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertTrue(boolean0);
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.getTransmissionType();
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
      assertTrue(lateralCacheAttributes0.isReceive());
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      
      lateralCacheAttributes0.setHttpListenerPort(0);
      int int0 = lateralCacheAttributes0.getHttpListenerPort();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      String string0 = lateralCacheAttributes0.toString();
      assertEquals("UDP228.5.6.76789", string0);
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertTrue(lateralCacheAttributes0.isReceive());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      
      lateralCacheAttributes0.setUdpMulticastPort(0);
      int int0 = lateralCacheAttributes0.getUdpMulticastPort();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      lateralCacheAttributes0.getHttpServers();
      assertTrue(lateralCacheAttributes0.isReceive());
      assertEquals(6789, lateralCacheAttributes0.getUdpMulticastPort());
      assertEquals("228.5.6.7", lateralCacheAttributes0.getUdpMulticastAddr());
      assertTrue(lateralCacheAttributes0.getPutOnlyMode());
      assertEquals(1000, lateralCacheAttributes0.getZombieQueueMaxSize());
      assertEquals(8080, lateralCacheAttributes0.getHttpListenerPort());
  }
}
