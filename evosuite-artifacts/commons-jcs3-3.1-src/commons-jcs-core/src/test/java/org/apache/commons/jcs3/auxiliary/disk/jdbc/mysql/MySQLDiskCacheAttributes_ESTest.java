/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 22:05:28 GMT 2022
 */

package org.apache.commons.jcs3.auxiliary.disk.jdbc.mysql;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.jcs3.auxiliary.disk.jdbc.mysql.MySQLDiskCacheAttributes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MySQLDiskCacheAttributes_ESTest extends MySQLDiskCacheAttributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      assertTrue(mySQLDiskCacheAttributes0.isBalkDuringOptimization());
      
      mySQLDiskCacheAttributes0.setBalkDuringOptimization(false);
      boolean boolean0 = mySQLDiskCacheAttributes0.isBalkDuringOptimization();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      mySQLDiskCacheAttributes0.setOptimizationSchedule(")Uf#$BYO:o.");
      String string0 = mySQLDiskCacheAttributes0.getOptimizationSchedule();
      assertTrue(mySQLDiskCacheAttributes0.isBalkDuringOptimization());
      assertEquals(")Uf#$BYO:o.", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      mySQLDiskCacheAttributes0.setOptimizationSchedule("");
      String string0 = mySQLDiskCacheAttributes0.getOptimizationSchedule();
      assertEquals("", string0);
      assertTrue(mySQLDiskCacheAttributes0.isBalkDuringOptimization());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      String string0 = mySQLDiskCacheAttributes0.getOptimizationSchedule();
      assertTrue(mySQLDiskCacheAttributes0.isBalkDuringOptimization());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      boolean boolean0 = mySQLDiskCacheAttributes0.isBalkDuringOptimization();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MySQLDiskCacheAttributes mySQLDiskCacheAttributes0 = new MySQLDiskCacheAttributes();
      String string0 = mySQLDiskCacheAttributes0.toString();
      assertEquals("\nMySQLDiskCacheAttributes\n OptimizationSchedule [null]\n BalkDuringOptimization [true]\nJDBCCacheAttributes\n UserName [null]\n Url [null]\n Database []\n DriverClassName [null]\n TableName [JCS_STORE]\n TestBeforeInsert [true]\n MaxActive [10]\n AllowRemoveAll [true]\n ShrinkerIntervalSeconds [300]\n useDiskShrinker [true]", string0);
  }
}
