/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 21:33:00 GMT 2022
 */

package org.apache.commons.jcs3.auxiliary.lateral;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import java.lang.reflect.Array;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.Delayed;
import java.util.concurrent.ForkJoinTask;
import org.apache.commons.jcs3.auxiliary.lateral.LateralCache;
import org.apache.commons.jcs3.auxiliary.lateral.LateralCacheAttributes;
import org.apache.commons.jcs3.auxiliary.lateral.LateralCacheMonitor;
import org.apache.commons.jcs3.auxiliary.lateral.LateralCacheNoWait;
import org.apache.commons.jcs3.auxiliary.lateral.LateralCacheNoWaitFacade;
import org.apache.commons.jcs3.auxiliary.lateral.behavior.ILateralCacheAttributes;
import org.apache.commons.jcs3.auxiliary.lateral.behavior.ILateralCacheListener;
import org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.LateralTCPCacheFactory;
import org.apache.commons.jcs3.auxiliary.lateral.socket.tcp.TCPLateralCacheAttributes;
import org.apache.commons.jcs3.engine.CacheElement;
import org.apache.commons.jcs3.engine.CacheElementSerialized;
import org.apache.commons.jcs3.engine.CacheStatus;
import org.apache.commons.jcs3.engine.behavior.ICacheElement;
import org.apache.commons.jcs3.engine.behavior.ICacheServiceNonLocal;
import org.apache.commons.jcs3.engine.behavior.ICacheType;
import org.apache.commons.jcs3.engine.behavior.ICompositeCacheManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LateralCacheNoWaitFacade_ESTest extends LateralCacheNoWaitFacade_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      tCPLateralCacheAttributes0.setCacheName("sKCL5w");
      ArrayList<LateralCacheNoWait<Integer, LinkedList<String>>> arrayList0 = new ArrayList<LateralCacheNoWait<Integer, LinkedList<String>>>();
      LateralCacheNoWaitFacade<Integer, LinkedList<String>> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<Integer, LinkedList<String>>((ILateralCacheListener<Integer, LinkedList<String>>) null, arrayList0, tCPLateralCacheAttributes0);
      String string0 = lateralCacheNoWaitFacade0.getCacheName();
      assertEquals("sKCL5w", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      tCPLateralCacheAttributes0.setCacheName("");
      ArrayList<LateralCacheNoWait<Integer, LinkedList<String>>> arrayList0 = new ArrayList<LateralCacheNoWait<Integer, LinkedList<String>>>();
      LateralCacheNoWaitFacade<Integer, LinkedList<String>> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<Integer, LinkedList<String>>((ILateralCacheListener<Integer, LinkedList<String>>) null, arrayList0, tCPLateralCacheAttributes0);
      String string0 = lateralCacheNoWaitFacade0.getCacheName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      tCPLateralCacheAttributes0.setReceive(false);
      ArrayList<LateralCacheNoWait<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>>> arrayList0 = new ArrayList<LateralCacheNoWait<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>>>();
      LateralCacheNoWaitFacade<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>>((ILateralCacheListener<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>>) null, arrayList0, tCPLateralCacheAttributes0);
      TCPLateralCacheAttributes tCPLateralCacheAttributes1 = (TCPLateralCacheAttributes)lateralCacheNoWaitFacade0.getAuxiliaryCacheAttributes();
      assertEquals("", tCPLateralCacheAttributes1.getTcpListenerHost());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>> linkedList0 = new LinkedList<LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      tCPLateralCacheAttributes0.setUdpMulticastPort(0);
      LateralCacheNoWaitFacade<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>((ILateralCacheListener<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>) null, linkedList0, tCPLateralCacheAttributes0);
      ILateralCacheAttributes iLateralCacheAttributes0 = lateralCacheNoWaitFacade0.getAuxiliaryCacheAttributes();
      assertNull(iLateralCacheAttributes0.getHttpServers());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      ArrayList<LateralCacheNoWait<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>>> arrayList0 = new ArrayList<LateralCacheNoWait<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>>>();
      LateralCacheNoWaitFacade<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>>((ILateralCacheListener<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>>) null, arrayList0, tCPLateralCacheAttributes0);
      tCPLateralCacheAttributes0.setUdpMulticastPort((-4522));
      ILateralCacheAttributes iLateralCacheAttributes0 = lateralCacheNoWaitFacade0.getAuxiliaryCacheAttributes();
      assertSame(tCPLateralCacheAttributes0, iLateralCacheAttributes0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      tCPLateralCacheAttributes0.setPutOnlyMode(false);
      ArrayList<LateralCacheNoWait<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>>> arrayList0 = new ArrayList<LateralCacheNoWait<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>>>();
      LateralCacheNoWaitFacade<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>>((ILateralCacheListener<HashMap<Delayed, Object>, CacheElementSerialized<Object, Object>>) null, arrayList0, tCPLateralCacheAttributes0);
      ILateralCacheAttributes iLateralCacheAttributes0 = lateralCacheNoWaitFacade0.getAuxiliaryCacheAttributes();
      assertNull(iLateralCacheAttributes0.getEventQueueType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>> linkedList0 = new LinkedList<LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>((ILateralCacheListener<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>) null, linkedList0, tCPLateralCacheAttributes0);
      LateralTCPCacheFactory lateralTCPCacheFactory0 = new LateralTCPCacheFactory();
      LateralCacheMonitor lateralCacheMonitor0 = new LateralCacheMonitor(lateralTCPCacheFactory0);
      LateralCache<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>> lateralCache0 = new LateralCache<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>(tCPLateralCacheAttributes0, (ICacheServiceNonLocal<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>) null, lateralCacheMonitor0);
      LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>> lateralCacheNoWait0 = new LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>(lateralCache0);
      // Undeclared exception!
      try { 
        lateralCacheNoWaitFacade0.addNoWait(lateralCacheNoWait0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      LateralCacheNoWaitFacade<String, String> lateralCacheNoWaitFacade0 = null;
      try {
        lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<String, String>((ILateralCacheListener<String, String>) null, (LateralCacheNoWait<String, String>[]) null, lateralCacheAttributes0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      LateralCacheNoWaitFacade<String, String> lateralCacheNoWaitFacade0 = null;
      try {
        lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<String, String>((ILateralCacheListener<String, String>) null, (List<LateralCacheNoWait<String, String>>) null, lateralCacheAttributes0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.lateral.LateralCacheNoWaitFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayList<LateralCacheNoWait<LinkedList<Object>, Integer>> arrayList0 = new ArrayList<LateralCacheNoWait<LinkedList<Object>, Integer>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<LinkedList<Object>, Integer> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<LinkedList<Object>, Integer>((ILateralCacheListener<LinkedList<Object>, Integer>) null, arrayList0, tCPLateralCacheAttributes0);
      HashMap<LinkedList<Object>, ICacheElement<LinkedList<Object>, Integer>> hashMap0 = new HashMap<LinkedList<Object>, ICacheElement<LinkedList<Object>, Integer>>();
      lateralCacheNoWaitFacade0.getStatistics();
      ArrayList<LateralCacheNoWait<CacheElementSerialized<String, Object>, String>> arrayList1 = new ArrayList<LateralCacheNoWait<CacheElementSerialized<String, Object>, String>>();
      assertEquals(0, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      ArrayList<LateralCacheNoWait<String, Delayed>> arrayList0 = new ArrayList<LateralCacheNoWait<String, Delayed>>();
      LateralCacheNoWaitFacade<String, Delayed> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<String, Delayed>((ILateralCacheListener<String, Delayed>) null, arrayList0, tCPLateralCacheAttributes0);
      lateralCacheNoWaitFacade0.removeNoWait((String) null);
      ICompositeCacheManager iCompositeCacheManager0 = null;
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<LateralCacheNoWait<String, Integer>> linkedList0 = new LinkedList<LateralCacheNoWait<String, Integer>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      ArrayList<LateralCacheNoWait<Integer, LinkedList<String>>> arrayList0 = new ArrayList<LateralCacheNoWait<Integer, LinkedList<String>>>();
      LateralCacheNoWaitFacade<Integer, LinkedList<String>> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<Integer, LinkedList<String>>((ILateralCacheListener<Integer, LinkedList<String>>) null, arrayList0, tCPLateralCacheAttributes0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      lateralCacheNoWaitFacade0.getCacheName();
      TCPLateralCacheAttributes tCPLateralCacheAttributes1 = new TCPLateralCacheAttributes();
      assertEquals("", tCPLateralCacheAttributes1.getTcpListenerHost());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LateralCacheNoWait<LinkedList<Object>, Delayed>[] lateralCacheNoWaitArray0 = (LateralCacheNoWait<LinkedList<Object>, Delayed>[]) Array.newInstance(LateralCacheNoWait.class, 0);
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      LateralTCPCacheFactory lateralTCPCacheFactory0 = new LateralTCPCacheFactory();
      LateralCacheNoWaitFacade<LinkedList<Object>, Delayed> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<LinkedList<Object>, Delayed>((ILateralCacheListener<LinkedList<Object>, Delayed>) null, lateralCacheNoWaitArray0, lateralCacheAttributes0);
      ICacheType.CacheType iCacheType_CacheType0 = lateralCacheNoWaitFacade0.getCacheType();
      assertEquals(ICacheType.CacheType.LATERAL_CACHE, iCacheType_CacheType0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LateralCacheNoWait<Integer, String>[] lateralCacheNoWaitArray0 = (LateralCacheNoWait<Integer, String>[]) Array.newInstance(LateralCacheNoWait.class, 0);
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      LateralCacheNoWaitFacade<Integer, String> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<Integer, String>((ILateralCacheListener<Integer, String>) null, lateralCacheNoWaitArray0, lateralCacheAttributes0);
      lateralCacheNoWaitFacade0.getSize();
      LinkedHashSet<ForkJoinTask<Integer>> linkedHashSet0 = new LinkedHashSet<ForkJoinTask<Integer>>();
      assertTrue(linkedHashSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArrayList<LateralCacheNoWait<Delayed, Integer>> arrayList0 = new ArrayList<LateralCacheNoWait<Delayed, Integer>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<Delayed, Integer> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<Delayed, Integer>((ILateralCacheListener<Delayed, Integer>) null, arrayList0, tCPLateralCacheAttributes0);
      lateralCacheNoWaitFacade0.get((Delayed) null);
      lateralCacheNoWaitFacade0.update((ICacheElement<Delayed, Integer>) null);
      assertEquals(0, lateralCacheNoWaitFacade0.getSize());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayList<LateralCacheNoWait<Delayed, Integer>> arrayList0 = new ArrayList<LateralCacheNoWait<Delayed, Integer>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<Delayed, Integer> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<Delayed, Integer>((ILateralCacheListener<Delayed, Integer>) null, arrayList0, tCPLateralCacheAttributes0);
      lateralCacheNoWaitFacade0.dispose();
      lateralCacheNoWaitFacade0.getStatus();
      LinkedList<LateralCacheNoWait<HashMap<Integer, String>, String>> linkedList0 = new LinkedList<LateralCacheNoWait<HashMap<Integer, String>, String>>();
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArrayList<LateralCacheNoWait<Delayed, Integer>> arrayList0 = new ArrayList<LateralCacheNoWait<Delayed, Integer>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<Delayed, Integer> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<Delayed, Integer>((ILateralCacheListener<Delayed, Integer>) null, arrayList0, tCPLateralCacheAttributes0);
      CacheStatus cacheStatus0 = lateralCacheNoWaitFacade0.getStatus();
      assertEquals(CacheStatus.ALIVE, cacheStatus0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<LateralCacheNoWait<String, Integer>> linkedList0 = new LinkedList<LateralCacheNoWait<String, Integer>>();
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      LateralCacheNoWaitFacade<String, Integer> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<String, Integer>((ILateralCacheListener<String, Integer>) null, linkedList0, lateralCacheAttributes0);
      lateralCacheNoWaitFacade0.dispose();
      lateralCacheNoWaitFacade0.dispose();
      assertEquals(ICacheType.CacheType.LATERAL_CACHE, lateralCacheNoWaitFacade0.getCacheType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArrayList<LateralCacheNoWait<LinkedList<Object>, Integer>> arrayList0 = new ArrayList<LateralCacheNoWait<LinkedList<Object>, Integer>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<LinkedList<Object>, Integer> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<LinkedList<Object>, Integer>((ILateralCacheListener<LinkedList<Object>, Integer>) null, arrayList0, tCPLateralCacheAttributes0);
      lateralCacheNoWaitFacade0.getKeySet();
      Map<LinkedList<Object>, ICacheElement<LinkedList<Object>, Integer>> map0 = lateralCacheNoWaitFacade0.getMatching("Lateral Cache No Wait");
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArrayList<LateralCacheNoWait<Delayed, Integer>> arrayList0 = new ArrayList<LateralCacheNoWait<Delayed, Integer>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<Delayed, Integer> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<Delayed, Integer>((ILateralCacheListener<Delayed, Integer>) null, arrayList0, tCPLateralCacheAttributes0);
      LinkedHashSet<Delayed> linkedHashSet0 = new LinkedHashSet<Delayed>();
      lateralCacheNoWaitFacade0.getMultiple(linkedHashSet0);
      String string0 = lateralCacheNoWaitFacade0.toString();
      assertEquals("LateralCacheNoWaitFacade: null", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArrayList<LateralCacheNoWait<Delayed, Integer>> arrayList0 = new ArrayList<LateralCacheNoWait<Delayed, Integer>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<Delayed, Integer> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<Delayed, Integer>((ILateralCacheListener<Delayed, Integer>) null, arrayList0, tCPLateralCacheAttributes0);
      LinkedHashSet<Delayed> linkedHashSet0 = new LinkedHashSet<Delayed>();
      lateralCacheNoWaitFacade0.getMultiple((Set<Delayed>) null);
      LateralTCPCacheFactory lateralTCPCacheFactory0 = new LateralTCPCacheFactory();
      assertEquals("LateralTCPCacheFactory", lateralTCPCacheFactory0.getName());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      ArrayList<LateralCacheNoWait<String, Delayed>> arrayList0 = new ArrayList<LateralCacheNoWait<String, Delayed>>();
      LateralCacheNoWaitFacade<String, Delayed> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<String, Delayed>((ILateralCacheListener<String, Delayed>) null, arrayList0, tCPLateralCacheAttributes0);
      lateralCacheNoWaitFacade0.removeNoWait("9S=u1lVsJAIinFU0d'");
      int int0 = lateralCacheNoWaitFacade0.getNoWaitSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>> linkedList0 = new LinkedList<LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>((ILateralCacheListener<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>) null, linkedList0, tCPLateralCacheAttributes0);
      boolean boolean0 = lateralCacheNoWaitFacade0.removeNoWait((LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>> linkedList0 = new LinkedList<LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>((ILateralCacheListener<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>) null, linkedList0, tCPLateralCacheAttributes0);
      LateralTCPCacheFactory lateralTCPCacheFactory0 = new LateralTCPCacheFactory();
      LateralCacheMonitor lateralCacheMonitor0 = new LateralCacheMonitor(lateralTCPCacheFactory0);
      LateralCache<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>> lateralCache0 = new LateralCache<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>(tCPLateralCacheAttributes0, (ICacheServiceNonLocal<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>) null, lateralCacheMonitor0);
      LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>> lateralCacheNoWait0 = new LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>(lateralCache0);
      lateralCacheNoWaitFacade0.removeNoWait(lateralCacheNoWait0);
      LinkedList<LateralCacheNoWait<StandardOpenOption, StandardOpenOption>> linkedList1 = new LinkedList<LateralCacheNoWait<StandardOpenOption, StandardOpenOption>>();
      assertEquals(0, linkedList1.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<LateralCacheNoWait<String, Integer>> linkedList0 = new LinkedList<LateralCacheNoWait<String, Integer>>();
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      LateralCacheNoWaitFacade<String, Integer> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<String, Integer>((ILateralCacheListener<String, Integer>) null, linkedList0, lateralCacheAttributes0);
      lateralCacheNoWaitFacade0.addNoWait((LateralCacheNoWait<String, Integer>) null);
      lateralCacheNoWaitFacade0.dispose();
      assertNull(lateralCacheNoWaitFacade0.getCacheName());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>> linkedList0 = new LinkedList<LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>((ILateralCacheListener<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>) null, linkedList0, tCPLateralCacheAttributes0);
      LateralTCPCacheFactory lateralTCPCacheFactory0 = new LateralTCPCacheFactory();
      LateralCacheMonitor lateralCacheMonitor0 = new LateralCacheMonitor(lateralTCPCacheFactory0);
      LateralCache<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>> lateralCache0 = new LateralCache<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>(tCPLateralCacheAttributes0, (ICacheServiceNonLocal<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>) null, lateralCacheMonitor0);
      LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>> lateralCacheNoWait0 = new LateralCacheNoWait<CacheElement<Locale.LanguageRange, String>, LinkedList<Integer>>(lateralCache0);
      lateralCacheNoWait0.setIdentityKey("");
      lateralCacheNoWaitFacade0.addNoWait(lateralCacheNoWait0);
      LinkedList<LateralCacheNoWait<StandardOpenOption, StandardOpenOption>> linkedList1 = new LinkedList<LateralCacheNoWait<StandardOpenOption, StandardOpenOption>>();
      assertEquals(0, linkedList1.size());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<LateralCacheNoWait<String, Integer>> linkedList0 = new LinkedList<LateralCacheNoWait<String, Integer>>();
      LateralCacheAttributes lateralCacheAttributes0 = new LateralCacheAttributes();
      LateralCacheNoWaitFacade<String, Integer> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<String, Integer>((ILateralCacheListener<String, Integer>) null, linkedList0, lateralCacheAttributes0);
      lateralCacheNoWaitFacade0.remove("2,gXp}(iP");
      ArrayList<LateralCacheNoWait<Integer, LinkedList<String>>> arrayList0 = new ArrayList<LateralCacheNoWait<Integer, LinkedList<String>>>();
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArrayList<LateralCacheNoWait<Delayed, Integer>> arrayList0 = new ArrayList<LateralCacheNoWait<Delayed, Integer>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<Delayed, Integer> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<Delayed, Integer>((ILateralCacheListener<Delayed, Integer>) null, arrayList0, tCPLateralCacheAttributes0);
      lateralCacheNoWaitFacade0.removeAll();
      String string0 = lateralCacheNoWaitFacade0.toString();
      assertEquals("LateralCacheNoWaitFacade: null", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ArrayList<LateralCacheNoWait<Delayed, Integer>> arrayList0 = new ArrayList<LateralCacheNoWait<Delayed, Integer>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LinkedList<LateralCacheNoWait<HashMap<Integer, String>, String>> linkedList0 = new LinkedList<LateralCacheNoWait<HashMap<Integer, String>, String>>();
      LateralCacheNoWaitFacade<HashMap<Integer, String>, String> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<HashMap<Integer, String>, String>((ILateralCacheListener<HashMap<Integer, String>, String>) null, linkedList0, tCPLateralCacheAttributes0);
      String string0 = lateralCacheNoWaitFacade0.getStats();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<LateralCacheNoWait<Delayed, String>> linkedList0 = new LinkedList<LateralCacheNoWait<Delayed, String>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<Delayed, String> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<Delayed, String>((ILateralCacheListener<Delayed, String>) null, linkedList0, tCPLateralCacheAttributes0);
      String string0 = lateralCacheNoWaitFacade0.getEventLoggingExtraInfo();
      assertEquals("Lateral Cache No Wait", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ArrayList<LateralCacheNoWait<String, LateralCacheNoWait<String, PipedInputStream>>> arrayList0 = new ArrayList<LateralCacheNoWait<String, LateralCacheNoWait<String, PipedInputStream>>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<String, LateralCacheNoWait<String, PipedInputStream>> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<String, LateralCacheNoWait<String, PipedInputStream>>((ILateralCacheListener<String, LateralCacheNoWait<String, PipedInputStream>>) null, arrayList0, tCPLateralCacheAttributes0);
      // Undeclared exception!
      try { 
        lateralCacheNoWaitFacade0.containsNoWait((LateralCacheNoWait<String, LateralCacheNoWait<String, PipedInputStream>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jcs3.auxiliary.lateral.LateralCacheNoWaitFacade", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ArrayList<LateralCacheNoWait<Delayed, Integer>> arrayList0 = new ArrayList<LateralCacheNoWait<Delayed, Integer>>();
      TCPLateralCacheAttributes tCPLateralCacheAttributes0 = new TCPLateralCacheAttributes();
      LateralCacheNoWaitFacade<Delayed, Integer> lateralCacheNoWaitFacade0 = new LateralCacheNoWaitFacade<Delayed, Integer>((ILateralCacheListener<Delayed, Integer>) null, arrayList0, tCPLateralCacheAttributes0);
      LinkedHashSet<Delayed> linkedHashSet0 = new LinkedHashSet<Delayed>();
      linkedHashSet0.add((Delayed) null);
      // Undeclared exception!
      try { 
        lateralCacheNoWaitFacade0.getMultiple(linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }
}
