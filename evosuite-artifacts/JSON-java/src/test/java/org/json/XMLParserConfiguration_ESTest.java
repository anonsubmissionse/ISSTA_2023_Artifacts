/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 06 14:34:04 GMT 2022
 */

package org.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.json.XMLParserConfiguration;
import org.json.XMLXsiTypeConverter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLParserConfiguration_ESTest extends XMLParserConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = XMLParserConfiguration.KEEP_STRINGS;
      xMLParserConfiguration0.withcDataTagName("DHn=`+o<3e'");
      //  // Unstable assertion: assertFalse(xMLParserConfiguration0.isKeepStrings());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = XMLParserConfiguration.KEEP_STRINGS;
      XMLParserConfiguration xMLParserConfiguration1 = xMLParserConfiguration0.ORIGINAL.withConvertNilAttributeToNull(true);
      XMLParserConfiguration xMLParserConfiguration2 = xMLParserConfiguration1.withcDataTagName("*wED+MGV^");
      assertEquals("content", xMLParserConfiguration0.getcDataTagName());
      assertEquals("*wED+MGV^", xMLParserConfiguration2.getcDataTagName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = XMLParserConfiguration.KEEP_STRINGS;
      XMLParserConfiguration xMLParserConfiguration1 = xMLParserConfiguration0.KEEP_STRINGS.withConvertNilAttributeToNull(true);
      Map<String, XMLXsiTypeConverter<?>> map0 = xMLParserConfiguration0.getXsiTypeMap();
      XMLParserConfiguration xMLParserConfiguration2 = xMLParserConfiguration1.withXsiTypeMap(map0);
      //  // Unstable assertion: assertNotSame(xMLParserConfiguration1, xMLParserConfiguration0);
      //  // Unstable assertion: assertTrue(xMLParserConfiguration2.isConvertNilAttributeToNull());
      //  // Unstable assertion: assertFalse(xMLParserConfiguration1.isKeepStrings());
      //  // Unstable assertion: assertNotSame(xMLParserConfiguration2, xMLParserConfiguration1);
      //  // Unstable assertion: assertNotSame(xMLParserConfiguration2, xMLParserConfiguration0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration();
      XMLParserConfiguration xMLParserConfiguration1 = xMLParserConfiguration0.withKeepStrings(false);
      assertEquals("content", xMLParserConfiguration1.getcDataTagName());
      assertFalse(xMLParserConfiguration0.isKeepStrings());
      assertNotSame(xMLParserConfiguration1, xMLParserConfiguration0);
      assertFalse(xMLParserConfiguration1.isConvertNilAttributeToNull());
      assertFalse(xMLParserConfiguration1.isKeepStrings());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration();
      XMLParserConfiguration xMLParserConfiguration1 = xMLParserConfiguration0.withConvertNilAttributeToNull(true);
      XMLParserConfiguration xMLParserConfiguration2 = xMLParserConfiguration1.withKeepStrings(true);
      assertTrue(xMLParserConfiguration2.isKeepStrings());
      assertFalse(xMLParserConfiguration0.isConvertNilAttributeToNull());
      assertEquals("content", xMLParserConfiguration2.getcDataTagName());
      assertTrue(xMLParserConfiguration2.isConvertNilAttributeToNull());
      assertFalse(xMLParserConfiguration1.isKeepStrings());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = XMLParserConfiguration.KEEP_STRINGS;
      Set<String> set0 = xMLParserConfiguration0.getForceList();
      XMLParserConfiguration xMLParserConfiguration1 = xMLParserConfiguration0.ORIGINAL.withForceList(set0);
      //  // Unstable assertion: assertTrue(xMLParserConfiguration1.isConvertNilAttributeToNull());
      //  // Unstable assertion: assertFalse(xMLParserConfiguration1.isKeepStrings());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = XMLParserConfiguration.KEEP_STRINGS;
      Set<String> set0 = xMLParserConfiguration0.getForceList();
      XMLParserConfiguration xMLParserConfiguration1 = xMLParserConfiguration0.KEEP_STRINGS.withConvertNilAttributeToNull(true);
      XMLParserConfiguration xMLParserConfiguration2 = xMLParserConfiguration1.withForceList(set0);
      assertTrue(xMLParserConfiguration2.isConvertNilAttributeToNull());
      assertFalse(xMLParserConfiguration0.isConvertNilAttributeToNull());
      assertNotSame(xMLParserConfiguration2, xMLParserConfiguration1);
      assertTrue(xMLParserConfiguration1.isKeepStrings());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = XMLParserConfiguration.KEEP_STRINGS;
      xMLParserConfiguration0.withConvertNilAttributeToNull(false);
      //  // Unstable assertion: assertTrue(xMLParserConfiguration0.isConvertNilAttributeToNull());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = XMLParserConfiguration.KEEP_STRINGS;
      boolean boolean0 = xMLParserConfiguration0.isKeepStrings();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = XMLParserConfiguration.KEEP_STRINGS;
      XMLParserConfiguration xMLParserConfiguration1 = xMLParserConfiguration0.KEEP_STRINGS.withConvertNilAttributeToNull(true);
      boolean boolean0 = xMLParserConfiguration1.isConvertNilAttributeToNull();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = XMLParserConfiguration.ORIGINAL;
      XMLParserConfiguration xMLParserConfiguration1 = xMLParserConfiguration0.withcDataTagName((String) null);
      String string0 = xMLParserConfiguration1.getcDataTagName();
      assertFalse(xMLParserConfiguration1.isKeepStrings());
      assertFalse(xMLParserConfiguration1.isConvertNilAttributeToNull());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration(false, "");
      xMLParserConfiguration0.getcDataTagName();
      assertFalse(xMLParserConfiguration0.isConvertNilAttributeToNull());
      assertFalse(xMLParserConfiguration0.isKeepStrings());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration("");
      xMLParserConfiguration0.getXsiTypeMap();
      assertFalse(xMLParserConfiguration0.isKeepStrings());
      assertFalse(xMLParserConfiguration0.isConvertNilAttributeToNull());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration((String) null);
      xMLParserConfiguration0.getForceList();
      assertFalse(xMLParserConfiguration0.isConvertNilAttributeToNull());
      assertFalse(xMLParserConfiguration0.isKeepStrings());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = XMLParserConfiguration.KEEP_STRINGS;
      xMLParserConfiguration0.clone();
      //  // Unstable assertion: assertTrue(xMLParserConfiguration0.isConvertNilAttributeToNull());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration("");
      // Undeclared exception!
      try { 
        xMLParserConfiguration0.withcDataTagName("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration(false);
      // Undeclared exception!
      try { 
        xMLParserConfiguration0.withConvertNilAttributeToNull(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration(false);
      // Undeclared exception!
      try { 
        xMLParserConfiguration0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration(false, "", false);
      // Undeclared exception!
      try { 
        xMLParserConfiguration0.withKeepStrings(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration();
      // Undeclared exception!
      try { 
        xMLParserConfiguration0.withForceList((Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration();
      String string0 = xMLParserConfiguration0.getcDataTagName();
      assertEquals("content", string0);
      assertFalse(xMLParserConfiguration0.isKeepStrings());
      assertFalse(xMLParserConfiguration0.isConvertNilAttributeToNull());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration();
      Map<String, XMLXsiTypeConverter<?>> map0 = xMLParserConfiguration0.getXsiTypeMap();
      XMLParserConfiguration xMLParserConfiguration1 = xMLParserConfiguration0.withXsiTypeMap(map0);
      assertNotSame(xMLParserConfiguration1, xMLParserConfiguration0);
      assertFalse(xMLParserConfiguration1.isKeepStrings());
      assertFalse(xMLParserConfiguration1.isConvertNilAttributeToNull());
      assertEquals("content", xMLParserConfiguration1.getcDataTagName());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration();
      XMLParserConfiguration xMLParserConfiguration1 = xMLParserConfiguration0.withConvertNilAttributeToNull(true);
      XMLParserConfiguration xMLParserConfiguration2 = xMLParserConfiguration1.clone();
      assertEquals("content", xMLParserConfiguration2.getcDataTagName());
      assertFalse(xMLParserConfiguration2.isKeepStrings());
      assertFalse(xMLParserConfiguration0.isConvertNilAttributeToNull());
      assertFalse(xMLParserConfiguration1.isKeepStrings());
      assertTrue(xMLParserConfiguration2.isConvertNilAttributeToNull());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration(false);
      boolean boolean0 = xMLParserConfiguration0.isKeepStrings();
      assertFalse(xMLParserConfiguration0.isConvertNilAttributeToNull());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration();
      boolean boolean0 = xMLParserConfiguration0.isConvertNilAttributeToNull();
      assertFalse(boolean0);
      assertEquals("content", xMLParserConfiguration0.getcDataTagName());
      assertFalse(xMLParserConfiguration0.isKeepStrings());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XMLParserConfiguration xMLParserConfiguration0 = new XMLParserConfiguration("");
      // Undeclared exception!
      try { 
        xMLParserConfiguration0.withXsiTypeMap((Map<String, XMLXsiTypeConverter<?>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }
}
