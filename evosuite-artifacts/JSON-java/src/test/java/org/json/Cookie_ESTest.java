/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 06 14:31:06 GMT 2022
 */

package org.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.json.Cookie;
import org.json.JSONObject;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Cookie_ESTest extends Cookie_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = Cookie.unescape("%E0qv^LY!I7[:");
      assertEquals("\u00E0qv^LY!I7[:", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        Cookie.toJSONObject("/4Q_4ku(, Z{\"By7z%");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected '=' and instead saw '' at 18 [character 19 line 1]
         //
         verifyException("org.json.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = Cookie.escape(" [character ");
      assertEquals("[character", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = Cookie.unescape("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        Cookie.unescape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.json.Cookie", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        Cookie.toString((JSONObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.json.Cookie", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        Cookie.toJSONObject((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Cookie.escape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.json.Cookie", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = Cookie.unescape("N{%0lbW-H.?@dum.");
      assertEquals("N{%0lbW-H.?@dum.", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = Cookie.unescape("/4Q_4ku(, Z{\"By7z%25");
      assertEquals("/4Q_4ku(, Z{\"By7z%", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = Cookie.unescape("}+xZ6XPw-/RRt");
      assertEquals("} xZ6XPw-/RRt", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = Cookie.escape("<s.#}ew(%J#+$-b");
      assertEquals("<s.#}ew(%25J#%2b$-b", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = Cookie.unescape("H>`bs]x%I3'B\"26m*");
      assertEquals("H>`bs]x%I3'B\"26m*", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = Cookie.unescape("Q,Q}W(N>|&7%c");
      assertEquals("Q,Q}W(N>|&7%c", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONObject jSONObject0 = Cookie.toJSONObject("d^j=r;d^j%3dr=java.lang.Object@0000000008");
      assertEquals(3, jSONObject0.length());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONObject jSONObject0 = Cookie.toJSONObject("(G=<B57_y6Tlq");
      JSONObject jSONObject1 = jSONObject0.put("(G=<B57_y6Tlq", false);
      String string0 = Cookie.toString(jSONObject1);
      assertEquals("(G=<B57_y6Tlq", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONObject jSONObject0 = new JSONObject();
      try { 
        Cookie.toString(jSONObject0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cookie does not have a name
         //
         verifyException("org.json.Cookie", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONObject jSONObject0 = Cookie.toJSONObject("NeZOp+v{8z=.n");
      Object object0 = new Object();
      jSONObject0.putOnce("", object0);
      String string0 = Cookie.toString(jSONObject0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSONObject jSONObject0 = Cookie.toJSONObject("(G=<B57_y6Tlq");
      jSONObject0.remove("value");
      String string0 = Cookie.toString(jSONObject0);
      assertEquals(1, jSONObject0.length());
      assertEquals("(G=", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONObject jSONObject0 = Cookie.toJSONObject("NeZOp v{8z=.n;NeZOw>p v{8z");
      assertEquals(3, jSONObject0.length());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONObject jSONObject0 = Cookie.toJSONObject("NeZOp v{8z=.n;=java.lang.Object@0000000009");
      assertEquals(2, jSONObject0.length());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        Cookie.toJSONObject("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cookies must have a 'name'
         //
         verifyException("org.json.Cookie", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = Cookie.escape("NeZOp v{8z=.n;NeZOp%2bv{8z%3d.n");
      assertEquals("NeZOp v{8z%3d.n%3bNeZOp%252bv{8z%253d.n", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONObject jSONObject0 = Cookie.toJSONObject("NeZOp+v{8z=.n");
      jSONObject0.put("NeZOp+v{8z=.n", true);
      String string0 = Cookie.toString(jSONObject0);
      assertEquals("NeZOp v{8z=.n;NeZOp%2bv{8z%3d.n", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = Cookie.escape("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Cookie cookie0 = new Cookie();
  }
}
