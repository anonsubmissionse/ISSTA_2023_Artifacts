/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 02:01:54 GMT 2022
 */

package org.apache.commons.geometry.io.euclidean.threed.txt;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import java.nio.charset.Charset;
import org.apache.commons.geometry.io.core.output.GeometryOutput;
import org.apache.commons.geometry.io.euclidean.threed.txt.TextBoundaryWriteHandler3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TextBoundaryWriteHandler3D_ESTest extends TextBoundaryWriteHandler3D_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TextBoundaryWriteHandler3D textBoundaryWriteHandler3D0 = new TextBoundaryWriteHandler3D();
      assertEquals("; ", textBoundaryWriteHandler3D0.getVertexSeparator());
      
      textBoundaryWriteHandler3D0.setVertexSeparator((String) null);
      textBoundaryWriteHandler3D0.getVertexSeparator();
      assertEquals(" ", textBoundaryWriteHandler3D0.getVertexComponentSeparator());
      assertEquals((-1), textBoundaryWriteHandler3D0.getFacetVertexCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextBoundaryWriteHandler3D textBoundaryWriteHandler3D0 = new TextBoundaryWriteHandler3D();
      assertEquals("; ", textBoundaryWriteHandler3D0.getVertexSeparator());
      
      textBoundaryWriteHandler3D0.setVertexSeparator("");
      textBoundaryWriteHandler3D0.getVertexSeparator();
      assertEquals(" ", textBoundaryWriteHandler3D0.getVertexComponentSeparator());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextBoundaryWriteHandler3D textBoundaryWriteHandler3D0 = new TextBoundaryWriteHandler3D();
      assertEquals(" ", textBoundaryWriteHandler3D0.getVertexComponentSeparator());
      
      textBoundaryWriteHandler3D0.setVertexComponentSeparator((String) null);
      textBoundaryWriteHandler3D0.getVertexComponentSeparator();
      assertEquals((-1), textBoundaryWriteHandler3D0.getFacetVertexCount());
      assertEquals("; ", textBoundaryWriteHandler3D0.getVertexSeparator());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TextBoundaryWriteHandler3D textBoundaryWriteHandler3D0 = new TextBoundaryWriteHandler3D();
      assertEquals(" ", textBoundaryWriteHandler3D0.getVertexComponentSeparator());
      
      textBoundaryWriteHandler3D0.setVertexComponentSeparator("");
      textBoundaryWriteHandler3D0.getVertexComponentSeparator();
      assertEquals((-1), textBoundaryWriteHandler3D0.getFacetVertexCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TextBoundaryWriteHandler3D textBoundaryWriteHandler3D0 = new TextBoundaryWriteHandler3D();
      textBoundaryWriteHandler3D0.setFacetVertexCount(326);
      int int0 = textBoundaryWriteHandler3D0.getFacetVertexCount();
      assertEquals(326, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TextBoundaryWriteHandler3D textBoundaryWriteHandler3D0 = new TextBoundaryWriteHandler3D();
      Charset charset0 = textBoundaryWriteHandler3D0.getDefaultCharset();
      textBoundaryWriteHandler3D0.setFacetVertexCount(326);
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      GeometryOutput geometryOutput0 = mock(GeometryOutput.class, new ViolatedAssumptionAnswer());
      doReturn(charset0, charset0).when(geometryOutput0).getCharset();
      doReturn(outputStream0).when(geometryOutput0).getOutputStream();
      textBoundaryWriteHandler3D0.getFacetDefinitionWriter(geometryOutput0);
      assertEquals(326, textBoundaryWriteHandler3D0.getFacetVertexCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextBoundaryWriteHandler3D textBoundaryWriteHandler3D0 = new TextBoundaryWriteHandler3D();
      String string0 = textBoundaryWriteHandler3D0.getVertexComponentSeparator();
      assertEquals(" ", string0);
      assertEquals((-1), textBoundaryWriteHandler3D0.getFacetVertexCount());
      assertEquals("; ", textBoundaryWriteHandler3D0.getVertexSeparator());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextBoundaryWriteHandler3D textBoundaryWriteHandler3D0 = new TextBoundaryWriteHandler3D();
      textBoundaryWriteHandler3D0.getFormat();
      assertEquals((-1), textBoundaryWriteHandler3D0.getFacetVertexCount());
      assertEquals("; ", textBoundaryWriteHandler3D0.getVertexSeparator());
      assertEquals(" ", textBoundaryWriteHandler3D0.getVertexComponentSeparator());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TextBoundaryWriteHandler3D textBoundaryWriteHandler3D0 = new TextBoundaryWriteHandler3D();
      assertEquals((-1), textBoundaryWriteHandler3D0.getFacetVertexCount());
      
      textBoundaryWriteHandler3D0.setFacetVertexCount(0);
      int int0 = textBoundaryWriteHandler3D0.getFacetVertexCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TextBoundaryWriteHandler3D textBoundaryWriteHandler3D0 = new TextBoundaryWriteHandler3D();
      int int0 = textBoundaryWriteHandler3D0.getFacetVertexCount();
      assertEquals("; ", textBoundaryWriteHandler3D0.getVertexSeparator());
      assertEquals(" ", textBoundaryWriteHandler3D0.getVertexComponentSeparator());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TextBoundaryWriteHandler3D textBoundaryWriteHandler3D0 = new TextBoundaryWriteHandler3D();
      String string0 = textBoundaryWriteHandler3D0.getVertexSeparator();
      assertEquals((-1), textBoundaryWriteHandler3D0.getFacetVertexCount());
      assertEquals("; ", string0);
      assertEquals(" ", textBoundaryWriteHandler3D0.getVertexComponentSeparator());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TextBoundaryWriteHandler3D textBoundaryWriteHandler3D0 = new TextBoundaryWriteHandler3D();
      Charset charset0 = textBoundaryWriteHandler3D0.getDefaultCharset();
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      GeometryOutput geometryOutput0 = mock(GeometryOutput.class, new ViolatedAssumptionAnswer());
      doReturn(charset0, (Charset) null).when(geometryOutput0).getCharset();
      doReturn(outputStream0).when(geometryOutput0).getOutputStream();
      // Undeclared exception!
      try { 
        textBoundaryWriteHandler3D0.getFacetDefinitionWriter(geometryOutput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charset
         //
         verifyException("java.io.OutputStreamWriter", e);
      }
  }
}
