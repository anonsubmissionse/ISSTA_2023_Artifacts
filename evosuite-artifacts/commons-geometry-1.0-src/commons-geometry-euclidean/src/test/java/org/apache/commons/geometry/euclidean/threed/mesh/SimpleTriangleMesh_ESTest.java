/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 01:23:32 GMT 2022
 */

package org.apache.commons.geometry.euclidean.threed.mesh;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedHashSet;
import org.apache.commons.geometry.euclidean.threed.BoundarySource3D;
import org.apache.commons.geometry.euclidean.threed.ConvexVolume;
import org.apache.commons.geometry.euclidean.threed.Vector3D;
import org.apache.commons.geometry.euclidean.threed.mesh.SimpleTriangleMesh;
import org.apache.commons.numbers.core.Precision;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleTriangleMesh_ESTest extends SimpleTriangleMesh_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConvexVolume convexVolume0 = ConvexVolume.full();
      // Undeclared exception!
      try { 
        SimpleTriangleMesh.from((BoundarySource3D) convexVolume0, (Precision.DoubleEquivalence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Precision context must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        SimpleTriangleMesh.builder((Precision.DoubleEquivalence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Precision context must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int[][] intArray0 = new int[6][2];
      Vector3D[] vector3DArray0 = new Vector3D[20];
      // Undeclared exception!
      try { 
        SimpleTriangleMesh.from(vector3DArray0, intArray0, (Precision.DoubleEquivalence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Precision context must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedHashSet<int[]> linkedHashSet0 = new LinkedHashSet<int[]>();
      // Undeclared exception!
      try { 
        SimpleTriangleMesh.from((Collection<Vector3D>) null, (Collection<int[]>) linkedHashSet0, (Precision.DoubleEquivalence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Precision context must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }
}
