/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 01:21:50 GMT 2022
 */

package org.apache.commons.geometry.euclidean.threed;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Stack;
import org.apache.commons.geometry.euclidean.threed.BoundaryList3D;
import org.apache.commons.geometry.euclidean.threed.BoundarySource3D;
import org.apache.commons.geometry.euclidean.threed.BoundarySourceBoundsBuilder3D;
import org.apache.commons.geometry.euclidean.threed.Bounds3D;
import org.apache.commons.geometry.euclidean.threed.ConvexVolume;
import org.apache.commons.geometry.euclidean.threed.EmbeddingPlane;
import org.apache.commons.geometry.euclidean.threed.PlaneConvexSubset;
import org.apache.commons.geometry.euclidean.threed.RegionBSPTree3D;
import org.apache.commons.geometry.euclidean.threed.SimpleTriangle3D;
import org.apache.commons.geometry.euclidean.threed.Vector3D;
import org.apache.commons.geometry.euclidean.threed.VertexListConvexPolygon3D;
import org.apache.commons.numbers.core.Precision;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BoundarySourceBoundsBuilder3D_ESTest extends BoundarySourceBoundsBuilder3D_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BoundarySourceBoundsBuilder3D boundarySourceBoundsBuilder3D0 = new BoundarySourceBoundsBuilder3D();
      // Undeclared exception!
      try { 
        boundarySourceBoundsBuilder3D0.getBounds((BoundarySource3D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.geometry.euclidean.threed.BoundarySourceBoundsBuilder3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BoundarySourceBoundsBuilder3D boundarySourceBoundsBuilder3D0 = new BoundarySourceBoundsBuilder3D();
      Stack<VertexListConvexPolygon3D> stack0 = new Stack<VertexListConvexPolygon3D>();
      BoundaryList3D boundaryList3D0 = new BoundaryList3D(stack0);
      stack0.add((VertexListConvexPolygon3D) null);
      // Undeclared exception!
      try { 
        boundarySourceBoundsBuilder3D0.getBounds(boundaryList3D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.geometry.euclidean.threed.BoundarySourceBoundsBuilder3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BoundarySourceBoundsBuilder3D boundarySourceBoundsBuilder3D0 = new BoundarySourceBoundsBuilder3D();
      ArrayList<SimpleTriangle3D> arrayList0 = new ArrayList<SimpleTriangle3D>();
      Vector3D.Unit vector3D_Unit0 = Vector3D.Unit.from(0.0, 1339.187635483226, 0.0);
      EmbeddingPlane embeddingPlane0 = new EmbeddingPlane(vector3D_Unit0, vector3D_Unit0, vector3D_Unit0, 1339.187635483226, (Precision.DoubleEquivalence) null);
      SimpleTriangle3D simpleTriangle3D0 = new SimpleTriangle3D(embeddingPlane0, vector3D_Unit0, vector3D_Unit0, vector3D_Unit0);
      arrayList0.add(simpleTriangle3D0);
      BoundaryList3D boundaryList3D0 = new BoundaryList3D(arrayList0);
      Bounds3D bounds3D0 = boundarySourceBoundsBuilder3D0.getBounds(boundaryList3D0);
      assertNotNull(bounds3D0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BoundarySourceBoundsBuilder3D boundarySourceBoundsBuilder3D0 = new BoundarySourceBoundsBuilder3D();
      ArrayList<SimpleTriangle3D> arrayList0 = new ArrayList<SimpleTriangle3D>();
      Vector3D.Unit vector3D_Unit0 = Vector3D.Unit.from(0.0, 1339.187635483226, 0.0);
      EmbeddingPlane embeddingPlane0 = new EmbeddingPlane(vector3D_Unit0, vector3D_Unit0, vector3D_Unit0, 1339.187635483226, (Precision.DoubleEquivalence) null);
      SimpleTriangle3D simpleTriangle3D0 = new SimpleTriangle3D(embeddingPlane0, vector3D_Unit0, vector3D_Unit0, vector3D_Unit0);
      arrayList0.add(simpleTriangle3D0);
      BoundaryList3D boundaryList3D0 = new BoundaryList3D(arrayList0);
      RegionBSPTree3D regionBSPTree3D0 = boundaryList3D0.toTree();
      Bounds3D bounds3D0 = boundarySourceBoundsBuilder3D0.getBounds(regionBSPTree3D0);
      assertNull(bounds3D0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BoundarySourceBoundsBuilder3D boundarySourceBoundsBuilder3D0 = new BoundarySourceBoundsBuilder3D();
      ArrayList<PlaneConvexSubset> arrayList0 = new ArrayList<PlaneConvexSubset>();
      ConvexVolume convexVolume0 = new ConvexVolume(arrayList0);
      Bounds3D bounds3D0 = boundarySourceBoundsBuilder3D0.getBounds(convexVolume0);
      assertNull(bounds3D0);
  }
}
