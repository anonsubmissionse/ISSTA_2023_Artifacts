/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 01:26:36 GMT 2022
 */

package org.apache.commons.geometry.euclidean.twod.shape;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.geometry.euclidean.twod.AffineTransformMatrix2D;
import org.apache.commons.geometry.euclidean.twod.Vector2D;
import org.apache.commons.geometry.euclidean.twod.rotation.Rotation2D;
import org.apache.commons.geometry.euclidean.twod.shape.Parallelogram;
import org.apache.commons.numbers.core.Precision;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parallelogram_ESTest extends Parallelogram_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Parallelogram.Builder parallelogram_Builder0 = Parallelogram.builder((Precision.DoubleEquivalence) null);
      Parallelogram.Builder parallelogram_Builder1 = parallelogram_Builder0.setScale(3.273390607896142E150, 0.0);
      assertSame(parallelogram_Builder1, parallelogram_Builder0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector2D vector2D0 = Vector2D.NaN;
      // Undeclared exception!
      try { 
        Parallelogram.axisAligned(vector2D0, vector2D0, (Precision.DoubleEquivalence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.geometry.euclidean.twod.shape.Parallelogram", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Vector2D.Unit vector2D_Unit0 = Vector2D.Unit.from((-0.5), (-0.5));
      Vector2D[] vector2DArray0 = new Vector2D[5];
      vector2DArray0[0] = (Vector2D) vector2D_Unit0;
      vector2DArray0[1] = (Vector2D) vector2D_Unit0;
      vector2DArray0[2] = (Vector2D) vector2D_Unit0;
      vector2DArray0[3] = (Vector2D) vector2D_Unit0;
      vector2DArray0[4] = (Vector2D) vector2D_Unit0;
      Vector2D vector2D0 = Vector2D.max((Vector2D) vector2D_Unit0, vector2DArray0);
      // Undeclared exception!
      try { 
        Parallelogram.axisAligned(vector2D0, vector2DArray0[2], (Precision.DoubleEquivalence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.geometry.euclidean.twod.shape.Parallelogram", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Parallelogram.Builder parallelogram_Builder0 = Parallelogram.builder((Precision.DoubleEquivalence) null);
      Rotation2D rotation2D0 = Rotation2D.of((-4663.441354520206));
      Parallelogram.Builder parallelogram_Builder1 = parallelogram_Builder0.setRotation(rotation2D0);
      assertSame(parallelogram_Builder0, parallelogram_Builder1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Vector2D.Unit vector2D_Unit0 = Vector2D.Unit.MINUS_Y;
      AffineTransformMatrix2D affineTransformMatrix2D0 = AffineTransformMatrix2D.fromColumnVectors((Vector2D) vector2D_Unit0, (Vector2D) vector2D_Unit0, (Vector2D) vector2D_Unit0);
      // Undeclared exception!
      try { 
        Parallelogram.fromTransformedUnitSquare(affineTransformMatrix2D0, (Precision.DoubleEquivalence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.geometry.euclidean.twod.shape.Parallelogram", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Parallelogram.Builder parallelogram_Builder0 = Parallelogram.builder((Precision.DoubleEquivalence) null);
      Vector2D vector2D0 = Vector2D.of(3.273390607896142E150, 0.0);
      Parallelogram.Builder parallelogram_Builder1 = parallelogram_Builder0.setScale(vector2D0);
      assertSame(parallelogram_Builder0, parallelogram_Builder1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Parallelogram.Builder parallelogram_Builder0 = Parallelogram.builder((Precision.DoubleEquivalence) null);
      Vector2D vector2D0 = Vector2D.ZERO;
      Parallelogram.Builder parallelogram_Builder1 = parallelogram_Builder0.setPosition(vector2D0);
      assertSame(parallelogram_Builder1, parallelogram_Builder0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Parallelogram.Builder parallelogram_Builder0 = Parallelogram.builder((Precision.DoubleEquivalence) null);
      // Undeclared exception!
      try { 
        parallelogram_Builder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.geometry.euclidean.twod.shape.Parallelogram", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Parallelogram.Builder parallelogram_Builder0 = Parallelogram.builder((Precision.DoubleEquivalence) null);
      Vector2D vector2D0 = Vector2D.of(3.273390607896142E150, 0.0);
      Parallelogram.Builder parallelogram_Builder1 = parallelogram_Builder0.setXDirection(vector2D0);
      assertSame(parallelogram_Builder0, parallelogram_Builder1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Parallelogram.Builder parallelogram_Builder0 = Parallelogram.builder((Precision.DoubleEquivalence) null);
      Vector2D.Unit vector2D_Unit0 = Vector2D.Unit.MINUS_X;
      Parallelogram.Builder parallelogram_Builder1 = parallelogram_Builder0.setYDirection(vector2D_Unit0);
      assertSame(parallelogram_Builder0, parallelogram_Builder1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Parallelogram.Builder parallelogram_Builder0 = Parallelogram.builder((Precision.DoubleEquivalence) null);
      Parallelogram.Builder parallelogram_Builder1 = parallelogram_Builder0.setScale((-16.718401310202818));
      assertSame(parallelogram_Builder1, parallelogram_Builder0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        Parallelogram.unitSquare((Precision.DoubleEquivalence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.geometry.euclidean.twod.shape.Parallelogram", e);
      }
  }
}
