/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 01:29:11 GMT 2022
 */

package org.apache.commons.geometry.euclidean.twod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.List;
import java.util.Vector;
import org.apache.commons.geometry.euclidean.twod.BoundaryList2D;
import org.apache.commons.geometry.euclidean.twod.BoundarySource2D;
import org.apache.commons.geometry.euclidean.twod.Bounds2D;
import org.apache.commons.geometry.euclidean.twod.ConvexArea;
import org.apache.commons.geometry.euclidean.twod.Line;
import org.apache.commons.geometry.euclidean.twod.LineConvexSubset;
import org.apache.commons.geometry.euclidean.twod.LineSpanningSubset;
import org.apache.commons.geometry.euclidean.twod.LinecastPoint2D;
import org.apache.commons.geometry.euclidean.twod.RegionBSPTree2D;
import org.apache.commons.geometry.euclidean.twod.Vector2D;
import org.apache.commons.geometry.euclidean.twod.path.LinePath;
import org.apache.commons.numbers.core.Precision;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BoundarySource2D_ESTest extends BoundarySource2D_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector<LineConvexSubset> vector0 = new Vector<LineConvexSubset>();
      vector0.add((LineConvexSubset) null);
      ConvexArea convexArea0 = new ConvexArea(vector0);
      // Undeclared exception!
      try { 
        convexArea0.toTree();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.geometry.core.partitioning.bsp.AbstractBSPTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        BoundarySource2D.of((LineConvexSubset[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        BoundarySource2D.of((Collection<LineConvexSubset>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.geometry.euclidean.twod.BoundarySource2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Vector<LineConvexSubset> vector0 = new Vector<LineConvexSubset>(182);
      BoundarySource2D boundarySource2D0 = BoundarySource2D.of((Collection<LineConvexSubset>) vector0);
      assertNotNull(boundarySource2D0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Vector<Line> vector0 = new Vector<Line>();
      ConvexArea convexArea0 = ConvexArea.fromBounds((Iterable<Line>) vector0);
      Bounds2D bounds2D0 = convexArea0.getBounds();
      assertNull(bounds2D0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrayDeque<Vector2D> arrayDeque0 = new ArrayDeque<Vector2D>();
      LinePath linePath0 = LinePath.fromVertexLoop(arrayDeque0, (Precision.DoubleEquivalence) null);
      RegionBSPTree2D regionBSPTree2D0 = linePath0.toTree();
      assertNotNull(regionBSPTree2D0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RegionBSPTree2D regionBSPTree2D0 = RegionBSPTree2D.empty();
      BoundaryList2D boundaryList2D0 = regionBSPTree2D0.toList();
      assertEquals(0, boundaryList2D0.count());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ConvexArea convexArea0 = ConvexArea.full();
      LinecastPoint2D linecastPoint2D0 = convexArea0.linecastFirst((LineConvexSubset) null);
      assertNull(linecastPoint2D0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ArrayDeque<Vector2D> arrayDeque0 = new ArrayDeque<Vector2D>();
      Vector2D.Unit vector2D_Unit0 = Vector2D.Unit.MINUS_Y;
      Line line0 = new Line(vector2D_Unit0, 1234.0, (Precision.DoubleEquivalence) null);
      LineSpanningSubset lineSpanningSubset0 = new LineSpanningSubset(line0);
      LinePath linePath0 = LinePath.fromVertexLoop(arrayDeque0, (Precision.DoubleEquivalence) null);
      List<LinecastPoint2D> list0 = linePath0.linecast((LineConvexSubset) lineSpanningSubset0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      LineConvexSubset[] lineConvexSubsetArray0 = new LineConvexSubset[4];
      BoundarySource2D boundarySource2D0 = BoundarySource2D.of(lineConvexSubsetArray0);
      // Undeclared exception!
      try { 
        boundarySource2D0.linecast(lineConvexSubsetArray0[3]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.geometry.euclidean.twod.BoundarySourceLinecaster2D", e);
      }
  }
}
