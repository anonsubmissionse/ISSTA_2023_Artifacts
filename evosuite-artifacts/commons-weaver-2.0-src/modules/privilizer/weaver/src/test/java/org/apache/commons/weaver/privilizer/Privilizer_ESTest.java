/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 17:04:04 GMT 2022
 */

package org.apache.commons.weaver.privilizer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.weaver.model.WeaveEnvironment;
import org.apache.commons.weaver.privilizer.Privilizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.objectweb.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Privilizer_ESTest extends Privilizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        Privilizer.wrap((Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.weaver.privilizer.Privilizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Type type0 = Type.DOUBLE_TYPE;
      Type type1 = Privilizer.wrap(type0);
      assertEquals(10, type1.getSort());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Type type0 = Type.LONG_TYPE;
      Type type1 = Privilizer.wrap(type0);
      assertNotSame(type0, type1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Type type0 = Type.FLOAT_TYPE;
      Type type1 = Privilizer.wrap(type0);
      assertEquals(1, Type.BOOLEAN);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Type type0 = Type.INT_TYPE;
      Type type1 = Privilizer.wrap(type0);
      Type type2 = Privilizer.wrap(type1);
      assertEquals(1, Type.BOOLEAN);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Type type0 = Type.BYTE_TYPE;
      Type type1 = Privilizer.wrap(type0);
      assertEquals(8, Type.DOUBLE);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Type type0 = Type.CHAR_TYPE;
      Type type1 = Privilizer.wrap(type0);
      assertEquals(8, Type.DOUBLE);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Type type0 = Type.BOOLEAN_TYPE;
      Type type1 = Privilizer.wrap(type0);
      assertEquals(3, Type.BYTE);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Type type0 = Type.SHORT_TYPE;
      Type type1 = Privilizer.wrap(type0);
      assertEquals(0, Type.VOID);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Type type0 = Type.VOID_TYPE;
      Type type1 = Privilizer.wrap(type0);
      assertEquals(7, Type.LONG);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WeaveEnvironment weaveEnvironment0 = mock(WeaveEnvironment.class, new ViolatedAssumptionAnswer());
      Privilizer privilizer0 = null;
      try {
        privilizer0 = new Privilizer(weaveEnvironment0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.weaver.privilizer.Privilizer", e);
      }
  }
}
