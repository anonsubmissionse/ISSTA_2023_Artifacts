/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 17:02:04 GMT 2022
 */

package org.apache.commons.weaver.privilizer;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.weaver.privilizer.Policy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Policy_ESTest extends Policy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Policy[] policyArray0 = Policy.values();
      assertEquals(4, policyArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Policy policy0 = Policy.valueOf("ON_INIT");
      assertTrue(policy0.isConditional());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Policy policy0 = Policy.valueOf("ALWAYS");
      assertEquals(Policy.ALWAYS, policy0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Policy policy0 = Policy.parse("ALWAYS");
      assertFalse(policy0.isConditional());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Policy policy0 = Policy.defaultValue();
      assertEquals(Policy.DYNAMIC, policy0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Policy policy0 = Policy.NEVER;
      boolean boolean0 = policy0.isConditional();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Policy policy0 = Policy.ON_INIT;
      boolean boolean0 = policy0.isConditional();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Policy policy0 = Policy.parse("");
      boolean boolean0 = policy0.isConditional();
      assertTrue(boolean0);
  }
}
