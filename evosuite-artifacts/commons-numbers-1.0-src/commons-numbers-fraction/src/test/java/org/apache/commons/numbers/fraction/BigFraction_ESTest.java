/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 20:10:06 GMT 2022
 */

package org.apache.commons.numbers.fraction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.RoundingMode;
import org.apache.commons.numbers.fraction.BigFraction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BigFraction_ESTest extends BigFraction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from((-1.0));
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.add(100);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)99, bigFraction1.shortValue());
      assertEquals((byte)99, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction2 = BigFraction.of(bigInteger0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      RoundingMode roundingMode0 = RoundingMode.DOWN;
      BigFraction bigFraction3 = bigFraction0.ZERO.subtract(23);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((byte) (-23), bigFraction3.byteValue());
      assertEquals((short) (-23), bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigDecimal bigDecimal0 = bigFraction1.bigDecimalValue(roundingMode0);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)99, bigFraction1.shortValue());
      assertEquals((byte)99, bigFraction1.byteValue());
      assertEquals((byte)99, bigDecimal0.byteValue());
      assertEquals((short)99, bigDecimal0.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction4 = BigFraction.of((-9223372036854775808L));
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      
      int int0 = bigFraction3.getDenominatorAsInt();
      assertEquals(1, int0);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((byte) (-23), bigFraction3.byteValue());
      assertEquals((short) (-23), bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      
      BigInteger bigInteger1 = bigFraction1.getNumerator();
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)99, bigFraction1.shortValue());
      assertEquals((byte)99, bigFraction1.byteValue());
      assertEquals((byte)99, bigInteger1.byteValue());
      assertEquals((short)99, bigInteger1.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      BigInteger bigInteger2 = bigFraction1.getNumerator();
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)99, bigFraction1.shortValue());
      assertEquals((byte)99, bigFraction1.byteValue());
      assertEquals((short)99, bigInteger2.shortValue());
      assertEquals((byte)99, bigInteger2.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigInteger2.equals((Object)bigInteger0));
      assertNotNull(bigInteger2);
      
      String string0 = bigFraction0.toString();
      assertEquals("-1", string0);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertNotNull(string0);
      
      BigFraction bigFraction5 = BigFraction.of(100, (-1074));
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      RoundingMode roundingMode1 = RoundingMode.HALF_DOWN;
      BigDecimal bigDecimal1 = bigFraction5.ZERO.bigDecimalValue(roundingMode1);
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(roundingMode1, roundingMode0);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(roundingMode1.equals((Object)roundingMode0));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      
      BigFraction bigFraction6 = bigFraction4.multiply(bigInteger2);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)99, bigFraction1.shortValue());
      assertEquals((byte)99, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)99, bigInteger2.shortValue());
      assertEquals((byte)99, bigInteger2.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigInteger2.equals((Object)bigInteger0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      
      String string1 = bigFraction6.ZERO.toString();
      assertEquals("0", string1);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)99, bigFraction1.shortValue());
      assertEquals((byte)99, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)99, bigInteger2.shortValue());
      assertEquals((byte)99, bigInteger2.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(string1.equals((Object)string0));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigInteger2.equals((Object)bigInteger0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(string1);
      
      BigFraction bigFraction7 = BigFraction.parse("-1");
      assertEquals((short) (-1), bigFraction7.shortValue());
      assertEquals((byte) (-1), bigFraction7.byteValue());
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertTrue(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction7.add(bigInteger1);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction7.shortValue());
      assertEquals((byte) (-1), bigFraction7.byteValue());
      assertEquals((short)99, bigFraction1.shortValue());
      assertEquals((byte)99, bigFraction1.byteValue());
      assertEquals((short)98, bigFraction8.shortValue());
      assertEquals((byte)98, bigFraction8.byteValue());
      assertEquals((byte)99, bigInteger1.byteValue());
      assertEquals((short)99, bigInteger1.shortValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigInteger1, bigInteger0);
      assertSame(bigInteger1, bigInteger2);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertTrue(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = bigFraction7.ZERO.multiply((long) 100);
      assertEquals((short) (-1), bigFraction7.shortValue());
      assertEquals((byte) (-1), bigFraction7.byteValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction9);
      assertSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction7);
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertTrue(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertNotNull(bigFraction9);
      
      long long0 = bigFraction5.ONE.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      
      BigFraction bigFraction10 = bigFraction5.subtract(bigFraction3);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)22, bigFraction10.shortValue());
      assertEquals((byte)22, bigFraction10.byteValue());
      assertEquals((byte) (-23), bigFraction3.byteValue());
      assertEquals((short) (-23), bigFraction3.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction10);
      
      int int1 = bigFraction10.getNumeratorAsInt();
      assertEquals((-12301), int1);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)22, bigFraction10.shortValue());
      assertEquals((byte)22, bigFraction10.byteValue());
      assertEquals((byte) (-23), bigFraction3.byteValue());
      assertEquals((short) (-23), bigFraction3.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(int1 == int0);
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      
      BigFraction bigFraction11 = bigFraction10.ZERO.subtract(1);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)22, bigFraction10.shortValue());
      assertEquals((byte)22, bigFraction10.byteValue());
      assertEquals((byte) (-23), bigFraction3.byteValue());
      assertEquals((short) (-23), bigFraction3.shortValue());
      assertEquals((short) (-1), bigFraction11.shortValue());
      assertEquals((byte) (-1), bigFraction11.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertTrue(bigFraction11.equals((Object)bigFraction7));
      assertTrue(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction11);
      
      String string2 = bigFraction3.toString();
      assertEquals("-23", string2);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((byte) (-23), bigFraction3.byteValue());
      assertEquals((short) (-23), bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      
      BigFraction bigFraction12 = bigFraction5.divide(1L);
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertTrue(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction12);
      
      BigFraction bigFraction13 = bigFraction5.divide(bigInteger1);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)99, bigFraction1.shortValue());
      assertEquals((byte)99, bigFraction1.byteValue());
      assertEquals((byte)99, bigInteger1.byteValue());
      assertEquals((short)99, bigInteger1.shortValue());
      assertEquals((short)0, bigFraction13.shortValue());
      assertEquals((byte)0, bigFraction13.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigInteger1, bigInteger0);
      assertSame(bigInteger1, bigInteger2);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertTrue(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction13);
      
      BigFraction bigFraction14 = bigFraction12.reciprocal();
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte) (-10), bigFraction14.byteValue());
      assertEquals((short) (-10), bigFraction14.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction14);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction14);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction13));
      assertTrue(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertTrue(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction13));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction14);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-438L), (-438L));
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.ONE;
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = bigFraction0.getNumerator();
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short) (-1), bigInteger0.shortValue());
      assertEquals((byte) (-1), bigInteger0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(bigInteger0);
      
      long long0 = bigFraction0.getDenominatorAsLong();
      assertEquals((-1L), long0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      
      BigFraction bigFraction2 = BigFraction.ONE;
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      boolean boolean0 = bigFraction0.equals(bigFraction1);
      assertTrue(boolean0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      
      BigFraction bigFraction3 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short) (-1), bigInteger0.shortValue());
      assertEquals((byte) (-1), bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigInteger bigInteger1 = bigFraction1.getNumerator();
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigInteger1, bigInteger0);
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      long long1 = bigFraction1.getDenominatorAsLong();
      assertEquals(1L, long1);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(long1 == long0);
      
      RoundingMode roundingMode0 = RoundingMode.HALF_DOWN;
      BigDecimal bigDecimal0 = bigFraction1.bigDecimalValue(0, roundingMode0);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction4 = bigFraction0.multiply(bigInteger1);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      int int0 = bigFraction2.compareTo(bigFraction1);
      assertEquals(0, int0);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction3);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      
      long long2 = (-1486L);
      BigFraction bigFraction5 = BigFraction.of((-1486L), (-2124L));
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction5.ZERO.pow(2923);
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      
      BigInteger bigInteger2 = bigFraction0.getDenominator();
      assertEquals((byte) (-1), bigInteger2.byteValue());
      assertEquals((short) (-1), bigInteger2.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotSame(bigInteger2, bigInteger1);
      assertNotSame(bigInteger2, bigInteger0);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertFalse(bigInteger2.equals((Object)bigInteger1));
      assertTrue(bigInteger2.equals((Object)bigInteger0));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertNotNull(bigInteger2);
      
      // Undeclared exception!
      try { 
        BigFraction.from((-5824.0), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(4503599627370478L);
      assertEquals((byte) (-18), bigFraction0.byteValue());
      assertEquals((short) (-18), bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(4503599627370478L);
      assertEquals((short) (-18), bigFraction1.shortValue());
      assertEquals((byte) (-18), bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      float float0 = bigFraction1.floatValue();
      assertEquals(4.5035996E15F, float0, 0.01F);
      assertEquals((short) (-18), bigFraction1.shortValue());
      assertEquals((byte) (-18), bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      
      double double0 = 0.7527999999999793;
      // Undeclared exception!
      try { 
        BigFraction.parse("BLwCi%H!@@");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"B\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.add(1L);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigInteger bigInteger1 = bigInteger0.abs();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertSame(bigInteger1, bigInteger0);
      assertNotNull(bigInteger1);
      
      BigFraction bigFraction3 = bigFraction0.add(bigFraction1);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction1.ZERO.pow(1136);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.of(1136, 1136);
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertTrue(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue(roundingMode0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(bigDecimal0);
      
      String string0 = bigInteger0.toString();
      assertEquals("1", string0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotNull(string0);
      
      BigDecimal bigDecimal1 = bigFraction0.bigDecimalValue();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigDecimal1, bigDecimal0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(bigDecimal1);
      
      bigFraction0.hashCode();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      
      BigFraction bigFraction6 = bigFraction2.multiply(2147477079);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short) (-13138), bigFraction6.shortValue());
      assertEquals((byte) (-82), bigFraction6.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction6.ONE.divide(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short) (-13138), bigFraction6.shortValue());
      assertEquals((byte) (-82), bigFraction6.byteValue());
      assertEquals((byte)1, bigFraction7.byteValue());
      assertEquals((short)1, bigFraction7.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertTrue(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertTrue(bigFraction7.equals((Object)bigFraction1));
      assertTrue(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction6.ZERO.add(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short) (-13138), bigFraction6.shortValue());
      assertEquals((byte) (-82), bigFraction6.byteValue());
      assertEquals((short)1, bigFraction8.shortValue());
      assertEquals((byte)1, bigFraction8.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertTrue(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertTrue(bigFraction8.equals((Object)bigFraction7));
      assertTrue(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = bigFraction3.one();
      assertEquals((short)1, bigFraction9.shortValue());
      assertEquals((byte)1, bigFraction9.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertTrue(bigFraction9.equals((Object)bigFraction0));
      assertTrue(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertTrue(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertTrue(bigFraction9.equals((Object)bigFraction7));
      assertTrue(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = BigFraction.from((double) 1136);
      assertEquals((byte)112, bigFraction10.byteValue());
      assertEquals((short)1136, bigFraction10.shortValue());
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction8);
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertNotNull(bigFraction10);
      
      BigFraction bigFraction11 = bigFraction3.multiply(1L);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction11.byteValue());
      assertEquals((short)2, bigFraction11.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertTrue(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertTrue(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertNotNull(bigFraction11);
      
      long long0 = bigFraction11.ONE.longValue();
      assertEquals(1L, long0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction11.byteValue());
      assertEquals((short)2, bigFraction11.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertTrue(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertTrue(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertTrue(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertTrue(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      
      BigFraction bigFraction12 = BigFraction.of(255L, 1L);
      assertEquals((byte) (-1), bigFraction12.byteValue());
      assertEquals((short)255, bigFraction12.shortValue());
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction9);
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertNotNull(bigFraction12);
      
      BigFraction bigFraction13 = bigFraction12.reciprocal();
      assertEquals((byte) (-1), bigFraction12.byteValue());
      assertEquals((short)255, bigFraction12.shortValue());
      assertEquals((short)0, bigFraction13.shortValue());
      assertEquals((byte)0, bigFraction13.byteValue());
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction6);
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertNotNull(bigFraction13);
      
      BigFraction bigFraction14 = bigFraction8.multiply(1039L);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short)1039, bigFraction14.shortValue());
      assertEquals((byte)15, bigFraction14.byteValue());
      assertEquals((short) (-13138), bigFraction6.shortValue());
      assertEquals((byte) (-82), bigFraction6.byteValue());
      assertEquals((short)1, bigFraction8.shortValue());
      assertEquals((byte)1, bigFraction8.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction6, bigFraction13);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction12);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction14);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertTrue(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction6.equals((Object)bigFraction13));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction12));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertTrue(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertTrue(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertTrue(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertTrue(bigFraction8.equals((Object)bigFraction9));
      assertNotNull(bigFraction14);
      
      Random.setNextRandom(2147477079);
      String string1 = bigFraction7.toString();
      assertEquals("1", string1);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short) (-13138), bigFraction6.shortValue());
      assertEquals((byte) (-82), bigFraction6.byteValue());
      assertEquals((byte)1, bigFraction7.byteValue());
      assertEquals((short)1, bigFraction7.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction6, bigFraction13);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction12);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction14);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction14);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction10);
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertTrue(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertTrue(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertTrue(string1.equals((Object)string0));
      assertFalse(bigFraction6.equals((Object)bigFraction13));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction12));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction14));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction14));
      assertTrue(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertTrue(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertTrue(bigFraction7.equals((Object)bigFraction1));
      assertTrue(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertTrue(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(string1);
      
      BigFraction bigFraction15 = BigFraction.of(1050);
      assertEquals((short)1050, bigFraction15.shortValue());
      assertEquals((byte)26, bigFraction15.byteValue());
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction11);
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertNotNull(bigFraction15);
      
      bigFraction15.ZERO.hashCode();
      assertEquals((short)1050, bigFraction15.shortValue());
      assertEquals((byte)26, bigFraction15.byteValue());
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction11);
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      
      BigFraction bigFraction16 = BigFraction.of((-128));
      assertEquals((short) (-128), bigFraction16.shortValue());
      assertEquals((byte) (-128), bigFraction16.byteValue());
      assertNotSame(bigFraction16, bigFraction7);
      assertNotSame(bigFraction16, bigFraction14);
      assertNotSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction16, bigFraction5);
      assertNotSame(bigFraction16, bigFraction11);
      assertNotSame(bigFraction16, bigFraction15);
      assertNotSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigFraction16, bigFraction1);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction4);
      assertNotSame(bigFraction16, bigFraction2);
      assertNotSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction13);
      assertNotSame(bigFraction16, bigFraction9);
      assertFalse(bigFraction16.equals((Object)bigFraction7));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction8));
      assertFalse(bigFraction16.equals((Object)bigFraction10));
      assertFalse(bigFraction16.equals((Object)bigFraction5));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertFalse(bigFraction16.equals((Object)bigFraction0));
      assertFalse(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction6));
      assertFalse(bigFraction16.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction12));
      assertFalse(bigFraction16.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction9));
      assertNotNull(bigFraction16);
      
      BigFraction bigFraction17 = BigFraction.of(805, 2003);
      assertEquals((byte)0, bigFraction17.byteValue());
      assertEquals((short)0, bigFraction17.shortValue());
      assertNotSame(bigFraction17, bigFraction6);
      assertNotSame(bigFraction17, bigFraction16);
      assertNotSame(bigFraction17, bigFraction1);
      assertNotSame(bigFraction17, bigFraction9);
      assertNotSame(bigFraction17, bigFraction3);
      assertNotSame(bigFraction17, bigFraction13);
      assertNotSame(bigFraction17, bigFraction0);
      assertNotSame(bigFraction17, bigFraction10);
      assertNotSame(bigFraction17, bigFraction5);
      assertNotSame(bigFraction17, bigFraction15);
      assertNotSame(bigFraction17, bigFraction11);
      assertNotSame(bigFraction17, bigFraction7);
      assertNotSame(bigFraction17, bigFraction12);
      assertNotSame(bigFraction17, bigFraction2);
      assertNotSame(bigFraction17, bigFraction4);
      assertNotSame(bigFraction17, bigFraction8);
      assertNotSame(bigFraction17, bigFraction14);
      assertFalse(bigFraction17.equals((Object)bigFraction6));
      assertFalse(bigFraction17.equals((Object)bigFraction16));
      assertFalse(bigFraction17.equals((Object)bigFraction1));
      assertFalse(bigFraction17.equals((Object)bigFraction9));
      assertFalse(bigFraction17.equals((Object)bigFraction3));
      assertFalse(bigFraction17.equals((Object)bigFraction13));
      assertFalse(bigFraction17.equals((Object)bigFraction0));
      assertFalse(bigFraction17.equals((Object)bigFraction10));
      assertFalse(bigFraction17.equals((Object)bigFraction5));
      assertFalse(bigFraction17.equals((Object)bigFraction15));
      assertFalse(bigFraction17.equals((Object)bigFraction11));
      assertFalse(bigFraction17.equals((Object)bigFraction7));
      assertFalse(bigFraction17.equals((Object)bigFraction12));
      assertFalse(bigFraction17.equals((Object)bigFraction2));
      assertFalse(bigFraction17.equals((Object)bigFraction4));
      assertFalse(bigFraction17.equals((Object)bigFraction8));
      assertFalse(bigFraction17.equals((Object)bigFraction14));
      assertNotNull(bigFraction17);
      
      BigFraction bigFraction18 = BigFraction.parse("1");
      assertEquals((byte)1, bigFraction18.byteValue());
      assertEquals((short)1, bigFraction18.shortValue());
      assertNotSame(bigFraction18, bigFraction8);
      assertNotSame(bigFraction18, bigFraction7);
      assertNotSame(bigFraction18, bigFraction10);
      assertNotSame(bigFraction18, bigFraction14);
      assertNotSame(bigFraction18, bigFraction1);
      assertNotSame(bigFraction18, bigFraction6);
      assertNotSame(bigFraction18, bigFraction12);
      assertNotSame(bigFraction18, bigFraction0);
      assertNotSame(bigFraction18, bigFraction13);
      assertNotSame(bigFraction18, bigFraction2);
      assertNotSame(bigFraction18, bigFraction4);
      assertNotSame(bigFraction18, bigFraction17);
      assertNotSame(bigFraction18, bigFraction9);
      assertNotSame(bigFraction18, bigFraction3);
      assertNotSame(bigFraction18, bigFraction16);
      assertNotSame(bigFraction18, bigFraction15);
      assertNotSame(bigFraction18, bigFraction11);
      assertNotSame(bigFraction18, bigFraction5);
      assertTrue(bigFraction18.equals((Object)bigFraction9));
      assertTrue(bigFraction18.equals((Object)bigFraction1));
      assertTrue(bigFraction18.equals((Object)bigFraction0));
      assertFalse(bigFraction18.equals((Object)bigFraction10));
      assertFalse(bigFraction18.equals((Object)bigFraction14));
      assertTrue(bigFraction18.equals((Object)bigFraction8));
      assertFalse(bigFraction18.equals((Object)bigFraction6));
      assertFalse(bigFraction18.equals((Object)bigFraction12));
      assertFalse(bigFraction18.equals((Object)bigFraction13));
      assertTrue(bigFraction18.equals((Object)bigFraction7));
      assertFalse(bigFraction18.equals((Object)bigFraction2));
      assertFalse(bigFraction18.equals((Object)bigFraction4));
      assertFalse(bigFraction18.equals((Object)bigFraction17));
      assertFalse(bigFraction18.equals((Object)bigFraction3));
      assertTrue(bigFraction18.equals((Object)bigFraction5));
      assertFalse(bigFraction18.equals((Object)bigFraction16));
      assertFalse(bigFraction18.equals((Object)bigFraction15));
      assertFalse(bigFraction18.equals((Object)bigFraction11));
      assertNotNull(bigFraction18);
      
      BigFraction bigFraction19 = BigFraction.of((-3726), (-3726));
      assertEquals((short)1, bigFraction19.shortValue());
      assertEquals((byte)1, bigFraction19.byteValue());
      assertNotSame(bigFraction19, bigFraction10);
      assertNotSame(bigFraction19, bigFraction16);
      assertNotSame(bigFraction19, bigFraction5);
      assertNotSame(bigFraction19, bigFraction11);
      assertNotSame(bigFraction19, bigFraction15);
      assertNotSame(bigFraction19, bigFraction18);
      assertNotSame(bigFraction19, bigFraction14);
      assertNotSame(bigFraction19, bigFraction7);
      assertNotSame(bigFraction19, bigFraction8);
      assertNotSame(bigFraction19, bigFraction2);
      assertNotSame(bigFraction19, bigFraction0);
      assertNotSame(bigFraction19, bigFraction3);
      assertNotSame(bigFraction19, bigFraction1);
      assertNotSame(bigFraction19, bigFraction6);
      assertNotSame(bigFraction19, bigFraction17);
      assertNotSame(bigFraction19, bigFraction4);
      assertNotSame(bigFraction19, bigFraction9);
      assertNotSame(bigFraction19, bigFraction12);
      assertNotSame(bigFraction19, bigFraction13);
      assertFalse(bigFraction19.equals((Object)bigFraction10));
      assertTrue(bigFraction19.equals((Object)bigFraction9));
      assertTrue(bigFraction19.equals((Object)bigFraction1));
      assertTrue(bigFraction19.equals((Object)bigFraction0));
      assertTrue(bigFraction19.equals((Object)bigFraction18));
      assertTrue(bigFraction19.equals((Object)bigFraction5));
      assertFalse(bigFraction19.equals((Object)bigFraction16));
      assertFalse(bigFraction19.equals((Object)bigFraction11));
      assertTrue(bigFraction19.equals((Object)bigFraction7));
      assertFalse(bigFraction19.equals((Object)bigFraction15));
      assertFalse(bigFraction19.equals((Object)bigFraction14));
      assertFalse(bigFraction19.equals((Object)bigFraction2));
      assertFalse(bigFraction19.equals((Object)bigFraction3));
      assertFalse(bigFraction19.equals((Object)bigFraction6));
      assertFalse(bigFraction19.equals((Object)bigFraction17));
      assertFalse(bigFraction19.equals((Object)bigFraction4));
      assertTrue(bigFraction19.equals((Object)bigFraction8));
      assertFalse(bigFraction19.equals((Object)bigFraction12));
      assertFalse(bigFraction19.equals((Object)bigFraction13));
      assertNotNull(bigFraction19);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.from(0.0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(2);
      assertEquals((short)2, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      // Undeclared exception!
      try { 
        BigFraction.from(4167.891, 0.0, 2);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Unable to convert 4167.891 to fraction after 2 iterations
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(0.0, 1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = BigFraction.from((double) 1);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      
      BigFraction bigFraction2 = bigFraction0.ONE.multiply(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      
      float float0 = bigFraction2.floatValue();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      
      BigFraction bigFraction3 = bigFraction1.ZERO.add((-2305));
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte) (-1), bigFraction3.byteValue());
      assertEquals((short) (-2305), bigFraction3.shortValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      
      BigFraction bigFraction4 = bigFraction1.ZERO.abs();
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      
      bigFraction0.hashCode();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      
      BigFraction bigFraction5 = bigFraction2.ZERO.subtract(1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      
      int int0 = bigFraction5.ONE.intValue();
      assertEquals(1, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      
      BigFraction bigFraction6 = bigFraction5.negate();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertTrue(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      
      BigDecimal bigDecimal0 = bigFraction1.bigDecimalValue();
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      
      double double0 = bigFraction2.doubleValue();
      assertEquals(1.0, double0, 0.01);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      
      BigFraction bigFraction7 = bigFraction0.multiply(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      
      BigFraction bigFraction8 = bigFraction4.add(bigFraction7);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction8);
      assertSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertSame(bigFraction8, bigFraction7);
      assertSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction1);
      assertSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      
      BigFraction bigFraction9 = bigFraction7.divide((-3035));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction9);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction9, bigFraction1);
      assertSame(bigFraction9, bigFraction0);
      assertSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction6);
      assertSame(bigFraction9, bigFraction7);
      assertSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      
      int int1 = bigFraction0.getDenominatorAsInt();
      assertEquals(1, int1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction9);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertTrue(int1 == int0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      
      long long0 = bigFraction7.ZERO.longValue();
      assertEquals(0L, long0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction9);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      
      BigFraction bigFraction10 = bigFraction7.multiply(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction10.shortValue());
      assertEquals((byte)0, bigFraction10.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction9);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction10);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction6);
      assertSame(bigFraction10, bigFraction7);
      assertSame(bigFraction10, bigFraction4);
      assertSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction1);
      assertSame(bigFraction10, bigFraction0);
      assertSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction10);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      
      BigFraction bigFraction11 = bigFraction8.ONE.subtract(bigFraction5);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte)2, bigFraction11.byteValue());
      assertEquals((short)2, bigFraction11.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction9);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction10);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction10);
      assertSame(bigFraction4, bigFraction8);
      assertSame(bigFraction4, bigFraction7);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction11);
      assertSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertSame(bigFraction8, bigFraction7);
      assertSame(bigFraction8, bigFraction4);
      assertSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction1);
      assertSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertSame(bigFraction8, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      
      BigFraction bigFraction12 = bigFraction4.divide(bigInteger0);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction6);
      assertSame(bigFraction12, bigFraction10);
      assertSame(bigFraction12, bigFraction4);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction2);
      assertSame(bigFraction12, bigFraction9);
      assertSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction10);
      assertSame(bigFraction4, bigFraction8);
      assertSame(bigFraction4, bigFraction7);
      assertSame(bigFraction4, bigFraction12);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      
      boolean boolean0 = bigFraction12.equals(bigFraction4);
      assertTrue(boolean0);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction6);
      assertSame(bigFraction12, bigFraction10);
      assertSame(bigFraction12, bigFraction4);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction2);
      assertSame(bigFraction12, bigFraction9);
      assertSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction10);
      assertSame(bigFraction4, bigFraction8);
      assertSame(bigFraction4, bigFraction7);
      assertSame(bigFraction4, bigFraction12);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      
      BigFraction bigFraction13 = bigFraction12.subtract(1);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short) (-1), bigFraction13.shortValue());
      assertEquals((byte) (-1), bigFraction13.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertSame(bigFraction12, bigFraction4);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction1);
      assertSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction2);
      assertSame(bigFraction12, bigFraction9);
      assertSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction6);
      assertSame(bigFraction4, bigFraction10);
      assertSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction13);
      assertSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction7);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction4);
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertTrue(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      
      BigFraction bigFraction14 = bigFraction13.ONE.multiply(1);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short) (-1), bigFraction13.shortValue());
      assertEquals((byte) (-1), bigFraction13.byteValue());
      assertEquals((short)1, bigFraction14.shortValue());
      assertEquals((byte)1, bigFraction14.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertSame(bigFraction12, bigFraction4);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction1);
      assertSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction2);
      assertSame(bigFraction12, bigFraction9);
      assertSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction14);
      assertNotSame(bigFraction12, bigFraction6);
      assertSame(bigFraction4, bigFraction10);
      assertSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction13);
      assertSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction7);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction6);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction13, bigFraction14);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction3);
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction13));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertTrue(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertTrue(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertTrue(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertTrue(bigFraction14.equals((Object)bigFraction1));
      
      BigFraction bigFraction15 = BigFraction.from((double) 1, (double) 1, 1);
      assertEquals((byte)1, bigFraction15.byteValue());
      assertEquals((short)1, bigFraction15.shortValue());
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction8);
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertTrue(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertTrue(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertTrue(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertTrue(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      
      BigFraction bigFraction16 = bigFraction12.ONE.add(bigFraction13);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short) (-1), bigFraction13.shortValue());
      assertEquals((byte) (-1), bigFraction13.byteValue());
      assertEquals((short)0, bigFraction16.shortValue());
      assertEquals((byte)0, bigFraction16.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertSame(bigFraction12, bigFraction4);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction15);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction1);
      assertSame(bigFraction12, bigFraction16);
      assertSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction2);
      assertSame(bigFraction12, bigFraction9);
      assertSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction14);
      assertNotSame(bigFraction12, bigFraction6);
      assertSame(bigFraction4, bigFraction10);
      assertSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction13);
      assertSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction15);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction16);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction7);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction6);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction13, bigFraction14);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction15);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction16);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction4);
      assertSame(bigFraction16, bigFraction4);
      assertSame(bigFraction16, bigFraction7);
      assertNotSame(bigFraction16, bigFraction11);
      assertSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction16, bigFraction15);
      assertNotSame(bigFraction16, bigFraction5);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigFraction16, bigFraction1);
      assertSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction16, bigFraction13);
      assertSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction2);
      assertSame(bigFraction16, bigFraction9);
      assertSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction14);
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction13));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction15));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction14));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction15));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertTrue(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction14));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction15));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertFalse(bigFraction16.equals((Object)bigFraction5));
      assertFalse(bigFraction16.equals((Object)bigFraction6));
      assertFalse(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      
      BigFraction bigFraction17 = bigFraction13.multiply(9218868437227405312L);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short) (-1), bigFraction13.shortValue());
      assertEquals((byte) (-1), bigFraction13.byteValue());
      assertEquals((short)0, bigFraction17.shortValue());
      assertEquals((byte)0, bigFraction17.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertSame(bigFraction12, bigFraction4);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction15);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction1);
      assertSame(bigFraction12, bigFraction16);
      assertSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction2);
      assertSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction17);
      assertSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction14);
      assertNotSame(bigFraction12, bigFraction6);
      assertSame(bigFraction4, bigFraction10);
      assertSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction13);
      assertSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction15);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction16);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction7);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction6);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction17);
      assertNotSame(bigFraction13, bigFraction14);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction15);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction16);
      assertNotSame(bigFraction13, bigFraction17);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction17, bigFraction6);
      assertNotSame(bigFraction17, bigFraction5);
      assertNotSame(bigFraction17, bigFraction3);
      assertNotSame(bigFraction17, bigFraction2);
      assertNotSame(bigFraction17, bigFraction14);
      assertNotSame(bigFraction17, bigFraction12);
      assertNotSame(bigFraction17, bigFraction10);
      assertNotSame(bigFraction17, bigFraction13);
      assertNotSame(bigFraction17, bigFraction4);
      assertNotSame(bigFraction17, bigFraction8);
      assertNotSame(bigFraction17, bigFraction0);
      assertNotSame(bigFraction17, bigFraction16);
      assertNotSame(bigFraction17, bigFraction7);
      assertNotSame(bigFraction17, bigFraction1);
      assertNotSame(bigFraction17, bigFraction11);
      assertNotSame(bigFraction17, bigFraction15);
      assertNotSame(bigFraction17, bigFraction9);
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction13));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction15));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction14));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction15));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertTrue(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction14));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction15));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction16));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction17.equals((Object)bigFraction6));
      assertFalse(bigFraction17.equals((Object)bigFraction5));
      assertFalse(bigFraction17.equals((Object)bigFraction3));
      assertFalse(bigFraction17.equals((Object)bigFraction2));
      assertFalse(bigFraction17.equals((Object)bigFraction14));
      assertFalse(bigFraction17.equals((Object)bigFraction12));
      assertFalse(bigFraction17.equals((Object)bigFraction10));
      assertFalse(bigFraction17.equals((Object)bigFraction13));
      assertFalse(bigFraction17.equals((Object)bigFraction4));
      assertFalse(bigFraction17.equals((Object)bigFraction8));
      assertFalse(bigFraction17.equals((Object)bigFraction0));
      assertFalse(bigFraction17.equals((Object)bigFraction16));
      assertFalse(bigFraction17.equals((Object)bigFraction7));
      assertFalse(bigFraction17.equals((Object)bigFraction1));
      assertFalse(bigFraction17.equals((Object)bigFraction11));
      assertFalse(bigFraction17.equals((Object)bigFraction15));
      assertFalse(bigFraction17.equals((Object)bigFraction9));
      
      BigFraction bigFraction18 = bigFraction3.divide(bigFraction2);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte) (-1), bigFraction3.byteValue());
      assertEquals((short) (-2305), bigFraction3.shortValue());
      assertEquals((byte) (-1), bigFraction18.byteValue());
      assertEquals((short) (-2305), bigFraction18.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction9);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction13);
      assertSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction15);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction18);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction17);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction16);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction18);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction15);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction17);
      assertNotSame(bigFraction18, bigFraction0);
      assertNotSame(bigFraction18, bigFraction11);
      assertNotSame(bigFraction18, bigFraction8);
      assertNotSame(bigFraction18, bigFraction17);
      assertNotSame(bigFraction18, bigFraction10);
      assertNotSame(bigFraction18, bigFraction16);
      assertNotSame(bigFraction18, bigFraction12);
      assertNotSame(bigFraction18, bigFraction7);
      assertNotSame(bigFraction18, bigFraction13);
      assertNotSame(bigFraction18, bigFraction4);
      assertNotSame(bigFraction18, bigFraction2);
      assertNotSame(bigFraction18, bigFraction14);
      assertNotSame(bigFraction18, bigFraction15);
      assertNotSame(bigFraction18, bigFraction5);
      assertNotSame(bigFraction18, bigFraction6);
      assertNotSame(bigFraction18, bigFraction1);
      assertNotSame(bigFraction18, bigFraction9);
      assertNotSame(bigFraction18, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertTrue(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction16));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction17));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction16));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction15));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction17));
      assertFalse(bigFraction18.equals((Object)bigFraction0));
      assertFalse(bigFraction18.equals((Object)bigFraction11));
      assertFalse(bigFraction18.equals((Object)bigFraction8));
      assertFalse(bigFraction18.equals((Object)bigFraction17));
      assertFalse(bigFraction18.equals((Object)bigFraction10));
      assertFalse(bigFraction18.equals((Object)bigFraction16));
      assertFalse(bigFraction18.equals((Object)bigFraction12));
      assertFalse(bigFraction18.equals((Object)bigFraction7));
      assertFalse(bigFraction18.equals((Object)bigFraction13));
      assertFalse(bigFraction18.equals((Object)bigFraction4));
      assertFalse(bigFraction18.equals((Object)bigFraction2));
      assertFalse(bigFraction18.equals((Object)bigFraction14));
      assertFalse(bigFraction18.equals((Object)bigFraction15));
      assertFalse(bigFraction18.equals((Object)bigFraction5));
      assertFalse(bigFraction18.equals((Object)bigFraction6));
      assertTrue(bigFraction18.equals((Object)bigFraction3));
      assertFalse(bigFraction18.equals((Object)bigFraction1));
      assertFalse(bigFraction18.equals((Object)bigFraction9));
      
      double double1 = bigFraction18.doubleValue();
      assertEquals((-2305.0), double1, 0.01);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte) (-1), bigFraction3.byteValue());
      assertEquals((short) (-2305), bigFraction3.shortValue());
      assertEquals((byte) (-1), bigFraction18.byteValue());
      assertEquals((short) (-2305), bigFraction18.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction9);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction13);
      assertSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction15);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction18);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction17);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction16);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction18);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction15);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction17);
      assertNotSame(bigFraction18, bigFraction0);
      assertNotSame(bigFraction18, bigFraction11);
      assertNotSame(bigFraction18, bigFraction8);
      assertNotSame(bigFraction18, bigFraction17);
      assertNotSame(bigFraction18, bigFraction10);
      assertNotSame(bigFraction18, bigFraction16);
      assertNotSame(bigFraction18, bigFraction12);
      assertNotSame(bigFraction18, bigFraction7);
      assertNotSame(bigFraction18, bigFraction13);
      assertNotSame(bigFraction18, bigFraction4);
      assertNotSame(bigFraction18, bigFraction2);
      assertNotSame(bigFraction18, bigFraction14);
      assertNotSame(bigFraction18, bigFraction15);
      assertNotSame(bigFraction18, bigFraction5);
      assertNotSame(bigFraction18, bigFraction6);
      assertNotSame(bigFraction18, bigFraction1);
      assertNotSame(bigFraction18, bigFraction9);
      assertNotSame(bigFraction18, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction18));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction18));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction18));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertTrue(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction16));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction17));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertTrue(bigFraction3.equals((Object)bigFraction18));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction16));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction15));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction17));
      assertFalse(bigFraction18.equals((Object)bigFraction0));
      assertFalse(bigFraction18.equals((Object)bigFraction11));
      assertFalse(bigFraction18.equals((Object)bigFraction8));
      assertFalse(bigFraction18.equals((Object)bigFraction17));
      assertFalse(bigFraction18.equals((Object)bigFraction10));
      assertFalse(bigFraction18.equals((Object)bigFraction16));
      assertFalse(bigFraction18.equals((Object)bigFraction12));
      assertFalse(bigFraction18.equals((Object)bigFraction7));
      assertFalse(bigFraction18.equals((Object)bigFraction13));
      assertFalse(bigFraction18.equals((Object)bigFraction4));
      assertFalse(bigFraction18.equals((Object)bigFraction2));
      assertFalse(bigFraction18.equals((Object)bigFraction14));
      assertFalse(bigFraction18.equals((Object)bigFraction15));
      assertFalse(bigFraction18.equals((Object)bigFraction5));
      assertFalse(bigFraction18.equals((Object)bigFraction6));
      assertTrue(bigFraction18.equals((Object)bigFraction3));
      assertFalse(bigFraction18.equals((Object)bigFraction1));
      assertFalse(bigFraction18.equals((Object)bigFraction9));
      assertNotEquals(double1, double0, 0.01);
      
      BigFraction bigFraction19 = bigFraction7.divide(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction19.byteValue());
      assertEquals((short)0, bigFraction19.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertSame(bigFraction0, bigFraction19);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction9);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction13);
      assertSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction15);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction19);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction19);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction14);
      assertSame(bigFraction7, bigFraction9);
      assertSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction17);
      assertNotSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction15);
      assertNotSame(bigFraction7, bigFraction18);
      assertSame(bigFraction7, bigFraction16);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction10);
      assertSame(bigFraction19, bigFraction8);
      assertNotSame(bigFraction19, bigFraction17);
      assertNotSame(bigFraction19, bigFraction18);
      assertNotSame(bigFraction19, bigFraction11);
      assertSame(bigFraction19, bigFraction16);
      assertNotSame(bigFraction19, bigFraction13);
      assertSame(bigFraction19, bigFraction0);
      assertSame(bigFraction19, bigFraction10);
      assertSame(bigFraction19, bigFraction4);
      assertSame(bigFraction19, bigFraction12);
      assertSame(bigFraction19, bigFraction7);
      assertNotSame(bigFraction19, bigFraction15);
      assertNotSame(bigFraction19, bigFraction3);
      assertNotSame(bigFraction19, bigFraction5);
      assertNotSame(bigFraction19, bigFraction1);
      assertNotSame(bigFraction19, bigFraction14);
      assertNotSame(bigFraction19, bigFraction6);
      assertNotSame(bigFraction19, bigFraction2);
      assertSame(bigFraction19, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction18));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction18));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction14));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction15));
      assertFalse(bigFraction7.equals((Object)bigFraction17));
      assertFalse(bigFraction7.equals((Object)bigFraction18));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction19.equals((Object)bigFraction17));
      assertFalse(bigFraction19.equals((Object)bigFraction18));
      assertFalse(bigFraction19.equals((Object)bigFraction11));
      assertFalse(bigFraction19.equals((Object)bigFraction15));
      assertFalse(bigFraction19.equals((Object)bigFraction3));
      assertFalse(bigFraction19.equals((Object)bigFraction13));
      assertFalse(bigFraction19.equals((Object)bigFraction5));
      assertFalse(bigFraction19.equals((Object)bigFraction1));
      assertFalse(bigFraction19.equals((Object)bigFraction14));
      assertFalse(bigFraction19.equals((Object)bigFraction6));
      assertFalse(bigFraction19.equals((Object)bigFraction2));
      
      boolean boolean1 = bigFraction19.equals((Object) null);
      assertFalse(boolean1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction19.byteValue());
      assertEquals((short)0, bigFraction19.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertSame(bigFraction0, bigFraction19);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction9);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction13);
      assertSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction15);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction19);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction19);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction14);
      assertSame(bigFraction7, bigFraction9);
      assertSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction17);
      assertNotSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction15);
      assertNotSame(bigFraction7, bigFraction18);
      assertSame(bigFraction7, bigFraction16);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction10);
      assertSame(bigFraction19, bigFraction8);
      assertNotSame(bigFraction19, bigFraction17);
      assertNotSame(bigFraction19, bigFraction18);
      assertNotSame(bigFraction19, bigFraction11);
      assertSame(bigFraction19, bigFraction16);
      assertNotSame(bigFraction19, bigFraction13);
      assertSame(bigFraction19, bigFraction0);
      assertSame(bigFraction19, bigFraction10);
      assertSame(bigFraction19, bigFraction4);
      assertSame(bigFraction19, bigFraction12);
      assertSame(bigFraction19, bigFraction7);
      assertNotSame(bigFraction19, bigFraction15);
      assertNotSame(bigFraction19, bigFraction3);
      assertNotSame(bigFraction19, bigFraction5);
      assertNotSame(bigFraction19, bigFraction1);
      assertNotSame(bigFraction19, bigFraction14);
      assertNotSame(bigFraction19, bigFraction6);
      assertNotSame(bigFraction19, bigFraction2);
      assertSame(bigFraction19, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction18));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction19));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      
      int int2 = bigFraction6.getDenominatorAsInt();
      assertEquals(1, int2);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertSame(bigFraction0, bigFraction19);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction9);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction13);
      assertSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction15);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction19);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction18);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction19);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction17);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction5, bigFraction15);
      assertNotSame(bigFraction5, bigFraction19);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction14);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction17);
      assertNotSame(bigFraction5, bigFraction18);
      assertNotSame(bigFraction5, bigFraction16);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction16);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction18);
      assertNotSame(bigFraction6, bigFraction12);
      assertNotSame(bigFraction6, bigFraction19);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction13);
      assertNotSame(bigFraction6, bigFraction15);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction14);
      assertNotSame(bigFraction6, bigFraction17);
      
      float float1 = bigFraction8.floatValue();
      assertEquals(0.0F, float1, 0.01F);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertSame(bigFraction0, bigFraction19);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction9);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction13);
      assertSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction15);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction19);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertSame(bigFraction4, bigFraction10);
      assertSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction13);
      assertSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction15);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction16);
      assertNotSame(bigFraction4, bigFraction18);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction7);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction6);
      assertSame(bigFraction4, bigFraction19);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction17);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction19);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction14);
      assertSame(bigFraction7, bigFraction9);
      assertSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction17);
      assertNotSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction15);
      assertNotSame(bigFraction7, bigFraction18);
      assertSame(bigFraction7, bigFraction16);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction10);
      assertSame(bigFraction8, bigFraction7);
      assertSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction1);
      assertSame(bigFraction8, bigFraction16);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction18);
      assertSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction15);
      assertSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction14);
      assertSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction17);
      assertSame(bigFraction8, bigFraction19);
      assertNotSame(bigFraction8, bigFraction2);
      assertSame(bigFraction8, bigFraction9);
      
      BigFraction bigFraction20 = bigFraction17.multiply(bigFraction13);
      assertEquals((byte)0, bigFraction20.byteValue());
      assertEquals((short)0, bigFraction20.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short) (-1), bigFraction13.shortValue());
      assertEquals((byte) (-1), bigFraction13.byteValue());
      assertEquals((short)0, bigFraction17.shortValue());
      assertEquals((byte)0, bigFraction17.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction20, bigFraction12);
      assertNotSame(bigFraction20, bigFraction13);
      assertNotSame(bigFraction20, bigFraction9);
      assertNotSame(bigFraction20, bigFraction3);
      assertNotSame(bigFraction20, bigFraction0);
      assertNotSame(bigFraction20, bigFraction14);
      assertNotSame(bigFraction20, bigFraction15);
      assertNotSame(bigFraction20, bigFraction6);
      assertNotSame(bigFraction20, bigFraction19);
      assertNotSame(bigFraction20, bigFraction17);
      assertNotSame(bigFraction20, bigFraction2);
      assertNotSame(bigFraction20, bigFraction1);
      assertNotSame(bigFraction20, bigFraction7);
      assertNotSame(bigFraction20, bigFraction4);
      assertNotSame(bigFraction20, bigFraction5);
      assertNotSame(bigFraction20, bigFraction11);
      assertNotSame(bigFraction20, bigFraction8);
      assertNotSame(bigFraction20, bigFraction10);
      assertNotSame(bigFraction20, bigFraction18);
      assertNotSame(bigFraction20, bigFraction16);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction19);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction20);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction12, bigFraction20);
      assertSame(bigFraction12, bigFraction4);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction18);
      assertNotSame(bigFraction12, bigFraction15);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction1);
      assertSame(bigFraction12, bigFraction16);
      assertSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction2);
      assertSame(bigFraction12, bigFraction19);
      assertSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction17);
      assertSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction14);
      assertNotSame(bigFraction12, bigFraction6);
      assertSame(bigFraction4, bigFraction10);
      assertSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction13);
      assertSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction15);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction16);
      assertNotSame(bigFraction4, bigFraction18);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction20);
      assertSame(bigFraction4, bigFraction7);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction6);
      assertSame(bigFraction4, bigFraction19);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction17);
      assertNotSame(bigFraction13, bigFraction14);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction19);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction20);
      assertNotSame(bigFraction13, bigFraction15);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction18);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction16);
      assertNotSame(bigFraction13, bigFraction17);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction17, bigFraction6);
      assertNotSame(bigFraction17, bigFraction5);
      assertNotSame(bigFraction17, bigFraction3);
      assertNotSame(bigFraction17, bigFraction2);
      assertNotSame(bigFraction17, bigFraction14);
      assertNotSame(bigFraction17, bigFraction12);
      assertNotSame(bigFraction17, bigFraction10);
      assertNotSame(bigFraction17, bigFraction13);
      assertNotSame(bigFraction17, bigFraction4);
      assertNotSame(bigFraction17, bigFraction8);
      assertNotSame(bigFraction17, bigFraction20);
      assertNotSame(bigFraction17, bigFraction0);
      assertNotSame(bigFraction17, bigFraction16);
      assertNotSame(bigFraction17, bigFraction7);
      assertNotSame(bigFraction17, bigFraction1);
      assertNotSame(bigFraction17, bigFraction11);
      assertNotSame(bigFraction17, bigFraction18);
      assertNotSame(bigFraction17, bigFraction15);
      assertNotSame(bigFraction17, bigFraction19);
      assertNotSame(bigFraction17, bigFraction9);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      // Undeclared exception!
      try { 
        BigFraction.parse("rR*,q/A6");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"rR*q\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-1712), (-1712));
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.divide((-1712));
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      int int0 = bigFraction1.signum();
      assertEquals((-1), int0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      
      BigFraction bigFraction2 = bigFraction0.ONE.multiply((long) (-1));
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      int int1 = bigFraction1.getNumeratorAsInt();
      assertEquals((-1), int1);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(int1 == int0);
      
      BigFraction bigFraction3 = BigFraction.of((long) (-1), (long) (-1712));
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction1.ONE.pow((-1));
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction4.multiply((long) (-1));
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      BigInteger bigInteger0 = bigFraction1.getDenominator();
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte) (-80), bigInteger0.byteValue());
      assertEquals((short)1712, bigInteger0.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction6 = bigFraction0.subtract(bigInteger0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte) (-80), bigInteger0.byteValue());
      assertEquals((short)1712, bigInteger0.shortValue());
      assertEquals((short) (-1711), bigFraction6.shortValue());
      assertEquals((byte)81, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction5.multiply(bigFraction1);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertTrue(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertTrue(bigFraction7.equals((Object)bigFraction3));
      assertNotNull(bigFraction7);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(1480L);
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of((-363));
      assertEquals((byte) (-107), bigFraction1.byteValue());
      assertEquals((short) (-363), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.divide((-363));
      assertEquals((byte) (-107), bigFraction1.byteValue());
      assertEquals((short) (-363), bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      int int0 = bigFraction2.getNumeratorAsInt();
      assertEquals((-1), int0);
      assertEquals((byte) (-107), bigFraction1.byteValue());
      assertEquals((short) (-363), bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      
      BigDecimal bigDecimal0 = bigFraction1.ONE.bigDecimalValue();
      assertEquals((byte) (-107), bigFraction1.byteValue());
      assertEquals((short) (-363), bigFraction1.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      
      int int1 = bigFraction0.compareTo(bigFraction1);
      assertEquals(1, int1);
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((byte) (-107), bigFraction1.byteValue());
      assertEquals((short) (-363), bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(int1 == int0);
      
      BigFraction bigFraction3 = bigFraction0.add((-363));
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((short)1117, bigFraction3.shortValue());
      assertEquals((byte)93, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      String string0 = bigFraction1.ZERO.toString();
      assertEquals("0", string0);
      assertEquals((byte) (-107), bigFraction1.byteValue());
      assertEquals((short) (-363), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertNotNull(string0);
      
      BigFraction bigFraction4 = bigFraction3.ONE.pow((-363));
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((short)1117, bigFraction3.shortValue());
      assertEquals((byte)93, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      
      int int2 = bigFraction4.ONE.hashCode();
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((short)1117, bigFraction3.shortValue());
      assertEquals((byte)93, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      RoundingMode roundingMode0 = RoundingMode.HALF_EVEN;
      BigDecimal bigDecimal1 = bigFraction1.bigDecimalValue(roundingMode0);
      assertEquals((byte) (-107), bigFraction1.byteValue());
      assertEquals((short) (-363), bigFraction1.shortValue());
      assertEquals((short) (-363), bigDecimal1.shortValue());
      assertEquals((byte) (-107), bigDecimal1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      
      BigFraction bigFraction5 = BigFraction.of(11);
      assertEquals((byte)11, bigFraction5.byteValue());
      assertEquals((short)11, bigFraction5.shortValue());
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction5.ZERO.add(bigFraction1);
      assertEquals((byte) (-107), bigFraction1.byteValue());
      assertEquals((short) (-363), bigFraction1.shortValue());
      assertEquals((byte)11, bigFraction5.byteValue());
      assertEquals((short)11, bigFraction5.shortValue());
      assertEquals((short) (-363), bigFraction6.shortValue());
      assertEquals((byte) (-107), bigFraction6.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction1);
      assertSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction3.divide(2599);
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((short)1117, bigFraction3.shortValue());
      assertEquals((byte)93, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertNotNull(bigFraction7);
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction8 = bigFraction7.ZERO.add(bigInteger0);
      assertEquals((byte)1, bigFraction8.byteValue());
      assertEquals((short)1, bigFraction8.shortValue());
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((short)1117, bigFraction3.shortValue());
      assertEquals((byte)93, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction8);
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertTrue(bigFraction8.equals((Object)bigFraction4));
      assertTrue(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = bigFraction7.pow(11);
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)1117, bigFraction3.shortValue());
      assertEquals((byte)93, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = bigFraction2.pow((-1));
      assertEquals((byte) (-107), bigFraction1.byteValue());
      assertEquals((short) (-363), bigFraction1.shortValue());
      assertEquals((short)1, bigFraction10.shortValue());
      assertEquals((byte)1, bigFraction10.byteValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction9);
      assertSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertTrue(bigFraction10.equals((Object)bigFraction2));
      assertTrue(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertTrue(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction8));
      assertNotNull(bigFraction10);
      
      BigFraction bigFraction11 = bigFraction10.divide((long) (-363));
      assertEquals((byte) (-107), bigFraction1.byteValue());
      assertEquals((short) (-363), bigFraction1.shortValue());
      assertEquals((short)1, bigFraction10.shortValue());
      assertEquals((byte)1, bigFraction10.byteValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction11);
      assertSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertTrue(bigFraction10.equals((Object)bigFraction2));
      assertTrue(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertTrue(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertNotNull(bigFraction11);
      
      BigFraction bigFraction12 = bigFraction1.subtract(bigFraction3);
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((byte) (-107), bigFraction1.byteValue());
      assertEquals((short) (-363), bigFraction1.shortValue());
      assertEquals((short) (-1480), bigFraction12.shortValue());
      assertEquals((byte)56, bigFraction12.byteValue());
      assertEquals((short)1117, bigFraction3.shortValue());
      assertEquals((byte)93, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction12);
      assertSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction10);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertNotNull(bigFraction12);
      
      BigInteger bigInteger1 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertSame(bigInteger1, bigInteger0);
      assertNotNull(bigInteger1);
      
      BigFraction bigFraction13 = bigFraction10.divide(bigInteger1);
      assertEquals((byte) (-107), bigFraction1.byteValue());
      assertEquals((short) (-363), bigFraction1.shortValue());
      assertEquals((short)1, bigFraction10.shortValue());
      assertEquals((byte)1, bigFraction10.byteValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((short)1, bigFraction13.shortValue());
      assertEquals((byte)1, bigFraction13.byteValue());
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction12);
      assertSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction12);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction13);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction11);
      assertSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction11));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertTrue(bigFraction10.equals((Object)bigFraction2));
      assertTrue(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction12));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertTrue(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertTrue(bigFraction2.equals((Object)bigFraction8));
      assertTrue(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertTrue(bigFraction13.equals((Object)bigFraction4));
      assertTrue(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertTrue(bigFraction13.equals((Object)bigFraction10));
      assertNotNull(bigFraction13);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from((-1335.1));
      assertEquals((byte) (-55), bigFraction0.byteValue());
      assertEquals((short) (-1335), bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      long long0 = bigFraction0.getNumeratorAsLong();
      assertEquals((-2935915948487475L), long0);
      assertEquals((byte) (-55), bigFraction0.byteValue());
      assertEquals((short) (-1335), bigFraction0.shortValue());
      
      int int0 = bigFraction0.signum();
      assertEquals((-1), int0);
      assertEquals((byte) (-55), bigFraction0.byteValue());
      assertEquals((short) (-1335), bigFraction0.shortValue());
      
      BigFraction bigFraction1 = BigFraction.from((-1167.25669795782), (-1));
      assertEquals((byte)113, bigFraction1.byteValue());
      assertEquals((short) (-1167), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction2 = bigFraction0.divide(bigInteger0);
      assertEquals((byte) (-55), bigFraction0.byteValue());
      assertEquals((short) (-1335), bigFraction0.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short) (-133), bigFraction2.shortValue());
      assertEquals((byte)123, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      int int1 = bigFraction1.signum();
      assertEquals((-1), int1);
      assertEquals((byte)113, bigFraction1.byteValue());
      assertEquals((short) (-1167), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(int1 == int0);
      
      BigFraction bigFraction3 = bigFraction2.divide(bigInteger0);
      assertEquals((byte) (-55), bigFraction0.byteValue());
      assertEquals((short) (-1335), bigFraction0.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short) (-133), bigFraction2.shortValue());
      assertEquals((byte)123, bigFraction2.byteValue());
      assertEquals((short) (-13), bigFraction3.shortValue());
      assertEquals((byte) (-13), bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.ONE.multiply(bigFraction0);
      assertEquals((byte) (-55), bigFraction0.byteValue());
      assertEquals((short) (-1335), bigFraction0.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short) (-133), bigFraction2.shortValue());
      assertEquals((byte)123, bigFraction2.byteValue());
      assertEquals((short) (-13), bigFraction3.shortValue());
      assertEquals((byte) (-13), bigFraction3.byteValue());
      assertEquals((byte) (-55), bigFraction4.byteValue());
      assertEquals((short) (-1335), bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.of((-1));
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction3.ONE.add(bigFraction1);
      assertEquals((byte) (-55), bigFraction0.byteValue());
      assertEquals((short) (-1335), bigFraction0.shortValue());
      assertEquals((byte)113, bigFraction1.byteValue());
      assertEquals((short) (-1167), bigFraction1.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short) (-133), bigFraction2.shortValue());
      assertEquals((byte)123, bigFraction2.byteValue());
      assertEquals((short) (-13), bigFraction3.shortValue());
      assertEquals((byte) (-13), bigFraction3.byteValue());
      assertEquals((short) (-1166), bigFraction6.shortValue());
      assertEquals((byte)114, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      
      long long1 = bigFraction1.getNumeratorAsLong();
      assertEquals((-1167L), long1);
      assertEquals((byte)113, bigFraction1.byteValue());
      assertEquals((short) (-1167), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(long1 == long0);
      
      BigInteger bigInteger1 = bigFraction1.getDenominator();
      assertEquals((byte)113, bigFraction1.byteValue());
      assertEquals((short) (-1167), bigFraction1.shortValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      int int2 = bigFraction1.getDenominatorAsInt();
      assertEquals(1, int2);
      assertEquals((byte)113, bigFraction1.byteValue());
      assertEquals((short) (-1167), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      BigFraction bigFraction7 = bigFraction1.multiply(4503599627370496L);
      assertEquals((byte)113, bigFraction1.byteValue());
      assertEquals((short) (-1167), bigFraction1.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction6.pow(0);
      assertEquals((byte) (-55), bigFraction0.byteValue());
      assertEquals((short) (-1335), bigFraction0.shortValue());
      assertEquals((byte)113, bigFraction1.byteValue());
      assertEquals((short) (-1167), bigFraction1.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short) (-133), bigFraction2.shortValue());
      assertEquals((byte)123, bigFraction2.byteValue());
      assertEquals((short) (-13), bigFraction3.shortValue());
      assertEquals((byte) (-13), bigFraction3.byteValue());
      assertEquals((short) (-1166), bigFraction6.shortValue());
      assertEquals((byte)114, bigFraction6.byteValue());
      assertEquals((byte)1, bigFraction8.byteValue());
      assertEquals((short)1, bigFraction8.shortValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertNotNull(bigFraction8);
      
      long long2 = bigFraction7.getDenominatorAsLong();
      assertEquals(1L, long2);
      assertEquals((byte)113, bigFraction1.byteValue());
      assertEquals((short) (-1167), bigFraction1.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction8);
      assertFalse(long2 == long1);
      assertFalse(long2 == long0);
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      
      BigFraction bigFraction9 = bigFraction3.reciprocal();
      assertEquals((byte) (-55), bigFraction0.byteValue());
      assertEquals((short) (-1335), bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short) (-133), bigFraction2.shortValue());
      assertEquals((byte)123, bigFraction2.byteValue());
      assertEquals((short) (-13), bigFraction3.shortValue());
      assertEquals((byte) (-13), bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction9);
      
      // Undeclared exception!
      try { 
        BigFraction.from((double) (-2935915948487475L), 2464);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Overflow trying to convert -2.935915948487475E15 to fraction (2935915948487475/1)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigDecimal bigDecimal0 = bigFraction0.ZERO.bigDecimalValue();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      int int0 = 0;
      BigFraction bigFraction1 = bigFraction0.ONE.subtract(0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      int int1 = 3;
      BigFraction bigFraction2 = bigFraction0.pow(3);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      long long0 = 4503599627370495L;
      BigFraction bigFraction3 = bigFraction2.divide(4503599627370495L);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      int int2 = bigFraction2.getNumeratorAsInt();
      assertEquals(1, int2);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      BigFraction bigFraction4 = bigFraction2.multiply(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      int int3 = 1;
      BigFraction bigFraction5 = bigFraction0.ZERO.divide(1);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction0.reciprocal();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertTrue(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertTrue(bigFraction6.equals((Object)bigFraction2));
      assertTrue(bigFraction6.equals((Object)bigFraction1));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertNotNull(bigFraction6);
      
      BigInteger bigInteger1 = bigFraction3.getNumerator();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction6);
      assertSame(bigInteger1, bigInteger0);
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertNotNull(bigInteger1);
      
      int int4 = 66;
      BigFraction bigFraction7 = BigFraction.from(6.8906115302525E-7, 2.1849356500069916E-4, 66);
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction4);
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertTrue(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertNotNull(bigFraction7);
      
      BigInteger bigInteger2 = BigInteger.ONE;
      assertEquals((short)1, bigInteger2.shortValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      assertSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertNotNull(bigInteger2);
      
      BigFraction bigFraction8 = bigFraction0.ZERO.subtract(bigInteger2);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger2.shortValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte) (-1), bigFraction8.byteValue());
      assertEquals((short) (-1), bigFraction8.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertSame(bigInteger0, bigInteger2);
      assertSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertNotNull(bigFraction8);
      
      double double0 = bigFraction8.doubleValue();
      assertEquals((-1.0), double0, 0.01);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger2.shortValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte) (-1), bigFraction8.byteValue());
      assertEquals((short) (-1), bigFraction8.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertSame(bigInteger0, bigInteger2);
      assertSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      
      BigFraction bigFraction9 = BigFraction.of((long) 66, 4503599627370495L);
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction4);
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = bigFraction9.ZERO.subtract(bigFraction2);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short) (-1), bigFraction10.shortValue());
      assertEquals((byte) (-1), bigFraction10.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertTrue(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction10);
      
      BigInteger bigInteger3 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger3.byteValue());
      assertEquals((short)0, bigInteger3.shortValue());
      assertNotSame(bigInteger3, bigInteger1);
      assertNotSame(bigInteger3, bigInteger2);
      assertNotSame(bigInteger3, bigInteger0);
      assertFalse(bigInteger3.equals((Object)bigInteger1));
      assertFalse(bigInteger3.equals((Object)bigInteger2));
      assertFalse(bigInteger3.equals((Object)bigInteger0));
      assertNotNull(bigInteger3);
      
      // Undeclared exception!
      try { 
        BigFraction.of(bigInteger2, bigInteger3);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE;
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(2554L, 2554L);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = BigFraction.of(1L, 2554L);
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction0.add(bigFraction1);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      long long0 = bigFraction0.ZERO.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      
      BigFraction bigFraction4 = bigFraction0.add(1431655765);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction4.abs();
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction5.byteValue());
      assertEquals((short)21846, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = BigFraction.of((-1386), (-1386));
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertTrue(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = BigFraction.from((double) 2554L);
      assertEquals((short)2554, bigFraction7.shortValue());
      assertEquals((byte) (-6), bigFraction7.byteValue());
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction4.multiply(bigFraction7);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((short)2554, bigFraction7.shortValue());
      assertEquals((byte) (-6), bigFraction7.byteValue());
      assertEquals((short)23548, bigFraction8.shortValue());
      assertEquals((byte) (-4), bigFraction8.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = BigFraction.of(2568390443008L);
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction0);
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = bigFraction0.multiply(286);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)286, bigFraction10.shortValue());
      assertEquals((byte)30, bigFraction10.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertNotNull(bigFraction10);
      
      BigFraction bigFraction11 = bigFraction8.ONE.divide((-1386));
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((short)2554, bigFraction7.shortValue());
      assertEquals((byte) (-6), bigFraction7.byteValue());
      assertEquals((short)23548, bigFraction8.shortValue());
      assertEquals((byte) (-4), bigFraction8.byteValue());
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction9);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertNotNull(bigFraction11);
      
      BigFraction bigFraction12 = bigFraction10.divide(2795L);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)286, bigFraction10.shortValue());
      assertEquals((byte)30, bigFraction10.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction12);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction11));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertNotNull(bigFraction12);
      
      BigFraction bigFraction13 = bigFraction8.subtract(bigFraction12);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((short)21846, bigFraction4.shortValue());
      assertEquals((short)2554, bigFraction7.shortValue());
      assertEquals((byte) (-6), bigFraction7.byteValue());
      assertEquals((short)23548, bigFraction8.shortValue());
      assertEquals((byte) (-4), bigFraction8.byteValue());
      assertEquals((short)286, bigFraction10.shortValue());
      assertEquals((byte)30, bigFraction10.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((short)23547, bigFraction13.shortValue());
      assertEquals((byte) (-5), bigFraction13.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction9);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction13);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction12);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction11));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction12));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertNotNull(bigFraction13);
      
      // Undeclared exception!
      try { 
        bigFraction9.pow(1431655765);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // BigInteger would overflow supported range
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigDecimal bigDecimal0 = bigFraction0.ZERO.bigDecimalValue();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction1 = bigFraction0.ONE.subtract(0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.pow(3);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.divide(4503599627370495L);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      int int0 = bigFraction2.getNumeratorAsInt();
      assertEquals(1, int0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      
      BigFraction bigFraction4 = bigFraction2.multiply(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      int int1 = 1;
      BigFraction bigFraction5 = bigFraction0.ZERO.divide(1);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction0.reciprocal();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertTrue(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertTrue(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction1));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertNotNull(bigFraction6);
      
      BigInteger bigInteger1 = bigFraction3.getNumerator();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigInteger1);
      
      BigFraction bigFraction7 = BigFraction.from(6.8906115302525E-7, 2.1849356500069916E-4, 66);
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertTrue(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertNotNull(bigFraction7);
      
      BigInteger bigInteger2 = BigInteger.ONE;
      assertEquals((short)1, bigInteger2.shortValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      assertSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertNotNull(bigInteger2);
      
      BigFraction bigFraction8 = bigFraction0.ZERO.subtract(bigInteger2);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigInteger2.shortValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      assertEquals((short) (-1), bigFraction8.shortValue());
      assertEquals((byte) (-1), bigFraction8.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertNotNull(bigFraction8);
      
      double double0 = bigFraction8.doubleValue();
      assertEquals((-1.0), double0, 0.01);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigInteger2.shortValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      assertEquals((short) (-1), bigFraction8.shortValue());
      assertEquals((byte) (-1), bigFraction8.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      
      BigFraction bigFraction9 = bigFraction3.negate();
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction4);
      assertSame(bigInteger0, bigInteger1);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = bigFraction9.ZERO.subtract(bigFraction2);
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short) (-1), bigFraction10.shortValue());
      assertEquals((byte) (-1), bigFraction10.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction4);
      assertSame(bigInteger0, bigInteger1);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertTrue(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction10);
      
      BigInteger bigInteger3 = bigFraction9.getNumerator();
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short) (-1), bigInteger3.shortValue());
      assertEquals((byte) (-1), bigInteger3.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction4);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger3);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigInteger3, bigInteger2);
      assertNotSame(bigInteger3, bigInteger0);
      assertNotSame(bigInteger3, bigInteger1);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigInteger3.equals((Object)bigInteger2));
      assertFalse(bigInteger3.equals((Object)bigInteger0));
      assertFalse(bigInteger3.equals((Object)bigInteger1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigInteger3);
      
      BigFraction bigFraction11 = BigFraction.of(bigInteger2, bigInteger3);
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short) (-1), bigInteger3.shortValue());
      assertEquals((byte) (-1), bigInteger3.byteValue());
      assertEquals((short) (-1), bigFraction11.shortValue());
      assertEquals((byte) (-1), bigFraction11.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)1, bigInteger2.shortValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction11);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction4);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger3);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigInteger3, bigInteger2);
      assertNotSame(bigInteger3, bigInteger0);
      assertNotSame(bigInteger3, bigInteger1);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigInteger2, bigInteger3);
      assertSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigInteger0.equals((Object)bigInteger3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigInteger3.equals((Object)bigInteger2));
      assertFalse(bigInteger3.equals((Object)bigInteger0));
      assertFalse(bigInteger3.equals((Object)bigInteger1));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertTrue(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertTrue(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigInteger2.equals((Object)bigInteger3));
      assertNotNull(bigFraction11);
      
      BigFraction bigFraction12 = BigFraction.from((-1.0));
      assertEquals((byte) (-1), bigFraction12.byteValue());
      assertEquals((short) (-1), bigFraction12.shortValue());
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction0);
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertTrue(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertTrue(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertTrue(bigFraction12.equals((Object)bigFraction10));
      assertNotNull(bigFraction12);
      
      BigFraction bigFraction13 = bigFraction0.subtract(bigFraction9);
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte)1, bigFraction13.byteValue());
      assertEquals((short)1, bigFraction13.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction13);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction12);
      assertNotSame(bigFraction9, bigFraction11);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger3);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction12));
      assertFalse(bigFraction9.equals((Object)bigFraction11));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigInteger0.equals((Object)bigInteger3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertNotNull(bigFraction13);
      
      BigFraction bigFraction14 = bigFraction9.subtract(bigInteger1);
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((byte) (-1), bigFraction14.byteValue());
      assertEquals((short) (-1), bigFraction14.shortValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction14);
      assertNotSame(bigFraction9, bigFraction13);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction12);
      assertNotSame(bigFraction9, bigFraction11);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger3);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigInteger1, bigInteger3);
      assertSame(bigInteger1, bigInteger2);
      assertSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction13));
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction12));
      assertFalse(bigFraction9.equals((Object)bigFraction11));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigInteger0.equals((Object)bigInteger3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigInteger1.equals((Object)bigInteger3));
      assertNotNull(bigFraction14);
      
      BigFraction bigFraction15 = bigFraction14.multiply(bigInteger0);
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((byte) (-1), bigFraction14.byteValue());
      assertEquals((short) (-1), bigFraction14.shortValue());
      assertEquals((short) (-1), bigFraction15.shortValue());
      assertEquals((byte) (-1), bigFraction15.byteValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction14);
      assertNotSame(bigFraction9, bigFraction13);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction15);
      assertNotSame(bigFraction9, bigFraction12);
      assertNotSame(bigFraction9, bigFraction11);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger3);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction3, bigFraction15);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction15);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigInteger1, bigInteger3);
      assertSame(bigInteger1, bigInteger2);
      assertSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction14));
      assertFalse(bigFraction9.equals((Object)bigFraction13));
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction12));
      assertFalse(bigFraction9.equals((Object)bigFraction11));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigInteger0.equals((Object)bigInteger3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertTrue(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigInteger1.equals((Object)bigInteger3));
      assertNotNull(bigFraction15);
      
      BigDecimal bigDecimal1 = bigFraction4.bigDecimalValue();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger3);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction15);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigInteger0.equals((Object)bigInteger3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction15));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction15));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertTrue(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      
      BigFraction bigFraction16 = bigFraction8.ZERO.abs();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction16.byteValue());
      assertEquals((short)0, bigFraction16.shortValue());
      assertEquals((short)1, bigInteger2.shortValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      assertEquals((short) (-1), bigFraction8.shortValue());
      assertEquals((byte) (-1), bigFraction8.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger3);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction16, bigFraction13);
      assertNotSame(bigFraction16, bigFraction1);
      assertNotSame(bigFraction16, bigFraction4);
      assertNotSame(bigFraction16, bigFraction15);
      assertNotSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction16, bigFraction2);
      assertNotSame(bigFraction16, bigFraction11);
      assertSame(bigFraction16, bigFraction5);
      assertNotSame(bigFraction16, bigFraction9);
      assertNotSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction7);
      assertNotSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction16, bigFraction14);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigInteger2, bigInteger3);
      assertSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction16);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction15);
      assertNotSame(bigFraction8, bigFraction7);
      assertFalse(bigInteger0.equals((Object)bigInteger3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction6));
      assertFalse(bigFraction16.equals((Object)bigFraction0));
      assertFalse(bigFraction16.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertFalse(bigFraction16.equals((Object)bigFraction10));
      assertTrue(bigFraction16.equals((Object)bigFraction7));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction9));
      assertFalse(bigFraction16.equals((Object)bigFraction12));
      assertFalse(bigFraction16.equals((Object)bigFraction8));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigInteger2.equals((Object)bigInteger3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction14));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      assertTrue(bigFraction8.equals((Object)bigFraction10));
      assertTrue(bigFraction8.equals((Object)bigFraction11));
      assertTrue(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction15));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertNotNull(bigFraction16);
      
      BigFraction bigFraction17 = bigFraction8.reciprocal();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction17.shortValue());
      assertEquals((byte) (-1), bigFraction17.byteValue());
      assertEquals((short)1, bigInteger2.shortValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      assertEquals((short) (-1), bigFraction8.shortValue());
      assertEquals((byte) (-1), bigFraction8.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger3);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction17, bigFraction4);
      assertNotSame(bigFraction17, bigFraction8);
      assertNotSame(bigFraction17, bigFraction0);
      assertNotSame(bigFraction17, bigFraction13);
      assertNotSame(bigFraction17, bigFraction9);
      assertNotSame(bigFraction17, bigFraction3);
      assertNotSame(bigFraction17, bigFraction2);
      assertNotSame(bigFraction17, bigFraction14);
      assertNotSame(bigFraction17, bigFraction7);
      assertNotSame(bigFraction17, bigFraction1);
      assertNotSame(bigFraction17, bigFraction12);
      assertNotSame(bigFraction17, bigFraction11);
      assertNotSame(bigFraction17, bigFraction6);
      assertNotSame(bigFraction17, bigFraction5);
      assertNotSame(bigFraction17, bigFraction15);
      assertNotSame(bigFraction17, bigFraction16);
      assertNotSame(bigFraction17, bigFraction10);
      assertNotSame(bigInteger2, bigInteger3);
      assertSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction16);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction15);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction17);
      assertFalse(bigInteger0.equals((Object)bigInteger3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction17.equals((Object)bigFraction10));
      assertTrue(bigFraction17.equals((Object)bigFraction8));
      assertFalse(bigFraction17.equals((Object)bigFraction4));
      assertFalse(bigFraction17.equals((Object)bigFraction0));
      assertFalse(bigFraction17.equals((Object)bigFraction13));
      assertFalse(bigFraction17.equals((Object)bigFraction9));
      assertFalse(bigFraction17.equals((Object)bigFraction3));
      assertTrue(bigFraction17.equals((Object)bigFraction12));
      assertFalse(bigFraction17.equals((Object)bigFraction2));
      assertFalse(bigFraction17.equals((Object)bigFraction14));
      assertTrue(bigFraction17.equals((Object)bigFraction11));
      assertFalse(bigFraction17.equals((Object)bigFraction7));
      assertFalse(bigFraction17.equals((Object)bigFraction1));
      assertFalse(bigFraction17.equals((Object)bigFraction6));
      assertFalse(bigFraction17.equals((Object)bigFraction5));
      assertFalse(bigFraction17.equals((Object)bigFraction15));
      assertFalse(bigFraction17.equals((Object)bigFraction16));
      assertFalse(bigInteger2.equals((Object)bigInteger3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction14));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      assertTrue(bigFraction8.equals((Object)bigFraction10));
      assertTrue(bigFraction8.equals((Object)bigFraction11));
      assertTrue(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction16));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction15));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertNotNull(bigFraction17);
      
      BigFraction bigFraction18 = bigFraction8.multiply(3);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte) (-3), bigFraction18.byteValue());
      assertEquals((short) (-3), bigFraction18.shortValue());
      assertEquals((short)1, bigInteger2.shortValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      assertEquals((short) (-1), bigFraction8.shortValue());
      assertEquals((byte) (-1), bigFraction8.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger3);
      assertSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction18, bigFraction2);
      assertNotSame(bigFraction18, bigFraction11);
      assertNotSame(bigFraction18, bigFraction12);
      assertNotSame(bigFraction18, bigFraction9);
      assertNotSame(bigFraction18, bigFraction10);
      assertNotSame(bigFraction18, bigFraction8);
      assertNotSame(bigFraction18, bigFraction5);
      assertNotSame(bigFraction18, bigFraction6);
      assertNotSame(bigFraction18, bigFraction15);
      assertNotSame(bigFraction18, bigFraction7);
      assertNotSame(bigFraction18, bigFraction13);
      assertNotSame(bigFraction18, bigFraction1);
      assertNotSame(bigFraction18, bigFraction17);
      assertNotSame(bigFraction18, bigFraction0);
      assertNotSame(bigFraction18, bigFraction16);
      assertNotSame(bigFraction18, bigFraction3);
      assertNotSame(bigFraction18, bigFraction4);
      assertNotSame(bigFraction18, bigFraction14);
      assertNotSame(bigInteger2, bigInteger3);
      assertSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction18);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction16);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction15);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction17);
      assertFalse(bigInteger0.equals((Object)bigInteger3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction18.equals((Object)bigFraction2));
      assertFalse(bigFraction18.equals((Object)bigFraction11));
      assertFalse(bigFraction18.equals((Object)bigFraction12));
      assertFalse(bigFraction18.equals((Object)bigFraction9));
      assertFalse(bigFraction18.equals((Object)bigFraction10));
      assertFalse(bigFraction18.equals((Object)bigFraction8));
      assertFalse(bigFraction18.equals((Object)bigFraction5));
      assertFalse(bigFraction18.equals((Object)bigFraction6));
      assertFalse(bigFraction18.equals((Object)bigFraction15));
      assertFalse(bigFraction18.equals((Object)bigFraction7));
      assertFalse(bigFraction18.equals((Object)bigFraction13));
      assertFalse(bigFraction18.equals((Object)bigFraction1));
      assertFalse(bigFraction18.equals((Object)bigFraction17));
      assertFalse(bigFraction18.equals((Object)bigFraction0));
      assertFalse(bigFraction18.equals((Object)bigFraction16));
      assertFalse(bigFraction18.equals((Object)bigFraction3));
      assertFalse(bigFraction18.equals((Object)bigFraction4));
      assertFalse(bigFraction18.equals((Object)bigFraction14));
      assertFalse(bigInteger2.equals((Object)bigInteger3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction14));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      assertTrue(bigFraction8.equals((Object)bigFraction10));
      assertTrue(bigFraction8.equals((Object)bigFraction11));
      assertTrue(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction16));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertTrue(bigFraction8.equals((Object)bigFraction17));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction15));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertNotNull(bigFraction18);
      
      BigFraction bigFraction19 = BigFraction.of((long) 1);
      assertEquals((short)1, bigFraction19.shortValue());
      assertEquals((byte)1, bigFraction19.byteValue());
      assertNotSame(bigFraction19, bigFraction7);
      assertNotSame(bigFraction19, bigFraction1);
      assertNotSame(bigFraction19, bigFraction5);
      assertNotSame(bigFraction19, bigFraction6);
      assertNotSame(bigFraction19, bigFraction9);
      assertNotSame(bigFraction19, bigFraction18);
      assertNotSame(bigFraction19, bigFraction11);
      assertNotSame(bigFraction19, bigFraction12);
      assertNotSame(bigFraction19, bigFraction2);
      assertNotSame(bigFraction19, bigFraction14);
      assertNotSame(bigFraction19, bigFraction3);
      assertNotSame(bigFraction19, bigFraction13);
      assertNotSame(bigFraction19, bigFraction4);
      assertNotSame(bigFraction19, bigFraction17);
      assertNotSame(bigFraction19, bigFraction8);
      assertNotSame(bigFraction19, bigFraction0);
      assertNotSame(bigFraction19, bigFraction16);
      assertNotSame(bigFraction19, bigFraction10);
      assertNotSame(bigFraction19, bigFraction15);
      assertTrue(bigFraction19.equals((Object)bigFraction6));
      assertFalse(bigFraction19.equals((Object)bigFraction7));
      assertFalse(bigFraction19.equals((Object)bigFraction5));
      assertFalse(bigFraction19.equals((Object)bigFraction9));
      assertFalse(bigFraction19.equals((Object)bigFraction18));
      assertFalse(bigFraction19.equals((Object)bigFraction11));
      assertTrue(bigFraction19.equals((Object)bigFraction4));
      assertFalse(bigFraction19.equals((Object)bigFraction12));
      assertFalse(bigFraction19.equals((Object)bigFraction14));
      assertFalse(bigFraction19.equals((Object)bigFraction3));
      assertFalse(bigFraction19.equals((Object)bigFraction13));
      assertFalse(bigFraction19.equals((Object)bigFraction17));
      assertFalse(bigFraction19.equals((Object)bigFraction8));
      assertFalse(bigFraction19.equals((Object)bigFraction16));
      assertTrue(bigFraction19.equals((Object)bigFraction2));
      assertFalse(bigFraction19.equals((Object)bigFraction10));
      assertTrue(bigFraction19.equals((Object)bigFraction1));
      assertTrue(bigFraction19.equals((Object)bigFraction0));
      assertFalse(bigFraction19.equals((Object)bigFraction15));
      assertNotNull(bigFraction19);
      
      // Undeclared exception!
      try { 
        BigFraction.from((double) 4503599627370495L, (double) 3, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Max iterations must be strictly positive: 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(1026.096099268624);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      long long0 = bigFraction0.getNumeratorAsLong();
      assertEquals(4512818369445795L, long0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = bigFraction0.divide(bigInteger0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1026, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      int int0 = bigFraction0.signum();
      assertEquals(1, int0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      
      BigFraction bigFraction2 = bigFraction1.divide(bigInteger0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1026, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short)1026, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.ONE.multiply(bigFraction0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1026, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short)1026, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertEquals((short)1026, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction2.ONE.add(bigFraction0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1026, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short)1026, bigFraction2.shortValue());
      assertEquals((byte)3, bigFraction4.byteValue());
      assertEquals((short)1027, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      long long1 = bigFraction0.getNumeratorAsLong();
      assertEquals(4512818369445795L, long1);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(long1 == long0);
      
      BigInteger bigInteger1 = bigFraction0.getDenominator();
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)0, bigInteger1.byteValue());
      assertEquals((short)0, bigInteger1.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigInteger1, bigInteger0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      int int1 = bigFraction0.getDenominatorAsInt();
      assertEquals(0, int1);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(int1 == int0);
      
      BigFraction bigFraction5 = bigFraction0.multiply(4503599627370496L);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((short) (-29696), bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction4.pow(0);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1026, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short)1026, bigFraction2.shortValue());
      assertEquals((byte)3, bigFraction4.byteValue());
      assertEquals((short)1027, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      
      long long2 = bigFraction5.getDenominatorAsLong();
      assertEquals(1L, long2);
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((short) (-29696), bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(long2 == long0);
      assertFalse(long2 == long1);
      
      BigFraction bigFraction7 = bigFraction2.reciprocal();
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1026, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short)1026, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertNotNull(bigFraction7);
      
      // Undeclared exception!
      try { 
        BigFraction.from((double) 4512818369445795L, 2464);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Overflow trying to convert 4.512818369445795E15 to fraction (4512818369445795/1)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      long long0 = 2000L;
      BigFraction bigFraction0 = BigFraction.of(2000L);
      assertEquals((short)2000, bigFraction0.shortValue());
      assertEquals((byte) (-48), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      String string0 = bigFraction0.ONE.toString();
      assertEquals("1", string0);
      assertEquals((short)2000, bigFraction0.shortValue());
      assertEquals((byte) (-48), bigFraction0.byteValue());
      assertNotNull(string0);
      
      // Undeclared exception!
      try { 
        bigFraction0.ZERO.multiply((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(66, 66);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      float float0 = bigFraction0.ONE.floatValue();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.add(66);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)67, bigFraction1.byteValue());
      assertEquals((short)67, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.ONE.multiply((long) 66);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)67, bigFraction1.byteValue());
      assertEquals((short)67, bigFraction1.shortValue());
      assertEquals((byte)66, bigFraction2.byteValue());
      assertEquals((short)66, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.ONE.subtract(bigFraction0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)67, bigFraction1.byteValue());
      assertEquals((short)67, bigFraction1.shortValue());
      assertEquals((byte)66, bigFraction2.byteValue());
      assertEquals((short)66, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      long long0 = bigFraction1.ZERO.longValue();
      assertEquals(0L, long0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)67, bigFraction1.byteValue());
      assertEquals((short)67, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      
      BigFraction bigFraction4 = BigFraction.from(0.15275928020002993, (-3806));
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.from((-921.03002079), (-1));
      assertEquals((byte)103, bigFraction5.byteValue());
      assertEquals((short) (-921), bigFraction5.shortValue());
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = BigFraction.from((double) 66, 90);
      assertEquals((byte)66, bigFraction6.byteValue());
      assertEquals((short)66, bigFraction6.shortValue());
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertTrue(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction5.subtract(bigFraction6);
      assertEquals((byte)103, bigFraction5.byteValue());
      assertEquals((short) (-921), bigFraction5.shortValue());
      assertEquals((byte)66, bigFraction6.byteValue());
      assertEquals((short)66, bigFraction6.shortValue());
      assertEquals((byte)37, bigFraction7.byteValue());
      assertEquals((short) (-987), bigFraction7.shortValue());
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction3);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertTrue(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction5.subtract(bigFraction7);
      assertEquals((byte)103, bigFraction5.byteValue());
      assertEquals((short) (-921), bigFraction5.shortValue());
      assertEquals((byte)66, bigFraction6.byteValue());
      assertEquals((short)66, bigFraction6.shortValue());
      assertEquals((byte)37, bigFraction7.byteValue());
      assertEquals((short) (-987), bigFraction7.shortValue());
      assertEquals((short)66, bigFraction8.shortValue());
      assertEquals((byte)66, bigFraction8.byteValue());
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertTrue(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertTrue(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertTrue(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertNotNull(bigFraction8);
      
      BigInteger bigInteger0 = null;
      // Undeclared exception!
      try { 
        bigFraction5.add((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(82.5934565135, 2435);
      assertEquals((byte)82, bigFraction0.byteValue());
      assertEquals((short)82, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(2435);
      assertEquals((short)2435, bigFraction1.shortValue());
      assertEquals((byte) (-125), bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction2 = bigFraction0.divide(bigInteger0);
      assertEquals((byte)82, bigFraction0.byteValue());
      assertEquals((short)82, bigFraction0.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)8, bigFraction2.shortValue());
      assertEquals((byte)8, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.ONE.multiply(2435);
      assertEquals((byte)82, bigFraction0.byteValue());
      assertEquals((short)82, bigFraction0.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)8, bigFraction2.shortValue());
      assertEquals((byte)8, bigFraction2.byteValue());
      assertEquals((short)2435, bigFraction3.shortValue());
      assertEquals((byte) (-125), bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigDecimal bigDecimal0 = bigFraction3.ONE.bigDecimalValue();
      assertEquals((byte)82, bigFraction0.byteValue());
      assertEquals((short)82, bigFraction0.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)8, bigFraction2.shortValue());
      assertEquals((byte)8, bigFraction2.byteValue());
      assertEquals((short)2435, bigFraction3.shortValue());
      assertEquals((byte) (-125), bigFraction3.byteValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction4 = BigFraction.of(bigInteger0);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigFraction4.shortValue());
      assertEquals((byte)10, bigFraction4.byteValue());
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      long long0 = bigFraction4.longValue();
      assertEquals(10L, long0);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigFraction4.shortValue());
      assertEquals((byte)10, bigFraction4.byteValue());
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      
      BigFraction bigFraction5 = BigFraction.of((-1133));
      assertEquals((byte) (-109), bigFraction5.byteValue());
      assertEquals((short) (-1133), bigFraction5.shortValue());
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction5.divide(bigInteger0);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte) (-109), bigFraction5.byteValue());
      assertEquals((short) (-1133), bigFraction5.shortValue());
      assertEquals((short) (-113), bigFraction6.shortValue());
      assertEquals((byte) (-113), bigFraction6.byteValue());
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction3.pow(2435);
      assertEquals((byte)82, bigFraction0.byteValue());
      assertEquals((short)82, bigFraction0.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)8, bigFraction2.shortValue());
      assertEquals((byte)8, bigFraction2.byteValue());
      assertEquals((short)2435, bigFraction3.shortValue());
      assertEquals((byte) (-125), bigFraction3.byteValue());
      assertEquals((short) (-1381), bigFraction7.shortValue());
      assertEquals((byte) (-101), bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertNotNull(bigFraction7);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(1026.096099268624);
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      long long0 = bigFraction0.getNumeratorAsLong();
      assertEquals(4512818369445795L, long0);
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction0.byteValue());
      
      int int0 = bigFraction0.signum();
      assertEquals(1, int0);
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction0.byteValue());
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = bigFraction0.divide(bigInteger0);
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1026, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      int int1 = bigFraction0.signum();
      assertEquals(1, int1);
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(int1 == int0);
      
      BigFraction bigFraction2 = bigFraction1.divide(bigInteger0);
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1026, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertEquals((short)1026, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.ONE.multiply(bigFraction0);
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1026, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertEquals((short)1026, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short)1026, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.of(1);
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction2.ONE.add(bigFraction0);
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1026, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertEquals((short)1026, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short)1027, bigFraction5.shortValue());
      assertEquals((byte)3, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      
      long long1 = bigFraction0.getNumeratorAsLong();
      assertEquals(4512818369445795L, long1);
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(long1 == long0);
      
      int int2 = bigFraction0.getDenominatorAsInt();
      assertEquals(0, int2);
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      BigFraction bigFraction6 = bigFraction5.pow(0);
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1026, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertEquals((short)1026, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short)1027, bigFraction5.shortValue());
      assertEquals((byte)3, bigFraction5.byteValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertTrue(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      
      long long2 = bigFraction2.getDenominatorAsLong();
      assertEquals(4398046511104L, long2);
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1026, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertEquals((short)1026, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(long2 == long1);
      assertFalse(long2 == long0);
      
      BigFraction bigFraction7 = bigFraction2.reciprocal();
      assertEquals((short)1026, bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1026, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertEquals((short)1026, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction7);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      float float0 = bigFraction0.ONE.floatValue();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = BigFraction.of((-2313), (-1050));
      assertEquals((short)2, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.multiply(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.ONE.multiply((-2252L));
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte)52, bigFraction3.byteValue());
      assertEquals((short) (-2252), bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      boolean boolean0 = bigFraction2.equals(bigFraction4);
      assertTrue(boolean0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      
      double double0 = bigFraction4.ZERO.doubleValue();
      assertEquals(0.0, double0, 0.01);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      
      BigFraction bigFraction5 = bigFraction4.subtract(1142L);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short) (-1141), bigFraction5.shortValue());
      assertEquals((byte) (-117), bigFraction5.byteValue());
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      long long0 = bigFraction5.ZERO.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short) (-1141), bigFraction5.shortValue());
      assertEquals((byte) (-117), bigFraction5.byteValue());
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      
      int int0 = bigFraction2.getDenominatorAsInt();
      assertEquals(1, int0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      long long0 = (-100L);
      BigFraction bigFraction0 = BigFraction.of((-100L), (-3154L));
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.ZERO;
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      double double0 = bigFraction1.ONE.doubleValue();
      assertEquals(1.0, double0, 0.01);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      
      int int0 = 1;
      BigFraction bigFraction2 = bigFraction0.add(1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      // Undeclared exception!
      try { 
        bigFraction2.bigDecimalValue(roundingMode0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Rounding necessary
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.ZERO.multiply(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.ONE.subtract(1L);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      int int0 = bigFraction0.intValue();
      assertEquals(1, int0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      
      BigFraction bigFraction3 = BigFraction.of(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction0.negate();
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction4.shortValue());
      assertEquals((byte) (-1), bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      long long0 = bigFraction4.longValue();
      assertEquals((-1L), long0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction4.shortValue());
      assertEquals((byte) (-1), bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      
      BigFraction bigFraction5 = BigFraction.of(1048576L, (-1L));
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction5.subtract(536870912L);
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      
      boolean boolean0 = bigFraction0.equals(bigFraction6);
      assertFalse(boolean0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-389L), (-1078L));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.ZERO.add(1765L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1765, bigFraction1.shortValue());
      assertEquals((byte) (-27), bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      long long0 = bigFraction1.getNumeratorAsLong();
      assertEquals(1765L, long0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1765, bigFraction1.shortValue());
      assertEquals((byte) (-27), bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      
      double double0 = bigFraction0.doubleValue();
      assertEquals(0.3608534322820037, double0, 0.01);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      
      int int0 = bigFraction0.ONE.getNumeratorAsInt();
      assertEquals(1, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      
      int int1 = bigFraction0.getDenominatorAsInt();
      assertEquals((-1078), int1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(int1 == int0);
      
      BigFraction bigFraction2 = bigFraction0.subtract((-1078));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1078, bigFraction2.shortValue());
      assertEquals((byte)54, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction3 = bigFraction2.subtract(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1078, bigFraction2.shortValue());
      assertEquals((byte)54, bigFraction2.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)44, bigFraction3.byteValue());
      assertEquals((short)1068, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.ONE.divide(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1078, bigFraction2.shortValue());
      assertEquals((byte)54, bigFraction2.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)44, bigFraction3.byteValue());
      assertEquals((short)1068, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction4.byteValue());
      assertEquals((short)2, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction4.ONE.divide(bigFraction3);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1078, bigFraction2.shortValue());
      assertEquals((byte)54, bigFraction2.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)44, bigFraction3.byteValue());
      assertEquals((short)1068, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction4.byteValue());
      assertEquals((short)2, bigFraction4.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = BigFraction.of(bigInteger0);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigFraction6.shortValue());
      assertEquals((byte)10, bigFraction6.byteValue());
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction6.ONE.reciprocal();
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigFraction6.shortValue());
      assertEquals((byte)10, bigFraction6.byteValue());
      assertEquals((byte)1, bigFraction7.byteValue());
      assertEquals((short)1, bigFraction7.shortValue());
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction0);
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = BigFraction.of(0, (-1078));
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction4);
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertNotNull(bigFraction8);
      
      boolean boolean0 = bigFraction2.ZERO.equals(bigFraction3);
      assertFalse(boolean0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1078, bigFraction2.shortValue());
      assertEquals((byte)54, bigFraction2.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)44, bigFraction3.byteValue());
      assertEquals((short)1068, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      
      BigFraction bigFraction9 = BigFraction.of(1765L);
      assertEquals((byte) (-27), bigFraction9.byteValue());
      assertEquals((short)1765, bigFraction9.shortValue());
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction2);
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertTrue(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertNotNull(bigFraction9);
      
      float float0 = bigFraction9.ZERO.floatValue();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((byte) (-27), bigFraction9.byteValue());
      assertEquals((short)1765, bigFraction9.shortValue());
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction2);
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertTrue(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      BigFraction bigFraction10 = bigFraction8.ZERO.subtract((-1102));
      assertEquals((byte)78, bigFraction10.byteValue());
      assertEquals((short)1102, bigFraction10.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction4);
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertNotNull(bigFraction10);
      
      BigFraction bigFraction11 = BigFraction.from((double) 0.0F);
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction0);
      assertSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction6);
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertNotNull(bigFraction11);
      
      BigDecimal bigDecimal0 = bigFraction9.ZERO.bigDecimalValue((-1102), roundingMode0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((byte) (-27), bigFraction9.byteValue());
      assertEquals((short)1765, bigFraction9.shortValue());
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction11);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction2);
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction11));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertTrue(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction12 = bigFraction8.subtract(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertNotNull(bigFraction12);
      
      BigFraction bigFraction13 = bigFraction2.multiply(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)389, bigFraction13.shortValue());
      assertEquals((byte) (-123), bigFraction13.byteValue());
      assertEquals((short)1078, bigFraction2.shortValue());
      assertEquals((byte)54, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction10);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertNotNull(bigFraction13);
      
      int int2 = bigFraction13.ONE.hashCode();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)389, bigFraction13.shortValue());
      assertEquals((byte) (-123), bigFraction13.byteValue());
      assertEquals((short)1078, bigFraction2.shortValue());
      assertEquals((byte)54, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction10);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      long long1 = bigFraction13.getDenominatorAsLong();
      assertEquals(1162084L, long1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)389, bigFraction13.shortValue());
      assertEquals((byte) (-123), bigFraction13.byteValue());
      assertEquals((short)1078, bigFraction2.shortValue());
      assertEquals((byte)54, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction10);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(long1 == long0);
      
      long long2 = bigFraction3.getDenominatorAsLong();
      assertEquals((-1078L), long2);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1078, bigFraction2.shortValue());
      assertEquals((byte)54, bigFraction2.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)44, bigFraction3.byteValue());
      assertEquals((short)1068, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(long2 == long1);
      assertFalse(long2 == long0);
      
      BigFraction bigFraction14 = BigFraction.from(0.0, (-1311));
      assertEquals((byte)0, bigFraction14.byteValue());
      assertEquals((short)0, bigFraction14.shortValue());
      assertSame(bigFraction14, bigFraction11);
      assertSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction0);
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertNotNull(bigFraction14);
      
      long long3 = bigFraction2.getDenominatorAsLong();
      assertEquals((-1078L), long3);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1078, bigFraction2.shortValue());
      assertEquals((byte)54, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction10);
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(long3 == long0);
      assertFalse(long3 == long1);
      assertTrue(long3 == long2);
      
      BigFraction bigFraction15 = bigFraction2.add(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1078, bigFraction2.shortValue());
      assertEquals((byte)54, bigFraction2.byteValue());
      assertEquals((byte)54, bigFraction15.byteValue());
      assertEquals((short)1078, bigFraction15.shortValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertNotNull(bigFraction15);
      
      RoundingMode roundingMode1 = RoundingMode.UP;
      BigDecimal bigDecimal1 = bigFraction15.bigDecimalValue(1673, roundingMode1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1078, bigFraction2.shortValue());
      assertEquals((byte)54, bigFraction2.byteValue());
      assertEquals((byte)54, bigFraction15.byteValue());
      assertEquals((short)1078, bigFraction15.shortValue());
      assertEquals((short)1078, bigDecimal1.shortValue());
      assertEquals((byte)54, bigDecimal1.byteValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(roundingMode1, roundingMode0);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(roundingMode1.equals((Object)roundingMode0));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      
      BigFraction bigFraction16 = BigFraction.of((-1078L));
      assertEquals((byte) (-54), bigFraction16.byteValue());
      assertEquals((short) (-1078), bigFraction16.shortValue());
      assertNotSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction16, bigFraction5);
      assertNotSame(bigFraction16, bigFraction4);
      assertNotSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction15);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction11);
      assertNotSame(bigFraction16, bigFraction14);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigFraction16, bigFraction7);
      assertNotSame(bigFraction16, bigFraction9);
      assertNotSame(bigFraction16, bigFraction1);
      assertNotSame(bigFraction16, bigFraction2);
      assertNotSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction16, bigFraction13);
      assertFalse(bigFraction16.equals((Object)bigFraction10));
      assertFalse(bigFraction16.equals((Object)bigFraction5));
      assertFalse(bigFraction16.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction12));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertFalse(bigFraction16.equals((Object)bigFraction6));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigFraction16.equals((Object)bigFraction7));
      assertFalse(bigFraction16.equals((Object)bigFraction9));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction0));
      assertFalse(bigFraction16.equals((Object)bigFraction8));
      assertFalse(bigFraction16.equals((Object)bigFraction13));
      assertNotNull(bigFraction16);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ZERO;
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.from(1.0);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.ONE.subtract(850L);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte) (-81), bigFraction2.byteValue());
      assertEquals((short) (-849), bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      bigFraction0.hashCode();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      
      BigDecimal bigDecimal0 = bigFraction0.ONE.bigDecimalValue();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction3 = BigFraction.of(850L, 850L);
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.of((-1223), (-1223));
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      String string0 = bigFraction2.ZERO.toString();
      assertEquals("0", string0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte) (-81), bigFraction2.byteValue());
      assertEquals((short) (-849), bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertNotNull(string0);
      
      float float0 = bigFraction2.ZERO.floatValue();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte) (-81), bigFraction2.byteValue());
      assertEquals((short) (-849), bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      
      BigFraction bigFraction5 = BigFraction.parse("0");
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = BigFraction.of((-1311), 3600);
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction6.ONE.multiply(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction2.multiply((-487L));
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte) (-81), bigFraction2.byteValue());
      assertEquals((short) (-849), bigFraction2.shortValue());
      assertEquals((short)20247, bigFraction8.shortValue());
      assertEquals((byte)23, bigFraction8.byteValue());
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertNotNull(bigFraction8);
      
      int int0 = 0;
      // Undeclared exception!
      try { 
        bigFraction0.divide(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // The value to divide by must not be zero
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(82.5934565135, 2444);
      assertEquals((short)82, bigFraction0.shortValue());
      assertEquals((byte)82, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(4503599627370496L);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction2 = bigFraction0.divide(bigInteger0);
      assertEquals((short)82, bigFraction0.shortValue());
      assertEquals((byte)82, bigFraction0.byteValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)8, bigFraction2.shortValue());
      assertEquals((byte)8, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.multiply(2512L);
      assertEquals((short)82, bigFraction0.shortValue());
      assertEquals((byte)82, bigFraction0.byteValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)8, bigFraction2.shortValue());
      assertEquals((byte)8, bigFraction2.byteValue());
      assertEquals((short)20747, bigFraction3.shortValue());
      assertEquals((byte)11, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction2.ONE.multiply(2444);
      assertEquals((short)82, bigFraction0.shortValue());
      assertEquals((byte)82, bigFraction0.byteValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)8, bigFraction2.shortValue());
      assertEquals((byte)8, bigFraction2.byteValue());
      assertEquals((short)2444, bigFraction4.shortValue());
      assertEquals((byte) (-116), bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      
      BigDecimal bigDecimal0 = bigFraction4.ONE.bigDecimalValue();
      assertEquals((short)82, bigFraction0.shortValue());
      assertEquals((byte)82, bigFraction0.byteValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)8, bigFraction2.shortValue());
      assertEquals((byte)8, bigFraction2.byteValue());
      assertEquals((short)2444, bigFraction4.shortValue());
      assertEquals((byte) (-116), bigFraction4.byteValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction5 = BigFraction.of(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)10, bigFraction5.shortValue());
      assertEquals((byte)10, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      bigFraction5.hashCode();
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)10, bigFraction5.shortValue());
      assertEquals((byte)10, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      
      long long0 = bigFraction5.longValue();
      assertEquals(10L, long0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)10, bigFraction5.shortValue());
      assertEquals((byte)10, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      
      int int0 = (-1133);
      BigFraction bigFraction6 = BigFraction.of((-1133));
      assertEquals((byte) (-109), bigFraction6.byteValue());
      assertEquals((short) (-1133), bigFraction6.shortValue());
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction6.divide(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte) (-109), bigFraction6.byteValue());
      assertEquals((short) (-1133), bigFraction6.shortValue());
      assertEquals((byte) (-113), bigFraction7.byteValue());
      assertEquals((short) (-113), bigFraction7.shortValue());
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertNotNull(bigFraction7);
      
      // Undeclared exception!
      try { 
        bigFraction0.bigDecimalValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Non-terminating decimal expansion; no exact representable decimal result.
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-545));
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = bigFraction0.multiply(0L);
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.divide((-545));
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      int int0 = bigFraction1.ONE.intValue();
      assertEquals(1, int0);
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      
      int int1 = bigInteger0.bitLength();
      assertEquals(4, int1);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertFalse(int1 == int0);
      
      BigFraction bigFraction3 = bigFraction0.multiply(bigInteger0);
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte) (-74), bigFraction3.byteValue());
      assertEquals((short) (-5450), bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction0.ONE.abs();
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction4.ZERO.multiply(bigFraction2);
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      BigInteger bigInteger1 = BigInteger.valueOf(250L);
      assertEquals((short)250, bigInteger1.shortValue());
      assertEquals((byte) (-6), bigInteger1.byteValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      BigFraction bigFraction6 = bigFraction3.ONE.subtract(bigFraction0);
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte) (-74), bigFraction3.byteValue());
      assertEquals((short) (-5450), bigFraction3.shortValue());
      assertEquals((byte)34, bigFraction6.byteValue());
      assertEquals((short)546, bigFraction6.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertNotNull(bigFraction6);
      
      int int2 = bigFraction6.ZERO.getDenominatorAsInt();
      assertEquals(1, int2);
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte) (-74), bigFraction3.byteValue());
      assertEquals((short) (-5450), bigFraction3.shortValue());
      assertEquals((byte)34, bigFraction6.byteValue());
      assertEquals((short)546, bigFraction6.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(int2 == int1);
      assertTrue(int2 == int0);
      
      int int3 = bigFraction3.getDenominatorAsInt();
      assertEquals(1, int3);
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte) (-74), bigFraction3.byteValue());
      assertEquals((short) (-5450), bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(int3 == int2);
      assertFalse(int3 == int1);
      assertTrue(int3 == int0);
      
      BigFraction bigFraction7 = bigFraction3.add(bigFraction6);
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte) (-74), bigFraction3.byteValue());
      assertEquals((short) (-5450), bigFraction3.shortValue());
      assertEquals((byte)34, bigFraction6.byteValue());
      assertEquals((short)546, bigFraction6.shortValue());
      assertEquals((short) (-4904), bigFraction7.shortValue());
      assertEquals((byte) (-40), bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(bigFraction7);
      
      byte[] byteArray0 = new byte[2];
      BigFraction bigFraction8 = bigFraction7.ZERO.add(bigFraction3);
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte) (-74), bigFraction3.byteValue());
      assertEquals((short) (-5450), bigFraction3.shortValue());
      assertEquals((byte)34, bigFraction6.byteValue());
      assertEquals((short)546, bigFraction6.shortValue());
      assertEquals((short) (-4904), bigFraction7.shortValue());
      assertEquals((byte) (-40), bigFraction7.byteValue());
      assertEquals((short) (-5450), bigFraction8.shortValue());
      assertEquals((byte) (-74), bigFraction8.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertNotNull(bigFraction8);
      
      BigDecimal bigDecimal0 = bigFraction8.ZERO.bigDecimalValue();
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte) (-74), bigFraction3.byteValue());
      assertEquals((short) (-5450), bigFraction3.shortValue());
      assertEquals((byte)34, bigFraction6.byteValue());
      assertEquals((short)546, bigFraction6.shortValue());
      assertEquals((short) (-4904), bigFraction7.shortValue());
      assertEquals((byte) (-40), bigFraction7.byteValue());
      assertEquals((short) (-5450), bigFraction8.shortValue());
      assertEquals((byte) (-74), bigFraction8.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction9 = bigFraction8.ZERO.subtract(bigFraction5);
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte) (-74), bigFraction3.byteValue());
      assertEquals((short) (-5450), bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((byte)34, bigFraction6.byteValue());
      assertEquals((short)546, bigFraction6.shortValue());
      assertEquals((short) (-4904), bigFraction7.shortValue());
      assertEquals((byte) (-40), bigFraction7.byteValue());
      assertEquals((short) (-5450), bigFraction8.shortValue());
      assertEquals((byte) (-74), bigFraction8.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction9, bigFraction6);
      assertSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction3);
      assertSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction8);
      assertSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigInteger0, bigInteger1);
      assertSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction8);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction6);
      assertSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction9);
      assertSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction7);
      assertSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction8, bigFraction2);
      assertSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertNotNull(bigFraction9);
      
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-36);
      BigInteger bigInteger2 = new BigInteger(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-36)}, byteArray0);
      assertEquals((short)220, bigInteger2.shortValue());
      assertEquals((byte) (-36), bigInteger2.byteValue());
      assertFalse(bigInteger2.equals((Object)bigInteger0));
      assertFalse(bigInteger2.equals((Object)bigInteger1));
      assertNotNull(bigInteger2);
      assertEquals(2, byteArray0.length);
      
      BigFraction bigFraction10 = bigFraction7.divide(bigInteger2);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-36)}, byteArray0);
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)220, bigInteger2.shortValue());
      assertEquals((byte) (-36), bigInteger2.byteValue());
      assertEquals((short) (-22), bigFraction10.shortValue());
      assertEquals((byte) (-22), bigFraction10.byteValue());
      assertEquals((byte) (-74), bigFraction3.byteValue());
      assertEquals((short) (-5450), bigFraction3.shortValue());
      assertEquals((byte)34, bigFraction6.byteValue());
      assertEquals((short)546, bigFraction6.shortValue());
      assertEquals((short) (-4904), bigFraction7.shortValue());
      assertEquals((byte) (-40), bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigInteger2, bigInteger0);
      assertNotSame(bigInteger2, bigInteger1);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction10);
      assertSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigInteger2.equals((Object)bigInteger0));
      assertFalse(bigInteger2.equals((Object)bigInteger1));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertNotNull(bigFraction10);
      assertEquals(2, byteArray0.length);
      
      BigFraction bigFraction11 = bigFraction7.negate();
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)40, bigFraction11.byteValue());
      assertEquals((short)4904, bigFraction11.shortValue());
      assertEquals((byte) (-74), bigFraction3.byteValue());
      assertEquals((short) (-5450), bigFraction3.shortValue());
      assertEquals((byte)34, bigFraction6.byteValue());
      assertEquals((short)546, bigFraction6.shortValue());
      assertEquals((short) (-4904), bigFraction7.shortValue());
      assertEquals((byte) (-40), bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction10);
      assertSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertNotNull(bigFraction11);
      
      int int4 = bigFraction8.compareTo(bigFraction3);
      assertEquals(0, int4);
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte) (-74), bigFraction3.byteValue());
      assertEquals((short) (-5450), bigFraction3.shortValue());
      assertEquals((byte)34, bigFraction6.byteValue());
      assertEquals((short)546, bigFraction6.shortValue());
      assertEquals((short) (-4904), bigFraction7.shortValue());
      assertEquals((byte) (-40), bigFraction7.byteValue());
      assertEquals((short) (-5450), bigFraction8.shortValue());
      assertEquals((byte) (-74), bigFraction8.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction10);
      assertSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction8, bigFraction2);
      assertSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(int4 == int1);
      assertFalse(int4 == int3);
      assertFalse(int4 == int0);
      assertFalse(int4 == int2);
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      
      BigFraction bigFraction12 = bigFraction7.multiply(767L);
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte) (-74), bigFraction3.byteValue());
      assertEquals((short) (-5450), bigFraction3.shortValue());
      assertEquals((byte)40, bigFraction12.byteValue());
      assertEquals((short) (-25816), bigFraction12.shortValue());
      assertEquals((byte)34, bigFraction6.byteValue());
      assertEquals((short)546, bigFraction6.shortValue());
      assertEquals((short) (-4904), bigFraction7.shortValue());
      assertEquals((byte) (-40), bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction10);
      assertSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction12);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertNotNull(bigFraction12);
      
      BigFraction bigFraction13 = BigFraction.of(bigInteger0, bigInteger1);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction13.byteValue());
      assertEquals((short)0, bigFraction13.shortValue());
      assertEquals((short)250, bigInteger1.shortValue());
      assertEquals((byte) (-6), bigInteger1.byteValue());
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigInteger1, bigInteger2);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigInteger1.equals((Object)bigInteger2));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigFraction13);
      
      BigFraction bigFraction14 = BigFraction.of(4, 1);
      assertEquals((short)4, bigFraction14.shortValue());
      assertEquals((byte)4, bigFraction14.byteValue());
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction9);
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertNotNull(bigFraction14);
      
      BigInteger bigInteger3 = bigFraction7.getDenominator();
      assertEquals((short) (-545), bigFraction0.shortValue());
      assertEquals((byte) (-33), bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte) (-74), bigFraction3.byteValue());
      assertEquals((short) (-5450), bigFraction3.shortValue());
      assertEquals((byte)34, bigFraction6.byteValue());
      assertEquals((short)546, bigFraction6.shortValue());
      assertEquals((short)1, bigInteger3.shortValue());
      assertEquals((byte)1, bigInteger3.byteValue());
      assertEquals((short) (-4904), bigFraction7.shortValue());
      assertEquals((byte) (-40), bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger0, bigInteger3);
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction9);
      assertSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction14);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction13);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction12);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigInteger3, bigInteger2);
      assertNotSame(bigInteger3, bigInteger1);
      assertNotSame(bigInteger3, bigInteger0);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction14);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction14));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction13));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction12));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigInteger3.equals((Object)bigInteger2));
      assertFalse(bigInteger3.equals((Object)bigInteger1));
      assertFalse(bigInteger3.equals((Object)bigInteger0));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction14));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(bigInteger3);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(0.002465477373334579, (-1131));
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.divide(107198);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-1), 1075);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.ZERO.multiply((long) 1075);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.divide(1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      long long0 = 0L;
      long long1 = bigFraction2.getDenominatorAsLong();
      assertEquals(1075L, long1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(long1 == long0);
      
      BigFraction bigFraction3 = bigFraction2.subtract(0L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertSame(bigFraction3, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.reciprocal();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short) (-1075), bigFraction4.shortValue());
      assertEquals((byte) (-51), bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      String string0 = bigFraction3.toString();
      assertEquals("-1 / 1075", string0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertSame(bigFraction3, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertNotNull(string0);
      
      int int0 = bigFraction0.getDenominatorAsInt();
      assertEquals(1075, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction5 = bigFraction2.subtract(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte) (-10), bigFraction5.byteValue());
      assertEquals((short) (-10), bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      float float0 = bigFraction2.floatValue();
      assertEquals((-9.302326E-4F), float0, 0.01F);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      
      BigFraction bigFraction6 = bigFraction1.add(bigFraction4);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short) (-1075), bigFraction4.shortValue());
      assertEquals((byte) (-51), bigFraction4.byteValue());
      assertEquals((byte) (-51), bigFraction6.byteValue());
      assertEquals((short) (-1075), bigFraction6.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction5);
      assertSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction6.reciprocal();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short) (-1075), bigFraction4.shortValue());
      assertEquals((byte) (-51), bigFraction4.byteValue());
      assertEquals((byte) (-51), bigFraction6.byteValue());
      assertEquals((short) (-1075), bigFraction6.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction7);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction5);
      assertSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction7);
      assertSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertTrue(bigFraction7.equals((Object)bigFraction3));
      assertTrue(bigFraction7.equals((Object)bigFraction2));
      assertTrue(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(bigFraction7);
      
      // Undeclared exception!
      try { 
        BigFraction.of((long) 1, 0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(82.5934565135, 2435);
      assertEquals((byte)82, bigFraction0.byteValue());
      assertEquals((short)82, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(4503599627370496L);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction2 = bigFraction1.add(bigInteger0);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      // Undeclared exception!
      try { 
        BigFraction.from((double) 4503599627370496L, 82.5934565135, 2510);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Overflow trying to convert 4.503599627370496E15 to fraction (4503599627370496/1)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      byte[] byteArray0 = bigInteger0.toByteArray();
      assertArrayEquals(new byte[] {(byte)1}, byteArray0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(byteArray0);
      assertEquals(1, byteArray0.length);
      
      String string0 = bigInteger0.toString();
      assertEquals("1", string0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(string0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of((-916), 1669);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.divide((-1133L));
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.of(1669);
      assertEquals((byte) (-123), bigFraction4.byteValue());
      assertEquals((short)1669, bigFraction4.shortValue());
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction5.ZERO.abs();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = BigFraction.from(1092.66618, (-1136));
      assertEquals((short)1092, bigFraction7.shortValue());
      assertEquals((byte)68, bigFraction7.byteValue());
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertNotNull(bigFraction7);
      
      float float0 = bigFraction1.floatValue();
      assertEquals((-0.54883164F), float0, 0.01F);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      
      BigInteger bigInteger1 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertSame(bigInteger1, bigInteger0);
      assertNotNull(bigInteger1);
      
      BigInteger bigInteger2 = bigInteger0.max(bigInteger1);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((short)1, bigInteger2.shortValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      assertSame(bigInteger0, bigInteger2);
      assertSame(bigInteger0, bigInteger1);
      assertSame(bigInteger1, bigInteger0);
      assertSame(bigInteger1, bigInteger2);
      assertSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertNotNull(bigInteger2);
      
      BigFraction bigFraction8 = BigFraction.from(0.0);
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction7);
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = bigFraction4.subtract(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte) (-123), bigFraction4.byteValue());
      assertEquals((short)1669, bigFraction4.shortValue());
      assertEquals((short)1668, bigFraction9.shortValue());
      assertEquals((byte) (-124), bigFraction9.byteValue());
      assertSame(bigInteger0, bigInteger2);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertNotNull(bigFraction9);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte) (-73);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-50);
      byteArray0[5] = (byte)0;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertArrayEquals(new byte[] {(byte)110, (byte)23, (byte) (-73), (byte)0, (byte) (-50), (byte)0}, byteArray0);
      assertEquals((short) (-12800), bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      assertEquals(6, byteArray0.length);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0);
      assertArrayEquals(new byte[] {(byte)110, (byte)23, (byte) (-73), (byte)0, (byte) (-50), (byte)0}, byteArray0);
      assertEquals((short) (-12800), bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short) (-12800), bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      assertEquals(6, byteArray0.length);
      
      // Undeclared exception!
      try { 
        BigFraction.parse(".g/hH'6C");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \".g\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(1L, 1L);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      long long0 = bigFraction0.longValue();
      assertEquals(1L, long0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      long long1 = (-2522L);
      // Undeclared exception!
      try { 
        bigFraction0.ONE.divide((BigFraction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-182L), (-609L));
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.negate();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.ONE.add(0L);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      int int0 = bigFraction0.intValue();
      assertEquals(0, int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      
      int int1 = bigFraction0.ZERO.intValue();
      assertEquals(0, int1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(int1 == int0);
      
      long long0 = bigFraction1.longValue();
      assertEquals(0L, long0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      
      BigFraction bigFraction3 = bigFraction0.subtract(0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      boolean boolean0 = bigFraction0.equals(bigFraction3);
      assertTrue(boolean0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      
      BigFraction bigFraction4 = BigFraction.of((long) 0, 0L);
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction3.ZERO.add(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction6 = bigFraction5.divide(bigInteger0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = BigFraction.from(1860.56826677, 0.0, 1110);
      assertEquals((short)1860, bigFraction7.shortValue());
      assertEquals((byte)68, bigFraction7.byteValue());
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction7);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte)64;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      assertArrayEquals(new byte[] {(byte)124, (byte)64}, byteArray0);
      assertEquals((short)31808, bigInteger1.shortValue());
      assertEquals((byte)64, bigInteger1.byteValue());
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals(2, byteArray0.length);
      
      BigFraction bigFraction8 = BigFraction.of(bigInteger1);
      assertArrayEquals(new byte[] {(byte)124, (byte)64}, byteArray0);
      assertEquals((short)31808, bigInteger1.shortValue());
      assertEquals((byte)64, bigInteger1.byteValue());
      assertEquals((byte)64, bigFraction8.byteValue());
      assertEquals((short)31808, bigFraction8.shortValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction1);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertNotNull(bigFraction8);
      assertEquals(2, byteArray0.length);
      
      int int2 = bigFraction0.intValue();
      assertEquals(0, int2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      
      int int3 = bigFraction1.signum();
      assertEquals((-1), int3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      
      BigFraction bigFraction9 = bigFraction3.add(bigFraction8);
      assertArrayEquals(new byte[] {(byte)124, (byte)64}, byteArray0);
      assertEquals((short)31808, bigInteger1.shortValue());
      assertEquals((byte)64, bigInteger1.byteValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)64, bigFraction8.byteValue());
      assertEquals((short)31808, bigFraction8.shortValue());
      assertEquals((short)31808, bigFraction9.shortValue());
      assertEquals((byte)64, bigFraction9.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction7);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertNotNull(bigFraction9);
      assertEquals(2, byteArray0.length);
      
      BigFraction bigFraction10 = bigFraction3.multiply(bigFraction9);
      assertArrayEquals(new byte[] {(byte)124, (byte)64}, byteArray0);
      assertEquals((short)31808, bigInteger1.shortValue());
      assertEquals((byte)64, bigInteger1.byteValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)64, bigFraction8.byteValue());
      assertEquals((short)31808, bigFraction8.shortValue());
      assertEquals((short)31808, bigFraction9.shortValue());
      assertEquals((byte)64, bigFraction9.byteValue());
      assertEquals((short)9505, bigFraction10.shortValue());
      assertEquals((byte)33, bigFraction10.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction7);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertNotNull(bigFraction10);
      assertEquals(2, byteArray0.length);
      
      BigFraction bigFraction11 = bigFraction8.subtract((long) 0);
      assertArrayEquals(new byte[] {(byte)124, (byte)64}, byteArray0);
      assertEquals((short)31808, bigInteger1.shortValue());
      assertEquals((byte)64, bigInteger1.byteValue());
      assertEquals((byte)64, bigFraction8.byteValue());
      assertEquals((short)31808, bigFraction8.shortValue());
      assertEquals((short)31808, bigFraction11.shortValue());
      assertEquals((byte)64, bigFraction11.byteValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction10);
      assertSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction2);
      assertSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction7);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertNotNull(bigFraction11);
      assertEquals(2, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-438L), (-438L));
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(1103L, (-438L));
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = bigFraction0.getNumerator();
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte) (-1), bigInteger0.byteValue());
      assertEquals((short) (-1), bigInteger0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction2 = BigFraction.from(0.0, 1);
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      boolean boolean0 = bigFraction0.equals(bigFraction1);
      assertFalse(boolean0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      
      BigFraction bigFraction3 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte) (-1), bigInteger0.byteValue());
      assertEquals((short) (-1), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigInteger bigInteger1 = bigFraction1.getNumerator();
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertEquals((byte)79, bigInteger1.byteValue());
      assertEquals((short)1103, bigInteger1.shortValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      long long0 = bigFraction1.getDenominatorAsLong();
      assertEquals((-438L), long0);
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      
      RoundingMode roundingMode0 = RoundingMode.HALF_DOWN;
      BigDecimal bigDecimal0 = bigFraction1.bigDecimalValue(0, roundingMode0);
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertEquals((short) (-3), bigDecimal0.shortValue());
      assertEquals((byte) (-3), bigDecimal0.byteValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction4 = bigFraction0.multiply(bigInteger1);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertEquals((byte)79, bigInteger1.byteValue());
      assertEquals((short)1103, bigInteger1.shortValue());
      assertEquals((byte)79, bigFraction4.byteValue());
      assertEquals((short)1103, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      
      int int0 = bigFraction2.compareTo(bigFraction1);
      assertEquals(1, int0);
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      
      BigFraction bigFraction5 = BigFraction.of((-1486L), (-2124L));
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction5.ZERO.pow(2923);
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      
      int int1 = bigFraction3.getNumeratorAsInt();
      assertEquals((-1), int1);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte) (-1), bigInteger0.byteValue());
      assertEquals((short) (-1), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(int1 == int0);
      
      BigFraction bigFraction7 = bigFraction4.divide(bigInteger0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertEquals((byte) (-1), bigInteger0.byteValue());
      assertEquals((short) (-1), bigInteger0.shortValue());
      assertEquals((byte)79, bigInteger1.byteValue());
      assertEquals((short)1103, bigInteger1.shortValue());
      assertEquals((byte)79, bigFraction4.byteValue());
      assertEquals((short)1103, bigFraction4.shortValue());
      assertEquals((short) (-1103), bigFraction7.shortValue());
      assertEquals((byte) (-79), bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(bigFraction7);
      
      int int2 = bigFraction7.ONE.hashCode();
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertEquals((byte) (-1), bigInteger0.byteValue());
      assertEquals((short) (-1), bigInteger0.shortValue());
      assertEquals((byte)79, bigInteger1.byteValue());
      assertEquals((short)1103, bigInteger1.shortValue());
      assertEquals((byte)79, bigFraction4.byteValue());
      assertEquals((short)1103, bigFraction4.shortValue());
      assertEquals((short) (-1103), bigFraction7.shortValue());
      assertEquals((byte) (-79), bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      
      RoundingMode roundingMode1 = RoundingMode.HALF_EVEN;
      BigDecimal bigDecimal1 = bigFraction0.bigDecimalValue(1416, roundingMode1);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(roundingMode1, roundingMode0);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(roundingMode1.equals((Object)roundingMode0));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      
      BigFraction bigFraction8 = bigFraction1.multiply((-1486L));
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertEquals((short)3742, bigFraction8.shortValue());
      assertEquals((byte) (-98), bigFraction8.byteValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertNotNull(bigFraction8);
      
      int int3 = bigFraction8.getNumeratorAsInt();
      assertEquals((-819529), int3);
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertEquals((short)3742, bigFraction8.shortValue());
      assertEquals((byte) (-98), bigFraction8.byteValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      long long0 = 1267L;
      BigFraction bigFraction0 = BigFraction.of(1267L);
      assertEquals((short)1267, bigFraction0.shortValue());
      assertEquals((byte) (-13), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      RoundingMode roundingMode0 = RoundingMode.CEILING;
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue(roundingMode0);
      assertEquals((short)1267, bigFraction0.shortValue());
      assertEquals((byte) (-13), bigFraction0.byteValue());
      assertEquals((short)1267, bigDecimal0.shortValue());
      assertEquals((byte) (-13), bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = bigFraction0.divide(bigInteger0);
      assertEquals((short)1267, bigFraction0.shortValue());
      assertEquals((byte) (-13), bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte) (-13), bigFraction1.byteValue());
      assertEquals((short)1267, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      int int0 = bigFraction1.ZERO.getDenominatorAsInt();
      assertEquals(1, int0);
      assertEquals((short)1267, bigFraction0.shortValue());
      assertEquals((byte) (-13), bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte) (-13), bigFraction1.byteValue());
      assertEquals((short)1267, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      
      BigDecimal bigDecimal1 = bigFraction0.bigDecimalValue();
      assertEquals((short)1267, bigFraction0.shortValue());
      assertEquals((byte) (-13), bigFraction0.byteValue());
      assertEquals((byte) (-13), bigDecimal1.byteValue());
      assertEquals((short)1267, bigDecimal1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      
      BigFraction bigFraction2 = bigFraction1.subtract(bigFraction0);
      assertEquals((short)1267, bigFraction0.shortValue());
      assertEquals((byte) (-13), bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte) (-13), bigFraction1.byteValue());
      assertEquals((short)1267, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      double double0 = 2178.9485212120553;
      int int1 = 958;
      BigFraction bigFraction3 = BigFraction.from(2178.9485212120553, 958);
      assertEquals((short)2178, bigFraction3.shortValue());
      assertEquals((byte) (-126), bigFraction3.byteValue());
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      // Undeclared exception!
      try { 
        BigFraction.of(bigInteger0, (BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int int0 = 0;
      BigFraction bigFraction0 = BigFraction.of(0, 0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      double double0 = 3563.361830573838;
      // Undeclared exception!
      try { 
        bigFraction0.ONE.subtract((BigFraction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ZERO;
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = bigFraction0.equals(object0);
      assertFalse(boolean0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      RoundingMode roundingMode0 = RoundingMode.CEILING;
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue(roundingMode0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction1 = BigFraction.from(1124.16726);
      assertEquals((short)1124, bigFraction1.shortValue());
      assertEquals((byte)100, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.multiply(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1124, bigFraction1.shortValue());
      assertEquals((byte)100, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction0.ONE.subtract(1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction0);
      assertSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.ONE.divide((-1));
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short) (-1), bigFraction4.shortValue());
      assertEquals((byte) (-1), bigFraction4.byteValue());
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction0);
      assertSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.of(0L);
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertSame(bigFraction5, bigFraction3);
      assertSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction0);
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction4.ONE.add(0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short) (-1), bigFraction4.shortValue());
      assertEquals((byte) (-1), bigFraction4.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction0);
      assertSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertNotNull(bigFraction6);
      
      int int0 = bigFraction3.ZERO.getDenominatorAsInt();
      assertEquals(1, int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction0);
      assertSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      
      BigFraction bigFraction7 = bigFraction4.ONE.multiply((-593));
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short) (-1), bigFraction4.shortValue());
      assertEquals((byte) (-1), bigFraction4.byteValue());
      assertEquals((byte) (-81), bigFraction7.byteValue());
      assertEquals((short) (-593), bigFraction7.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction0);
      assertSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(bigFraction7);
      
      BigDecimal bigDecimal1 = bigFraction1.bigDecimalValue(roundingMode0);
      assertEquals((short)1124, bigFraction1.shortValue());
      assertEquals((byte)100, bigFraction1.byteValue());
      assertEquals((short)1125, bigDecimal1.shortValue());
      assertEquals((byte)101, bigDecimal1.byteValue());
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      
      int int1 = bigFraction2.signum();
      assertEquals(0, int1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1124, bigFraction1.shortValue());
      assertEquals((byte)100, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction6);
      assertSame(bigFraction2, bigFraction3);
      assertSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(int1 == int0);
      
      BigFraction bigFraction8 = bigFraction2.multiply(1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1124, bigFraction1.shortValue());
      assertEquals((byte)100, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction6);
      assertSame(bigFraction2, bigFraction8);
      assertSame(bigFraction2, bigFraction3);
      assertSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertSame(bigFraction8, bigFraction0);
      assertSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertSame(bigFraction8, bigFraction3);
      assertSame(bigFraction8, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = BigFraction.from((double) 0);
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction1);
      assertSame(bigFraction9, bigFraction2);
      assertSame(bigFraction9, bigFraction8);
      assertSame(bigFraction9, bigFraction0);
      assertSame(bigFraction9, bigFraction3);
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertNotNull(bigFraction9);
      
      // Undeclared exception!
      try { 
        BigFraction.of(2267L, 0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = 3115;
      BigFraction bigFraction0 = BigFraction.of(3115);
      assertEquals((byte)43, bigFraction0.byteValue());
      assertEquals((short)3115, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.divide(3115);
      assertEquals((byte)43, bigFraction0.byteValue());
      assertEquals((short)3115, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.divide(3115);
      assertEquals((byte)43, bigFraction0.byteValue());
      assertEquals((short)3115, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      int int1 = 0;
      BigFraction bigFraction3 = bigFraction1.subtract(0);
      assertEquals((byte)43, bigFraction0.byteValue());
      assertEquals((short)3115, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction0.add((long) 3115);
      assertEquals((byte)43, bigFraction0.byteValue());
      assertEquals((short)3115, bigFraction0.shortValue());
      assertEquals((short)6230, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction5 = bigFraction4.ZERO.multiply((long) 3115);
      assertEquals((byte)43, bigFraction0.byteValue());
      assertEquals((short)3115, bigFraction0.shortValue());
      assertEquals((short)6230, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction4.ZERO.multiply(bigInteger0);
      assertEquals((byte)43, bigFraction0.byteValue());
      assertEquals((short)3115, bigFraction0.shortValue());
      assertEquals((short)6230, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction4.divide((-1926L));
      assertEquals((byte)43, bigFraction0.byteValue());
      assertEquals((short)3115, bigFraction0.shortValue());
      assertEquals((short)6230, bigFraction4.shortValue());
      assertEquals((byte)86, bigFraction4.byteValue());
      assertEquals((short) (-3), bigFraction7.shortValue());
      assertEquals((byte) (-3), bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertNotNull(bigFraction7);
      
      BigInteger bigInteger1 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger1.byteValue());
      assertEquals((short)0, bigInteger1.shortValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      // Undeclared exception!
      try { 
        bigFraction4.divide(bigInteger1);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // The value to divide by must not be zero
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(2147483648L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.reciprocal();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.negate();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = BigFraction.from(0.0);
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      int int0 = bigFraction0.ZERO.compareTo(bigFraction1);
      assertEquals((-1), int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction4 = bigFraction0.ZERO.divide(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.from((double) 2147483648L, 986);
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      long long0 = bigFraction1.getNumeratorAsLong();
      assertEquals(1L, long0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      
      String string0 = bigFraction5.ZERO.toString();
      assertEquals("0", string0);
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(string0);
      
      String string1 = bigFraction1.toString();
      assertEquals("1 / 2147483648", string1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      long long1 = bigFraction1.longValue();
      assertEquals(0L, long1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(long1 == long0);
      
      BigFraction bigFraction6 = bigFraction5.multiply(2324);
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      
      BigDecimal bigDecimal0 = bigFraction2.bigDecimalValue();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction7 = bigFraction4.pow(986);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertNotNull(bigFraction7);
      
      int int1 = bigFraction6.intValue();
      assertEquals(0, int1);
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(int1 == int0);
      
      BigInteger bigInteger1 = BigInteger.TEN;
      assertEquals((byte)10, bigInteger1.byteValue());
      assertEquals((short)10, bigInteger1.shortValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      BigFraction bigFraction8 = BigFraction.of(bigInteger0, bigInteger1);
      assertEquals((byte)10, bigInteger1.byteValue());
      assertEquals((short)10, bigInteger1.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigInteger0, bigInteger1);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertNotNull(bigFraction8);
      
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      BigDecimal bigDecimal1 = bigFraction8.ZERO.bigDecimalValue(roundingMode0);
      assertEquals((byte)10, bigInteger1.byteValue());
      assertEquals((short)10, bigInteger1.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(bigInteger0, bigInteger1);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertNotNull(bigDecimal1);
      
      BigFraction bigFraction9 = bigFraction4.add(bigFraction5);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction3);
      assertSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertTrue(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = bigFraction1.add(bigInteger1);
      assertEquals((byte)10, bigInteger1.byteValue());
      assertEquals((short)10, bigInteger1.shortValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)10, bigFraction10.byteValue());
      assertEquals((short)10, bigFraction10.shortValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertNotNull(bigFraction10);
      
      BigFraction bigFraction11 = bigFraction1.ZERO.pow(1011);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      assertEquals((short)0, bigFraction11.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction6);
      assertSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction9);
      assertSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertNotNull(bigFraction11);
      
      BigFraction bigFraction12 = bigFraction10.add(2324);
      assertEquals((byte)10, bigInteger1.byteValue());
      assertEquals((short)10, bigInteger1.shortValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)10, bigFraction10.byteValue());
      assertEquals((short)10, bigFraction10.shortValue());
      assertEquals((short)2334, bigFraction12.shortValue());
      assertEquals((byte)30, bigFraction12.byteValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction12);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction6);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction11));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertNotNull(bigFraction12);
      
      BigFraction bigFraction13 = BigFraction.of((-1L));
      assertEquals((short) (-1), bigFraction13.shortValue());
      assertEquals((byte) (-1), bigFraction13.byteValue());
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction9);
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertNotNull(bigFraction13);
      
      BigFraction bigFraction14 = bigFraction12.multiply(bigInteger1);
      assertEquals((byte)10, bigInteger1.byteValue());
      assertEquals((short)10, bigInteger1.shortValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)10, bigFraction10.byteValue());
      assertEquals((short)10, bigFraction10.shortValue());
      assertEquals((short)2334, bigFraction12.shortValue());
      assertEquals((byte)30, bigFraction12.byteValue());
      assertEquals((byte)44, bigFraction14.byteValue());
      assertEquals((short)23340, bigFraction14.shortValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction10, bigFraction12);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction14);
      assertNotSame(bigFraction10, bigFraction13);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction14);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction5);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertTrue(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction10.equals((Object)bigFraction12));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction13));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction11));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertNotNull(bigFraction14);
      
      BigFraction bigFraction15 = bigFraction6.divide(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((byte)0, bigFraction15.byteValue());
      assertEquals((short)0, bigFraction15.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertNotSame(bigInteger0, bigInteger1);
      assertSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction15);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction14);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction13);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction15);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction14);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction12);
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction14));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertTrue(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction13));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction14));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction12));
      assertNotNull(bigFraction15);
      
      BigFraction bigFraction16 = bigFraction2.add(2324);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)2323, bigFraction16.shortValue());
      assertEquals((byte)19, bigFraction16.byteValue());
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction2);
      assertNotSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction16, bigFraction11);
      assertNotSame(bigFraction16, bigFraction15);
      assertNotSame(bigFraction16, bigFraction1);
      assertNotSame(bigFraction16, bigFraction4);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction7);
      assertNotSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction16, bigFraction9);
      assertNotSame(bigFraction16, bigFraction13);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigFraction16, bigFraction14);
      assertNotSame(bigFraction16, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertTrue(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction16.equals((Object)bigFraction12));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction8));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction6));
      assertFalse(bigFraction16.equals((Object)bigFraction7));
      assertFalse(bigFraction16.equals((Object)bigFraction0));
      assertFalse(bigFraction16.equals((Object)bigFraction10));
      assertFalse(bigFraction16.equals((Object)bigFraction9));
      assertFalse(bigFraction16.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction5));
      assertNotNull(bigFraction16);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(31, 1075);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.ZERO.multiply((long) 1075);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.divide(1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      long long0 = 0L;
      long long1 = bigFraction2.getDenominatorAsLong();
      assertEquals(1075L, long1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(long1 == long0);
      
      BigFraction bigFraction3 = bigFraction2.subtract(0L);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.reciprocal();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)34, bigFraction4.byteValue());
      assertEquals((short)34, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      String string0 = bigFraction2.toString();
      assertEquals("31 / 1075", string0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(string0);
      
      int int0 = bigFraction0.getDenominatorAsInt();
      assertEquals(1075, int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction5 = bigFraction2.subtract(bigInteger0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short) (-9), bigFraction5.shortValue());
      assertEquals((byte) (-9), bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      float float0 = bigFraction2.floatValue();
      assertEquals(0.02883721F, float0, 0.01F);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      
      BigFraction bigFraction6 = bigFraction1.add(bigFraction4);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)34, bigFraction4.byteValue());
      assertEquals((short)34, bigFraction4.shortValue());
      assertEquals((byte)34, bigFraction6.byteValue());
      assertEquals((short)34, bigFraction6.shortValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction6.reciprocal();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)34, bigFraction4.byteValue());
      assertEquals((short)34, bigFraction4.shortValue());
      assertEquals((byte)34, bigFraction6.byteValue());
      assertEquals((short)34, bigFraction6.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertTrue(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertTrue(bigFraction7.equals((Object)bigFraction3));
      assertTrue(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertNotNull(bigFraction7);
      
      // Undeclared exception!
      try { 
        BigFraction.of((long) 1, 0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from((-428.7879378981));
      assertEquals((byte)84, bigFraction0.byteValue());
      assertEquals((short) (-428), bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-11);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertArrayEquals(new byte[] {(byte)8, (byte)55, (byte)24, (byte)59, (byte)0, (byte) (-1), (byte)0, (byte) (-11)}, byteArray0);
      assertEquals((byte) (-11), bigInteger0.byteValue());
      assertEquals((short)245, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      assertEquals(8, byteArray0.length);
      
      BigFraction bigFraction1 = BigFraction.of(bigInteger0);
      assertArrayEquals(new byte[] {(byte)8, (byte)55, (byte)24, (byte)59, (byte)0, (byte) (-1), (byte)0, (byte) (-11)}, byteArray0);
      assertEquals((byte) (-11), bigInteger0.byteValue());
      assertEquals((short)245, bigInteger0.shortValue());
      assertEquals((byte) (-11), bigFraction1.byteValue());
      assertEquals((short)245, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals(8, byteArray0.length);
      
      bigFraction0.hashCode();
      assertEquals((byte)84, bigFraction0.byteValue());
      assertEquals((short) (-428), bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      
      String string0 = bigFraction0.toString();
      assertEquals("-7543317177104869 / 17592186044416", string0);
      assertEquals((byte)84, bigFraction0.byteValue());
      assertEquals((short) (-428), bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)23;
      byteArray0[5] = (byte) (-113);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)64, (byte)0, (byte)0, (byte)23, (byte) (-113)}, byteArray0);
      assertEquals((byte) (-113), bigInteger0.byteValue());
      assertEquals((short)6031, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      assertEquals(6, byteArray0.length);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0);
      assertArrayEquals(new byte[] {(byte)0, (byte)64, (byte)0, (byte)0, (byte)23, (byte) (-113)}, byteArray0);
      assertEquals((byte) (-113), bigInteger0.byteValue());
      assertEquals((short)6031, bigInteger0.shortValue());
      assertEquals((byte) (-113), bigFraction0.byteValue());
      assertEquals((short)6031, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      assertEquals(6, byteArray0.length);
      
      BigFraction bigFraction1 = bigFraction0.reciprocal();
      assertArrayEquals(new byte[] {(byte)0, (byte)64, (byte)0, (byte)0, (byte)23, (byte) (-113)}, byteArray0);
      assertEquals((byte) (-113), bigInteger0.byteValue());
      assertEquals((short)6031, bigInteger0.shortValue());
      assertEquals((byte) (-113), bigFraction0.byteValue());
      assertEquals((short)6031, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals(6, byteArray0.length);
      
      int int0 = bigFraction0.signum();
      assertEquals(1, int0);
      assertArrayEquals(new byte[] {(byte)0, (byte)64, (byte)0, (byte)0, (byte)23, (byte) (-113)}, byteArray0);
      assertEquals((byte) (-113), bigInteger0.byteValue());
      assertEquals((short)6031, bigInteger0.shortValue());
      assertEquals((byte) (-113), bigFraction0.byteValue());
      assertEquals((short)6031, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertEquals(6, byteArray0.length);
      
      BigFraction bigFraction2 = BigFraction.of(bigInteger0, bigInteger0);
      assertArrayEquals(new byte[] {(byte)0, (byte)64, (byte)0, (byte)0, (byte)23, (byte) (-113)}, byteArray0);
      assertEquals((byte) (-113), bigInteger0.byteValue());
      assertEquals((short)6031, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals(6, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = 0;
      BigFraction bigFraction0 = BigFraction.of(0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      float float0 = bigFraction0.floatValue();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.add(0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction0);
      assertNotNull(bigFraction1);
      
      int int1 = bigFraction0.hashCode();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertSame(bigFraction0, bigFraction1);
      assertTrue(int1 == int0);
      
      BigFraction bigFraction2 = bigFraction0.subtract(0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction0);
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction0.multiply(0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction3, bigFraction0);
      assertSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction1);
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction0.add(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction2, bigFraction3);
      assertSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction0);
      assertSame(bigFraction4, bigFraction0);
      assertSame(bigFraction4, bigFraction2);
      assertSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction3);
      assertNotNull(bigFraction4);
      
      int int2 = bigFraction4.ONE.getNumeratorAsInt();
      assertEquals(1, int2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction2, bigFraction3);
      assertSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction0);
      assertSame(bigFraction4, bigFraction0);
      assertSame(bigFraction4, bigFraction2);
      assertSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction3);
      assertFalse(int2 == int0);
      
      // Undeclared exception!
      try { 
        bigFraction4.ZERO.divide(bigFraction1);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // The value to divide by must not be zero
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(0L, (-354L));
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(52);
      assertEquals((short)52, bigFraction1.shortValue());
      assertEquals((byte)52, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.ZERO.subtract((-2328));
      assertEquals((short)52, bigFraction1.shortValue());
      assertEquals((byte)52, bigFraction1.byteValue());
      assertEquals((short)2328, bigFraction2.shortValue());
      assertEquals((byte)24, bigFraction2.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      // Undeclared exception!
      try { 
        bigFraction1.bigDecimalValue((-1099), roundingMode0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Rounding necessary
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(64);
      assertEquals((byte)64, bigFraction0.byteValue());
      assertEquals((short)64, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = bigFraction0.multiply(bigInteger0);
      assertEquals((byte)64, bigFraction0.byteValue());
      assertEquals((short)64, bigFraction0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = BigFraction.of(64);
      assertEquals((byte)64, bigFraction2.byteValue());
      assertEquals((short)64, bigFraction2.shortValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      int int0 = bigInteger0.getLowestSetBit();
      assertEquals((-1), int0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      
      RoundingMode roundingMode0 = RoundingMode.HALF_EVEN;
      BigDecimal bigDecimal0 = bigFraction2.ZERO.bigDecimalValue(roundingMode0);
      assertEquals((byte)64, bigFraction2.byteValue());
      assertEquals((short)64, bigFraction2.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction3 = BigFraction.from((double) 64);
      assertEquals((byte)64, bigFraction3.byteValue());
      assertEquals((short)64, bigFraction3.shortValue());
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction1.pow(64);
      assertEquals((byte)64, bigFraction0.byteValue());
      assertEquals((short)64, bigFraction0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.of((-581));
      assertEquals((short) (-581), bigFraction5.shortValue());
      assertEquals((byte) (-69), bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction1.divide((-581));
      assertEquals((byte)64, bigFraction0.byteValue());
      assertEquals((short)64, bigFraction0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertNotNull(bigFraction6);
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)68;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)1;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)68, (byte) (-1), (byte)1}, byteArray0);
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short) (-255), bigInteger1.shortValue());
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals(5, byteArray0.length);
      
      BigFraction bigFraction7 = bigFraction3.divide(bigInteger1);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)68, (byte) (-1), (byte)1}, byteArray0);
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short) (-255), bigInteger1.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((byte)64, bigFraction3.byteValue());
      assertEquals((short)64, bigFraction3.shortValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertNotNull(bigFraction7);
      assertEquals(5, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(102, 102);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      int int0 = bigFraction1.ZERO.compareTo(bigFraction0);
      assertEquals((-1), int0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      
      BigFraction bigFraction2 = BigFraction.of((-2460L), (-2460L));
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.add(bigFraction1);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      RoundingMode roundingMode0 = RoundingMode.HALF_UP;
      BigFraction bigFraction4 = bigFraction0.divide((-2460L));
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      BigDecimal bigDecimal0 = bigFraction2.bigDecimalValue(roundingMode0);
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction5 = bigFraction0.ONE.add(1574L);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)39, bigFraction5.byteValue());
      assertEquals((short)1575, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      
      long long0 = bigFraction0.getNumeratorAsLong();
      assertEquals(1L, long0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      
      // Undeclared exception!
      try { 
        bigFraction2.ZERO.divide((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(9218868437227405312L);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = bigFraction0.subtract(9218868437227405312L);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.ZERO.add(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.subtract(0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction4);
      assertSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigInteger bigInteger1 = bigFraction0.getDenominator();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      int int0 = bigFraction2.intValue();
      assertEquals(1, int0);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      
      BigFraction bigFraction5 = bigFraction4.subtract(0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction3, bigFraction5);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction4);
      assertSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertSame(bigFraction4, bigFraction0);
      assertSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      
      boolean boolean0 = bigFraction0.equals("");
      assertFalse(boolean0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      
      BigFraction bigFraction6 = BigFraction.of(1430);
      assertEquals((short)1430, bigFraction6.shortValue());
      assertEquals((byte) (-106), bigFraction6.byteValue());
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      
      long long0 = bigFraction1.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      
      long long1 = bigFraction6.longValue();
      assertEquals(1430L, long1);
      assertEquals((short)1430, bigFraction6.shortValue());
      assertEquals((byte) (-106), bigFraction6.byteValue());
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(long1 == long0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ZERO;
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(3832L, 3832L);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      long long0 = bigFraction1.ONE.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      
      BigFraction bigFraction2 = bigFraction0.one();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      int int0 = bigFraction0.ONE.compareTo(bigFraction2);
      assertEquals(0, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      
      int int1 = (-1899);
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction3 = bigFraction0.ONE.multiply(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigFraction3.shortValue());
      assertEquals((byte)10, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.ZERO.multiply(3832L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigFraction3.shortValue());
      assertEquals((byte)10, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      // Undeclared exception!
      try { 
        bigFraction4.compareTo((BigFraction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(0L, (-1363L));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      bigFraction0.hashCode();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.add(0L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction0);
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.ONE.divide((-1363L));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      int int0 = 0;
      BigFraction bigFraction3 = bigFraction0.pow(0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction4 = bigFraction1.multiply(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction4);
      assertSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction4.ZERO.subtract(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction5.ZERO.add(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertTrue(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction6.ONE.add(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction7.shortValue());
      assertEquals((byte)1, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertTrue(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertTrue(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction5.subtract(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertEquals((byte) (-2), bigFraction8.byteValue());
      assertEquals((short) (-2), bigFraction8.shortValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertNotNull(bigFraction8);
      
      long long0 = bigFraction3.getNumeratorAsLong();
      assertEquals(1L, long0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      
      float float0 = bigFraction1.floatValue();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      
      BigInteger bigInteger1 = bigFraction0.getNumerator();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigInteger1.byteValue());
      assertEquals((short)0, bigInteger1.shortValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      BigFraction bigFraction9 = BigFraction.of(0, (-2558));
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertSame(bigFraction9, bigFraction1);
      assertSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction5);
      assertSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = bigFraction3.pow((-2558));
      assertEquals((byte)1, bigFraction10.byteValue());
      assertEquals((short)1, bigFraction10.shortValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction9);
      assertSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertTrue(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertTrue(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertTrue(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction10);
      
      BigFraction bigFraction11 = BigFraction.from((double) 0.0F);
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction8);
      assertSame(bigFraction11, bigFraction0);
      assertSame(bigFraction11, bigFraction1);
      assertSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction7);
      assertSame(bigFraction11, bigFraction4);
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertNotNull(bigFraction11);
      
      // Undeclared exception!
      try { 
        BigFraction.parse("Not finite: ");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"No\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = 651;
      BigFraction bigFraction0 = BigFraction.of(651, 651);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      int int1 = 1851;
      BigInteger bigInteger0 = null;
      // Undeclared exception!
      try { 
        BigFraction.of((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // numerator
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(1480L);
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = bigFraction0.add(bigInteger0);
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)1480, bigFraction1.shortValue());
      assertEquals((byte) (-56), bigFraction1.byteValue());
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction0);
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = BigFraction.of((-363));
      assertEquals((byte) (-107), bigFraction2.byteValue());
      assertEquals((short) (-363), bigFraction2.shortValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.divide((-363));
      assertEquals((byte) (-107), bigFraction2.byteValue());
      assertEquals((short) (-363), bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      int int0 = bigFraction3.getNumeratorAsInt();
      assertEquals((-1), int0);
      assertEquals((byte) (-107), bigFraction2.byteValue());
      assertEquals((short) (-363), bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      
      BigDecimal bigDecimal0 = bigFraction2.ONE.bigDecimalValue();
      assertEquals((byte) (-107), bigFraction2.byteValue());
      assertEquals((short) (-363), bigFraction2.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigDecimal0);
      
      int int1 = bigFraction0.compareTo(bigFraction2);
      assertEquals(1, int1);
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((byte) (-107), bigFraction2.byteValue());
      assertEquals((short) (-363), bigFraction2.shortValue());
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(int1 == int0);
      
      BigFraction bigFraction4 = bigFraction2.multiply(2599);
      assertEquals((byte) (-107), bigFraction2.byteValue());
      assertEquals((short) (-363), bigFraction2.shortValue());
      assertEquals((byte) (-77), bigFraction4.byteValue());
      assertEquals((short) (-25933), bigFraction4.shortValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction0.add((-363));
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((short)1117, bigFraction5.shortValue());
      assertEquals((byte)93, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      
      String string0 = bigFraction4.ZERO.toString();
      assertEquals("0", string0);
      assertEquals((byte) (-107), bigFraction2.byteValue());
      assertEquals((short) (-363), bigFraction2.shortValue());
      assertEquals((byte) (-77), bigFraction4.byteValue());
      assertEquals((short) (-25933), bigFraction4.shortValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(string0);
      
      BigFraction bigFraction6 = bigFraction5.ONE.pow((-363));
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((short)1117, bigFraction5.shortValue());
      assertEquals((byte)93, bigFraction5.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertTrue(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      
      RoundingMode roundingMode0 = RoundingMode.HALF_EVEN;
      BigDecimal bigDecimal1 = bigFraction4.bigDecimalValue(roundingMode0);
      assertEquals((byte) (-107), bigFraction2.byteValue());
      assertEquals((short) (-363), bigFraction2.shortValue());
      assertEquals((byte) (-77), bigFraction4.byteValue());
      assertEquals((short) (-25933), bigFraction4.shortValue());
      assertEquals((byte) (-77), bigDecimal1.byteValue());
      assertEquals((short) (-25933), bigDecimal1.shortValue());
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      
      BigFraction bigFraction7 = BigFraction.of(11);
      assertEquals((byte)11, bigFraction7.byteValue());
      assertEquals((short)11, bigFraction7.shortValue());
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction7.ZERO.add(bigFraction2);
      assertEquals((byte) (-107), bigFraction2.byteValue());
      assertEquals((short) (-363), bigFraction2.shortValue());
      assertEquals((byte)11, bigFraction7.byteValue());
      assertEquals((short)11, bigFraction7.shortValue());
      assertEquals((byte) (-107), bigFraction8.byteValue());
      assertEquals((short) (-363), bigFraction8.shortValue());
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction4);
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = bigFraction5.divide(2599);
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((short)1117, bigFraction5.shortValue());
      assertEquals((byte)93, bigFraction5.byteValue());
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction6);
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = BigFraction.of(bigInteger0);
      assertEquals((byte)0, bigFraction10.byteValue());
      assertEquals((short)0, bigFraction10.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction0);
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertNotNull(bigFraction10);
      
      BigFraction bigFraction11 = bigFraction9.pow(11);
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      assertEquals((short)1117, bigFraction5.shortValue());
      assertEquals((byte)93, bigFraction5.byteValue());
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction11);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction10);
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertNotNull(bigFraction11);
      
      BigFraction bigFraction12 = bigFraction3.pow((-100));
      assertEquals((byte)1, bigFraction12.byteValue());
      assertEquals((short)1, bigFraction12.shortValue());
      assertEquals((byte) (-107), bigFraction2.byteValue());
      assertEquals((short) (-363), bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction12);
      assertSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction8);
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertTrue(bigFraction12.equals((Object)bigFraction3));
      assertTrue(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertNotNull(bigFraction12);
      
      BigFraction bigFraction13 = bigFraction12.divide((long) (-363));
      assertEquals((byte)1, bigFraction12.byteValue());
      assertEquals((short)1, bigFraction12.shortValue());
      assertEquals((byte) (-107), bigFraction2.byteValue());
      assertEquals((short) (-363), bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction13.byteValue());
      assertEquals((short)0, bigFraction13.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction2, bigFraction6);
      assertSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction8);
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertTrue(bigFraction12.equals((Object)bigFraction3));
      assertTrue(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction6));
      assertTrue(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertNotNull(bigFraction13);
      
      BigFraction bigFraction14 = bigFraction2.subtract(bigFraction5);
      assertEquals((short)1480, bigFraction0.shortValue());
      assertEquals((byte) (-56), bigFraction0.byteValue());
      assertEquals((byte) (-107), bigFraction2.byteValue());
      assertEquals((short) (-363), bigFraction2.shortValue());
      assertEquals((short) (-1480), bigFraction14.shortValue());
      assertEquals((byte)56, bigFraction14.byteValue());
      assertEquals((short)1117, bigFraction5.shortValue());
      assertEquals((byte)93, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction14);
      assertSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction5, bigFraction14);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction10);
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction13));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertNotNull(bigFraction14);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from((-1.0));
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      int int0 = bigFraction0.getNumeratorAsInt();
      assertEquals((-1), int0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(551L);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short)551, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.ONE.abs();
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short)551, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      int int0 = 64;
      RoundingMode roundingMode0 = RoundingMode.HALF_UP;
      BigDecimal bigDecimal0 = bigFraction1.ONE.bigDecimalValue(64, roundingMode0);
      assertEquals((byte)39, bigFraction0.byteValue());
      assertEquals((short)551, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigDecimal0);
      
      // Undeclared exception!
      try { 
        bigFraction0.ZERO.pow((-1));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(0.0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      long long0 = bigFraction0.ZERO.longValue();
      assertEquals(0L, long0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      double double0 = bigFraction0.doubleValue();
      assertEquals(0.0, double0, 0.01);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      int int0 = 3286;
      BigFraction bigFraction1 = bigFraction0.ONE.add(3286);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)3287, bigFraction1.shortValue());
      assertEquals((byte) (-41), bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.divide(4895L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      // Undeclared exception!
      try { 
        bigFraction0.divide(bigInteger0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // The value to divide by must not be zero
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      int int0 = 0;
      BigFraction bigFraction0 = BigFraction.of(0, 0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.ZERO;
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertSame(bigFraction1, bigFraction0);
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction2 = BigFraction.of(bigInteger0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertNotNull(bigFraction2);
      
      // Undeclared exception!
      try { 
        bigFraction0.ONE.divide(bigFraction1);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // The value to divide by must not be zero
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ZERO;
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      int int0 = 939;
      BigDecimal bigDecimal0 = bigFraction0.ZERO.bigDecimalValue();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction1 = BigFraction.of(939);
      assertEquals((short)939, bigFraction1.shortValue());
      assertEquals((byte) (-85), bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      long long0 = bigFraction1.ZERO.getNumeratorAsLong();
      assertEquals(0L, long0);
      assertEquals((short)939, bigFraction1.shortValue());
      assertEquals((byte) (-85), bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      
      int int1 = bigFraction1.getDenominatorAsInt();
      assertEquals(1, int1);
      assertEquals((short)939, bigFraction1.shortValue());
      assertEquals((byte) (-85), bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(int1 == int0);
      
      BigFraction bigFraction2 = bigFraction1.multiply(4503599627370496L);
      assertEquals((short)939, bigFraction1.shortValue());
      assertEquals((byte) (-85), bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction0.ONE.divide(2147483648L);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      // Undeclared exception!
      try { 
        bigFraction1.ZERO.divide(bigFraction0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // The value to divide by must not be zero
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(1695);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.ONE.abs();
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.ZERO.negate();
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction0.multiply(1695);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte) (-63), bigFraction3.byteValue());
      assertEquals((short) (-10559), bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.of((long) 1695, 301L);
      assertEquals((byte)5, bigFraction4.byteValue());
      assertEquals((short)5, bigFraction4.shortValue());
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction5 = bigFraction4.ONE.multiply(bigInteger0);
      assertEquals((byte)5, bigFraction4.byteValue());
      assertEquals((short)5, bigFraction4.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertTrue(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      
      float float0 = bigFraction3.ONE.floatValue();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte) (-63), bigFraction3.byteValue());
      assertEquals((short) (-10559), bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      
      BigFraction bigFraction6 = BigFraction.from((double) 1695);
      assertEquals((byte) (-97), bigFraction6.byteValue());
      assertEquals((short)1695, bigFraction6.shortValue());
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction0.multiply((long) 1695);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte) (-63), bigFraction7.byteValue());
      assertEquals((short) (-10559), bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertNotNull(bigFraction7);
      
      bigFraction7.ZERO.hashCode();
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte) (-63), bigFraction7.byteValue());
      assertEquals((short) (-10559), bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      
      BigFraction bigFraction8 = bigFraction2.subtract(bigFraction0);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)97, bigFraction8.byteValue());
      assertEquals((short) (-1695), bigFraction8.shortValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertNotNull(bigFraction8);
      
      bigFraction2.hashCode();
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction5));
      
      BigFraction bigFraction9 = bigFraction8.ONE.add(1695);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)97, bigFraction8.byteValue());
      assertEquals((short) (-1695), bigFraction8.shortValue());
      assertEquals((byte) (-96), bigFraction9.byteValue());
      assertEquals((short)1696, bigFraction9.shortValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = BigFraction.of(1695, 63);
      assertEquals((byte)26, bigFraction10.byteValue());
      assertEquals((short)26, bigFraction10.shortValue());
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction8);
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertNotNull(bigFraction10);
      
      BigFraction bigFraction11 = BigFraction.of(1695, 63);
      assertEquals((short)26, bigFraction11.shortValue());
      assertEquals((byte)26, bigFraction11.byteValue());
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction9);
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertTrue(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertNotNull(bigFraction11);
      
      BigFraction bigFraction12 = bigFraction11.subtract(bigFraction7);
      assertEquals((short)10586, bigFraction12.shortValue());
      assertEquals((byte)90, bigFraction12.byteValue());
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte) (-63), bigFraction7.byteValue());
      assertEquals((short) (-10559), bigFraction7.shortValue());
      assertEquals((short)26, bigFraction11.shortValue());
      assertEquals((byte)26, bigFraction11.byteValue());
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction12);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction9);
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertTrue(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertTrue(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertNotNull(bigFraction12);
      
      BigFraction bigFraction13 = BigFraction.from((double) 1695);
      assertEquals((short)1695, bigFraction13.shortValue());
      assertEquals((byte) (-97), bigFraction13.byteValue());
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction8);
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertTrue(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertTrue(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertNotNull(bigFraction13);
      
      BigDecimal bigDecimal0 = bigFraction7.bigDecimalValue();
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((short) (-10559), bigDecimal0.shortValue());
      assertEquals((byte) (-63), bigDecimal0.byteValue());
      assertEquals((byte) (-63), bigFraction7.byteValue());
      assertEquals((short) (-10559), bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertTrue(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertNotNull(bigDecimal0);
      
      float float1 = bigFraction6.floatValue();
      assertEquals(1695.0F, float1, 0.01F);
      assertEquals((byte) (-97), bigFraction6.byteValue());
      assertEquals((short)1695, bigFraction6.shortValue());
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction13);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction12);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotEquals(float1, float0, 0.01F);
      assertTrue(bigFraction6.equals((Object)bigFraction13));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction12));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      
      BigFraction bigFraction14 = bigFraction0.ZERO.multiply((long) 63);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction14.byteValue());
      assertEquals((short)0, bigFraction14.shortValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction6);
      assertSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction11);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertTrue(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertNotNull(bigFraction14);
      
      int int0 = bigFraction8.getNumeratorAsInt();
      assertEquals((-1695), int0);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)97, bigFraction8.byteValue());
      assertEquals((short) (-1695), bigFraction8.shortValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction13);
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction13));
      assertTrue(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertTrue(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction14));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      
      BigFraction bigFraction15 = bigFraction4.divide(301L);
      assertEquals((byte)5, bigFraction4.byteValue());
      assertEquals((short)5, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction15.byteValue());
      assertEquals((short)0, bigFraction15.shortValue());
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction15);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction10);
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertNotNull(bigFraction15);
      
      BigFraction bigFraction16 = bigFraction7.multiply(1L);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((short) (-10559), bigFraction16.shortValue());
      assertEquals((byte) (-63), bigFraction16.byteValue());
      assertEquals((byte) (-63), bigFraction7.byteValue());
      assertEquals((short) (-10559), bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction16, bigFraction13);
      assertNotSame(bigFraction16, bigFraction15);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction1);
      assertNotSame(bigFraction16, bigFraction7);
      assertNotSame(bigFraction16, bigFraction2);
      assertNotSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction16, bigFraction9);
      assertNotSame(bigFraction16, bigFraction4);
      assertNotSame(bigFraction16, bigFraction14);
      assertNotSame(bigFraction16, bigFraction5);
      assertNotSame(bigFraction16, bigFraction11);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction16);
      assertNotSame(bigFraction7, bigFraction14);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction15);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertFalse(bigFraction16.equals((Object)bigFraction6));
      assertTrue(bigFraction16.equals((Object)bigFraction7));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction0));
      assertFalse(bigFraction16.equals((Object)bigFraction9));
      assertFalse(bigFraction16.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction5));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction12));
      assertFalse(bigFraction16.equals((Object)bigFraction10));
      assertFalse(bigFraction16.equals((Object)bigFraction8));
      assertTrue(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertTrue(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction14));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction15));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertNotNull(bigFraction16);
      
      BigFraction bigFraction17 = bigFraction1.ZERO.add(bigInteger0);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction17.byteValue());
      assertEquals((short)0, bigFraction17.shortValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction17, bigFraction11);
      assertNotSame(bigFraction17, bigFraction16);
      assertNotSame(bigFraction17, bigFraction10);
      assertNotSame(bigFraction17, bigFraction3);
      assertSame(bigFraction17, bigFraction5);
      assertNotSame(bigFraction17, bigFraction12);
      assertNotSame(bigFraction17, bigFraction9);
      assertNotSame(bigFraction17, bigFraction6);
      assertNotSame(bigFraction17, bigFraction4);
      assertSame(bigFraction17, bigFraction14);
      assertNotSame(bigFraction17, bigFraction2);
      assertNotSame(bigFraction17, bigFraction7);
      assertNotSame(bigFraction17, bigFraction15);
      assertNotSame(bigFraction17, bigFraction0);
      assertNotSame(bigFraction17, bigFraction13);
      assertNotSame(bigFraction17, bigFraction8);
      assertNotSame(bigFraction17, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction17.equals((Object)bigFraction11));
      assertFalse(bigFraction17.equals((Object)bigFraction16));
      assertFalse(bigFraction17.equals((Object)bigFraction10));
      assertFalse(bigFraction17.equals((Object)bigFraction3));
      assertFalse(bigFraction17.equals((Object)bigFraction12));
      assertFalse(bigFraction17.equals((Object)bigFraction9));
      assertFalse(bigFraction17.equals((Object)bigFraction6));
      assertFalse(bigFraction17.equals((Object)bigFraction4));
      assertFalse(bigFraction17.equals((Object)bigFraction7));
      assertFalse(bigFraction17.equals((Object)bigFraction15));
      assertTrue(bigFraction17.equals((Object)bigFraction2));
      assertFalse(bigFraction17.equals((Object)bigFraction0));
      assertFalse(bigFraction17.equals((Object)bigFraction13));
      assertFalse(bigFraction17.equals((Object)bigFraction8));
      assertFalse(bigFraction17.equals((Object)bigFraction1));
      assertNotNull(bigFraction17);
      
      BigFraction bigFraction18 = bigFraction8.ONE.negate();
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction18.byteValue());
      assertEquals((short) (-1), bigFraction18.shortValue());
      assertEquals((byte)97, bigFraction8.byteValue());
      assertEquals((short) (-1695), bigFraction8.shortValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction2, bigFraction17);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction18);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction18, bigFraction17);
      assertNotSame(bigFraction18, bigFraction7);
      assertNotSame(bigFraction18, bigFraction12);
      assertNotSame(bigFraction18, bigFraction2);
      assertNotSame(bigFraction18, bigFraction10);
      assertNotSame(bigFraction18, bigFraction13);
      assertNotSame(bigFraction18, bigFraction11);
      assertNotSame(bigFraction18, bigFraction1);
      assertNotSame(bigFraction18, bigFraction3);
      assertNotSame(bigFraction18, bigFraction16);
      assertNotSame(bigFraction18, bigFraction8);
      assertNotSame(bigFraction18, bigFraction4);
      assertNotSame(bigFraction18, bigFraction0);
      assertNotSame(bigFraction18, bigFraction9);
      assertNotSame(bigFraction18, bigFraction15);
      assertNotSame(bigFraction18, bigFraction6);
      assertNotSame(bigFraction18, bigFraction5);
      assertNotSame(bigFraction18, bigFraction14);
      assertNotSame(bigFraction8, bigFraction17);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction15);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction18);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction16);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction13);
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction13));
      assertTrue(bigFraction2.equals((Object)bigFraction14));
      assertTrue(bigFraction2.equals((Object)bigFraction17));
      assertFalse(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertTrue(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction16));
      assertFalse(bigFraction18.equals((Object)bigFraction17));
      assertFalse(bigFraction18.equals((Object)bigFraction7));
      assertFalse(bigFraction18.equals((Object)bigFraction12));
      assertFalse(bigFraction18.equals((Object)bigFraction2));
      assertFalse(bigFraction18.equals((Object)bigFraction10));
      assertFalse(bigFraction18.equals((Object)bigFraction13));
      assertFalse(bigFraction18.equals((Object)bigFraction11));
      assertFalse(bigFraction18.equals((Object)bigFraction1));
      assertFalse(bigFraction18.equals((Object)bigFraction3));
      assertFalse(bigFraction18.equals((Object)bigFraction16));
      assertFalse(bigFraction18.equals((Object)bigFraction8));
      assertFalse(bigFraction18.equals((Object)bigFraction4));
      assertFalse(bigFraction18.equals((Object)bigFraction0));
      assertFalse(bigFraction18.equals((Object)bigFraction9));
      assertFalse(bigFraction18.equals((Object)bigFraction15));
      assertFalse(bigFraction18.equals((Object)bigFraction6));
      assertFalse(bigFraction18.equals((Object)bigFraction5));
      assertFalse(bigFraction18.equals((Object)bigFraction14));
      assertFalse(bigFraction8.equals((Object)bigFraction17));
      assertFalse(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction14));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction15));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction16));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      assertNotNull(bigFraction18);
      
      BigFraction bigFraction19 = bigFraction9.multiply(0L);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)0, bigFraction19.shortValue());
      assertEquals((byte)0, bigFraction19.byteValue());
      assertEquals((byte)97, bigFraction8.byteValue());
      assertEquals((short) (-1695), bigFraction8.shortValue());
      assertEquals((byte) (-96), bigFraction9.byteValue());
      assertEquals((short)1696, bigFraction9.shortValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction19);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction2, bigFraction17);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction19);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction18);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction16);
      assertSame(bigFraction19, bigFraction5);
      assertSame(bigFraction19, bigFraction14);
      assertNotSame(bigFraction19, bigFraction16);
      assertNotSame(bigFraction19, bigFraction18);
      assertNotSame(bigFraction19, bigFraction7);
      assertNotSame(bigFraction19, bigFraction11);
      assertNotSame(bigFraction19, bigFraction15);
      assertNotSame(bigFraction19, bigFraction2);
      assertNotSame(bigFraction19, bigFraction3);
      assertNotSame(bigFraction19, bigFraction12);
      assertNotSame(bigFraction19, bigFraction9);
      assertNotSame(bigFraction19, bigFraction4);
      assertNotSame(bigFraction19, bigFraction6);
      assertNotSame(bigFraction19, bigFraction1);
      assertNotSame(bigFraction19, bigFraction8);
      assertNotSame(bigFraction19, bigFraction13);
      assertSame(bigFraction19, bigFraction17);
      assertNotSame(bigFraction19, bigFraction10);
      assertNotSame(bigFraction19, bigFraction0);
      assertNotSame(bigFraction8, bigFraction17);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction15);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction19);
      assertNotSame(bigFraction8, bigFraction18);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction16);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction9, bigFraction17);
      assertNotSame(bigFraction9, bigFraction19);
      assertNotSame(bigFraction9, bigFraction14);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction13);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction16);
      assertNotSame(bigFraction9, bigFraction15);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction11);
      assertNotSame(bigFraction9, bigFraction18);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction12);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction18));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction13));
      assertTrue(bigFraction2.equals((Object)bigFraction14));
      assertTrue(bigFraction2.equals((Object)bigFraction17));
      assertFalse(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertTrue(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction18));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction16));
      assertFalse(bigFraction19.equals((Object)bigFraction16));
      assertFalse(bigFraction19.equals((Object)bigFraction18));
      assertFalse(bigFraction19.equals((Object)bigFraction7));
      assertFalse(bigFraction19.equals((Object)bigFraction11));
      assertFalse(bigFraction19.equals((Object)bigFraction15));
      assertFalse(bigFraction19.equals((Object)bigFraction3));
      assertFalse(bigFraction19.equals((Object)bigFraction12));
      assertFalse(bigFraction19.equals((Object)bigFraction9));
      assertTrue(bigFraction19.equals((Object)bigFraction2));
      assertFalse(bigFraction19.equals((Object)bigFraction4));
      assertFalse(bigFraction19.equals((Object)bigFraction6));
      assertFalse(bigFraction19.equals((Object)bigFraction1));
      assertFalse(bigFraction19.equals((Object)bigFraction8));
      assertFalse(bigFraction19.equals((Object)bigFraction13));
      assertFalse(bigFraction19.equals((Object)bigFraction10));
      assertFalse(bigFraction19.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction17));
      assertFalse(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction14));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction15));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction18));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction16));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      assertFalse(bigFraction9.equals((Object)bigFraction17));
      assertFalse(bigFraction9.equals((Object)bigFraction14));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction13));
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction16));
      assertFalse(bigFraction9.equals((Object)bigFraction15));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction11));
      assertFalse(bigFraction9.equals((Object)bigFraction18));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction12));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertNotNull(bigFraction19);
      
      BigFraction bigFraction20 = bigFraction19.add(bigInteger0);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction19.shortValue());
      assertEquals((byte)0, bigFraction19.byteValue());
      assertEquals((short)0, bigFraction20.shortValue());
      assertEquals((byte)0, bigFraction20.byteValue());
      assertEquals((byte)97, bigFraction8.byteValue());
      assertEquals((short) (-1695), bigFraction8.shortValue());
      assertEquals((byte) (-96), bigFraction9.byteValue());
      assertEquals((short)1696, bigFraction9.shortValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction20);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction19);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction2, bigFraction17);
      assertNotSame(bigFraction2, bigFraction20);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction19);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction18);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction16);
      assertSame(bigFraction19, bigFraction5);
      assertSame(bigFraction19, bigFraction14);
      assertNotSame(bigFraction19, bigFraction16);
      assertNotSame(bigFraction19, bigFraction18);
      assertNotSame(bigFraction19, bigFraction7);
      assertNotSame(bigFraction19, bigFraction11);
      assertNotSame(bigFraction19, bigFraction15);
      assertNotSame(bigFraction19, bigFraction2);
      assertNotSame(bigFraction19, bigFraction3);
      assertNotSame(bigFraction19, bigFraction12);
      assertNotSame(bigFraction19, bigFraction9);
      assertNotSame(bigFraction19, bigFraction4);
      assertNotSame(bigFraction19, bigFraction6);
      assertNotSame(bigFraction19, bigFraction1);
      assertNotSame(bigFraction19, bigFraction8);
      assertNotSame(bigFraction19, bigFraction13);
      assertSame(bigFraction19, bigFraction17);
      assertNotSame(bigFraction19, bigFraction10);
      assertNotSame(bigFraction19, bigFraction0);
      assertSame(bigFraction19, bigFraction20);
      assertNotSame(bigFraction20, bigFraction9);
      assertNotSame(bigFraction20, bigFraction0);
      assertNotSame(bigFraction20, bigFraction13);
      assertNotSame(bigFraction20, bigFraction15);
      assertNotSame(bigFraction20, bigFraction2);
      assertNotSame(bigFraction20, bigFraction6);
      assertNotSame(bigFraction20, bigFraction1);
      assertNotSame(bigFraction20, bigFraction4);
      assertNotSame(bigFraction20, bigFraction16);
      assertNotSame(bigFraction20, bigFraction7);
      assertSame(bigFraction20, bigFraction19);
      assertNotSame(bigFraction20, bigFraction8);
      assertNotSame(bigFraction20, bigFraction3);
      assertNotSame(bigFraction20, bigFraction11);
      assertNotSame(bigFraction20, bigFraction12);
      assertNotSame(bigFraction20, bigFraction10);
      assertSame(bigFraction20, bigFraction5);
      assertSame(bigFraction20, bigFraction14);
      assertNotSame(bigFraction20, bigFraction18);
      assertSame(bigFraction20, bigFraction17);
      assertNotSame(bigFraction8, bigFraction17);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction15);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction19);
      assertNotSame(bigFraction8, bigFraction18);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction16);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction20);
      assertNotSame(bigFraction9, bigFraction17);
      assertNotSame(bigFraction9, bigFraction19);
      assertNotSame(bigFraction9, bigFraction20);
      assertNotSame(bigFraction9, bigFraction14);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction13);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction16);
      assertNotSame(bigFraction9, bigFraction15);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction11);
      assertNotSame(bigFraction9, bigFraction18);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction12);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction18));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction19));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction13));
      assertTrue(bigFraction2.equals((Object)bigFraction14));
      assertTrue(bigFraction2.equals((Object)bigFraction17));
      assertFalse(bigFraction2.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertTrue(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction18));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertTrue(bigFraction2.equals((Object)bigFraction19));
      assertFalse(bigFraction2.equals((Object)bigFraction16));
      assertFalse(bigFraction19.equals((Object)bigFraction16));
      assertFalse(bigFraction19.equals((Object)bigFraction18));
      assertFalse(bigFraction19.equals((Object)bigFraction7));
      assertFalse(bigFraction19.equals((Object)bigFraction11));
      assertFalse(bigFraction19.equals((Object)bigFraction15));
      assertFalse(bigFraction19.equals((Object)bigFraction3));
      assertFalse(bigFraction19.equals((Object)bigFraction12));
      assertFalse(bigFraction19.equals((Object)bigFraction9));
      assertTrue(bigFraction19.equals((Object)bigFraction2));
      assertFalse(bigFraction19.equals((Object)bigFraction4));
      assertFalse(bigFraction19.equals((Object)bigFraction6));
      assertFalse(bigFraction19.equals((Object)bigFraction1));
      assertFalse(bigFraction19.equals((Object)bigFraction8));
      assertFalse(bigFraction19.equals((Object)bigFraction13));
      assertFalse(bigFraction19.equals((Object)bigFraction10));
      assertFalse(bigFraction19.equals((Object)bigFraction0));
      assertFalse(bigFraction20.equals((Object)bigFraction9));
      assertTrue(bigFraction20.equals((Object)bigFraction2));
      assertFalse(bigFraction20.equals((Object)bigFraction0));
      assertFalse(bigFraction20.equals((Object)bigFraction13));
      assertFalse(bigFraction20.equals((Object)bigFraction15));
      assertFalse(bigFraction20.equals((Object)bigFraction6));
      assertFalse(bigFraction20.equals((Object)bigFraction1));
      assertFalse(bigFraction20.equals((Object)bigFraction4));
      assertFalse(bigFraction20.equals((Object)bigFraction16));
      assertFalse(bigFraction20.equals((Object)bigFraction7));
      assertFalse(bigFraction20.equals((Object)bigFraction8));
      assertFalse(bigFraction20.equals((Object)bigFraction3));
      assertFalse(bigFraction20.equals((Object)bigFraction11));
      assertFalse(bigFraction20.equals((Object)bigFraction12));
      assertFalse(bigFraction20.equals((Object)bigFraction10));
      assertFalse(bigFraction20.equals((Object)bigFraction18));
      assertFalse(bigFraction8.equals((Object)bigFraction17));
      assertFalse(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction14));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction15));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction19));
      assertFalse(bigFraction8.equals((Object)bigFraction18));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction16));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      assertFalse(bigFraction9.equals((Object)bigFraction17));
      assertFalse(bigFraction9.equals((Object)bigFraction19));
      assertFalse(bigFraction9.equals((Object)bigFraction14));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction13));
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction16));
      assertFalse(bigFraction9.equals((Object)bigFraction15));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction11));
      assertFalse(bigFraction9.equals((Object)bigFraction18));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction12));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertNotNull(bigFraction20);
      
      BigFraction bigFraction21 = bigFraction7.divide(301L);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte) (-63), bigFraction7.byteValue());
      assertEquals((short) (-10559), bigFraction7.shortValue());
      assertEquals((short)9544, bigFraction21.shortValue());
      assertEquals((byte)72, bigFraction21.byteValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction20);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction19);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction21);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction17);
      assertNotSame(bigFraction7, bigFraction20);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction16);
      assertNotSame(bigFraction7, bigFraction14);
      assertNotSame(bigFraction7, bigFraction21);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction15);
      assertNotSame(bigFraction7, bigFraction18);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction19);
      assertNotSame(bigFraction21, bigFraction17);
      assertNotSame(bigFraction21, bigFraction19);
      assertNotSame(bigFraction21, bigFraction20);
      assertNotSame(bigFraction21, bigFraction12);
      assertNotSame(bigFraction21, bigFraction7);
      assertNotSame(bigFraction21, bigFraction10);
      assertNotSame(bigFraction21, bigFraction15);
      assertNotSame(bigFraction21, bigFraction5);
      assertNotSame(bigFraction21, bigFraction2);
      assertNotSame(bigFraction21, bigFraction6);
      assertNotSame(bigFraction21, bigFraction18);
      assertNotSame(bigFraction21, bigFraction14);
      assertNotSame(bigFraction21, bigFraction4);
      assertNotSame(bigFraction21, bigFraction9);
      assertNotSame(bigFraction21, bigFraction0);
      assertNotSame(bigFraction21, bigFraction3);
      assertNotSame(bigFraction21, bigFraction13);
      assertNotSame(bigFraction21, bigFraction11);
      assertNotSame(bigFraction21, bigFraction1);
      assertNotSame(bigFraction21, bigFraction16);
      assertNotSame(bigFraction21, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction20));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction18));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction19));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction17));
      assertFalse(bigFraction7.equals((Object)bigFraction20));
      assertTrue(bigFraction7.equals((Object)bigFraction16));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertTrue(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction14));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction15));
      assertFalse(bigFraction7.equals((Object)bigFraction18));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction19));
      assertFalse(bigFraction21.equals((Object)bigFraction17));
      assertFalse(bigFraction21.equals((Object)bigFraction19));
      assertFalse(bigFraction21.equals((Object)bigFraction20));
      assertFalse(bigFraction21.equals((Object)bigFraction12));
      assertFalse(bigFraction21.equals((Object)bigFraction7));
      assertFalse(bigFraction21.equals((Object)bigFraction10));
      assertFalse(bigFraction21.equals((Object)bigFraction15));
      assertFalse(bigFraction21.equals((Object)bigFraction5));
      assertFalse(bigFraction21.equals((Object)bigFraction2));
      assertFalse(bigFraction21.equals((Object)bigFraction6));
      assertFalse(bigFraction21.equals((Object)bigFraction18));
      assertFalse(bigFraction21.equals((Object)bigFraction14));
      assertFalse(bigFraction21.equals((Object)bigFraction4));
      assertFalse(bigFraction21.equals((Object)bigFraction9));
      assertFalse(bigFraction21.equals((Object)bigFraction0));
      assertFalse(bigFraction21.equals((Object)bigFraction3));
      assertFalse(bigFraction21.equals((Object)bigFraction13));
      assertFalse(bigFraction21.equals((Object)bigFraction11));
      assertFalse(bigFraction21.equals((Object)bigFraction1));
      assertFalse(bigFraction21.equals((Object)bigFraction16));
      assertFalse(bigFraction21.equals((Object)bigFraction8));
      assertNotNull(bigFraction21);
      
      BigFraction bigFraction22 = bigFraction1.multiply(706);
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)706, bigFraction22.shortValue());
      assertEquals((byte) (-62), bigFraction22.byteValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction20);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction19);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction21);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction22);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction22);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction19);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction21);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction20);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction22, bigFraction13);
      assertNotSame(bigFraction22, bigFraction6);
      assertNotSame(bigFraction22, bigFraction9);
      assertNotSame(bigFraction22, bigFraction15);
      assertNotSame(bigFraction22, bigFraction21);
      assertNotSame(bigFraction22, bigFraction2);
      assertNotSame(bigFraction22, bigFraction18);
      assertNotSame(bigFraction22, bigFraction4);
      assertNotSame(bigFraction22, bigFraction7);
      assertNotSame(bigFraction22, bigFraction19);
      assertNotSame(bigFraction22, bigFraction10);
      assertNotSame(bigFraction22, bigFraction11);
      assertNotSame(bigFraction22, bigFraction16);
      assertNotSame(bigFraction22, bigFraction14);
      assertNotSame(bigFraction22, bigFraction3);
      assertNotSame(bigFraction22, bigFraction12);
      assertNotSame(bigFraction22, bigFraction5);
      assertNotSame(bigFraction22, bigFraction0);
      assertNotSame(bigFraction22, bigFraction20);
      assertNotSame(bigFraction22, bigFraction8);
      assertNotSame(bigFraction22, bigFraction1);
      assertNotSame(bigFraction22, bigFraction17);
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction20));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction18));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction19));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction21));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction19));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction21));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertFalse(bigFraction1.equals((Object)bigFraction18));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction20));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction22.equals((Object)bigFraction13));
      assertFalse(bigFraction22.equals((Object)bigFraction6));
      assertFalse(bigFraction22.equals((Object)bigFraction9));
      assertFalse(bigFraction22.equals((Object)bigFraction15));
      assertFalse(bigFraction22.equals((Object)bigFraction21));
      assertFalse(bigFraction22.equals((Object)bigFraction2));
      assertFalse(bigFraction22.equals((Object)bigFraction18));
      assertFalse(bigFraction22.equals((Object)bigFraction4));
      assertFalse(bigFraction22.equals((Object)bigFraction7));
      assertFalse(bigFraction22.equals((Object)bigFraction19));
      assertFalse(bigFraction22.equals((Object)bigFraction10));
      assertFalse(bigFraction22.equals((Object)bigFraction11));
      assertFalse(bigFraction22.equals((Object)bigFraction16));
      assertFalse(bigFraction22.equals((Object)bigFraction14));
      assertFalse(bigFraction22.equals((Object)bigFraction3));
      assertFalse(bigFraction22.equals((Object)bigFraction12));
      assertFalse(bigFraction22.equals((Object)bigFraction5));
      assertFalse(bigFraction22.equals((Object)bigFraction0));
      assertFalse(bigFraction22.equals((Object)bigFraction20));
      assertFalse(bigFraction22.equals((Object)bigFraction8));
      assertFalse(bigFraction22.equals((Object)bigFraction1));
      assertFalse(bigFraction22.equals((Object)bigFraction17));
      assertNotNull(bigFraction22);
      
      BigFraction bigFraction23 = bigFraction3.abs();
      assertEquals((byte) (-97), bigFraction0.byteValue());
      assertEquals((short)1695, bigFraction0.shortValue());
      assertEquals((byte) (-63), bigFraction3.byteValue());
      assertEquals((short) (-10559), bigFraction3.shortValue());
      assertEquals((short) (-10559), bigFraction23.shortValue());
      assertEquals((byte) (-63), bigFraction23.byteValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction20);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction19);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction21);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction22);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction23);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction16);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction18);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction20);
      assertNotSame(bigFraction3, bigFraction22);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction17);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction15);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction21);
      assertNotSame(bigFraction3, bigFraction19);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction4);
      assertSame(bigFraction3, bigFraction23);
      assertNotSame(bigFraction23, bigFraction12);
      assertNotSame(bigFraction23, bigFraction14);
      assertNotSame(bigFraction23, bigFraction20);
      assertNotSame(bigFraction23, bigFraction5);
      assertNotSame(bigFraction23, bigFraction19);
      assertNotSame(bigFraction23, bigFraction10);
      assertNotSame(bigFraction23, bigFraction21);
      assertNotSame(bigFraction23, bigFraction8);
      assertNotSame(bigFraction23, bigFraction16);
      assertNotSame(bigFraction23, bigFraction11);
      assertNotSame(bigFraction23, bigFraction17);
      assertSame(bigFraction23, bigFraction3);
      assertNotSame(bigFraction23, bigFraction13);
      assertNotSame(bigFraction23, bigFraction6);
      assertNotSame(bigFraction23, bigFraction1);
      assertNotSame(bigFraction23, bigFraction22);
      assertNotSame(bigFraction23, bigFraction4);
      assertNotSame(bigFraction23, bigFraction15);
      assertNotSame(bigFraction23, bigFraction2);
      assertNotSame(bigFraction23, bigFraction0);
      assertNotSame(bigFraction23, bigFraction9);
      assertNotSame(bigFraction23, bigFraction18);
      assertNotSame(bigFraction23, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction20));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction18));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction19));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction21));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction22));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction18));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction20));
      assertTrue(bigFraction3.equals((Object)bigFraction16));
      assertFalse(bigFraction3.equals((Object)bigFraction22));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction17));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction15));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertTrue(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction21));
      assertFalse(bigFraction3.equals((Object)bigFraction19));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertTrue(bigFraction23.equals((Object)bigFraction16));
      assertFalse(bigFraction23.equals((Object)bigFraction12));
      assertFalse(bigFraction23.equals((Object)bigFraction14));
      assertFalse(bigFraction23.equals((Object)bigFraction20));
      assertFalse(bigFraction23.equals((Object)bigFraction5));
      assertFalse(bigFraction23.equals((Object)bigFraction19));
      assertFalse(bigFraction23.equals((Object)bigFraction10));
      assertFalse(bigFraction23.equals((Object)bigFraction21));
      assertFalse(bigFraction23.equals((Object)bigFraction8));
      assertFalse(bigFraction23.equals((Object)bigFraction11));
      assertFalse(bigFraction23.equals((Object)bigFraction17));
      assertTrue(bigFraction23.equals((Object)bigFraction7));
      assertFalse(bigFraction23.equals((Object)bigFraction13));
      assertFalse(bigFraction23.equals((Object)bigFraction6));
      assertFalse(bigFraction23.equals((Object)bigFraction1));
      assertFalse(bigFraction23.equals((Object)bigFraction22));
      assertFalse(bigFraction23.equals((Object)bigFraction4));
      assertFalse(bigFraction23.equals((Object)bigFraction15));
      assertFalse(bigFraction23.equals((Object)bigFraction2));
      assertFalse(bigFraction23.equals((Object)bigFraction0));
      assertFalse(bigFraction23.equals((Object)bigFraction9));
      assertFalse(bigFraction23.equals((Object)bigFraction18));
      assertNotNull(bigFraction23);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-1000), 1793);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(2568);
      assertEquals((byte)8, bigFraction1.byteValue());
      assertEquals((short)2568, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)8, bigFraction1.byteValue());
      assertEquals((short)2568, bigFraction1.shortValue());
      assertEquals((byte) (-8), bigFraction2.byteValue());
      assertEquals((short) (-2568), bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      // Undeclared exception!
      try { 
        BigFraction.from((double) 2568, 1.0, (-1000));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Max iterations must be strictly positive: -1000
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE;
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(52);
      assertEquals((short)52, bigFraction1.shortValue());
      assertEquals((byte)52, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = BigFraction.of(52, 52);
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.reciprocal();
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.from((double) 52);
      assertEquals((short)52, bigFraction4.shortValue());
      assertEquals((byte)52, bigFraction4.byteValue());
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.of((-1232), 52);
      assertEquals((byte) (-23), bigFraction5.byteValue());
      assertEquals((short) (-23), bigFraction5.shortValue());
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction0.ZERO.add(bigFraction2);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertTrue(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      
      long long0 = bigFraction6.ZERO.longValue();
      assertEquals(0L, long0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertTrue(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      
      long long1 = bigFraction2.ONE.getDenominatorAsLong();
      assertEquals(1L, long1);
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction3);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(long1 == long0);
      
      BigFraction bigFraction7 = bigFraction0.multiply((-2067));
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte) (-19), bigFraction7.byteValue());
      assertEquals((short) (-2067), bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction7.ZERO.abs();
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte) (-19), bigFraction7.byteValue());
      assertEquals((short) (-2067), bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction5);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertNotNull(bigFraction8);
      
      bigFraction8.hashCode();
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte) (-19), bigFraction7.byteValue());
      assertEquals((short) (-2067), bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction5);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      
      BigFraction bigFraction9 = bigFraction7.divide(bigFraction3);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte) (-19), bigFraction7.byteValue());
      assertEquals((short) (-2067), bigFraction7.shortValue());
      assertEquals((byte) (-19), bigFraction9.byteValue());
      assertEquals((short) (-2067), bigFraction9.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertTrue(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertTrue(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = bigFraction2.add(811);
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte)44, bigFraction10.byteValue());
      assertEquals((short)812, bigFraction10.shortValue());
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertNotNull(bigFraction10);
      
      BigFraction bigFraction11 = BigFraction.from((-919.041), 52);
      assertEquals((byte)105, bigFraction11.byteValue());
      assertEquals((short) (-919), bigFraction11.shortValue());
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction3);
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertNotNull(bigFraction11);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-1L), (-1L));
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigInteger bigInteger1 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      BigInteger bigInteger2 = bigInteger0.gcd(bigInteger1);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((short)1, bigInteger2.shortValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger1, bigInteger2);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigInteger2, bigInteger0);
      assertNotSame(bigInteger2, bigInteger1);
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigInteger2.equals((Object)bigInteger0));
      assertTrue(bigInteger2.equals((Object)bigInteger1));
      assertNotNull(bigInteger2);
      
      bigFraction0.ONE.hashCode();
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = BigFraction.of(bigInteger0);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigFraction1.shortValue());
      assertEquals((byte)10, bigFraction1.byteValue());
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.ZERO.add((-1143L));
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigFraction1.shortValue());
      assertEquals((byte)10, bigFraction1.byteValue());
      assertEquals((byte) (-119), bigFraction2.byteValue());
      assertEquals((short) (-1143), bigFraction2.shortValue());
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction1.ONE.subtract(bigFraction2);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigFraction1.shortValue());
      assertEquals((byte)10, bigFraction1.byteValue());
      assertEquals((byte) (-119), bigFraction2.byteValue());
      assertEquals((short) (-1143), bigFraction2.shortValue());
      assertEquals((short)1144, bigFraction3.shortValue());
      assertEquals((byte)120, bigFraction3.byteValue());
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigDecimal bigDecimal0 = bigFraction2.bigDecimalValue();
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigFraction1.shortValue());
      assertEquals((byte)10, bigFraction1.byteValue());
      assertEquals((byte) (-119), bigFraction2.byteValue());
      assertEquals((short) (-1143), bigFraction2.shortValue());
      assertEquals((byte) (-119), bigDecimal0.byteValue());
      assertEquals((short) (-1143), bigDecimal0.shortValue());
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigDecimal0);
      
      bigFraction1.ZERO.hashCode();
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigFraction1.shortValue());
      assertEquals((byte)10, bigFraction1.byteValue());
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      
      BigFraction bigFraction4 = bigFraction0.divide(bigFraction1);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigFraction1.shortValue());
      assertEquals((byte)10, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE;
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      int int0 = bigFraction0.intValue();
      assertEquals(1, int0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      
      int int1 = bigFraction0.hashCode();
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertFalse(int1 == int0);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.multiply(0L);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.ONE.multiply(1);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.of(1);
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction3.abs();
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction4));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertTrue(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction5);
      assertSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertNotNull(bigFraction6);
      
      BigInteger bigInteger1 = bigFraction0.getDenominator();
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger1, bigInteger0);
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      BigFraction bigFraction7 = bigFraction1.add(bigInteger0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction7);
      assertSame(bigFraction1, bigFraction6);
      assertSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction0);
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction7.negate();
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction7);
      assertSame(bigFraction1, bigFraction6);
      assertSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction0);
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertTrue(bigFraction8.equals((Object)bigFraction6));
      assertTrue(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertTrue(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertTrue(bigFraction8.equals((Object)bigFraction7));
      assertNotNull(bigFraction8);
      
      int int2 = bigFraction3.intValue();
      assertEquals(1, int2);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction8);
      assertSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(int2 == int0);
      
      BigFraction bigFraction9 = bigFraction5.ONE.subtract(bigFraction3);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction8);
      assertSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction1);
      assertSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertSame(bigFraction9, bigFraction6);
      assertSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction3);
      assertSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertTrue(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertTrue(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = bigFraction2.subtract(bigInteger0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction10.shortValue());
      assertEquals((byte)0, bigFraction10.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction9);
      assertSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction8);
      assertSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction5);
      assertSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction4);
      assertSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction0);
      assertSame(bigFraction10, bigFraction1);
      assertSame(bigFraction10, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertTrue(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertNotNull(bigFraction10);
      
      BigFraction bigFraction11 = bigFraction3.ONE.subtract(0);
      assertEquals((byte)1, bigFraction11.byteValue());
      assertEquals((short)1, bigFraction11.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction4);
      assertSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction9);
      assertSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction8);
      assertSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertTrue(bigFraction11.equals((Object)bigFraction5));
      assertTrue(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertTrue(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction11);
      
      BigFraction bigFraction12 = bigFraction10.ZERO.divide(bigFraction0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction10.shortValue());
      assertEquals((byte)0, bigFraction10.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction12, bigFraction2);
      assertSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction5);
      assertSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction3);
      assertSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction8);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigInteger0, bigInteger1);
      assertSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction9);
      assertSame(bigFraction2, bigFraction10);
      assertSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction11);
      assertSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction5);
      assertSame(bigFraction10, bigFraction2);
      assertSame(bigFraction10, bigFraction12);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction4);
      assertSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction0);
      assertSame(bigFraction10, bigFraction1);
      assertSame(bigFraction10, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertTrue(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction11));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertNotNull(bigFraction12);
      
      BigFraction bigFraction13 = bigFraction10.negate();
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction13.byteValue());
      assertEquals((short)0, bigFraction13.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction10.shortValue());
      assertEquals((byte)0, bigFraction10.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigInteger0, bigInteger1);
      assertSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction9);
      assertSame(bigFraction2, bigFraction10);
      assertSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction11);
      assertSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction10, bigFraction6);
      assertSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction11);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction13);
      assertSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction0);
      assertSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction5);
      assertSame(bigFraction10, bigFraction12);
      assertNotSame(bigFraction10, bigFraction4);
      assertSame(bigFraction10, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertTrue(bigFraction13.equals((Object)bigFraction8));
      assertTrue(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertTrue(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertTrue(bigFraction13.equals((Object)bigFraction10));
      assertTrue(bigFraction13.equals((Object)bigFraction7));
      assertTrue(bigFraction13.equals((Object)bigFraction1));
      assertTrue(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertTrue(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertTrue(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction11));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertNotNull(bigFraction13);
      
      BigFraction bigFraction14 = bigFraction8.divide(bigFraction4);
      assertEquals((short)0, bigFraction14.shortValue());
      assertEquals((byte)0, bigFraction14.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction13);
      assertSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction8);
      assertSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction3);
      assertSame(bigFraction14, bigFraction1);
      assertSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction5);
      assertSame(bigFraction14, bigFraction12);
      assertSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction4);
      assertSame(bigFraction14, bigFraction6);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction11);
      assertSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction7);
      assertSame(bigFraction1, bigFraction6);
      assertSame(bigFraction1, bigFraction9);
      assertSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction11);
      assertSame(bigFraction7, bigFraction14);
      assertNotSame(bigFraction7, bigFraction8);
      assertSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction13);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction12);
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertTrue(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertTrue(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertTrue(bigFraction4.equals((Object)bigFraction11));
      assertTrue(bigFraction4.equals((Object)bigFraction5));
      assertTrue(bigFraction7.equals((Object)bigFraction13));
      assertTrue(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertTrue(bigFraction8.equals((Object)bigFraction6));
      assertTrue(bigFraction8.equals((Object)bigFraction13));
      assertTrue(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertTrue(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertTrue(bigFraction8.equals((Object)bigFraction1));
      assertTrue(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertTrue(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertTrue(bigFraction8.equals((Object)bigFraction7));
      assertNotNull(bigFraction14);
      
      int int3 = bigFraction5.compareTo(bigFraction2);
      assertEquals(1, int3);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction9);
      assertSame(bigFraction2, bigFraction10);
      assertSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction11);
      assertSame(bigFraction2, bigFraction14);
      assertSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction1);
      assertSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction14);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(int3 == int2);
      assertTrue(int3 == int0);
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction8));
      assertTrue(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertTrue(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertTrue(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction13));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertTrue(bigFraction5.equals((Object)bigFraction4));
      assertTrue(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction14));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      
      float float0 = bigFraction7.ZERO.floatValue();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction11);
      assertSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction7);
      assertSame(bigFraction1, bigFraction6);
      assertSame(bigFraction1, bigFraction9);
      assertSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction11);
      assertSame(bigFraction7, bigFraction14);
      assertNotSame(bigFraction7, bigFraction8);
      assertSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction13);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction0);
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction7.equals((Object)bigFraction13));
      assertTrue(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      
      BigFraction bigFraction15 = bigFraction8.multiply(0L);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction15.shortValue());
      assertEquals((byte)0, bigFraction15.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction11);
      assertSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction7);
      assertSame(bigFraction1, bigFraction6);
      assertSame(bigFraction1, bigFraction9);
      assertSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction15);
      assertSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction5);
      assertSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction4);
      assertSame(bigFraction15, bigFraction6);
      assertSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction11);
      assertSame(bigFraction15, bigFraction14);
      assertSame(bigFraction15, bigFraction9);
      assertSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction3);
      assertSame(bigFraction15, bigFraction1);
      assertSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction11);
      assertSame(bigFraction7, bigFraction14);
      assertNotSame(bigFraction7, bigFraction8);
      assertSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction12);
      assertSame(bigFraction7, bigFraction15);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction13);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction15);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction12);
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction15.equals((Object)bigFraction8));
      assertTrue(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertTrue(bigFraction7.equals((Object)bigFraction13));
      assertTrue(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertTrue(bigFraction8.equals((Object)bigFraction6));
      assertTrue(bigFraction8.equals((Object)bigFraction13));
      assertTrue(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertTrue(bigFraction8.equals((Object)bigFraction14));
      assertTrue(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertTrue(bigFraction8.equals((Object)bigFraction1));
      assertTrue(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertTrue(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertTrue(bigFraction8.equals((Object)bigFraction7));
      assertNotNull(bigFraction15);
      
      BigFraction bigFraction16 = bigFraction0.negate();
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte) (-1), bigFraction16.byteValue());
      assertEquals((short) (-1), bigFraction16.shortValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction16, bigFraction9);
      assertNotSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction16, bigFraction4);
      assertNotSame(bigFraction16, bigFraction13);
      assertNotSame(bigFraction16, bigFraction11);
      assertNotSame(bigFraction16, bigFraction2);
      assertNotSame(bigFraction16, bigFraction14);
      assertNotSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction16, bigFraction7);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction15);
      assertNotSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction5);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigFraction16, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction16.equals((Object)bigFraction9));
      assertFalse(bigFraction16.equals((Object)bigFraction10));
      assertFalse(bigFraction16.equals((Object)bigFraction8));
      assertFalse(bigFraction16.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction0));
      assertFalse(bigFraction16.equals((Object)bigFraction7));
      assertFalse(bigFraction16.equals((Object)bigFraction6));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertFalse(bigFraction16.equals((Object)bigFraction12));
      assertFalse(bigFraction16.equals((Object)bigFraction5));
      assertFalse(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertNotNull(bigFraction16);
      
      BigFraction bigFraction17 = bigFraction0.pow(1);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction17.byteValue());
      assertEquals((short)1, bigFraction17.shortValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction17, bigFraction6);
      assertNotSame(bigFraction17, bigFraction3);
      assertNotSame(bigFraction17, bigFraction2);
      assertNotSame(bigFraction17, bigFraction14);
      assertNotSame(bigFraction17, bigFraction9);
      assertNotSame(bigFraction17, bigFraction4);
      assertNotSame(bigFraction17, bigFraction1);
      assertNotSame(bigFraction17, bigFraction15);
      assertNotSame(bigFraction17, bigFraction12);
      assertSame(bigFraction17, bigFraction11);
      assertNotSame(bigFraction17, bigFraction5);
      assertSame(bigFraction17, bigFraction0);
      assertNotSame(bigFraction17, bigFraction7);
      assertNotSame(bigFraction17, bigFraction16);
      assertNotSame(bigFraction17, bigFraction10);
      assertNotSame(bigFraction17, bigFraction13);
      assertNotSame(bigFraction17, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction17.equals((Object)bigFraction6));
      assertTrue(bigFraction17.equals((Object)bigFraction5));
      assertTrue(bigFraction17.equals((Object)bigFraction3));
      assertFalse(bigFraction17.equals((Object)bigFraction2));
      assertFalse(bigFraction17.equals((Object)bigFraction14));
      assertFalse(bigFraction17.equals((Object)bigFraction9));
      assertFalse(bigFraction17.equals((Object)bigFraction1));
      assertTrue(bigFraction17.equals((Object)bigFraction4));
      assertFalse(bigFraction17.equals((Object)bigFraction15));
      assertFalse(bigFraction17.equals((Object)bigFraction12));
      assertFalse(bigFraction17.equals((Object)bigFraction7));
      assertFalse(bigFraction17.equals((Object)bigFraction16));
      assertFalse(bigFraction17.equals((Object)bigFraction10));
      assertFalse(bigFraction17.equals((Object)bigFraction13));
      assertFalse(bigFraction17.equals((Object)bigFraction8));
      assertNotNull(bigFraction17);
      
      int int4 = 2343;
      // Undeclared exception!
      try { 
        BigFraction.of(2343, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(9007199254740990L);
      assertEquals((byte) (-2), bigFraction0.byteValue());
      assertEquals((short) (-2), bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(9007199254740990L);
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
      assertEquals((byte) (-2), bigFraction0.byteValue());
      assertEquals((short) (-2), bigFraction0.shortValue());
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      int int0 = bigFraction1.ZERO.getNumeratorAsInt();
      assertEquals(0, int0);
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      
      double double0 = bigFraction1.doubleValue();
      assertEquals(9.00719925474099E15, double0, 0.01);
      assertEquals((byte) (-2), bigFraction1.byteValue());
      assertEquals((short) (-2), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      
      BigFraction bigFraction3 = bigFraction0.reciprocal();
      assertEquals((byte) (-2), bigFraction0.byteValue());
      assertEquals((short) (-2), bigFraction0.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      // Undeclared exception!
      try { 
        BigFraction.parse("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length BigInteger
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE;
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.ZERO.add(1198L);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1198, bigFraction1.shortValue());
      assertEquals((byte) (-82), bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.ONE.multiply(1198L);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1198, bigFraction1.shortValue());
      assertEquals((byte) (-82), bigFraction1.byteValue());
      assertEquals((short)1198, bigFraction2.shortValue());
      assertEquals((byte) (-82), bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction0.ONE.add(0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.pow(2502);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      // Undeclared exception!
      try { 
        bigFraction0.add((BigFraction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-1));
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.ONE.subtract((-1));
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction2 = bigFraction0.divide(bigInteger0);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction2.multiply(bigFraction3);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short) (-1), bigFraction4.shortValue());
      assertEquals((byte) (-1), bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction4.divide(bigFraction1);
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction1.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short) (-1), bigFraction4.shortValue());
      assertEquals((byte) (-1), bigFraction4.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      float float0 = bigFraction3.floatValue();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction5);
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      
      // Undeclared exception!
      try { 
        BigFraction.from(0.0, (double) (-1), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Max iterations must be strictly positive: 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(1657.698366832386, 706);
      assertEquals((short)1657, bigFraction0.shortValue());
      assertEquals((byte)121, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of((long) 706);
      assertEquals((short)706, bigFraction1.shortValue());
      assertEquals((byte) (-62), bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.ZERO.divide(1735680L);
      assertEquals((short)706, bigFraction1.shortValue());
      assertEquals((byte) (-62), bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      int int0 = bigFraction2.ZERO.intValue();
      assertEquals(0, int0);
      assertEquals((short)706, bigFraction1.shortValue());
      assertEquals((byte) (-62), bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction3 = bigFraction1.subtract(bigInteger0);
      assertEquals((short)706, bigFraction1.shortValue());
      assertEquals((byte) (-62), bigFraction1.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte) (-63), bigFraction3.byteValue());
      assertEquals((short)705, bigFraction3.shortValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      long long0 = bigFraction3.ZERO.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((short)706, bigFraction1.shortValue());
      assertEquals((byte) (-62), bigFraction1.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte) (-63), bigFraction3.byteValue());
      assertEquals((short)705, bigFraction3.shortValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      
      BigFraction bigFraction4 = bigFraction3.divide(bigFraction0);
      assertEquals((short)1657, bigFraction0.shortValue());
      assertEquals((byte)121, bigFraction0.byteValue());
      assertEquals((short)706, bigFraction1.shortValue());
      assertEquals((byte) (-62), bigFraction1.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte) (-63), bigFraction3.byteValue());
      assertEquals((short)705, bigFraction3.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.of(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      String string0 = bigFraction1.toString();
      assertEquals("706", string0);
      assertEquals((short)706, bigFraction1.shortValue());
      assertEquals((byte) (-62), bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertNotNull(string0);
      
      RoundingMode roundingMode0 = RoundingMode.HALF_DOWN;
      BigFraction bigFraction6 = BigFraction.from((double) 1735680L, 706);
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)31744, bigFraction6.shortValue());
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      
      int int1 = bigFraction1.ONE.hashCode();
      assertEquals((short)706, bigFraction1.shortValue());
      assertEquals((byte) (-62), bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(int1 == int0);
      
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue(roundingMode0);
      assertEquals((short)1657, bigFraction0.shortValue());
      assertEquals((byte)121, bigFraction0.byteValue());
      assertEquals((byte)122, bigDecimal0.byteValue());
      assertEquals((short)1658, bigDecimal0.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction7 = bigFraction0.add(bigFraction1);
      assertEquals((short)1657, bigFraction0.shortValue());
      assertEquals((byte)121, bigFraction0.byteValue());
      assertEquals((short)706, bigFraction1.shortValue());
      assertEquals((byte) (-62), bigFraction1.byteValue());
      assertEquals((byte)59, bigFraction7.byteValue());
      assertEquals((short)2363, bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction7.ZERO.add(bigFraction1);
      assertEquals((short)1657, bigFraction0.shortValue());
      assertEquals((byte)121, bigFraction0.byteValue());
      assertEquals((short)706, bigFraction1.shortValue());
      assertEquals((byte) (-62), bigFraction1.byteValue());
      assertEquals((byte)59, bigFraction7.byteValue());
      assertEquals((short)2363, bigFraction7.shortValue());
      assertEquals((byte) (-62), bigFraction8.byteValue());
      assertEquals((short)706, bigFraction8.shortValue());
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction3);
      assertSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = bigFraction0.multiply(bigFraction7);
      assertEquals((short) (-13862), bigFraction9.shortValue());
      assertEquals((byte) (-38), bigFraction9.byteValue());
      assertEquals((short)1657, bigFraction0.shortValue());
      assertEquals((byte)121, bigFraction0.byteValue());
      assertEquals((short)706, bigFraction1.shortValue());
      assertEquals((byte) (-62), bigFraction1.byteValue());
      assertEquals((byte)59, bigFraction7.byteValue());
      assertEquals((short)2363, bigFraction7.shortValue());
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction9);
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = bigFraction0.zero();
      assertEquals((short)1657, bigFraction0.shortValue());
      assertEquals((byte)121, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction10.byteValue());
      assertEquals((short)0, bigFraction10.shortValue());
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction7);
      assertSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertNotNull(bigFraction10);
      
      BigFraction bigFraction11 = bigFraction1.add(2113929216);
      assertEquals((short)706, bigFraction1.shortValue());
      assertEquals((byte) (-62), bigFraction1.byteValue());
      assertEquals((byte) (-62), bigFraction11.byteValue());
      assertEquals((short)706, bigFraction11.shortValue());
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertNotNull(bigFraction11);
      
      BigFraction bigFraction12 = BigFraction.from(1.0, 1657.698366832386, 2113929216);
      assertEquals((byte)1, bigFraction12.byteValue());
      assertEquals((short)1, bigFraction12.shortValue());
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction4);
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertTrue(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertNotNull(bigFraction12);
      
      BigFraction bigFraction13 = BigFraction.parse("706");
      assertEquals((short)706, bigFraction13.shortValue());
      assertEquals((byte) (-62), bigFraction13.byteValue());
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction8);
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertTrue(bigFraction13.equals((Object)bigFraction1));
      assertTrue(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertNotNull(bigFraction13);
      
      BigFraction bigFraction14 = bigFraction13.one();
      assertEquals((short)706, bigFraction13.shortValue());
      assertEquals((byte) (-62), bigFraction13.byteValue());
      assertEquals((byte)1, bigFraction14.byteValue());
      assertEquals((short)1, bigFraction14.shortValue());
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction14);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction11);
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertTrue(bigFraction13.equals((Object)bigFraction1));
      assertTrue(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertTrue(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertTrue(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertNotNull(bigFraction14);
      
      BigFraction bigFraction15 = bigFraction8.multiply(bigInteger0);
      assertEquals((short)1657, bigFraction0.shortValue());
      assertEquals((byte)121, bigFraction0.byteValue());
      assertEquals((short)706, bigFraction1.shortValue());
      assertEquals((byte) (-62), bigFraction1.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte) (-62), bigFraction15.byteValue());
      assertEquals((short)706, bigFraction15.shortValue());
      assertEquals((byte)59, bigFraction7.byteValue());
      assertEquals((short)2363, bigFraction7.shortValue());
      assertEquals((byte) (-62), bigFraction8.byteValue());
      assertEquals((short)706, bigFraction8.shortValue());
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction15);
      assertNotSame(bigFraction7, bigFraction14);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction15);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction3);
      assertSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertTrue(bigFraction15.equals((Object)bigFraction13));
      assertTrue(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertTrue(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction14));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertTrue(bigFraction8.equals((Object)bigFraction13));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction14));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertNotNull(bigFraction15);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(0, (-700));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.add(215L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-41), bigFraction1.byteValue());
      assertEquals((short)215, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.add(bigFraction0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-41), bigFraction1.byteValue());
      assertEquals((short)215, bigFraction1.shortValue());
      assertEquals((short)215, bigFraction2.shortValue());
      assertEquals((byte) (-41), bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      int int0 = bigFraction0.intValue();
      assertEquals(0, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      
      BigInteger bigInteger0 = bigFraction0.getNumerator();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction3 = bigFraction1.add(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-41), bigFraction1.byteValue());
      assertEquals((short)215, bigFraction1.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)215, bigFraction3.shortValue());
      assertEquals((byte) (-41), bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction2);
      assertSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.ONE.abs();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-41), bigFraction1.byteValue());
      assertEquals((short)215, bigFraction1.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)215, bigFraction3.shortValue());
      assertEquals((byte) (-41), bigFraction3.byteValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction3, bigFraction4);
      assertSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction2.one();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-41), bigFraction1.byteValue());
      assertEquals((short)215, bigFraction1.shortValue());
      assertEquals((short)215, bigFraction2.shortValue());
      assertEquals((byte) (-41), bigFraction2.byteValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      // Undeclared exception!
      try { 
        bigFraction3.divide(bigInteger0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // The value to divide by must not be zero
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ZERO;
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.multiply((-1488));
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction0);
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.subtract((-2822L));
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)6, bigFraction2.byteValue());
      assertEquals((short)2822, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = BigFraction.of(450);
      assertEquals((short)450, bigFraction3.shortValue());
      assertEquals((byte) (-62), bigFraction3.byteValue());
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction0.abs();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      
      long long0 = bigFraction3.longValue();
      assertEquals(450L, long0);
      assertEquals((short)450, bigFraction3.shortValue());
      assertEquals((byte) (-62), bigFraction3.byteValue());
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      
      BigFraction bigFraction5 = bigFraction2.subtract((long) 450);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)6, bigFraction2.byteValue());
      assertEquals((short)2822, bigFraction2.shortValue());
      assertEquals((byte)68, bigFraction5.byteValue());
      assertEquals((short)2372, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction3.abs();
      assertEquals((short)450, bigFraction3.shortValue());
      assertEquals((byte) (-62), bigFraction3.byteValue());
      assertEquals((short)450, bigFraction6.shortValue());
      assertEquals((byte) (-62), bigFraction6.byteValue());
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction6);
      assertSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertNotNull(bigFraction6);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(289.324, (-105));
      assertEquals((short)289, bigFraction0.shortValue());
      assertEquals((byte)33, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      int int0 = bigFraction0.ONE.signum();
      assertEquals(1, int0);
      assertEquals((short)289, bigFraction0.shortValue());
      assertEquals((byte)33, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.ZERO.subtract((long) 1);
      assertEquals((short)289, bigFraction0.shortValue());
      assertEquals((byte)33, bigFraction0.byteValue());
      assertEquals((byte) (-1), bigFraction1.byteValue());
      assertEquals((short) (-1), bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.add((-105));
      assertEquals((short)289, bigFraction0.shortValue());
      assertEquals((byte)33, bigFraction0.byteValue());
      assertEquals((byte) (-1), bigFraction1.byteValue());
      assertEquals((short) (-1), bigFraction1.shortValue());
      assertEquals((short) (-106), bigFraction2.shortValue());
      assertEquals((byte) (-106), bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      int int1 = bigFraction1.hashCode();
      assertEquals((short)289, bigFraction0.shortValue());
      assertEquals((byte)33, bigFraction0.byteValue());
      assertEquals((byte) (-1), bigFraction1.byteValue());
      assertEquals((short) (-1), bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(int1 == int0);
      
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      BigDecimal bigDecimal0 = bigFraction1.bigDecimalValue(79, roundingMode0);
      assertEquals((short)289, bigFraction0.shortValue());
      assertEquals((byte)33, bigFraction0.byteValue());
      assertEquals((byte) (-1), bigFraction1.byteValue());
      assertEquals((short) (-1), bigFraction1.shortValue());
      assertEquals((byte) (-1), bigDecimal0.byteValue());
      assertEquals((short) (-1), bigDecimal0.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction3 = bigFraction0.pow(2729);
      assertEquals((short)289, bigFraction0.shortValue());
      assertEquals((byte)33, bigFraction0.byteValue());
      assertEquals((byte)26, bigFraction3.byteValue());
      assertEquals((short)1050, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.add(bigFraction0);
      assertEquals((short)289, bigFraction0.shortValue());
      assertEquals((byte)33, bigFraction0.byteValue());
      assertEquals((byte)26, bigFraction3.byteValue());
      assertEquals((short)1050, bigFraction3.shortValue());
      assertEquals((short)1340, bigFraction4.shortValue());
      assertEquals((byte)60, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      int int2 = bigFraction3.signum();
      assertEquals(1, int2);
      assertEquals((short)289, bigFraction0.shortValue());
      assertEquals((byte)33, bigFraction0.byteValue());
      assertEquals((byte)26, bigFraction3.byteValue());
      assertEquals((short)1050, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(int2 == int0);
      
      BigFraction bigFraction5 = BigFraction.from((double) 1, 3448);
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction6 = BigFraction.of(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertTrue(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      
      int int3 = bigFraction0.intValue();
      assertEquals(289, int3);
      assertEquals((short)289, bigFraction0.shortValue());
      assertEquals((byte)33, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      
      BigFraction bigFraction7 = bigFraction0.negate();
      assertEquals((short)289, bigFraction0.shortValue());
      assertEquals((byte)33, bigFraction0.byteValue());
      assertEquals((byte) (-33), bigFraction7.byteValue());
      assertEquals((short) (-289), bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction6.one();
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction8.byteValue());
      assertEquals((short)1, bigFraction8.shortValue());
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction4);
      assertTrue(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertTrue(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = bigFraction4.add(1510L);
      assertEquals((byte)34, bigFraction9.byteValue());
      assertEquals((short)2850, bigFraction9.shortValue());
      assertEquals((short)289, bigFraction0.shortValue());
      assertEquals((byte)33, bigFraction0.byteValue());
      assertEquals((byte)26, bigFraction3.byteValue());
      assertEquals((short)1050, bigFraction3.shortValue());
      assertEquals((short)1340, bigFraction4.shortValue());
      assertEquals((byte)60, bigFraction4.byteValue());
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction6);
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertNotNull(bigFraction9);
      
      int int4 = bigFraction3.getNumeratorAsInt();
      assertEquals(0, int4);
      assertEquals((short)289, bigFraction0.shortValue());
      assertEquals((byte)33, bigFraction0.byteValue());
      assertEquals((byte)26, bigFraction3.byteValue());
      assertEquals((short)1050, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(int4 == int0);
      assertFalse(int4 == int2);
      assertFalse(int4 == int3);
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)10, bigFraction0.shortValue());
      assertEquals((byte)10, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      int int0 = bigFraction0.intValue();
      assertEquals(10, int0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)10, bigFraction0.shortValue());
      assertEquals((byte)10, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.multiply(0L);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)10, bigFraction0.shortValue());
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.reciprocal();
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)10, bigFraction0.shortValue());
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      long long0 = bigFraction1.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)10, bigFraction0.shortValue());
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      
      BigFraction bigFraction3 = bigFraction1.ONE.divide(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)10, bigFraction0.shortValue());
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction1.ONE.subtract(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)10, bigFraction0.shortValue());
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-9), bigFraction4.shortValue());
      assertEquals((byte) (-9), bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      int int1 = bigFraction0.intValue();
      assertEquals(10, int1);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)10, bigFraction0.shortValue());
      assertEquals((byte)10, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(int1 == int0);
      
      BigFraction bigFraction5 = bigFraction2.divide(10);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)10, bigFraction0.shortValue());
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      
      BigInteger bigInteger1 = bigFraction3.getNumerator();
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)10, bigFraction0.shortValue());
      assertEquals((byte)10, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte) (-73);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-50);
      byteArray0[5] = (byte)0;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertArrayEquals(new byte[] {(byte)110, (byte)23, (byte) (-73), (byte)0, (byte) (-50), (byte)0}, byteArray0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short) (-12800), bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      assertEquals(6, byteArray0.length);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0, bigInteger0);
      assertArrayEquals(new byte[] {(byte)110, (byte)23, (byte) (-73), (byte)0, (byte) (-50), (byte)0}, byteArray0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short) (-12800), bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      assertEquals(6, byteArray0.length);
      
      // Undeclared exception!
      try { 
        BigFraction.parse(".g/hH'6C");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \".g\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ZERO;
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      double double0 = bigFraction0.doubleValue();
      assertEquals(0.0, double0, 0.01);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigFraction bigFraction1 = bigFraction0.one();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      int int0 = (-137);
      BigFraction bigFraction2 = BigFraction.from((-155.329388928355), (-137));
      assertEquals((byte)101, bigFraction2.byteValue());
      assertEquals((short) (-155), bigFraction2.shortValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      String string0 = bigFraction2.ONE.toString();
      assertEquals("1", string0);
      assertEquals((byte)101, bigFraction2.byteValue());
      assertEquals((short) (-155), bigFraction2.shortValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(string0);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction3 = bigFraction0.multiply(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.ZERO.divide((-137));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction2);
      assertSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction3.divide((long) (-137));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction3, bigFraction4);
      assertSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction3);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      // Undeclared exception!
      try { 
        BigFraction.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(0L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.multiply(0L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction0);
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.ZERO.divide((-1));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction0);
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction0.add((-1));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction3.shortValue());
      assertEquals((byte) (-1), bigFraction3.byteValue());
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction0.ONE.add(0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction3.add((-2893L));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short) (-1), bigFraction3.shortValue());
      assertEquals((byte) (-1), bigFraction3.byteValue());
      assertEquals((byte) (-78), bigFraction5.byteValue());
      assertEquals((short) (-2894), bigFraction5.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction2.divide((long) (-1));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertSame(bigFraction6, bigFraction2);
      assertSame(bigFraction6, bigFraction1);
      assertSame(bigFraction6, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte)1;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertArrayEquals(new byte[] {(byte) (-59), (byte) (-3), (byte)1}, byteArray0);
      assertEquals((short) (-767), bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      assertEquals(3, byteArray0.length);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0, bigInteger0);
      assertArrayEquals(new byte[] {(byte) (-59), (byte) (-3), (byte)1}, byteArray0);
      assertEquals((short) (-767), bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      assertEquals(3, byteArray0.length);
      
      RoundingMode roundingMode0 = RoundingMode.HALF_DOWN;
      BigFraction bigFraction1 = bigFraction0.ZERO.add(bigInteger0);
      assertArrayEquals(new byte[] {(byte) (-59), (byte) (-3), (byte)1}, byteArray0);
      assertEquals((short) (-767), bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short) (-767), bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals(3, byteArray0.length);
      
      BigFraction bigFraction2 = bigFraction1.ZERO.multiply(bigInteger0);
      assertArrayEquals(new byte[] {(byte) (-59), (byte) (-3), (byte)1}, byteArray0);
      assertEquals((short) (-767), bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short) (-767), bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      assertEquals(3, byteArray0.length);
      
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue(roundingMode0);
      assertArrayEquals(new byte[] {(byte) (-59), (byte) (-3), (byte)1}, byteArray0);
      assertEquals((short) (-767), bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      assertEquals(3, byteArray0.length);
      
      BigDecimal bigDecimal1 = bigFraction0.ZERO.bigDecimalValue();
      assertArrayEquals(new byte[] {(byte) (-59), (byte) (-3), (byte)1}, byteArray0);
      assertEquals((short) (-767), bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals(3, byteArray0.length);
      
      BigFraction bigFraction3 = bigFraction0.multiply((int) (byte)1);
      assertArrayEquals(new byte[] {(byte) (-59), (byte) (-3), (byte)1}, byteArray0);
      assertEquals((short) (-767), bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals(3, byteArray0.length);
      
      double double0 = bigFraction2.doubleValue();
      assertEquals(0.0, double0, 0.01);
      assertArrayEquals(new byte[] {(byte) (-59), (byte) (-3), (byte)1}, byteArray0);
      assertEquals((short) (-767), bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short) (-767), bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertEquals(3, byteArray0.length);
      
      BigFraction bigFraction4 = bigFraction0.multiply(0);
      assertArrayEquals(new byte[] {(byte) (-59), (byte) (-3), (byte)1}, byteArray0);
      assertEquals((short) (-767), bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      assertEquals(3, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(Integer.MIN_VALUE);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      float float0 = bigFraction0.ONE.floatValue();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = BigFraction.of((-2313), (-1050));
      assertEquals((short)2, bigFraction1.shortValue());
      assertEquals((byte)2, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.multiply(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.ONE.multiply((-2252L));
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)52, bigFraction3.byteValue());
      assertEquals((short) (-2252), bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction0.divide(1142L);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      boolean boolean0 = bigFraction2.equals(bigFraction4);
      assertFalse(boolean0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      
      double double0 = bigFraction4.ZERO.doubleValue();
      assertEquals(0.0, double0, 0.01);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      
      BigFraction bigFraction5 = bigFraction4.subtract(1142L);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte) (-117), bigFraction5.byteValue());
      assertEquals((short) (-1141), bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      long long0 = bigFraction5.ZERO.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte) (-117), bigFraction5.byteValue());
      assertEquals((short) (-1141), bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      
      int int0 = bigFraction2.getDenominatorAsInt();
      assertEquals(1, int0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(2709L);
      assertEquals((short)2709, bigFraction0.shortValue());
      assertEquals((byte) (-107), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.multiply(0);
      assertEquals((short)2709, bigFraction0.shortValue());
      assertEquals((byte) (-107), bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.one();
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.multiply(bigFraction0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      String string0 = bigFraction2.toString();
      assertEquals("0", string0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(string0);
      
      long long0 = bigFraction0.ONE.longValue();
      assertEquals(1L, long0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      
      BigFraction bigFraction3 = BigFraction.of(0L, 0L);
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction1.subtract(0L);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction3.one();
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertNotSame(bigFraction3, bigFraction5);
      assertSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction4);
      assertSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      BigDecimal bigDecimal0 = bigFraction1.bigDecimalValue();
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction5);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction6 = bigFraction4.add((-299));
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((short) (-298), bigFraction6.shortValue());
      assertEquals((byte) (-42), bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction5);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction4, bigFraction2);
      assertSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      int int0 = bigFraction0.ONE.intValue();
      assertEquals(1, int0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      int int1 = bigFraction0.getNumeratorAsInt();
      assertEquals(0, int1);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertFalse(int1 == int0);
      
      // Undeclared exception!
      try { 
        bigFraction0.add((BigFraction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE;
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = bigFraction0.ONE.subtract(1113L);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte) (-88), bigFraction1.byteValue());
      assertEquals((short) (-1112), bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.subtract(bigInteger0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short) (-9), bigFraction2.shortValue());
      assertEquals((byte) (-9), bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction0.divide((-112));
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      int int0 = bigFraction0.ZERO.signum();
      assertEquals(0, int0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      
      // Undeclared exception!
      try { 
        bigFraction0.subtract((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ZERO;
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      RoundingMode roundingMode0 = RoundingMode.DOWN;
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue(roundingMode0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      float float0 = bigFraction0.floatValue();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      // Undeclared exception!
      try { 
        bigFraction0.divide(0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // The value to divide by must not be zero
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      float float0 = bigFraction0.floatValue();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(0L, (-1L));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      int int0 = bigFraction0.getNumeratorAsInt();
      assertEquals(0, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-1489), (-1));
      assertEquals((short)1489, bigFraction0.shortValue());
      assertEquals((byte) (-47), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      long long0 = 1898L;
      BigFraction bigFraction0 = BigFraction.of(1898L, (-2502L));
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      int int0 = 0;
      // Undeclared exception!
      try { 
        BigFraction.from(0.0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = 0;
      BigFraction bigFraction0 = BigFraction.of(0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = null;
      // Undeclared exception!
      try { 
        bigFraction0.multiply((BigFraction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(0L, 0L);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      int int0 = bigFraction0.ZERO.intValue();
      assertEquals(0, int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.ZERO.subtract(0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction0);
      assertNotNull(bigFraction1);
      
      int int1 = bigFraction0.getDenominatorAsInt();
      assertEquals(1, int1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertSame(bigFraction0, bigFraction1);
      assertFalse(int1 == int0);
      
      float float0 = bigFraction0.floatValue();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertSame(bigFraction0, bigFraction1);
      
      int int2 = bigFraction1.ONE.intValue();
      assertEquals(1, int2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction0);
      assertFalse(int2 == int0);
      assertTrue(int2 == int1);
      
      // Undeclared exception!
      try { 
        bigFraction1.ZERO.reciprocal();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        BigFraction.from((-2303.17066670888), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(0L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.subtract(1175L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)105, bigFraction1.byteValue());
      assertEquals((short) (-1175), bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = BigFraction.from((-1.0), (-2906));
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      int int0 = bigFraction1.intValue();
      assertEquals((-1175), int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)105, bigFraction1.byteValue());
      assertEquals((short) (-1175), bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      
      BigFraction bigFraction3 = bigFraction0.one();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.divide(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)105, bigFraction1.byteValue());
      assertEquals((short) (-1175), bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction3.negate();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertTrue(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(0.0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = bigFraction0.subtract(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction0);
      assertNotNull(bigFraction1);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-394));
      assertEquals((byte)118, bigFraction0.byteValue());
      assertEquals((short) (-394), bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.negate();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.ONE.subtract(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertTrue(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      String string0 = bigFraction0.toString();
      assertEquals("-394", string0);
      assertEquals((byte)118, bigFraction0.byteValue());
      assertEquals((short) (-394), bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(string0);
      
      BigFraction bigFraction6 = bigFraction0.multiply(bigInteger0);
      assertEquals((byte)118, bigFraction0.byteValue());
      assertEquals((short) (-394), bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short) (-394), bigFraction6.shortValue());
      assertEquals((byte)118, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction6.subtract((-394));
      assertEquals((byte)118, bigFraction0.byteValue());
      assertEquals((short) (-394), bigFraction0.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short) (-394), bigFraction6.shortValue());
      assertEquals((byte)118, bigFraction6.byteValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction7);
      
      BigInteger bigInteger1 = bigFraction4.getNumerator();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigInteger1.byteValue());
      assertEquals((short)0, bigInteger1.shortValue());
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction5));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE;
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.ZERO.abs();
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction2 = bigFraction1.add(bigInteger0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction1.ONE.divide(bigInteger0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      long long0 = bigFraction2.ONE.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      
      int int0 = bigFraction0.compareTo(bigFraction1);
      assertEquals(1, int0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      
      long long1 = bigFraction1.ONE.longValue();
      assertEquals(1L, long1);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(long1 == long0);
      
      RoundingMode roundingMode0 = RoundingMode.HALF_DOWN;
      BigDecimal bigDecimal0 = bigFraction0.ZERO.bigDecimalValue(roundingMode0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertNotNull(bigDecimal0);
      
      long long2 = bigFraction0.getDenominatorAsLong();
      assertEquals(1L, long2);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(long2 == long1);
      assertTrue(long2 == long0);
      
      BigFraction bigFraction4 = bigFraction1.multiply(1780L);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertSame(bigFraction4, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction1.zero();
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      
      BigDecimal bigDecimal1 = bigFraction5.ONE.bigDecimalValue(1, roundingMode0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      
      float float0 = bigFraction5.floatValue();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      
      BigFraction bigFraction6 = bigFraction1.zero();
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction6, bigFraction2);
      assertSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction0);
      assertSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertNotNull(bigFraction6);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(82.5934565135, 2435);
      assertEquals((byte)82, bigFraction0.byteValue());
      assertEquals((short)82, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(4503599627370496L);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction2 = bigFraction0.divide(bigInteger0);
      assertEquals((byte)82, bigFraction0.byteValue());
      assertEquals((short)82, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)8, bigFraction2.shortValue());
      assertEquals((byte)8, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.ONE.multiply(2435);
      assertEquals((byte)82, bigFraction0.byteValue());
      assertEquals((short)82, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)8, bigFraction2.shortValue());
      assertEquals((byte)8, bigFraction2.byteValue());
      assertEquals((short)2435, bigFraction3.shortValue());
      assertEquals((byte) (-125), bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.of(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigFraction4.byteValue());
      assertEquals((short)10, bigFraction4.shortValue());
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.of((-1133));
      assertEquals((short) (-1133), bigFraction5.shortValue());
      assertEquals((byte) (-109), bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      // Undeclared exception!
      try { 
        bigFraction0.bigDecimalValue(1, roundingMode0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Rounding necessary
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(1422);
      assertEquals((short)1422, bigFraction0.shortValue());
      assertEquals((byte) (-114), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      bigFraction0.hashCode();
      assertEquals((short)1422, bigFraction0.shortValue());
      assertEquals((byte) (-114), bigFraction0.byteValue());
      
      int int0 = bigFraction0.ZERO.signum();
      assertEquals(0, int0);
      assertEquals((short)1422, bigFraction0.shortValue());
      assertEquals((byte) (-114), bigFraction0.byteValue());
      
      int int1 = bigFraction0.ONE.signum();
      assertEquals(1, int1);
      assertEquals((short)1422, bigFraction0.shortValue());
      assertEquals((byte) (-114), bigFraction0.byteValue());
      assertFalse(int1 == int0);
      
      BigFraction bigFraction1 = BigFraction.of(1422, 11);
      assertEquals((byte) (-127), bigFraction1.byteValue());
      assertEquals((short)129, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction2 = BigFraction.of(bigInteger0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      long long0 = bigFraction2.longValue();
      assertEquals(0L, long0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      
      BigFraction bigFraction3 = bigFraction1.subtract((-3686));
      assertEquals((byte) (-127), bigFraction1.byteValue());
      assertEquals((short)129, bigFraction1.shortValue());
      assertEquals((short)3815, bigFraction3.shortValue());
      assertEquals((byte) (-25), bigFraction3.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      RoundingMode roundingMode0 = RoundingMode.HALF_EVEN;
      BigDecimal bigDecimal0 = bigFraction2.bigDecimalValue(roundingMode0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction4 = BigFraction.of(0L, 0L);
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-1L), (-1L));
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.from(0.0, 505);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.add((-4005L));
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)92, bigFraction2.byteValue());
      assertEquals((short) (-4004), bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = BigFraction.of((-4005L));
      assertEquals((byte)91, bigFraction3.byteValue());
      assertEquals((short) (-4005), bigFraction3.shortValue());
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      int int0 = bigFraction2.signum();
      assertEquals((-1), int0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)92, bigFraction2.byteValue());
      assertEquals((short) (-4004), bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction4 = bigFraction0.add(bigInteger0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)2, bigFraction4.shortValue());
      assertEquals((byte)2, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction2.subtract(bigInteger0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)92, bigFraction2.byteValue());
      assertEquals((short) (-4004), bigFraction2.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short) (-4005), bigFraction5.shortValue());
      assertEquals((byte)91, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      long long0 = bigFraction5.getDenominatorAsLong();
      assertEquals((-1L), long0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)92, bigFraction2.byteValue());
      assertEquals((short) (-4004), bigFraction2.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short) (-4005), bigFraction5.shortValue());
      assertEquals((byte)91, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      
      long long1 = bigFraction1.getNumeratorAsLong();
      assertEquals(0L, long1);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(long1 == long0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(0.0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of((-1));
      assertEquals((byte) (-1), bigFraction1.byteValue());
      assertEquals((short) (-1), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.add(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte) (-1), bigFraction1.byteValue());
      assertEquals((short) (-1), bigFraction1.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = BigFraction.of((long) (-1));
      assertEquals((byte) (-1), bigFraction3.byteValue());
      assertEquals((short) (-1), bigFraction3.shortValue());
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction1.abs();
      assertEquals((byte) (-1), bigFraction1.byteValue());
      assertEquals((short) (-1), bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction0.subtract((-1));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      
      BigInteger bigInteger0 = null;
      try {
        bigInteger0 = new BigInteger((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(0.0, 0.0, 3779);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(3779, (-1220));
      assertEquals((byte) (-3), bigFraction1.byteValue());
      assertEquals((short) (-3), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = BigFraction.ONE;
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.ONE.subtract((long) 3779);
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte)62, bigFraction3.byteValue());
      assertEquals((short) (-3778), bigFraction3.shortValue());
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.from(842.9188383516077, (-1220));
      assertEquals((byte)74, bigFraction4.byteValue());
      assertEquals((short)842, bigFraction4.shortValue());
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction0.ONE.add(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)2, bigFraction5.shortValue());
      assertEquals((byte)2, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      int int0 = bigFraction1.ONE.intValue();
      assertEquals(1, int0);
      assertEquals((byte) (-3), bigFraction1.byteValue());
      assertEquals((short) (-3), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      
      BigFraction bigFraction6 = bigFraction0.divide(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte) (-3), bigFraction1.byteValue());
      assertEquals((short) (-3), bigFraction1.shortValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertNotNull(bigFraction6);
      
      RoundingMode roundingMode0 = RoundingMode.HALF_UP;
      BigDecimal bigDecimal0 = bigFraction5.bigDecimalValue(1, roundingMode0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)2, bigFraction5.shortValue());
      assertEquals((byte)2, bigFraction5.byteValue());
      assertEquals((byte)2, bigDecimal0.byteValue());
      assertEquals((short)2, bigDecimal0.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from((-1245.687), 2164);
      assertEquals((short) (-1245), bigFraction0.shortValue());
      assertEquals((byte)35, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.from(1.0, 1.0, 2164);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      int int0 = bigFraction0.compareTo(bigFraction1);
      assertEquals((-1), int0);
      assertEquals((short) (-1245), bigFraction0.shortValue());
      assertEquals((byte)35, bigFraction0.byteValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      
      BigFraction bigFraction2 = bigFraction1.pow(1);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.subtract(2293);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((byte)12, bigFraction3.byteValue());
      assertEquals((short) (-2292), bigFraction3.shortValue());
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(1833L, 2487L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.multiply(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction2.ZERO.multiply(bigInteger0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.of(2487L, (-245L));
      assertEquals((byte) (-10), bigFraction4.byteValue());
      assertEquals((short) (-10), bigFraction4.shortValue());
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction3.multiply(2487L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction2.ONE.subtract(bigFraction3);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertTrue(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      
      boolean boolean0 = bigFraction0.equals(bigFraction6);
      assertFalse(boolean0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertTrue(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      
      int int0 = bigFraction2.compareTo(bigFraction1);
      assertEquals((-1), int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      
      int int1 = bigFraction2.compareTo(bigFraction0);
      assertEquals(0, int1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(int1 == int0);
      
      BigFraction bigFraction7 = bigFraction0.add((long) (-1));
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertNotNull(bigFraction7);
      
      long long0 = bigFraction1.getNumeratorAsLong();
      assertEquals(1L, long0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      
      BigFraction bigFraction8 = bigFraction0.subtract(bigFraction1);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertTrue(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = BigFraction.of(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction9.shortValue());
      assertEquals((byte)1, bigFraction9.byteValue());
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertTrue(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertTrue(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertNotNull(bigFraction9);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-1L), (-1L));
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.divide((-2175L));
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      long long0 = bigFraction0.getNumeratorAsLong();
      assertEquals((-1L), long0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      
      RoundingMode roundingMode0 = RoundingMode.CEILING;
      BigDecimal bigDecimal0 = bigFraction1.bigDecimalValue(roundingMode0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-222L));
      assertEquals((byte)34, bigFraction0.byteValue());
      assertEquals((short) (-222), bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      RoundingMode roundingMode0 = RoundingMode.HALF_DOWN;
      BigFraction bigFraction1 = bigFraction0.multiply(1075);
      assertEquals((byte)34, bigFraction0.byteValue());
      assertEquals((short) (-222), bigFraction0.shortValue());
      assertEquals((byte) (-58), bigFraction1.byteValue());
      assertEquals((short)23494, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigDecimal bigDecimal0 = bigFraction0.ONE.bigDecimalValue(roundingMode0);
      assertEquals((byte)34, bigFraction0.byteValue());
      assertEquals((short) (-222), bigFraction0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction2 = bigFraction0.reciprocal();
      assertEquals((byte)34, bigFraction0.byteValue());
      assertEquals((short) (-222), bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      // Undeclared exception!
      try { 
        BigFraction.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ZERO;
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      long long0 = bigFraction0.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE;
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = bigFraction0.getDenominator();
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      // Undeclared exception!
      try { 
        BigFraction.from((-224.886654738), (-224.886654738), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Max iterations must be strictly positive: 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(0.0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      RoundingMode roundingMode0 = RoundingMode.HALF_EVEN;
      int int0 = bigFraction0.getDenominatorAsInt();
      assertEquals(1, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue(roundingMode0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction1 = bigFraction0.abs();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction0);
      assertNotNull(bigFraction1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(802);
      assertEquals((short)802, bigFraction0.shortValue());
      assertEquals((byte)34, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.multiply((long) 802);
      assertEquals((short)802, bigFraction0.shortValue());
      assertEquals((byte)34, bigFraction0.byteValue());
      assertEquals((byte) (-124), bigFraction1.byteValue());
      assertEquals((short) (-12156), bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = BigFraction.of(802);
      assertEquals((byte)34, bigFraction2.byteValue());
      assertEquals((short)802, bigFraction2.shortValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      int int0 = bigFraction0.compareTo(bigFraction2);
      assertEquals(0, int0);
      assertEquals((short)802, bigFraction0.shortValue());
      assertEquals((byte)34, bigFraction0.byteValue());
      assertEquals((byte)34, bigFraction2.byteValue());
      assertEquals((short)802, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      double double0 = 1819.6147870898;
      BigFraction bigFraction0 = BigFraction.from(1819.6147870898);
      assertEquals((short)1819, bigFraction0.shortValue());
      assertEquals((byte)27, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      bigFraction0.hashCode();
      assertEquals((short)1819, bigFraction0.shortValue());
      assertEquals((byte)27, bigFraction0.byteValue());
      
      int int0 = 0;
      BigFraction bigFraction1 = bigFraction0.pow(0);
      assertEquals((short)1819, bigFraction0.shortValue());
      assertEquals((byte)27, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      // Undeclared exception!
      try { 
        BigFraction.of(2798L, (long) 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      // Undeclared exception!
      try { 
        BigFraction.parse(")~,GGw85YNWF*OKq@1a");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \")~GGw85YN\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(1L, 1L);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(1L, (-5824L));
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.ONE.subtract(bigFraction1);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = BigFraction.ONE;
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction0.divide(bigFraction3);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      // Undeclared exception!
      try { 
        bigFraction0.divide(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // The value to divide by must not be zero
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int int0 = 1;
      // Undeclared exception!
      try { 
        BigFraction.from(1240.95149, (-2499.53364), 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Epsilon must be positive: 1
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      // Undeclared exception!
      try { 
        BigFraction.of(2147483648L, 0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      // Undeclared exception!
      try { 
        BigFraction.parse("o[LmK");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"o[LmK\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from((-2061.142782), 1.0, 1);
      assertEquals((short) (-2061), bigFraction0.shortValue());
      assertEquals((byte) (-13), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.add((-1));
      assertEquals((short) (-2061), bigFraction0.shortValue());
      assertEquals((byte) (-13), bigFraction0.byteValue());
      assertEquals((short) (-2062), bigFraction1.shortValue());
      assertEquals((byte) (-14), bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      byte[] byteArray0 = bigInteger0.toByteArray();
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(byteArray0);
      assertEquals(1, byteArray0.length);
      
      // Undeclared exception!
      try { 
        bigFraction0.ONE.divide(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // The value to divide by must not be zero
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(591L);
      assertEquals((byte)79, bigFraction0.byteValue());
      assertEquals((short)591, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      // Undeclared exception!
      try { 
        BigFraction.from((-2582.7692), (-3212.643397), 1238);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Epsilon must be positive: 1238
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      String string0 = bigFraction0.ONE.toString();
      assertEquals("1", string0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(string0);
      
      double double0 = bigFraction0.ZERO.doubleValue();
      assertEquals(0.0, double0, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.pow(0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.multiply((long) 0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigInteger bigInteger0 = BigInteger.valueOf(1L);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction3 = BigFraction.of(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction0.ONE.multiply(4503599627370495L);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction4.byteValue());
      assertEquals((short) (-1), bigFraction4.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.from(0.0, (-1055));
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      bigFraction0.hashCode();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      
      long long0 = bigFraction3.longValue();
      assertEquals(1L, long0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction2);
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      int int0 = bigInteger0.intValue();
      assertEquals(10, int0);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.divide(556L);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.ZERO.abs();
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction1.zero();
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      int int1 = bigFraction0.getNumeratorAsInt();
      assertEquals(1, int1);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(int1 == int0);
      
      BigFraction bigFraction4 = bigFraction1.pow(10);
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(4503599627370496L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.ZERO;
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      int int0 = bigFraction0.ZERO.compareTo(bigFraction1);
      assertEquals(0, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      
      BigInteger bigInteger0 = bigFraction0.getDenominator();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-32));
      assertEquals((byte) (-32), bigFraction0.byteValue());
      assertEquals((short) (-32), bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.divide((-32));
      assertEquals((byte) (-32), bigFraction0.byteValue());
      assertEquals((short) (-32), bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(2175.69);
      assertEquals((byte)127, bigFraction0.byteValue());
      assertEquals((short)2175, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      RoundingMode roundingMode0 = RoundingMode.HALF_EVEN;
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue(roundingMode0);
      assertEquals((byte)127, bigFraction0.byteValue());
      assertEquals((short)2175, bigFraction0.shortValue());
      assertEquals((byte) (-128), bigDecimal0.byteValue());
      assertEquals((short)2176, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction1 = bigFraction0.ONE.divide((-1702L));
      assertEquals((byte)127, bigFraction0.byteValue());
      assertEquals((short)2175, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      int int0 = bigFraction0.getNumeratorAsInt();
      assertEquals(1202590843, int0);
      assertEquals((byte)127, bigFraction0.byteValue());
      assertEquals((short)2175, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      
      int int1 = bigFraction1.hashCode();
      assertEquals((byte)127, bigFraction0.byteValue());
      assertEquals((short)2175, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ZERO;
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(0, 0);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertSame(bigFraction1, bigFraction0);
      assertNotNull(bigFraction1);
      
      long long0 = bigFraction0.ZERO.getNumeratorAsLong();
      assertEquals(0L, long0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertSame(bigFraction0, bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.add(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction0);
      assertSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction1.multiply((-2261));
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction3);
      assertSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction0);
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction1.add(bigFraction0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction3);
      assertSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction0);
      assertSame(bigFraction4, bigFraction2);
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.from(457.5803, (-2261));
      assertEquals((byte) (-55), bigFraction5.byteValue());
      assertEquals((short)457, bigFraction5.shortValue());
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = BigFraction.of(0, 0);
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertSame(bigFraction6, bigFraction2);
      assertSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertSame(bigFraction6, bigFraction1);
      assertSame(bigFraction6, bigFraction3);
      assertSame(bigFraction6, bigFraction0);
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-1L), 847L);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.from((-1315.7398208314871), 1);
      assertEquals((byte) (-36), bigFraction1.byteValue());
      assertEquals((short) (-1316), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte) (-36), bigFraction1.byteValue());
      assertEquals((short) (-1316), bigFraction1.shortValue());
      assertEquals((byte)35, bigFraction2.byteValue());
      assertEquals((short)1315, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = BigFraction.of(1, 1);
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from((-11.782011634457083));
      assertEquals((short) (-11), bigFraction0.shortValue());
      assertEquals((byte) (-11), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.pow((-764));
      assertEquals((short) (-11), bigFraction0.shortValue());
      assertEquals((byte) (-11), bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(1924L);
      assertEquals((byte) (-124), bigFraction0.byteValue());
      assertEquals((short)1924, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      int int0 = 11;
      BigFraction bigFraction1 = bigFraction0.ZERO.pow(11);
      assertEquals((byte) (-124), bigFraction0.byteValue());
      assertEquals((short)1924, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      byte[] byteArray0 = new byte[0];
      BigInteger bigInteger0 = null;
      try {
        bigInteger0 = new BigInteger(byteArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length BigInteger
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(1784.0);
      assertEquals((short)1784, bigFraction0.shortValue());
      assertEquals((byte) (-8), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)109;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertArrayEquals(new byte[] {(byte)109}, byteArray0);
      assertEquals((short)109, bigInteger0.shortValue());
      assertEquals((byte)109, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      assertEquals(1, byteArray0.length);
      
      BigFraction bigFraction1 = bigFraction0.divide(bigInteger0);
      assertArrayEquals(new byte[] {(byte)109}, byteArray0);
      assertEquals((short)1784, bigFraction0.shortValue());
      assertEquals((byte) (-8), bigFraction0.byteValue());
      assertEquals((short)109, bigInteger0.shortValue());
      assertEquals((byte)109, bigInteger0.byteValue());
      assertEquals((short)16, bigFraction1.shortValue());
      assertEquals((byte)16, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals(1, byteArray0.length);
      
      BigFraction bigFraction2 = BigFraction.from(2.7755575615628914E-17, (int) (byte)109);
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      long long0 = bigFraction2.ZERO.getNumeratorAsLong();
      assertEquals(0L, long0);
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      
      BigFraction bigFraction3 = bigFraction1.ZERO.multiply(bigFraction0);
      assertArrayEquals(new byte[] {(byte)109}, byteArray0);
      assertEquals((short)1784, bigFraction0.shortValue());
      assertEquals((byte) (-8), bigFraction0.byteValue());
      assertEquals((short)109, bigInteger0.shortValue());
      assertEquals((byte)109, bigInteger0.byteValue());
      assertEquals((short)16, bigFraction1.shortValue());
      assertEquals((byte)16, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      assertEquals(1, byteArray0.length);
      
      BigFraction bigFraction4 = bigFraction0.add(bigInteger0);
      assertArrayEquals(new byte[] {(byte)109}, byteArray0);
      assertEquals((short)1784, bigFraction0.shortValue());
      assertEquals((byte) (-8), bigFraction0.byteValue());
      assertEquals((short)109, bigInteger0.shortValue());
      assertEquals((byte)109, bigInteger0.byteValue());
      assertEquals((byte)101, bigFraction4.byteValue());
      assertEquals((short)1893, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      assertEquals(1, byteArray0.length);
      
      BigFraction bigFraction5 = bigFraction0.pow((byte)109);
      assertEquals((short)1784, bigFraction0.shortValue());
      assertEquals((byte) (-8), bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = BigFraction.from(1429.2);
      assertEquals((short)1429, bigFraction6.shortValue());
      assertEquals((byte) (-107), bigFraction6.byteValue());
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction3.ZERO.divide((long) (byte)109);
      assertArrayEquals(new byte[] {(byte)109}, byteArray0);
      assertEquals((short)1784, bigFraction0.shortValue());
      assertEquals((byte) (-8), bigFraction0.byteValue());
      assertEquals((short)109, bigInteger0.shortValue());
      assertEquals((byte)109, bigInteger0.byteValue());
      assertEquals((short)16, bigFraction1.shortValue());
      assertEquals((byte)16, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertTrue(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertNotNull(bigFraction7);
      assertEquals(1, byteArray0.length);
      
      Random.setNextRandom(9);
      BigFraction bigFraction8 = bigFraction5.multiply(bigInteger0);
      assertArrayEquals(new byte[] {(byte)109}, byteArray0);
      assertEquals((short)1784, bigFraction0.shortValue());
      assertEquals((byte) (-8), bigFraction0.byteValue());
      assertEquals((short)109, bigInteger0.shortValue());
      assertEquals((byte)109, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertNotNull(bigFraction8);
      assertEquals(1, byteArray0.length);
      
      BigFraction bigFraction9 = BigFraction.of((long) (byte)109, 9007199254675456L);
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction5);
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = bigFraction9.add(bigInteger0);
      assertArrayEquals(new byte[] {(byte)109}, byteArray0);
      assertEquals((short)109, bigInteger0.shortValue());
      assertEquals((byte)109, bigInteger0.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((byte)109, bigFraction10.byteValue());
      assertEquals((short)109, bigFraction10.shortValue());
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction8);
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertNotNull(bigFraction10);
      assertEquals(1, byteArray0.length);
      
      BigFraction bigFraction11 = bigFraction3.multiply((int) (byte)109);
      assertArrayEquals(new byte[] {(byte)109}, byteArray0);
      assertEquals((byte)0, bigFraction11.byteValue());
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((short)1784, bigFraction0.shortValue());
      assertEquals((byte) (-8), bigFraction0.byteValue());
      assertEquals((short)109, bigInteger0.shortValue());
      assertEquals((byte)109, bigInteger0.byteValue());
      assertEquals((short)16, bigFraction1.shortValue());
      assertEquals((byte)16, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction11, bigFraction9);
      assertSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction1);
      assertSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction8);
      assertSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertTrue(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction11);
      assertEquals(1, byteArray0.length);
      
      BigFraction bigFraction12 = bigFraction3.add(bigFraction0);
      assertArrayEquals(new byte[] {(byte)109}, byteArray0);
      assertEquals((short)1784, bigFraction0.shortValue());
      assertEquals((byte) (-8), bigFraction0.byteValue());
      assertEquals((byte) (-8), bigFraction12.byteValue());
      assertEquals((short)1784, bigFraction12.shortValue());
      assertEquals((short)109, bigInteger0.shortValue());
      assertEquals((byte)109, bigInteger0.byteValue());
      assertEquals((short)16, bigFraction1.shortValue());
      assertEquals((byte)16, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction5);
      assertSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction12);
      assertSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction8);
      assertSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction12);
      assertEquals(1, byteArray0.length);
      
      long long1 = bigFraction2.getDenominatorAsLong();
      assertEquals(1L, long1);
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction8);
      assertFalse(long1 == long0);
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertTrue(bigFraction2.equals((Object)bigFraction7));
      assertTrue(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      assertArrayEquals(new byte[] {(byte)109}, byteArray0);
      assertEquals((byte)109, bigInteger1.byteValue());
      assertEquals((short)109, bigInteger1.shortValue());
      assertTrue(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals(1, byteArray0.length);
      
      BigFraction bigFraction13 = BigFraction.of(bigInteger1);
      assertArrayEquals(new byte[] {(byte)109}, byteArray0);
      assertEquals((byte)109, bigInteger1.byteValue());
      assertEquals((short)109, bigInteger1.shortValue());
      assertEquals((short)109, bigFraction13.shortValue());
      assertEquals((byte)109, bigFraction13.byteValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction12);
      assertTrue(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertNotNull(bigFraction13);
      assertEquals(1, byteArray0.length);
      
      long long2 = bigFraction8.getDenominatorAsLong();
      assertEquals(1L, long2);
      assertArrayEquals(new byte[] {(byte)109}, byteArray0);
      assertEquals((short)1784, bigFraction0.shortValue());
      assertEquals((byte) (-8), bigFraction0.byteValue());
      assertEquals((short)109, bigInteger0.shortValue());
      assertEquals((byte)109, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertTrue(bigInteger0.equals((Object)bigInteger1));
      assertTrue(long2 == long1);
      assertFalse(long2 == long0);
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction13));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction12));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertEquals(1, byteArray0.length);
      
      BigFraction bigFraction14 = bigFraction13.add(9007199254675456L);
      assertArrayEquals(new byte[] {(byte)109}, byteArray0);
      assertEquals((byte)109, bigInteger1.byteValue());
      assertEquals((short)109, bigInteger1.shortValue());
      assertEquals((short)109, bigFraction13.shortValue());
      assertEquals((byte)109, bigFraction13.byteValue());
      assertEquals((short)109, bigFraction14.shortValue());
      assertEquals((byte)109, bigFraction14.byteValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction14);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction1);
      assertTrue(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertNotNull(bigFraction14);
      assertEquals(1, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from((-1.0));
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = bigFraction0.getNumerator();
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short) (-1), bigInteger0.shortValue());
      assertEquals((byte) (-1), bigInteger0.byteValue());
      assertNotNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE;
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(0);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.subtract(bigFraction0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte) (-1), bigFraction2.byteValue());
      assertEquals((short) (-1), bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      int int0 = bigFraction1.intValue();
      assertEquals(0, int0);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      
      BigFraction bigFraction3 = bigFraction1.multiply((long) 0);
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      // Undeclared exception!
      try { 
        bigFraction0.divide(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // The value to divide by must not be zero
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(0L);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte)3;
      // Undeclared exception!
      try { 
        BigFraction.from((double) (byte)84, (double) (byte) (-1), 7);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Epsilon must be positive: 7
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from((-1.0));
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(2L, (long) 100);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.add(100);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)99, bigFraction2.shortValue());
      assertEquals((byte)99, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction3 = BigFraction.of(bigInteger0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      RoundingMode roundingMode0 = RoundingMode.DOWN;
      BigFraction bigFraction4 = bigFraction1.ZERO.subtract(23);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte) (-23), bigFraction4.byteValue());
      assertEquals((short) (-23), bigFraction4.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      
      BigDecimal bigDecimal0 = bigFraction2.bigDecimalValue(roundingMode0);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)99, bigFraction2.shortValue());
      assertEquals((byte)99, bigFraction2.byteValue());
      assertEquals((byte)99, bigDecimal0.byteValue());
      assertEquals((short)99, bigDecimal0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction5 = BigFraction.of((-9223372036854775808L));
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertNotNull(bigFraction5);
      
      int int0 = bigFraction4.getDenominatorAsInt();
      assertEquals(1, int0);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte) (-23), bigFraction4.byteValue());
      assertEquals((short) (-23), bigFraction4.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      
      BigInteger bigInteger1 = bigFraction2.getNumerator();
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)99, bigFraction2.shortValue());
      assertEquals((byte)99, bigFraction2.byteValue());
      assertEquals((short)99, bigInteger1.shortValue());
      assertEquals((byte)99, bigInteger1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      BigFraction bigFraction6 = bigFraction4.ONE.multiply(131072L);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte) (-23), bigFraction4.byteValue());
      assertEquals((short) (-23), bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      
      BigInteger bigInteger2 = bigFraction2.getNumerator();
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)99, bigFraction2.shortValue());
      assertEquals((byte)99, bigFraction2.byteValue());
      assertEquals((byte)99, bigInteger2.byteValue());
      assertEquals((short)99, bigInteger2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigInteger2.equals((Object)bigInteger0));
      assertNotNull(bigInteger2);
      
      String string0 = bigFraction1.toString();
      assertEquals("1 / 50", string0);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertNotNull(string0);
      
      BigFraction bigFraction7 = BigFraction.of(100, (-1074));
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertNotNull(bigFraction7);
      
      RoundingMode roundingMode1 = RoundingMode.HALF_DOWN;
      BigDecimal bigDecimal1 = bigFraction7.ZERO.bigDecimalValue(roundingMode1);
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(roundingMode1, roundingMode0);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(roundingMode1.equals((Object)roundingMode0));
      assertNotNull(bigDecimal1);
      
      BigFraction bigFraction8 = bigFraction5.multiply(bigInteger2);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)99, bigFraction2.shortValue());
      assertEquals((byte)99, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)99, bigInteger2.byteValue());
      assertEquals((short)99, bigInteger2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigInteger2.equals((Object)bigInteger0));
      assertNotNull(bigFraction8);
      
      String string1 = bigFraction8.ZERO.toString();
      assertEquals("0", string1);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)99, bigFraction2.shortValue());
      assertEquals((byte)99, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)99, bigInteger2.byteValue());
      assertEquals((short)99, bigInteger2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigInteger2, bigInteger0);
      assertSame(bigInteger2, bigInteger1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigInteger2.equals((Object)bigInteger0));
      assertNotNull(string1);
      
      BigFraction bigFraction9 = BigFraction.parse("1 / 50");
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction8);
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertTrue(bigFraction9.equals((Object)bigFraction1));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = bigFraction9.add(bigInteger1);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)99, bigFraction2.shortValue());
      assertEquals((byte)99, bigFraction2.byteValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)99, bigFraction10.byteValue());
      assertEquals((short)99, bigFraction10.shortValue());
      assertEquals((short)99, bigInteger1.shortValue());
      assertEquals((byte)99, bigInteger1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigInteger1, bigInteger0);
      assertSame(bigInteger1, bigInteger2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertTrue(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigFraction10);
      
      BigFraction bigFraction11 = bigFraction9.ZERO.multiply((long) 100);
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((short)0, bigFraction11.shortValue());
      assertEquals((byte)0, bigFraction11.byteValue());
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction11);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction6);
      assertSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction4);
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertTrue(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertNotNull(bigFraction11);
      
      long long0 = bigFraction7.ONE.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction11);
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      
      BigFraction bigFraction12 = bigFraction7.subtract(bigFraction4);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte) (-23), bigFraction4.byteValue());
      assertEquals((short) (-23), bigFraction4.shortValue());
      assertEquals((short)22, bigFraction12.shortValue());
      assertEquals((byte)22, bigFraction12.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction11);
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertNotNull(bigFraction12);
      
      int int1 = bigFraction12.getNumeratorAsInt();
      assertEquals((-12301), int1);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte) (-23), bigFraction4.byteValue());
      assertEquals((short) (-23), bigFraction4.shortValue());
      assertEquals((short)22, bigFraction12.shortValue());
      assertEquals((byte)22, bigFraction12.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction11);
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(int1 == int0);
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      
      BigFraction bigFraction13 = bigFraction12.ZERO.subtract(1);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte) (-23), bigFraction4.byteValue());
      assertEquals((short) (-23), bigFraction4.shortValue());
      assertEquals((short)22, bigFraction12.shortValue());
      assertEquals((byte)22, bigFraction12.byteValue());
      assertEquals((short) (-1), bigFraction13.shortValue());
      assertEquals((byte) (-1), bigFraction13.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction13);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction11);
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertTrue(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertNotNull(bigFraction13);
      
      String string2 = bigFraction4.toString();
      assertEquals("-23", string2);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte) (-23), bigFraction4.byteValue());
      assertEquals((short) (-23), bigFraction4.shortValue());
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction13);
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction8));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction9));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction12));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      
      BigFraction bigFraction14 = bigFraction7.divide(1L);
      assertEquals((byte)0, bigFraction14.byteValue());
      assertEquals((short)0, bigFraction14.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction14);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction11);
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertTrue(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertNotNull(bigFraction14);
      
      BigFraction bigFraction15 = bigFraction7.divide(bigInteger1);
      assertEquals((short) (-1), bigFraction0.shortValue());
      assertEquals((byte) (-1), bigFraction0.byteValue());
      assertEquals((short)99, bigFraction2.shortValue());
      assertEquals((byte)99, bigFraction2.byteValue());
      assertEquals((short)99, bigInteger1.shortValue());
      assertEquals((byte)99, bigInteger1.byteValue());
      assertEquals((short)0, bigFraction15.shortValue());
      assertEquals((byte)0, bigFraction15.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigInteger1, bigInteger0);
      assertSame(bigInteger1, bigInteger2);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction15);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction14);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction11);
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertTrue(bigFraction7.equals((Object)bigFraction14));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertNotNull(bigFraction15);
      
      BigFraction bigFraction16 = bigFraction14.reciprocal();
      assertEquals((byte)0, bigFraction14.byteValue());
      assertEquals((short)0, bigFraction14.shortValue());
      assertEquals((byte) (-10), bigFraction16.byteValue());
      assertEquals((short) (-10), bigFraction16.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction16);
      assertNotSame(bigFraction14, bigFraction15);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction16, bigFraction2);
      assertNotSame(bigFraction16, bigFraction11);
      assertNotSame(bigFraction16, bigFraction7);
      assertNotSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction13);
      assertNotSame(bigFraction16, bigFraction4);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigFraction16, bigFraction1);
      assertNotSame(bigFraction16, bigFraction15);
      assertNotSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction16, bigFraction9);
      assertNotSame(bigFraction16, bigFraction5);
      assertNotSame(bigFraction16, bigFraction14);
      assertNotSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction16);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction15);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction14);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction11);
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction15));
      assertTrue(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction7));
      assertFalse(bigFraction16.equals((Object)bigFraction12));
      assertFalse(bigFraction16.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction6));
      assertFalse(bigFraction16.equals((Object)bigFraction10));
      assertFalse(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertFalse(bigFraction16.equals((Object)bigFraction8));
      assertFalse(bigFraction16.equals((Object)bigFraction9));
      assertFalse(bigFraction16.equals((Object)bigFraction5));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction9));
      assertFalse(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction15));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertTrue(bigFraction7.equals((Object)bigFraction14));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertNotNull(bigFraction16);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      int int0 = 3061;
      BigFraction bigFraction0 = BigFraction.from(1207.290733547, 3061);
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.ONE.add(3061);
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((short)3062, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction2 = bigFraction0.subtract(bigInteger0);
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1197, bigFraction2.shortValue());
      assertEquals((byte) (-83), bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = bigFraction1.divide(3061);
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((short)3062, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction0.add((-698));
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((short)509, bigFraction4.shortValue());
      assertEquals((byte) (-3), bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction3.subtract(3061);
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((short)3062, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((byte)13, bigFraction5.byteValue());
      assertEquals((short) (-3059), bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction1.pow(3061);
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((short)3062, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertNotNull(bigFraction6);
      
      int int1 = bigFraction6.ONE.signum();
      assertEquals(1, int1);
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((short)3062, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(int1 == int0);
      
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      BigFraction bigFraction7 = bigFraction4.ZERO.add(bigFraction5);
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((short)3062, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)509, bigFraction4.shortValue());
      assertEquals((byte) (-3), bigFraction4.byteValue());
      assertEquals((byte)13, bigFraction5.byteValue());
      assertEquals((short) (-3059), bigFraction5.shortValue());
      assertEquals((short) (-3059), bigFraction7.shortValue());
      assertEquals((byte)13, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction3);
      assertSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction7);
      
      BigDecimal bigDecimal0 = bigFraction1.bigDecimalValue(roundingMode0);
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((short)3062, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((short)3062, bigDecimal0.shortValue());
      assertEquals((byte) (-10), bigDecimal0.byteValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertNotNull(bigDecimal0);
      
      RoundingMode roundingMode1 = RoundingMode.FLOOR;
      BigDecimal bigDecimal1 = bigFraction0.bigDecimalValue(roundingMode1);
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((byte) (-73), bigDecimal1.byteValue());
      assertEquals((short)1207, bigDecimal1.shortValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(roundingMode1, roundingMode0);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      
      BigInteger bigInteger1 = bigFraction0.getDenominator();
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((byte)30, bigInteger1.byteValue());
      assertEquals((short)2590, bigInteger1.shortValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      BigFraction bigFraction8 = bigFraction4.negate();
      assertEquals((byte)3, bigFraction8.byteValue());
      assertEquals((short) (-509), bigFraction8.shortValue());
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((short)509, bigFraction4.shortValue());
      assertEquals((byte) (-3), bigFraction4.byteValue());
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction7));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = bigFraction1.ONE.multiply(bigInteger0);
      assertEquals((byte)10, bigFraction9.byteValue());
      assertEquals((short)10, bigFraction9.shortValue());
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((short)3062, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigInteger0, bigInteger1);
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = bigFraction2.divide(bigFraction1);
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction10.shortValue());
      assertEquals((byte)0, bigFraction10.byteValue());
      assertEquals((short)3062, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1197, bigFraction2.shortValue());
      assertEquals((byte) (-83), bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction10);
      
      int int2 = bigFraction10.ZERO.intValue();
      assertEquals(0, int2);
      assertEquals((byte) (-73), bigFraction0.byteValue());
      assertEquals((short)1207, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction10.shortValue());
      assertEquals((byte)0, bigFraction10.byteValue());
      assertEquals((short)3062, bigFraction1.shortValue());
      assertEquals((byte) (-10), bigFraction1.byteValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1197, bigFraction2.shortValue());
      assertEquals((byte) (-83), bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      
      // Undeclared exception!
      try { 
        BigFraction.from((-320.010534), (-1.0), 2147221535);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Epsilon must be positive: 2147221535
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE;
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = bigFraction0.ZERO.multiply(bigInteger0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.ZERO.divide((-637));
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigInteger bigInteger1 = BigInteger.ONE;
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      BigFraction bigFraction3 = bigFraction1.ONE.multiply(bigInteger1);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigInteger0, bigInteger1);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.from((-1703.68096255), (-2141977278));
      assertEquals((short) (-1703), bigFraction4.shortValue());
      assertEquals((byte)89, bigFraction4.byteValue());
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.ONE;
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = bigFraction0.ZERO.multiply(bigInteger0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.ZERO.divide((-637));
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      boolean boolean0 = bigFraction2.ZERO.equals(bigInteger0);
      assertFalse(boolean0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      
      BigInteger bigInteger1 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      BigFraction bigFraction3 = bigFraction1.ONE.multiply(bigInteger1);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction3.ZERO.multiply((-803L));
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigInteger0, bigInteger1);
      assertSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction2);
      assertSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = bigFraction0.abs();
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction5);
      assertSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertTrue(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = BigFraction.from((-1703.68096255), (-2141977278));
      assertEquals((byte)89, bigFraction6.byteValue());
      assertEquals((short) (-1703), bigFraction6.shortValue());
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction0.pow((-797));
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction7.byteValue());
      assertEquals((short)1, bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction7);
      assertSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertTrue(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertTrue(bigFraction7.equals((Object)bigFraction5));
      assertTrue(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertNotNull(bigFraction7);
      
      // Undeclared exception!
      try { 
        bigFraction4.pow((-637));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(3012.22, 1266);
      assertEquals((short)3012, bigFraction0.shortValue());
      assertEquals((byte) (-60), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigInteger bigInteger0 = bigFraction0.getDenominator();
      assertEquals((short)3012, bigFraction0.shortValue());
      assertEquals((byte) (-60), bigFraction0.byteValue());
      assertEquals((short)50, bigInteger0.shortValue());
      assertEquals((byte)50, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction1 = bigFraction0.multiply((-2145753201));
      assertEquals((short)3012, bigFraction0.shortValue());
      assertEquals((byte) (-60), bigFraction0.byteValue());
      assertEquals((byte) (-44), bigFraction1.byteValue());
      assertEquals((short)18388, bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.ONE.multiply(1266);
      assertEquals((short)3012, bigFraction0.shortValue());
      assertEquals((byte) (-60), bigFraction0.byteValue());
      assertEquals((byte) (-44), bigFraction1.byteValue());
      assertEquals((short)18388, bigFraction1.shortValue());
      assertEquals((byte) (-14), bigFraction2.byteValue());
      assertEquals((short)1266, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      long long0 = (-1708L);
      BigFraction bigFraction3 = bigFraction0.ZERO.subtract(bigFraction1);
      assertEquals((short)3012, bigFraction0.shortValue());
      assertEquals((byte) (-60), bigFraction0.byteValue());
      assertEquals((byte) (-44), bigFraction1.byteValue());
      assertEquals((short)18388, bigFraction1.shortValue());
      assertEquals((short) (-18388), bigFraction3.shortValue());
      assertEquals((byte)44, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.of((-9223372036854775808L), 268435456L);
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.of(0L, (-1708L));
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction0.abs();
      assertEquals((short)3012, bigFraction0.shortValue());
      assertEquals((byte) (-60), bigFraction0.byteValue());
      assertEquals((short)3012, bigFraction6.shortValue());
      assertEquals((byte) (-60), bigFraction6.byteValue());
      assertSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction6, bigFraction4);
      assertSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = BigFraction.of(bigInteger0);
      assertEquals((short)3012, bigFraction0.shortValue());
      assertEquals((byte) (-60), bigFraction0.byteValue());
      assertEquals((short)50, bigInteger0.shortValue());
      assertEquals((byte)50, bigInteger0.byteValue());
      assertEquals((byte)50, bigFraction7.byteValue());
      assertEquals((short)50, bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction7);
      assertSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction5.divide((long) 1266);
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction2);
      assertSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction4);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = bigFraction5.ZERO.negate();
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction4);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertTrue(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertTrue(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = bigFraction5.ONE.multiply(1);
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction10.byteValue());
      assertEquals((short)1, bigFraction10.shortValue());
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction6);
      assertSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction5);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertTrue(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertNotNull(bigFraction10);
      
      BigDecimal bigDecimal0 = bigFraction0.ONE.bigDecimalValue();
      assertEquals((short)3012, bigFraction0.shortValue());
      assertEquals((byte) (-60), bigFraction0.byteValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction9);
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertNotNull(bigDecimal0);
      
      int int0 = 3131;
      BigFraction bigFraction11 = BigFraction.from((double) (-1708L), (double) 1266, 3131);
      assertEquals((byte)84, bigFraction11.byteValue());
      assertEquals((short) (-1708), bigFraction11.shortValue());
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction3);
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertNotNull(bigFraction11);
      
      BigFraction bigFraction12 = bigFraction0.multiply(3131);
      assertEquals((short) (-5924), bigFraction12.shortValue());
      assertEquals((byte) (-36), bigFraction12.byteValue());
      assertEquals((short)3012, bigFraction0.shortValue());
      assertEquals((byte) (-60), bigFraction0.byteValue());
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction9);
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertNotNull(bigFraction12);
      
      // Undeclared exception!
      try { 
        bigFraction11.pow((-2145753201));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // BigInteger would overflow supported range
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(4503599627370478L);
      assertEquals((byte) (-18), bigFraction0.byteValue());
      assertEquals((short) (-18), bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(4503599627370478L);
      assertEquals((byte) (-18), bigFraction1.byteValue());
      assertEquals((short) (-18), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      float float0 = bigFraction1.floatValue();
      assertEquals(4.5035996E15F, float0, 0.01F);
      assertEquals((byte) (-18), bigFraction1.byteValue());
      assertEquals((short) (-18), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      
      double double0 = 0.7527999999999793;
      // Undeclared exception!
      try { 
        BigFraction.parse("BLwCiY%H!@@");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"BL\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(4503599627370478L);
      assertEquals((byte) (-18), bigFraction0.byteValue());
      assertEquals((short) (-18), bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(4503599627370478L);
      assertEquals((byte) (-18), bigFraction1.byteValue());
      assertEquals((short) (-18), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      boolean boolean0 = bigFraction0.ONE.equals(bigFraction1);
      assertFalse(boolean0);
      assertEquals((byte) (-18), bigFraction0.byteValue());
      assertEquals((short) (-18), bigFraction0.shortValue());
      assertEquals((byte) (-18), bigFraction1.byteValue());
      assertEquals((short) (-18), bigFraction1.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      
      float float0 = bigFraction1.floatValue();
      assertEquals(4.5035996E15F, float0, 0.01F);
      assertEquals((byte) (-18), bigFraction1.byteValue());
      assertEquals((short) (-18), bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      
      BigFraction bigFraction2 = bigFraction1.ZERO.multiply(bigFraction0);
      assertEquals((byte) (-18), bigFraction0.byteValue());
      assertEquals((short) (-18), bigFraction0.shortValue());
      assertEquals((byte) (-18), bigFraction1.byteValue());
      assertEquals((short) (-18), bigFraction1.shortValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      double double0 = 0.7527999999999793;
      long long0 = bigFraction0.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((byte) (-18), bigFraction0.byteValue());
      assertEquals((short) (-18), bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      
      // Undeclared exception!
      try { 
        BigFraction.parse("BLwCiY%H!@@");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"BL\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)27;
      byteArray0[0] = (byte)27;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      assertArrayEquals(new byte[] {(byte)27, (byte)0, (byte)0}, byteArray0);
      assertEquals((short)0, bigInteger1.shortValue());
      assertEquals((byte)0, bigInteger1.byteValue());
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      assertEquals(3, byteArray0.length);
      
      BigInteger bigInteger2 = bigInteger0.or(bigInteger1);
      assertArrayEquals(new byte[] {(byte)27, (byte)0, (byte)0}, byteArray0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)0, bigInteger1.shortValue());
      assertEquals((byte)0, bigInteger1.byteValue());
      assertEquals((byte)1, bigInteger2.byteValue());
      assertEquals((short)1, bigInteger2.shortValue());
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger1, bigInteger2);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigInteger2, bigInteger0);
      assertNotSame(bigInteger2, bigInteger1);
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigInteger2.equals((Object)bigInteger0));
      assertFalse(bigInteger2.equals((Object)bigInteger1));
      assertNotNull(bigInteger2);
      assertEquals(3, byteArray0.length);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0);
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotSame(bigInteger0, bigInteger2);
      assertNotSame(bigInteger0, bigInteger1);
      assertFalse(bigInteger0.equals((Object)bigInteger2));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertNotNull(bigFraction0);
      
      // Undeclared exception!
      try { 
        BigFraction.of((int) (byte)27, (int) (byte)0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = bigFraction0.abs();
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction0);
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.divide(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      RoundingMode roundingMode0 = RoundingMode.DOWN;
      BigDecimal bigDecimal0 = bigFraction2.bigDecimalValue((-1389), roundingMode0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction3 = bigFraction1.ZERO.divide(873L);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.from(0.0);
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      int int0 = bigFraction1.compareTo(bigFraction0);
      assertEquals(0, int0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      
      BigFraction bigFraction5 = bigFraction0.zero();
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction0.multiply(bigFraction1);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertTrue(bigFraction6.equals((Object)bigFraction1));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction6);
      
      RoundingMode roundingMode1 = RoundingMode.FLOOR;
      BigDecimal bigDecimal1 = bigFraction6.bigDecimalValue(roundingMode1);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(roundingMode1, roundingMode0);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertTrue(bigFraction6.equals((Object)bigFraction1));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(roundingMode1.equals((Object)roundingMode0));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      
      BigFraction bigFraction7 = bigFraction5.ONE.multiply(0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction4);
      assertSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction7);
      
      RoundingMode roundingMode2 = RoundingMode.HALF_DOWN;
      int int1 = bigFraction6.compareTo(bigFraction2);
      assertEquals(1, int1);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertTrue(bigFraction6.equals((Object)bigFraction1));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(int1 == int0);
      
      BigDecimal bigDecimal2 = bigFraction7.bigDecimalValue(roundingMode2);
      assertEquals((short)0, bigDecimal2.shortValue());
      assertEquals((byte)0, bigDecimal2.byteValue());
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertNotSame(bigDecimal2, bigDecimal1);
      assertNotSame(bigDecimal2, bigDecimal0);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction4);
      assertSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(roundingMode2, roundingMode0);
      assertNotSame(roundingMode2, roundingMode1);
      assertFalse(bigDecimal2.equals((Object)bigDecimal1));
      assertFalse(bigDecimal2.equals((Object)bigDecimal0));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(roundingMode2.equals((Object)roundingMode0));
      assertFalse(roundingMode2.equals((Object)roundingMode1));
      assertNotNull(bigDecimal2);
      
      BigFraction bigFraction8 = bigFraction3.multiply(bigFraction5);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction1);
      assertSame(bigFraction8, bigFraction4);
      assertSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertSame(bigFraction3, bigFraction5);
      assertSame(bigFraction3, bigFraction8);
      assertSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction4);
      assertSame(bigFraction5, bigFraction7);
      assertSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = bigFraction8.ONE.multiply((-8L));
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte) (-8), bigFraction9.byteValue());
      assertEquals((short) (-8), bigFraction9.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction1);
      assertSame(bigFraction8, bigFraction4);
      assertSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction9);
      assertSame(bigFraction3, bigFraction5);
      assertSame(bigFraction3, bigFraction8);
      assertSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction4);
      assertSame(bigFraction5, bigFraction7);
      assertSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = BigFraction.of(2);
      assertEquals((byte)2, bigFraction10.byteValue());
      assertEquals((short)2, bigFraction10.shortValue());
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction9);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction5);
      assertFalse(bigFraction10.equals((Object)bigFraction0));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction7));
      assertFalse(bigFraction10.equals((Object)bigFraction9));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertNotNull(bigFraction10);
      
      int int2 = bigFraction8.intValue();
      assertEquals(0, int2);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction8, bigFraction10);
      assertSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction1);
      assertSame(bigFraction8, bigFraction4);
      assertSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction9);
      assertSame(bigFraction3, bigFraction5);
      assertSame(bigFraction3, bigFraction8);
      assertSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction4);
      assertSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction10);
      assertSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(int2 == int1);
      assertTrue(int2 == int0);
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      
      BigFraction bigFraction11 = bigFraction5.subtract(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short) (-10), bigFraction11.shortValue());
      assertEquals((byte) (-10), bigFraction11.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction4);
      assertSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction10);
      assertSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction11);
      
      BigFraction bigFraction12 = bigFraction11.ZERO.multiply(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short) (-10), bigFraction11.shortValue());
      assertEquals((byte) (-10), bigFraction11.byteValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction12);
      assertSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction2);
      assertSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction9);
      assertSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction1);
      assertSame(bigFraction12, bigFraction3);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction4);
      assertSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction10);
      assertSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction9);
      assertSame(bigFraction5, bigFraction3);
      assertSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction12);
      
      BigFraction bigFraction13 = bigFraction8.multiply(bigInteger0);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction13.shortValue());
      assertEquals((byte)0, bigFraction13.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction11);
      assertSame(bigFraction8, bigFraction3);
      assertSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction1);
      assertSame(bigFraction8, bigFraction4);
      assertSame(bigFraction8, bigFraction13);
      assertSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction0);
      assertSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction1, bigFraction9);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction10);
      assertSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction13);
      assertSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertSame(bigFraction3, bigFraction5);
      assertSame(bigFraction3, bigFraction8);
      assertSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction13, bigFraction9);
      assertSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction6);
      assertSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction2);
      assertSame(bigFraction13, bigFraction5);
      assertSame(bigFraction13, bigFraction12);
      assertSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction10);
      assertSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction10);
      assertSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction11);
      assertSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction2);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction6);
      assertSame(bigFraction5, bigFraction3);
      assertSame(bigFraction5, bigFraction12);
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction13);
      
      BigFraction bigFraction14 = bigFraction2.add(bigFraction6);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertEquals((byte)1, bigFraction14.byteValue());
      assertEquals((short)1, bigFraction14.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction14);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction6, bigFraction12);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction14);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction13);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction6.equals((Object)bigFraction12));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertTrue(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertTrue(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction13));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertNotNull(bigFraction14);
      
      BigFraction bigFraction15 = bigFraction9.add(bigFraction3);
      assertEquals((byte)10, bigInteger0.byteValue());
      assertEquals((short)10, bigInteger0.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte) (-8), bigFraction9.byteValue());
      assertEquals((short) (-8), bigFraction9.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short) (-8), bigFraction15.shortValue());
      assertEquals((byte) (-8), bigFraction15.byteValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction5.shortValue());
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction11);
      assertSame(bigFraction8, bigFraction3);
      assertSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction14);
      assertSame(bigFraction8, bigFraction4);
      assertSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction15);
      assertSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction0);
      assertSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction15);
      assertNotSame(bigFraction0, bigFraction13);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction8);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction12);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction12);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction10);
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction11);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction5);
      assertNotSame(bigFraction9, bigFraction6);
      assertSame(bigFraction9, bigFraction15);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction14);
      assertNotSame(bigFraction9, bigFraction13);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction15);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction3, bigFraction14);
      assertSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction15);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertSame(bigFraction3, bigFraction13);
      assertSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction6);
      assertSame(bigFraction3, bigFraction5);
      assertSame(bigFraction3, bigFraction8);
      assertSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction6);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction7);
      assertSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction0);
      assertSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction10);
      assertSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction11);
      assertSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction14);
      assertSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction15);
      assertSame(bigFraction5, bigFraction3);
      assertSame(bigFraction5, bigFraction12);
      assertFalse(bigFraction8.equals((Object)bigFraction10));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction9));
      assertFalse(bigFraction8.equals((Object)bigFraction0));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction10));
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertTrue(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction12));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction12));
      assertFalse(bigFraction9.equals((Object)bigFraction7));
      assertFalse(bigFraction9.equals((Object)bigFraction10));
      assertFalse(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction9.equals((Object)bigFraction11));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction14));
      assertFalse(bigFraction9.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction14));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertNotNull(bigFraction15);
      
      // Undeclared exception!
      try { 
        BigFraction.from((double) 0, 2562.0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Max iterations must be strictly positive: -1
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.add(1L);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction1);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigInteger bigInteger1 = bigInteger0.abs();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertSame(bigInteger1, bigInteger0);
      assertNotNull(bigInteger1);
      
      BigFraction bigFraction3 = bigFraction0.add(bigFraction1);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction1.ZERO.pow(1136);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertNotNull(bigFraction4);
      
      BigFraction bigFraction5 = BigFraction.of(1136, 1136);
      assertEquals((short)1, bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertTrue(bigFraction5.equals((Object)bigFraction0));
      assertTrue(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      BigDecimal bigDecimal0 = bigFraction0.bigDecimalValue(roundingMode0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertNotNull(bigDecimal0);
      
      String string0 = bigInteger0.toString();
      assertEquals("1", string0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotNull(string0);
      
      BigDecimal bigDecimal1 = bigFraction0.bigDecimalValue();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigDecimal1, bigDecimal0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertNotNull(bigDecimal1);
      
      bigFraction0.hashCode();
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      
      BigFraction bigFraction6 = bigFraction2.multiply(2147477079);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((byte) (-82), bigFraction6.byteValue());
      assertEquals((short) (-13138), bigFraction6.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction6.ONE.divide(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((byte) (-82), bigFraction6.byteValue());
      assertEquals((short) (-13138), bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction7.byteValue());
      assertEquals((short)1, bigFraction7.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertTrue(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertTrue(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertTrue(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction6.ZERO.add(bigInteger0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((byte) (-82), bigFraction6.byteValue());
      assertEquals((short) (-13138), bigFraction6.shortValue());
      assertEquals((short)1, bigFraction8.shortValue());
      assertEquals((byte)1, bigFraction8.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction4);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertTrue(bigFraction8.equals((Object)bigFraction1));
      assertTrue(bigFraction8.equals((Object)bigFraction7));
      assertTrue(bigFraction8.equals((Object)bigFraction0));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = bigFraction3.one();
      assertEquals((byte)1, bigFraction9.byteValue());
      assertEquals((short)1, bigFraction9.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertNotSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction1);
      assertNotSame(bigFraction9, bigFraction3);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction0);
      assertNotSame(bigFraction9, bigFraction7);
      assertNotSame(bigFraction9, bigFraction5);
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction0);
      assertTrue(bigFraction9.equals((Object)bigFraction7));
      assertTrue(bigFraction9.equals((Object)bigFraction0));
      assertFalse(bigFraction9.equals((Object)bigFraction4));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertTrue(bigFraction9.equals((Object)bigFraction5));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertTrue(bigFraction9.equals((Object)bigFraction1));
      assertTrue(bigFraction9.equals((Object)bigFraction8));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction9);
      
      BigFraction bigFraction10 = BigFraction.of(bigInteger0, bigInteger1);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction10.shortValue());
      assertEquals((byte)1, bigFraction10.byteValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction10, bigFraction1);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction10, bigFraction6);
      assertNotSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction7);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction9);
      assertSame(bigInteger1, bigInteger0);
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertTrue(bigFraction10.equals((Object)bigFraction8));
      assertTrue(bigFraction10.equals((Object)bigFraction9));
      assertTrue(bigFraction10.equals((Object)bigFraction7));
      assertTrue(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction10.equals((Object)bigFraction4));
      assertTrue(bigFraction10.equals((Object)bigFraction0));
      assertTrue(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertNotNull(bigFraction10);
      
      BigFraction bigFraction11 = bigFraction3.multiply(1L);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)2, bigFraction11.byteValue());
      assertEquals((short)2, bigFraction11.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertTrue(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertTrue(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction11);
      
      long long0 = bigFraction11.ONE.longValue();
      assertEquals(1L, long0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((byte)2, bigFraction11.byteValue());
      assertEquals((short)2, bigFraction11.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction3.shortValue());
      assertEquals((byte)2, bigFraction3.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction10);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction0.equals((Object)bigFraction8));
      assertTrue(bigFraction0.equals((Object)bigFraction10));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertTrue(bigFraction0.equals((Object)bigFraction9));
      assertTrue(bigFraction0.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertTrue(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertTrue(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      
      BigFraction bigFraction12 = BigFraction.of(255L, 1L);
      assertEquals((short)255, bigFraction12.shortValue());
      assertEquals((byte) (-1), bigFraction12.byteValue());
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction0);
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertNotNull(bigFraction12);
      
      BigFraction bigFraction13 = bigFraction12.reciprocal();
      assertEquals((short)255, bigFraction12.shortValue());
      assertEquals((byte) (-1), bigFraction12.byteValue());
      assertEquals((short)0, bigFraction13.shortValue());
      assertEquals((byte)0, bigFraction13.byteValue());
      assertNotSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction3);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction11);
      assertNotSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction5);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction0);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction12);
      assertFalse(bigFraction12.equals((Object)bigFraction9));
      assertFalse(bigFraction12.equals((Object)bigFraction7));
      assertFalse(bigFraction12.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction4));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction10));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertNotNull(bigFraction13);
      
      BigFraction bigFraction14 = bigFraction8.multiply(1039L);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((byte)15, bigFraction14.byteValue());
      assertEquals((short)1039, bigFraction14.shortValue());
      assertEquals((byte) (-82), bigFraction6.byteValue());
      assertEquals((short) (-13138), bigFraction6.shortValue());
      assertEquals((short)1, bigFraction8.shortValue());
      assertEquals((byte)1, bigFraction8.byteValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction13);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction14);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction13);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction12);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction13);
      assertNotSame(bigFraction8, bigFraction14);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction9);
      assertNotSame(bigFraction8, bigFraction0);
      assertNotSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction4);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertFalse(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction13));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction12));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertTrue(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction12));
      assertTrue(bigFraction8.equals((Object)bigFraction7));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction4));
      assertTrue(bigFraction8.equals((Object)bigFraction9));
      assertTrue(bigFraction8.equals((Object)bigFraction1));
      assertTrue(bigFraction8.equals((Object)bigFraction0));
      assertTrue(bigFraction8.equals((Object)bigFraction10));
      assertNotNull(bigFraction14);
      
      Random.setNextRandom(2147477079);
      String string1 = bigFraction7.toString();
      assertEquals("1", string1);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)2, bigFraction2.shortValue());
      assertEquals((byte)2, bigFraction2.byteValue());
      assertEquals((byte) (-82), bigFraction6.byteValue());
      assertEquals((short) (-13138), bigFraction6.shortValue());
      assertEquals((byte)1, bigFraction7.byteValue());
      assertEquals((short)1, bigFraction7.shortValue());
      assertSame(bigInteger0, bigInteger1);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction8);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction14);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction13);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction12);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction13);
      assertNotSame(bigFraction7, bigFraction14);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction5);
      assertNotSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction2);
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction7));
      assertTrue(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction2.equals((Object)bigFraction11));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertTrue(string1.equals((Object)string0));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction14));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction13));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction12));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertTrue(bigFraction7.equals((Object)bigFraction10));
      assertFalse(bigFraction7.equals((Object)bigFraction4));
      assertTrue(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction12));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertTrue(bigFraction7.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction14));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertTrue(bigFraction7.equals((Object)bigFraction9));
      assertTrue(bigFraction7.equals((Object)bigFraction0));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertTrue(bigFraction7.equals((Object)bigFraction5));
      assertNotNull(string1);
      
      BigFraction bigFraction15 = BigFraction.of(1050);
      assertEquals((short)1050, bigFraction15.shortValue());
      assertEquals((byte)26, bigFraction15.byteValue());
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction6);
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      assertNotNull(bigFraction15);
      
      bigFraction15.ZERO.hashCode();
      assertEquals((short)1050, bigFraction15.shortValue());
      assertEquals((byte)26, bigFraction15.byteValue());
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction6);
      assertFalse(bigFraction15.equals((Object)bigFraction14));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction6));
      
      BigFraction bigFraction16 = BigFraction.of((-128));
      assertEquals((short) (-128), bigFraction16.shortValue());
      assertEquals((byte) (-128), bigFraction16.byteValue());
      assertNotSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction16, bigFraction11);
      assertNotSame(bigFraction16, bigFraction7);
      assertNotSame(bigFraction16, bigFraction9);
      assertNotSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction14);
      assertNotSame(bigFraction16, bigFraction13);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction5);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigFraction16, bigFraction4);
      assertNotSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction16, bigFraction1);
      assertNotSame(bigFraction16, bigFraction2);
      assertNotSame(bigFraction16, bigFraction15);
      assertFalse(bigFraction16.equals((Object)bigFraction10));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction7));
      assertFalse(bigFraction16.equals((Object)bigFraction9));
      assertFalse(bigFraction16.equals((Object)bigFraction12));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction6));
      assertFalse(bigFraction16.equals((Object)bigFraction5));
      assertFalse(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigFraction16.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction0));
      assertFalse(bigFraction16.equals((Object)bigFraction8));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertNotNull(bigFraction16);
      
      BigFraction bigFraction17 = BigFraction.of(805, 2003);
      assertEquals((short)0, bigFraction17.shortValue());
      assertEquals((byte)0, bigFraction17.byteValue());
      assertNotSame(bigFraction17, bigFraction6);
      assertNotSame(bigFraction17, bigFraction13);
      assertNotSame(bigFraction17, bigFraction5);
      assertNotSame(bigFraction17, bigFraction2);
      assertNotSame(bigFraction17, bigFraction12);
      assertNotSame(bigFraction17, bigFraction9);
      assertNotSame(bigFraction17, bigFraction14);
      assertNotSame(bigFraction17, bigFraction3);
      assertNotSame(bigFraction17, bigFraction1);
      assertNotSame(bigFraction17, bigFraction11);
      assertNotSame(bigFraction17, bigFraction0);
      assertNotSame(bigFraction17, bigFraction10);
      assertNotSame(bigFraction17, bigFraction15);
      assertNotSame(bigFraction17, bigFraction7);
      assertNotSame(bigFraction17, bigFraction8);
      assertNotSame(bigFraction17, bigFraction4);
      assertNotSame(bigFraction17, bigFraction16);
      assertFalse(bigFraction17.equals((Object)bigFraction6));
      assertFalse(bigFraction17.equals((Object)bigFraction13));
      assertFalse(bigFraction17.equals((Object)bigFraction5));
      assertFalse(bigFraction17.equals((Object)bigFraction2));
      assertFalse(bigFraction17.equals((Object)bigFraction12));
      assertFalse(bigFraction17.equals((Object)bigFraction9));
      assertFalse(bigFraction17.equals((Object)bigFraction14));
      assertFalse(bigFraction17.equals((Object)bigFraction3));
      assertFalse(bigFraction17.equals((Object)bigFraction1));
      assertFalse(bigFraction17.equals((Object)bigFraction11));
      assertFalse(bigFraction17.equals((Object)bigFraction0));
      assertFalse(bigFraction17.equals((Object)bigFraction10));
      assertFalse(bigFraction17.equals((Object)bigFraction15));
      assertFalse(bigFraction17.equals((Object)bigFraction7));
      assertFalse(bigFraction17.equals((Object)bigFraction8));
      assertFalse(bigFraction17.equals((Object)bigFraction4));
      assertFalse(bigFraction17.equals((Object)bigFraction16));
      assertNotNull(bigFraction17);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction0 = BigFraction.of(bigInteger0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      float float0 = bigFraction0.ONE.floatValue();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      long long0 = bigFraction0.ONE.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      
      BigFraction bigFraction1 = bigFraction0.multiply(bigInteger0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction0);
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction1.ONE.multiply((-2252L));
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short) (-2252), bigFraction2.shortValue());
      assertEquals((byte)52, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertSame(bigFraction3, bigFraction1);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = BigFraction.from((double) (-2252L));
      assertEquals((short) (-2252), bigFraction4.shortValue());
      assertEquals((byte)52, bigFraction4.byteValue());
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertFalse(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      BigDecimal bigDecimal0 = bigFraction0.ONE.bigDecimalValue();
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertNotNull(bigDecimal0);
      
      boolean boolean0 = bigFraction1.equals(bigFraction3);
      assertTrue(boolean0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      
      double double0 = bigFraction3.ZERO.doubleValue();
      assertEquals(0.0, double0, 0.01);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      
      BigFraction bigFraction5 = bigFraction3.subtract(1142L);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short) (-1142), bigFraction5.shortValue());
      assertEquals((byte) (-118), bigFraction5.byteValue());
      assertNotSame(bigFraction3, bigFraction5);
      assertSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      long long1 = bigFraction5.ZERO.getDenominatorAsLong();
      assertEquals(1L, long1);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertEquals((short) (-1142), bigFraction5.shortValue());
      assertEquals((byte) (-118), bigFraction5.byteValue());
      assertNotSame(bigFraction3, bigFraction5);
      assertSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction4);
      assertSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertTrue(long1 == long0);
      
      int int0 = bigFraction1.getDenominatorAsInt();
      assertEquals(1, int0);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      
      int int1 = bigFraction0.compareTo(bigFraction1);
      assertEquals(0, int1);
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction5);
      assertSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction1, bigFraction0);
      assertSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction5);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(0, 0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      int int0 = bigFraction0.ONE.signum();
      assertEquals(1, int0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)79;
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)91;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertArrayEquals(new byte[] {(byte)116, (byte)79, (byte)72, (byte)0, (byte)91}, byteArray0);
      assertEquals((short)91, bigInteger0.shortValue());
      assertEquals((byte)91, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      assertEquals(5, byteArray0.length);
      
      BigInteger bigInteger1 = BigInteger.TEN;
      assertEquals((byte)10, bigInteger1.byteValue());
      assertEquals((short)10, bigInteger1.shortValue());
      assertNotSame(bigInteger1, bigInteger0);
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      BigFraction bigFraction1 = BigFraction.of(bigInteger0, bigInteger1);
      assertArrayEquals(new byte[] {(byte)116, (byte)79, (byte)72, (byte)0, (byte)91}, byteArray0);
      assertEquals((short)91, bigInteger0.shortValue());
      assertEquals((byte)91, bigInteger0.byteValue());
      assertEquals((byte)10, bigInteger1.byteValue());
      assertEquals((short)10, bigInteger1.shortValue());
      assertEquals((short)13116, bigFraction1.shortValue());
      assertEquals((byte)60, bigFraction1.byteValue());
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      assertEquals(5, byteArray0.length);
      
      BigFraction bigFraction2 = bigFraction0.ZERO.divide(bigFraction1);
      assertArrayEquals(new byte[] {(byte)116, (byte)79, (byte)72, (byte)0, (byte)91}, byteArray0);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)91, bigInteger0.shortValue());
      assertEquals((byte)91, bigInteger0.byteValue());
      assertEquals((byte)10, bigInteger1.byteValue());
      assertEquals((short)10, bigInteger1.shortValue());
      assertEquals((short)13116, bigFraction1.shortValue());
      assertEquals((byte)60, bigFraction1.byteValue());
      assertEquals((short)0, bigFraction2.shortValue());
      assertEquals((byte)0, bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigInteger0, bigInteger1);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigInteger0.equals((Object)bigInteger1));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      assertEquals(5, byteArray0.length);
      
      BigFraction bigFraction3 = bigFraction0.add(3468);
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)3468, bigFraction3.shortValue());
      assertEquals((byte) (-116), bigFraction3.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertNotNull(bigFraction3);
      
      int int1 = bigFraction0.hashCode();
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)0, bigFraction0.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-438L), (-438L));
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.ONE;
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigInteger bigInteger0 = bigFraction0.getNumerator();
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte) (-1), bigInteger0.byteValue());
      assertEquals((short) (-1), bigInteger0.shortValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertNotNull(bigInteger0);
      
      BigFraction bigFraction2 = BigFraction.ONE;
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      boolean boolean0 = bigFraction0.equals(bigFraction1);
      assertTrue(boolean0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      
      BigFraction bigFraction3 = BigFraction.of(bigInteger0, bigInteger0);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte) (-1), bigInteger0.byteValue());
      assertEquals((short) (-1), bigInteger0.shortValue());
      assertEquals((byte)1, bigFraction3.byteValue());
      assertEquals((short)1, bigFraction3.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction0));
      assertTrue(bigFraction3.equals((Object)bigFraction1));
      assertTrue(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigInteger bigInteger1 = bigFraction1.getNumerator();
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigInteger1, bigInteger0);
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertNotNull(bigInteger1);
      
      long long0 = bigFraction1.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      
      RoundingMode roundingMode0 = RoundingMode.HALF_DOWN;
      BigDecimal bigDecimal0 = bigFraction1.bigDecimalValue(0, roundingMode0);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction4 = bigFraction0.multiply(bigInteger1);
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigInteger1.byteValue());
      assertEquals((short)1, bigInteger1.shortValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction4);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigInteger1, bigInteger0);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigInteger1.equals((Object)bigInteger0));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      
      int int0 = bigFraction2.compareTo(bigFraction1);
      assertEquals(0, int0);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction4);
      assertTrue(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction3));
      
      long long1 = (-1486L);
      BigFraction bigFraction5 = BigFraction.of((-1486L), (-2124L));
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction5.ZERO.pow(2923);
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertNotNull(bigFraction6);
      
      // Undeclared exception!
      try { 
        BigFraction.from((-5824.0), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-438L), (-438L));
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.ONE;
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = BigFraction.ONE;
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction2, bigFraction0);
      assertSame(bigFraction2, bigFraction1);
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      boolean boolean0 = bigFraction0.equals(bigFraction1);
      assertTrue(boolean0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      
      BigInteger bigInteger0 = bigFraction1.getNumerator();
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigInteger0);
      
      long long0 = bigFraction1.getDenominatorAsLong();
      assertEquals(1L, long0);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      
      BigFraction bigFraction3 = BigFraction.of(0);
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction2);
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      RoundingMode roundingMode0 = RoundingMode.HALF_DOWN;
      BigDecimal bigDecimal0 = bigFraction1.bigDecimalValue(0, roundingMode0);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertNotNull(bigDecimal0);
      
      BigFraction bigFraction4 = bigFraction0.multiply(bigInteger0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertNotNull(bigFraction4);
      
      int int0 = bigFraction2.compareTo(bigFraction1);
      assertEquals(0, int0);
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertNotSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction2, bigFraction4);
      assertSame(bigFraction2, bigFraction1);
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction0));
      
      long long1 = (-1486L);
      BigFraction bigFraction5 = BigFraction.of((-1486L), (-2124L));
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertNotNull(bigFraction5);
      
      BigFraction bigFraction6 = bigFraction5.ZERO.pow(2923);
      assertEquals((short)0, bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction5.byteValue());
      assertEquals((short)0, bigFraction6.shortValue());
      assertEquals((byte)0, bigFraction6.byteValue());
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction2);
      assertSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction5);
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction1));
      assertFalse(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertNotNull(bigFraction6);
      
      BigFraction bigFraction7 = bigFraction4.subtract(0);
      assertEquals((short)1, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction0.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((byte)1, bigFraction4.byteValue());
      assertEquals((short)1, bigFraction4.shortValue());
      assertEquals((short)1, bigFraction7.shortValue());
      assertEquals((byte)1, bigFraction7.byteValue());
      assertNotSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction2);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction0);
      assertNotSame(bigFraction7, bigFraction5);
      assertTrue(bigFraction0.equals((Object)bigFraction2));
      assertTrue(bigFraction0.equals((Object)bigFraction4));
      assertTrue(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertTrue(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction6));
      assertTrue(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertTrue(bigFraction4.equals((Object)bigFraction0));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertTrue(bigFraction4.equals((Object)bigFraction1));
      assertTrue(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertTrue(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertTrue(bigFraction7.equals((Object)bigFraction0));
      assertTrue(bigFraction7.equals((Object)bigFraction1));
      assertNotNull(bigFraction7);
      
      // Undeclared exception!
      try { 
        BigFraction.from((-5825.094057107295), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Denominator must be different from 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(2000L);
      assertEquals((short)2000, bigFraction0.shortValue());
      assertEquals((byte) (-48), bigFraction0.byteValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.ZERO;
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      double double0 = bigFraction1.ONE.doubleValue();
      assertEquals(1.0, double0, 0.01);
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      
      BigFraction bigFraction2 = bigFraction0.subtract(bigFraction1);
      assertEquals((short)2000, bigFraction0.shortValue());
      assertEquals((byte) (-48), bigFraction0.byteValue());
      assertEquals((short)0, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction1.byteValue());
      assertEquals((short)2000, bigFraction2.shortValue());
      assertEquals((byte) (-48), bigFraction2.byteValue());
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction2.equals((Object)bigFraction1));
      assertNotNull(bigFraction2);
      
      BigFraction bigFraction3 = BigFraction.of(0);
      assertEquals((byte)0, bigFraction3.byteValue());
      assertEquals((short)0, bigFraction3.shortValue());
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction0);
      assertSame(bigFraction3, bigFraction1);
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction0.add(0L);
      assertEquals((short)2000, bigFraction0.shortValue());
      assertEquals((byte) (-48), bigFraction0.byteValue());
      assertEquals((byte) (-48), bigFraction4.byteValue());
      assertEquals((short)2000, bigFraction4.shortValue());
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction0);
      assertSame(bigFraction4, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertNotNull(bigFraction4);
      
      // Undeclared exception!
      try { 
        BigFraction.from((double) 0L, 1.0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Max iterations must be strictly positive: 0
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(0.0, 1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotNull(bigFraction0);
      
      BigFraction bigFraction1 = BigFraction.from((double) 1);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertNotNull(bigFraction1);
      
      BigFraction bigFraction2 = bigFraction0.ONE.multiply(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertNotNull(bigFraction2);
      
      float float0 = bigFraction2.floatValue();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      
      BigFraction bigFraction3 = bigFraction1.ZERO.add((-2305));
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte) (-1), bigFraction3.byteValue());
      assertEquals((short) (-2305), bigFraction3.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction2);
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertNotNull(bigFraction3);
      
      BigFraction bigFraction4 = bigFraction1.ZERO.abs();
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction4);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertNotNull(bigFraction4);
      
      bigFraction0.hashCode();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      
      BigFraction bigFraction5 = bigFraction2.ZERO.subtract(1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertNotNull(bigFraction5);
      
      int int0 = bigFraction5.ONE.intValue();
      assertEquals(1, int0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      
      BigFraction bigFraction6 = bigFraction5.negate();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertTrue(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertTrue(bigFraction6.equals((Object)bigFraction1));
      assertNotNull(bigFraction6);
      
      BigDecimal bigDecimal0 = bigFraction1.bigDecimalValue();
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertNotNull(bigDecimal0);
      
      double double0 = bigFraction2.doubleValue();
      assertEquals(1.0, double0, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      
      BigFraction bigFraction7 = bigFraction0.multiply(bigFraction1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction0);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertNotNull(bigFraction7);
      
      BigFraction bigFraction8 = bigFraction4.add(bigFraction7);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertSame(bigFraction4, bigFraction8);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction8);
      assertSame(bigFraction7, bigFraction0);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction1);
      assertSame(bigFraction8, bigFraction7);
      assertSame(bigFraction8, bigFraction4);
      assertSame(bigFraction8, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertNotNull(bigFraction8);
      
      BigFraction bigFraction9 = bigFraction7.divide((-3035));
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((short)0, bigFraction9.shortValue());
      assertEquals((byte)0, bigFraction9.byteValue());
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction8);
      assertSame(bigFraction7, bigFraction0);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction9, bigFraction2);
      assertNotSame(bigFraction9, bigFraction3);
      assertSame(bigFraction9, bigFraction0);
      assertSame(bigFraction9, bigFraction4);
      assertNotSame(bigFraction9, bigFraction6);
      assertNotSame(bigFraction9, bigFraction1);
      assertSame(bigFraction9, bigFraction8);
      assertNotSame(bigFraction9, bigFraction5);
      assertSame(bigFraction9, bigFraction7);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction2));
      assertFalse(bigFraction9.equals((Object)bigFraction3));
      assertFalse(bigFraction9.equals((Object)bigFraction6));
      assertFalse(bigFraction9.equals((Object)bigFraction1));
      assertFalse(bigFraction9.equals((Object)bigFraction5));
      assertNotNull(bigFraction9);
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      int int1 = bigFraction0.getDenominatorAsInt();
      assertEquals(1, int1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction5);
      assertTrue(int1 == int0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      
      long long0 = bigFraction7.ZERO.longValue();
      assertEquals(0L, long0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction8);
      assertSame(bigFraction7, bigFraction0);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      
      BigFraction bigFraction10 = bigFraction7.multiply(bigInteger0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction10.byteValue());
      assertEquals((short)0, bigFraction10.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertSame(bigFraction10, bigFraction9);
      assertSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction1);
      assertSame(bigFraction10, bigFraction7);
      assertSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction6);
      assertSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction8);
      assertSame(bigFraction7, bigFraction0);
      assertSame(bigFraction7, bigFraction10);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertNotNull(bigFraction10);
      
      int int2 = bigFraction10.ZERO.hashCode();
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction10.byteValue());
      assertEquals((short)0, bigFraction10.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertSame(bigFraction10, bigFraction9);
      assertSame(bigFraction10, bigFraction4);
      assertNotSame(bigFraction10, bigFraction2);
      assertNotSame(bigFraction10, bigFraction1);
      assertSame(bigFraction10, bigFraction7);
      assertSame(bigFraction10, bigFraction8);
      assertNotSame(bigFraction10, bigFraction5);
      assertNotSame(bigFraction10, bigFraction3);
      assertNotSame(bigFraction10, bigFraction6);
      assertSame(bigFraction10, bigFraction0);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction8);
      assertSame(bigFraction7, bigFraction0);
      assertSame(bigFraction7, bigFraction10);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction10.equals((Object)bigFraction2));
      assertFalse(bigFraction10.equals((Object)bigFraction1));
      assertFalse(bigFraction10.equals((Object)bigFraction5));
      assertFalse(bigFraction10.equals((Object)bigFraction3));
      assertFalse(bigFraction10.equals((Object)bigFraction6));
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      
      BigFraction bigFraction11 = bigFraction8.ONE.subtract(bigFraction5);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((short)2, bigFraction11.shortValue());
      assertEquals((byte)2, bigFraction11.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertNotSame(bigFraction0, bigFraction3);
      assertSame(bigFraction0, bigFraction4);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction11, bigFraction2);
      assertNotSame(bigFraction11, bigFraction3);
      assertNotSame(bigFraction11, bigFraction7);
      assertNotSame(bigFraction11, bigFraction5);
      assertNotSame(bigFraction11, bigFraction6);
      assertNotSame(bigFraction11, bigFraction4);
      assertNotSame(bigFraction11, bigFraction8);
      assertNotSame(bigFraction11, bigFraction9);
      assertNotSame(bigFraction11, bigFraction0);
      assertNotSame(bigFraction11, bigFraction1);
      assertNotSame(bigFraction11, bigFraction10);
      assertSame(bigFraction4, bigFraction8);
      assertSame(bigFraction4, bigFraction0);
      assertSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction3);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction8);
      assertSame(bigFraction7, bigFraction0);
      assertSame(bigFraction7, bigFraction10);
      assertSame(bigFraction7, bigFraction4);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction8, bigFraction6);
      assertNotSame(bigFraction8, bigFraction3);
      assertSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction1);
      assertSame(bigFraction8, bigFraction7);
      assertSame(bigFraction8, bigFraction9);
      assertSame(bigFraction8, bigFraction4);
      assertSame(bigFraction8, bigFraction0);
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction2));
      assertFalse(bigFraction11.equals((Object)bigFraction3));
      assertFalse(bigFraction11.equals((Object)bigFraction7));
      assertFalse(bigFraction11.equals((Object)bigFraction5));
      assertFalse(bigFraction11.equals((Object)bigFraction6));
      assertFalse(bigFraction11.equals((Object)bigFraction4));
      assertFalse(bigFraction11.equals((Object)bigFraction8));
      assertFalse(bigFraction11.equals((Object)bigFraction9));
      assertFalse(bigFraction11.equals((Object)bigFraction0));
      assertFalse(bigFraction11.equals((Object)bigFraction1));
      assertFalse(bigFraction11.equals((Object)bigFraction10));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertNotNull(bigFraction11);
      
      BigFraction bigFraction12 = bigFraction4.divide(bigInteger0);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction5);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction3);
      assertSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction2);
      assertSame(bigFraction12, bigFraction4);
      assertSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction0);
      assertSame(bigFraction12, bigFraction10);
      assertSame(bigFraction4, bigFraction8);
      assertSame(bigFraction4, bigFraction0);
      assertSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction7);
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertNotNull(bigFraction12);
      
      boolean boolean0 = bigFraction12.equals(bigFraction4);
      assertTrue(boolean0);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction5);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction3);
      assertSame(bigFraction12, bigFraction8);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction2);
      assertSame(bigFraction12, bigFraction4);
      assertSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction0);
      assertSame(bigFraction12, bigFraction10);
      assertSame(bigFraction4, bigFraction8);
      assertSame(bigFraction4, bigFraction0);
      assertSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction7);
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      
      BigFraction bigFraction13 = bigFraction12.subtract(1);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte) (-1), bigFraction13.byteValue());
      assertEquals((short) (-1), bigFraction13.shortValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction2);
      assertSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction5);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction3);
      assertSame(bigFraction12, bigFraction8);
      assertSame(bigFraction12, bigFraction4);
      assertSame(bigFraction12, bigFraction0);
      assertSame(bigFraction4, bigFraction8);
      assertSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction13);
      assertSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction6);
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertTrue(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertNotNull(bigFraction13);
      
      BigFraction bigFraction14 = bigFraction13.ONE.multiply(1);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte) (-1), bigFraction13.byteValue());
      assertEquals((short) (-1), bigFraction13.shortValue());
      assertEquals((short)1, bigFraction14.shortValue());
      assertEquals((byte)1, bigFraction14.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction2);
      assertSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction5);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction3);
      assertSame(bigFraction12, bigFraction8);
      assertSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction14);
      assertSame(bigFraction12, bigFraction0);
      assertSame(bigFraction4, bigFraction8);
      assertSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction13);
      assertSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction14);
      assertNotSame(bigFraction14, bigFraction0);
      assertNotSame(bigFraction14, bigFraction5);
      assertNotSame(bigFraction14, bigFraction3);
      assertNotSame(bigFraction14, bigFraction2);
      assertNotSame(bigFraction14, bigFraction4);
      assertNotSame(bigFraction14, bigFraction12);
      assertNotSame(bigFraction14, bigFraction7);
      assertNotSame(bigFraction14, bigFraction8);
      assertNotSame(bigFraction14, bigFraction6);
      assertNotSame(bigFraction14, bigFraction11);
      assertNotSame(bigFraction14, bigFraction9);
      assertNotSame(bigFraction14, bigFraction10);
      assertNotSame(bigFraction14, bigFraction1);
      assertNotSame(bigFraction14, bigFraction13);
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction13));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertTrue(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction0));
      assertFalse(bigFraction14.equals((Object)bigFraction5));
      assertFalse(bigFraction14.equals((Object)bigFraction3));
      assertFalse(bigFraction14.equals((Object)bigFraction4));
      assertTrue(bigFraction14.equals((Object)bigFraction2));
      assertFalse(bigFraction14.equals((Object)bigFraction12));
      assertTrue(bigFraction14.equals((Object)bigFraction1));
      assertFalse(bigFraction14.equals((Object)bigFraction7));
      assertFalse(bigFraction14.equals((Object)bigFraction8));
      assertFalse(bigFraction14.equals((Object)bigFraction11));
      assertFalse(bigFraction14.equals((Object)bigFraction9));
      assertFalse(bigFraction14.equals((Object)bigFraction10));
      assertTrue(bigFraction14.equals((Object)bigFraction6));
      assertFalse(bigFraction14.equals((Object)bigFraction13));
      assertNotNull(bigFraction14);
      
      BigFraction bigFraction15 = BigFraction.from((double) 1, (double) 1, 1);
      assertEquals((short)1, bigFraction15.shortValue());
      assertEquals((byte)1, bigFraction15.byteValue());
      assertNotSame(bigFraction15, bigFraction10);
      assertNotSame(bigFraction15, bigFraction7);
      assertNotSame(bigFraction15, bigFraction14);
      assertNotSame(bigFraction15, bigFraction8);
      assertNotSame(bigFraction15, bigFraction5);
      assertNotSame(bigFraction15, bigFraction3);
      assertNotSame(bigFraction15, bigFraction11);
      assertNotSame(bigFraction15, bigFraction2);
      assertNotSame(bigFraction15, bigFraction0);
      assertNotSame(bigFraction15, bigFraction13);
      assertNotSame(bigFraction15, bigFraction9);
      assertNotSame(bigFraction15, bigFraction12);
      assertNotSame(bigFraction15, bigFraction1);
      assertNotSame(bigFraction15, bigFraction4);
      assertNotSame(bigFraction15, bigFraction6);
      assertFalse(bigFraction15.equals((Object)bigFraction10));
      assertFalse(bigFraction15.equals((Object)bigFraction7));
      assertFalse(bigFraction15.equals((Object)bigFraction8));
      assertTrue(bigFraction15.equals((Object)bigFraction1));
      assertFalse(bigFraction15.equals((Object)bigFraction5));
      assertFalse(bigFraction15.equals((Object)bigFraction3));
      assertFalse(bigFraction15.equals((Object)bigFraction11));
      assertFalse(bigFraction15.equals((Object)bigFraction0));
      assertFalse(bigFraction15.equals((Object)bigFraction13));
      assertTrue(bigFraction15.equals((Object)bigFraction2));
      assertFalse(bigFraction15.equals((Object)bigFraction9));
      assertFalse(bigFraction15.equals((Object)bigFraction12));
      assertTrue(bigFraction15.equals((Object)bigFraction6));
      assertFalse(bigFraction15.equals((Object)bigFraction4));
      assertTrue(bigFraction15.equals((Object)bigFraction14));
      assertNotNull(bigFraction15);
      
      BigFraction bigFraction16 = bigFraction13.multiply(9218868437227405312L);
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((short)0, bigFraction12.shortValue());
      assertEquals((byte)0, bigFraction12.byteValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte) (-1), bigFraction13.byteValue());
      assertEquals((short) (-1), bigFraction13.shortValue());
      assertEquals((short)0, bigFraction16.shortValue());
      assertEquals((byte)0, bigFraction16.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction12, bigFraction1);
      assertNotSame(bigFraction12, bigFraction2);
      assertNotSame(bigFraction12, bigFraction16);
      assertSame(bigFraction12, bigFraction9);
      assertNotSame(bigFraction12, bigFraction13);
      assertNotSame(bigFraction12, bigFraction15);
      assertNotSame(bigFraction12, bigFraction11);
      assertSame(bigFraction12, bigFraction10);
      assertNotSame(bigFraction12, bigFraction6);
      assertNotSame(bigFraction12, bigFraction5);
      assertSame(bigFraction12, bigFraction7);
      assertNotSame(bigFraction12, bigFraction3);
      assertSame(bigFraction12, bigFraction8);
      assertSame(bigFraction12, bigFraction4);
      assertNotSame(bigFraction12, bigFraction14);
      assertSame(bigFraction12, bigFraction0);
      assertSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction15);
      assertSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction16);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction13);
      assertSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction13, bigFraction7);
      assertNotSame(bigFraction13, bigFraction10);
      assertNotSame(bigFraction13, bigFraction15);
      assertNotSame(bigFraction13, bigFraction16);
      assertNotSame(bigFraction13, bigFraction8);
      assertNotSame(bigFraction13, bigFraction3);
      assertNotSame(bigFraction13, bigFraction11);
      assertNotSame(bigFraction13, bigFraction2);
      assertNotSame(bigFraction13, bigFraction0);
      assertNotSame(bigFraction13, bigFraction1);
      assertNotSame(bigFraction13, bigFraction4);
      assertNotSame(bigFraction13, bigFraction9);
      assertNotSame(bigFraction13, bigFraction12);
      assertNotSame(bigFraction13, bigFraction5);
      assertNotSame(bigFraction13, bigFraction6);
      assertNotSame(bigFraction13, bigFraction14);
      assertNotSame(bigFraction16, bigFraction8);
      assertNotSame(bigFraction16, bigFraction6);
      assertNotSame(bigFraction16, bigFraction7);
      assertNotSame(bigFraction16, bigFraction14);
      assertNotSame(bigFraction16, bigFraction5);
      assertNotSame(bigFraction16, bigFraction3);
      assertNotSame(bigFraction16, bigFraction4);
      assertNotSame(bigFraction16, bigFraction12);
      assertNotSame(bigFraction16, bigFraction2);
      assertNotSame(bigFraction16, bigFraction11);
      assertNotSame(bigFraction16, bigFraction0);
      assertNotSame(bigFraction16, bigFraction15);
      assertNotSame(bigFraction16, bigFraction1);
      assertNotSame(bigFraction16, bigFraction13);
      assertNotSame(bigFraction16, bigFraction10);
      assertNotSame(bigFraction16, bigFraction9);
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertTrue(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction12.equals((Object)bigFraction6));
      assertFalse(bigFraction12.equals((Object)bigFraction5));
      assertFalse(bigFraction12.equals((Object)bigFraction3));
      assertFalse(bigFraction12.equals((Object)bigFraction1));
      assertFalse(bigFraction12.equals((Object)bigFraction2));
      assertFalse(bigFraction12.equals((Object)bigFraction13));
      assertFalse(bigFraction12.equals((Object)bigFraction15));
      assertFalse(bigFraction12.equals((Object)bigFraction14));
      assertFalse(bigFraction12.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction15));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction13.equals((Object)bigFraction7));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
      assertFalse(bigFraction13.equals((Object)bigFraction15));
      assertFalse(bigFraction13.equals((Object)bigFraction8));
      assertFalse(bigFraction13.equals((Object)bigFraction3));
      assertFalse(bigFraction13.equals((Object)bigFraction11));
      assertFalse(bigFraction13.equals((Object)bigFraction2));
      assertFalse(bigFraction13.equals((Object)bigFraction0));
      assertFalse(bigFraction13.equals((Object)bigFraction1));
      assertFalse(bigFraction13.equals((Object)bigFraction4));
      assertFalse(bigFraction13.equals((Object)bigFraction9));
      assertFalse(bigFraction13.equals((Object)bigFraction12));
      assertTrue(bigFraction13.equals((Object)bigFraction5));
      assertFalse(bigFraction13.equals((Object)bigFraction6));
      assertFalse(bigFraction13.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction8));
      assertFalse(bigFraction16.equals((Object)bigFraction6));
      assertFalse(bigFraction16.equals((Object)bigFraction7));
      assertFalse(bigFraction16.equals((Object)bigFraction14));
      assertFalse(bigFraction16.equals((Object)bigFraction5));
      assertFalse(bigFraction16.equals((Object)bigFraction3));
      assertFalse(bigFraction16.equals((Object)bigFraction4));
      assertFalse(bigFraction16.equals((Object)bigFraction12));
      assertFalse(bigFraction16.equals((Object)bigFraction2));
      assertFalse(bigFraction16.equals((Object)bigFraction11));
      assertFalse(bigFraction16.equals((Object)bigFraction0));
      assertFalse(bigFraction16.equals((Object)bigFraction15));
      assertFalse(bigFraction16.equals((Object)bigFraction1));
      assertFalse(bigFraction16.equals((Object)bigFraction13));
      assertFalse(bigFraction16.equals((Object)bigFraction10));
      assertFalse(bigFraction16.equals((Object)bigFraction9));
      assertNotNull(bigFraction16);
      
      BigFraction bigFraction17 = bigFraction3.divide(bigFraction2);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction3.byteValue());
      assertEquals((short) (-2305), bigFraction3.shortValue());
      assertEquals((short) (-2305), bigFraction17.shortValue());
      assertEquals((byte) (-1), bigFraction17.byteValue());
      assertNotSame(bigFraction0, bigFraction13);
      assertSame(bigFraction0, bigFraction12);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction15);
      assertSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction17);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction16);
      assertNotSame(bigFraction3, bigFraction15);
      assertNotSame(bigFraction3, bigFraction17);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction17, bigFraction10);
      assertNotSame(bigFraction17, bigFraction16);
      assertNotSame(bigFraction17, bigFraction14);
      assertNotSame(bigFraction17, bigFraction6);
      assertNotSame(bigFraction17, bigFraction7);
      assertNotSame(bigFraction17, bigFraction3);
      assertNotSame(bigFraction17, bigFraction4);
      assertNotSame(bigFraction17, bigFraction0);
      assertNotSame(bigFraction17, bigFraction12);
      assertNotSame(bigFraction17, bigFraction5);
      assertNotSame(bigFraction17, bigFraction13);
      assertNotSame(bigFraction17, bigFraction2);
      assertNotSame(bigFraction17, bigFraction1);
      assertNotSame(bigFraction17, bigFraction9);
      assertNotSame(bigFraction17, bigFraction8);
      assertNotSame(bigFraction17, bigFraction11);
      assertNotSame(bigFraction17, bigFraction15);
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertTrue(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction16));
      assertTrue(bigFraction2.equals((Object)bigFraction15));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction16));
      assertFalse(bigFraction3.equals((Object)bigFraction15));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction17.equals((Object)bigFraction10));
      assertFalse(bigFraction17.equals((Object)bigFraction16));
      assertFalse(bigFraction17.equals((Object)bigFraction14));
      assertFalse(bigFraction17.equals((Object)bigFraction6));
      assertFalse(bigFraction17.equals((Object)bigFraction7));
      assertFalse(bigFraction17.equals((Object)bigFraction4));
      assertTrue(bigFraction17.equals((Object)bigFraction3));
      assertFalse(bigFraction17.equals((Object)bigFraction0));
      assertFalse(bigFraction17.equals((Object)bigFraction12));
      assertFalse(bigFraction17.equals((Object)bigFraction5));
      assertFalse(bigFraction17.equals((Object)bigFraction13));
      assertFalse(bigFraction17.equals((Object)bigFraction2));
      assertFalse(bigFraction17.equals((Object)bigFraction1));
      assertFalse(bigFraction17.equals((Object)bigFraction9));
      assertFalse(bigFraction17.equals((Object)bigFraction8));
      assertFalse(bigFraction17.equals((Object)bigFraction11));
      assertFalse(bigFraction17.equals((Object)bigFraction15));
      assertNotNull(bigFraction17);
      
      double double1 = bigFraction17.doubleValue();
      assertEquals((-2305.0), double1, 0.01);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction3.byteValue());
      assertEquals((short) (-2305), bigFraction3.shortValue());
      assertEquals((short) (-2305), bigFraction17.shortValue());
      assertEquals((byte) (-1), bigFraction17.byteValue());
      assertNotSame(bigFraction0, bigFraction13);
      assertSame(bigFraction0, bigFraction12);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction15);
      assertSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction6);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction17);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction3, bigFraction8);
      assertNotSame(bigFraction3, bigFraction5);
      assertNotSame(bigFraction3, bigFraction6);
      assertNotSame(bigFraction3, bigFraction7);
      assertNotSame(bigFraction3, bigFraction14);
      assertNotSame(bigFraction3, bigFraction10);
      assertNotSame(bigFraction3, bigFraction16);
      assertNotSame(bigFraction3, bigFraction15);
      assertNotSame(bigFraction3, bigFraction17);
      assertNotSame(bigFraction3, bigFraction11);
      assertNotSame(bigFraction3, bigFraction0);
      assertNotSame(bigFraction3, bigFraction1);
      assertNotSame(bigFraction3, bigFraction13);
      assertNotSame(bigFraction3, bigFraction9);
      assertNotSame(bigFraction3, bigFraction2);
      assertNotSame(bigFraction3, bigFraction12);
      assertNotSame(bigFraction3, bigFraction4);
      assertNotSame(bigFraction17, bigFraction10);
      assertNotSame(bigFraction17, bigFraction16);
      assertNotSame(bigFraction17, bigFraction14);
      assertNotSame(bigFraction17, bigFraction6);
      assertNotSame(bigFraction17, bigFraction7);
      assertNotSame(bigFraction17, bigFraction3);
      assertNotSame(bigFraction17, bigFraction4);
      assertNotSame(bigFraction17, bigFraction0);
      assertNotSame(bigFraction17, bigFraction12);
      assertNotSame(bigFraction17, bigFraction5);
      assertNotSame(bigFraction17, bigFraction13);
      assertNotSame(bigFraction17, bigFraction2);
      assertNotSame(bigFraction17, bigFraction1);
      assertNotSame(bigFraction17, bigFraction9);
      assertNotSame(bigFraction17, bigFraction8);
      assertNotSame(bigFraction17, bigFraction11);
      assertNotSame(bigFraction17, bigFraction15);
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertTrue(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction16));
      assertTrue(bigFraction2.equals((Object)bigFraction15));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction17));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction8));
      assertFalse(bigFraction3.equals((Object)bigFraction5));
      assertFalse(bigFraction3.equals((Object)bigFraction6));
      assertFalse(bigFraction3.equals((Object)bigFraction7));
      assertFalse(bigFraction3.equals((Object)bigFraction14));
      assertFalse(bigFraction3.equals((Object)bigFraction10));
      assertFalse(bigFraction3.equals((Object)bigFraction16));
      assertFalse(bigFraction3.equals((Object)bigFraction15));
      assertFalse(bigFraction3.equals((Object)bigFraction11));
      assertFalse(bigFraction3.equals((Object)bigFraction0));
      assertFalse(bigFraction3.equals((Object)bigFraction1));
      assertFalse(bigFraction3.equals((Object)bigFraction13));
      assertFalse(bigFraction3.equals((Object)bigFraction9));
      assertFalse(bigFraction3.equals((Object)bigFraction2));
      assertFalse(bigFraction3.equals((Object)bigFraction12));
      assertTrue(bigFraction3.equals((Object)bigFraction17));
      assertFalse(bigFraction3.equals((Object)bigFraction4));
      assertFalse(bigFraction17.equals((Object)bigFraction10));
      assertFalse(bigFraction17.equals((Object)bigFraction16));
      assertFalse(bigFraction17.equals((Object)bigFraction14));
      assertFalse(bigFraction17.equals((Object)bigFraction6));
      assertFalse(bigFraction17.equals((Object)bigFraction7));
      assertFalse(bigFraction17.equals((Object)bigFraction4));
      assertTrue(bigFraction17.equals((Object)bigFraction3));
      assertFalse(bigFraction17.equals((Object)bigFraction0));
      assertFalse(bigFraction17.equals((Object)bigFraction12));
      assertFalse(bigFraction17.equals((Object)bigFraction5));
      assertFalse(bigFraction17.equals((Object)bigFraction13));
      assertFalse(bigFraction17.equals((Object)bigFraction2));
      assertFalse(bigFraction17.equals((Object)bigFraction1));
      assertFalse(bigFraction17.equals((Object)bigFraction9));
      assertFalse(bigFraction17.equals((Object)bigFraction8));
      assertFalse(bigFraction17.equals((Object)bigFraction11));
      assertFalse(bigFraction17.equals((Object)bigFraction15));
      assertNotEquals(double1, double0, 0.01);
      
      BigFraction bigFraction18 = bigFraction7.divide(bigInteger0);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((short)0, bigFraction18.shortValue());
      assertEquals((byte)0, bigFraction18.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction0, bigFraction13);
      assertSame(bigFraction0, bigFraction12);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction15);
      assertSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction7, bigFraction14);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction18);
      assertSame(bigFraction7, bigFraction0);
      assertSame(bigFraction7, bigFraction4);
      assertSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction17);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction13);
      assertSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction15);
      assertNotSame(bigFraction7, bigFraction16);
      assertSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction18, bigFraction0);
      assertSame(bigFraction18, bigFraction9);
      assertNotSame(bigFraction18, bigFraction5);
      assertSame(bigFraction18, bigFraction10);
      assertNotSame(bigFraction18, bigFraction2);
      assertSame(bigFraction18, bigFraction8);
      assertNotSame(bigFraction18, bigFraction3);
      assertNotSame(bigFraction18, bigFraction16);
      assertNotSame(bigFraction18, bigFraction13);
      assertSame(bigFraction18, bigFraction12);
      assertNotSame(bigFraction18, bigFraction11);
      assertNotSame(bigFraction18, bigFraction15);
      assertNotSame(bigFraction18, bigFraction17);
      assertNotSame(bigFraction18, bigFraction6);
      assertSame(bigFraction18, bigFraction7);
      assertNotSame(bigFraction18, bigFraction1);
      assertNotSame(bigFraction18, bigFraction14);
      assertSame(bigFraction18, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertTrue(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction7.equals((Object)bigFraction14));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction17));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction15));
      assertFalse(bigFraction7.equals((Object)bigFraction16));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction18.equals((Object)bigFraction13));
      assertFalse(bigFraction18.equals((Object)bigFraction15));
      assertFalse(bigFraction18.equals((Object)bigFraction11));
      assertFalse(bigFraction18.equals((Object)bigFraction5));
      assertFalse(bigFraction18.equals((Object)bigFraction17));
      assertFalse(bigFraction18.equals((Object)bigFraction6));
      assertFalse(bigFraction18.equals((Object)bigFraction1));
      assertFalse(bigFraction18.equals((Object)bigFraction2));
      assertFalse(bigFraction18.equals((Object)bigFraction14));
      assertFalse(bigFraction18.equals((Object)bigFraction3));
      assertFalse(bigFraction18.equals((Object)bigFraction16));
      assertNotNull(bigFraction18);
      
      boolean boolean1 = bigFraction18.equals((Object) null);
      assertFalse(boolean1);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((short)0, bigFraction18.shortValue());
      assertEquals((byte)0, bigFraction18.byteValue());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotSame(bigFraction0, bigFraction13);
      assertSame(bigFraction0, bigFraction12);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction15);
      assertSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction7, bigFraction14);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction18);
      assertSame(bigFraction7, bigFraction0);
      assertSame(bigFraction7, bigFraction4);
      assertSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction17);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction13);
      assertSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction15);
      assertNotSame(bigFraction7, bigFraction16);
      assertSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction3);
      assertSame(bigFraction18, bigFraction0);
      assertSame(bigFraction18, bigFraction9);
      assertNotSame(bigFraction18, bigFraction5);
      assertSame(bigFraction18, bigFraction10);
      assertNotSame(bigFraction18, bigFraction2);
      assertSame(bigFraction18, bigFraction8);
      assertNotSame(bigFraction18, bigFraction3);
      assertNotSame(bigFraction18, bigFraction16);
      assertNotSame(bigFraction18, bigFraction13);
      assertSame(bigFraction18, bigFraction12);
      assertNotSame(bigFraction18, bigFraction11);
      assertNotSame(bigFraction18, bigFraction15);
      assertNotSame(bigFraction18, bigFraction17);
      assertNotSame(bigFraction18, bigFraction6);
      assertSame(bigFraction18, bigFraction7);
      assertNotSame(bigFraction18, bigFraction1);
      assertNotSame(bigFraction18, bigFraction14);
      assertSame(bigFraction18, bigFraction4);
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertTrue(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction18));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction7.equals((Object)bigFraction14));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction17));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction15));
      assertFalse(bigFraction7.equals((Object)bigFraction16));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction18.equals((Object)bigFraction13));
      assertFalse(bigFraction18.equals((Object)bigFraction15));
      assertFalse(bigFraction18.equals((Object)bigFraction11));
      assertFalse(bigFraction18.equals((Object)bigFraction5));
      assertFalse(bigFraction18.equals((Object)bigFraction17));
      assertFalse(bigFraction18.equals((Object)bigFraction6));
      assertFalse(bigFraction18.equals((Object)bigFraction1));
      assertFalse(bigFraction18.equals((Object)bigFraction2));
      assertFalse(bigFraction18.equals((Object)bigFraction14));
      assertFalse(bigFraction18.equals((Object)bigFraction3));
      assertFalse(bigFraction18.equals((Object)bigFraction16));
      assertFalse(boolean1 == boolean0);
      
      int int3 = bigFraction6.getDenominatorAsInt();
      assertEquals(1, int3);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)1, bigFraction2.byteValue());
      assertEquals((short)1, bigFraction2.shortValue());
      assertEquals((byte) (-1), bigFraction5.byteValue());
      assertEquals((short) (-1), bigFraction5.shortValue());
      assertEquals((byte)1, bigFraction6.byteValue());
      assertEquals((short)1, bigFraction6.shortValue());
      assertNotSame(bigFraction0, bigFraction13);
      assertSame(bigFraction0, bigFraction12);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction15);
      assertSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertNotSame(bigFraction2, bigFraction1);
      assertNotSame(bigFraction2, bigFraction9);
      assertNotSame(bigFraction2, bigFraction16);
      assertNotSame(bigFraction2, bigFraction11);
      assertNotSame(bigFraction2, bigFraction15);
      assertNotSame(bigFraction2, bigFraction10);
      assertNotSame(bigFraction2, bigFraction13);
      assertNotSame(bigFraction2, bigFraction4);
      assertNotSame(bigFraction2, bigFraction5);
      assertNotSame(bigFraction2, bigFraction18);
      assertNotSame(bigFraction2, bigFraction8);
      assertNotSame(bigFraction2, bigFraction7);
      assertNotSame(bigFraction2, bigFraction3);
      assertNotSame(bigFraction2, bigFraction6);
      assertNotSame(bigFraction2, bigFraction14);
      assertNotSame(bigFraction2, bigFraction12);
      assertNotSame(bigFraction2, bigFraction17);
      assertNotSame(bigFraction2, bigFraction0);
      assertNotSame(bigFraction5, bigFraction9);
      assertNotSame(bigFraction5, bigFraction16);
      assertNotSame(bigFraction5, bigFraction0);
      assertNotSame(bigFraction5, bigFraction2);
      assertNotSame(bigFraction5, bigFraction1);
      assertNotSame(bigFraction5, bigFraction10);
      assertNotSame(bigFraction5, bigFraction13);
      assertNotSame(bigFraction5, bigFraction11);
      assertNotSame(bigFraction5, bigFraction18);
      assertNotSame(bigFraction5, bigFraction3);
      assertNotSame(bigFraction5, bigFraction8);
      assertNotSame(bigFraction5, bigFraction12);
      assertNotSame(bigFraction5, bigFraction15);
      assertNotSame(bigFraction5, bigFraction14);
      assertNotSame(bigFraction5, bigFraction7);
      assertNotSame(bigFraction5, bigFraction17);
      assertNotSame(bigFraction5, bigFraction6);
      assertNotSame(bigFraction5, bigFraction4);
      assertNotSame(bigFraction6, bigFraction18);
      assertNotSame(bigFraction6, bigFraction14);
      assertNotSame(bigFraction6, bigFraction3);
      assertNotSame(bigFraction6, bigFraction5);
      assertNotSame(bigFraction6, bigFraction7);
      assertNotSame(bigFraction6, bigFraction10);
      assertNotSame(bigFraction6, bigFraction9);
      assertNotSame(bigFraction6, bigFraction12);
      assertNotSame(bigFraction6, bigFraction4);
      assertNotSame(bigFraction6, bigFraction2);
      assertNotSame(bigFraction6, bigFraction11);
      assertNotSame(bigFraction6, bigFraction17);
      assertNotSame(bigFraction6, bigFraction0);
      assertNotSame(bigFraction6, bigFraction13);
      assertNotSame(bigFraction6, bigFraction1);
      assertNotSame(bigFraction6, bigFraction16);
      assertNotSame(bigFraction6, bigFraction15);
      assertNotSame(bigFraction6, bigFraction8);
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertTrue(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction18));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction2.equals((Object)bigFraction9));
      assertFalse(bigFraction2.equals((Object)bigFraction16));
      assertTrue(bigFraction2.equals((Object)bigFraction15));
      assertTrue(bigFraction2.equals((Object)bigFraction1));
      assertFalse(bigFraction2.equals((Object)bigFraction11));
      assertTrue(bigFraction2.equals((Object)bigFraction6));
      assertFalse(bigFraction2.equals((Object)bigFraction10));
      assertFalse(bigFraction2.equals((Object)bigFraction13));
      assertFalse(bigFraction2.equals((Object)bigFraction4));
      assertTrue(bigFraction2.equals((Object)bigFraction14));
      assertFalse(bigFraction2.equals((Object)bigFraction5));
      assertFalse(bigFraction2.equals((Object)bigFraction18));
      assertFalse(bigFraction2.equals((Object)bigFraction8));
      assertFalse(bigFraction2.equals((Object)bigFraction7));
      assertFalse(bigFraction2.equals((Object)bigFraction3));
      assertFalse(bigFraction2.equals((Object)bigFraction12));
      assertFalse(bigFraction2.equals((Object)bigFraction17));
      assertFalse(bigFraction2.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction9));
      assertFalse(bigFraction5.equals((Object)bigFraction16));
      assertFalse(bigFraction5.equals((Object)bigFraction0));
      assertFalse(bigFraction5.equals((Object)bigFraction2));
      assertFalse(bigFraction5.equals((Object)bigFraction1));
      assertFalse(bigFraction5.equals((Object)bigFraction10));
      assertFalse(bigFraction5.equals((Object)bigFraction11));
      assertFalse(bigFraction5.equals((Object)bigFraction18));
      assertFalse(bigFraction5.equals((Object)bigFraction3));
      assertTrue(bigFraction5.equals((Object)bigFraction13));
      assertFalse(bigFraction5.equals((Object)bigFraction8));
      assertFalse(bigFraction5.equals((Object)bigFraction12));
      assertFalse(bigFraction5.equals((Object)bigFraction15));
      assertFalse(bigFraction5.equals((Object)bigFraction14));
      assertFalse(bigFraction5.equals((Object)bigFraction7));
      assertFalse(bigFraction5.equals((Object)bigFraction17));
      assertFalse(bigFraction5.equals((Object)bigFraction6));
      assertFalse(bigFraction5.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction18));
      assertFalse(bigFraction6.equals((Object)bigFraction3));
      assertFalse(bigFraction6.equals((Object)bigFraction5));
      assertFalse(bigFraction6.equals((Object)bigFraction7));
      assertFalse(bigFraction6.equals((Object)bigFraction10));
      assertTrue(bigFraction6.equals((Object)bigFraction14));
      assertFalse(bigFraction6.equals((Object)bigFraction9));
      assertTrue(bigFraction6.equals((Object)bigFraction2));
      assertFalse(bigFraction6.equals((Object)bigFraction12));
      assertFalse(bigFraction6.equals((Object)bigFraction4));
      assertFalse(bigFraction6.equals((Object)bigFraction11));
      assertFalse(bigFraction6.equals((Object)bigFraction17));
      assertFalse(bigFraction6.equals((Object)bigFraction0));
      assertFalse(bigFraction6.equals((Object)bigFraction13));
      assertFalse(bigFraction6.equals((Object)bigFraction16));
      assertTrue(bigFraction6.equals((Object)bigFraction1));
      assertTrue(bigFraction6.equals((Object)bigFraction15));
      assertFalse(bigFraction6.equals((Object)bigFraction8));
      assertTrue(int3 == int0);
      assertTrue(int3 == int1);
      
      float float1 = bigFraction8.floatValue();
      assertEquals(0.0F, float1, 0.01F);
      assertEquals((byte)0, bigFraction0.byteValue());
      assertEquals((short)0, bigFraction0.shortValue());
      assertEquals((byte)1, bigFraction1.byteValue());
      assertEquals((short)1, bigFraction1.shortValue());
      assertEquals((byte)0, bigFraction4.byteValue());
      assertEquals((short)0, bigFraction4.shortValue());
      assertEquals((byte)0, bigFraction7.byteValue());
      assertEquals((short)0, bigFraction7.shortValue());
      assertEquals((byte)0, bigFraction8.byteValue());
      assertEquals((short)0, bigFraction8.shortValue());
      assertNotSame(bigFraction0, bigFraction13);
      assertSame(bigFraction0, bigFraction12);
      assertSame(bigFraction0, bigFraction8);
      assertNotSame(bigFraction0, bigFraction2);
      assertSame(bigFraction0, bigFraction4);
      assertSame(bigFraction0, bigFraction10);
      assertNotSame(bigFraction0, bigFraction1);
      assertSame(bigFraction0, bigFraction7);
      assertNotSame(bigFraction0, bigFraction11);
      assertNotSame(bigFraction0, bigFraction15);
      assertSame(bigFraction0, bigFraction9);
      assertNotSame(bigFraction0, bigFraction14);
      assertNotSame(bigFraction0, bigFraction3);
      assertNotSame(bigFraction0, bigFraction16);
      assertNotSame(bigFraction0, bigFraction6);
      assertSame(bigFraction0, bigFraction18);
      assertNotSame(bigFraction0, bigFraction17);
      assertNotSame(bigFraction0, bigFraction5);
      assertNotSame(bigFraction1, bigFraction15);
      assertNotSame(bigFraction1, bigFraction12);
      assertNotSame(bigFraction1, bigFraction13);
      assertNotSame(bigFraction1, bigFraction14);
      assertNotSame(bigFraction1, bigFraction7);
      assertNotSame(bigFraction1, bigFraction5);
      assertNotSame(bigFraction1, bigFraction17);
      assertNotSame(bigFraction1, bigFraction6);
      assertNotSame(bigFraction1, bigFraction4);
      assertNotSame(bigFraction1, bigFraction9);
      assertNotSame(bigFraction1, bigFraction16);
      assertNotSame(bigFraction1, bigFraction0);
      assertNotSame(bigFraction1, bigFraction10);
      assertNotSame(bigFraction1, bigFraction11);
      assertNotSame(bigFraction1, bigFraction18);
      assertNotSame(bigFraction1, bigFraction2);
      assertNotSame(bigFraction1, bigFraction3);
      assertNotSame(bigFraction1, bigFraction8);
      assertSame(bigFraction4, bigFraction8);
      assertNotSame(bigFraction4, bigFraction15);
      assertSame(bigFraction4, bigFraction10);
      assertNotSame(bigFraction4, bigFraction3);
      assertSame(bigFraction4, bigFraction12);
      assertNotSame(bigFraction4, bigFraction6);
      assertNotSame(bigFraction4, bigFraction14);
      assertNotSame(bigFraction4, bigFraction2);
      assertNotSame(bigFraction4, bigFraction5);
      assertNotSame(bigFraction4, bigFraction17);
      assertSame(bigFraction4, bigFraction18);
      assertSame(bigFraction4, bigFraction0);
      assertNotSame(bigFraction4, bigFraction16);
      assertNotSame(bigFraction4, bigFraction11);
      assertNotSame(bigFraction4, bigFraction1);
      assertSame(bigFraction4, bigFraction9);
      assertNotSame(bigFraction4, bigFraction13);
      assertSame(bigFraction4, bigFraction7);
      assertNotSame(bigFraction7, bigFraction14);
      assertSame(bigFraction7, bigFraction9);
      assertNotSame(bigFraction7, bigFraction5);
      assertSame(bigFraction7, bigFraction18);
      assertSame(bigFraction7, bigFraction0);
      assertSame(bigFraction7, bigFraction4);
      assertSame(bigFraction7, bigFraction12);
      assertNotSame(bigFraction7, bigFraction6);
      assertNotSame(bigFraction7, bigFraction11);
      assertNotSame(bigFraction7, bigFraction17);
      assertNotSame(bigFraction7, bigFraction2);
      assertNotSame(bigFraction7, bigFraction1);
      assertNotSame(bigFraction7, bigFraction13);
      assertSame(bigFraction7, bigFraction8);
      assertNotSame(bigFraction7, bigFraction15);
      assertNotSame(bigFraction7, bigFraction16);
      assertSame(bigFraction7, bigFraction10);
      assertNotSame(bigFraction7, bigFraction3);
      assertNotSame(bigFraction8, bigFraction17);
      assertNotSame(bigFraction8, bigFraction11);
      assertNotSame(bigFraction8, bigFraction2);
      assertNotSame(bigFraction8, bigFraction1);
      assertNotSame(bigFraction8, bigFraction13);
      assertSame(bigFraction8, bigFraction4);
      assertNotSame(bigFraction8, bigFraction14);
      assertSame(bigFraction8, bigFraction0);
      assertSame(bigFraction8, bigFraction12);
      assertNotSame(bigFraction8, bigFraction6);
      assertSame(bigFraction8, bigFraction10);
      assertNotSame(bigFraction8, bigFraction3);
      assertNotSame(bigFraction8, bigFraction5);
      assertNotSame(bigFraction8, bigFraction15);
      assertSame(bigFraction8, bigFraction18);
      assertSame(bigFraction8, bigFraction7);
      assertNotSame(bigFraction8, bigFraction16);
      assertSame(bigFraction8, bigFraction9);
      assertNotEquals(float1, float0, 0.01F);
      assertFalse(bigFraction0.equals((Object)bigFraction13));
      assertFalse(bigFraction0.equals((Object)bigFraction14));
      assertFalse(bigFraction0.equals((Object)bigFraction2));
      assertFalse(bigFraction0.equals((Object)bigFraction3));
      assertFalse(bigFraction0.equals((Object)bigFraction16));
      assertFalse(bigFraction0.equals((Object)bigFraction6));
      assertFalse(bigFraction0.equals((Object)bigFraction1));
      assertFalse(bigFraction0.equals((Object)bigFraction15));
      assertFalse(bigFraction0.equals((Object)bigFraction11));
      assertFalse(bigFraction0.equals((Object)bigFraction17));
      assertFalse(bigFraction0.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction12));
      assertFalse(bigFraction1.equals((Object)bigFraction13));
      assertTrue(bigFraction1.equals((Object)bigFraction14));
      assertTrue(bigFraction1.equals((Object)bigFraction6));
      assertFalse(bigFraction1.equals((Object)bigFraction7));
      assertFalse(bigFraction1.equals((Object)bigFraction5));
      assertFalse(bigFraction1.equals((Object)bigFraction17));
      assertFalse(bigFraction1.equals((Object)bigFraction4));
      assertFalse(bigFraction1.equals((Object)bigFraction9));
      assertFalse(bigFraction1.equals((Object)bigFraction16));
      assertTrue(bigFraction1.equals((Object)bigFraction2));
      assertFalse(bigFraction1.equals((Object)bigFraction0));
      assertFalse(bigFraction1.equals((Object)bigFraction10));
      assertFalse(bigFraction1.equals((Object)bigFraction11));
      assertFalse(bigFraction1.equals((Object)bigFraction18));
      assertFalse(bigFraction1.equals((Object)bigFraction3));
      assertFalse(bigFraction1.equals((Object)bigFraction8));
      assertTrue(bigFraction1.equals((Object)bigFraction15));
      assertFalse(bigFraction4.equals((Object)bigFraction15));
      assertFalse(bigFraction4.equals((Object)bigFraction16));
      assertFalse(bigFraction4.equals((Object)bigFraction3));
      assertFalse(bigFraction4.equals((Object)bigFraction6));
      assertFalse(bigFraction4.equals((Object)bigFraction14));
      assertFalse(bigFraction4.equals((Object)bigFraction11));
      assertFalse(bigFraction4.equals((Object)bigFraction2));
      assertFalse(bigFraction4.equals((Object)bigFraction1));
      assertFalse(bigFraction4.equals((Object)bigFraction5));
      assertFalse(bigFraction4.equals((Object)bigFraction13));
      assertFalse(bigFraction4.equals((Object)bigFraction17));
      assertFalse(bigFraction7.equals((Object)bigFraction14));
      assertFalse(bigFraction7.equals((Object)bigFraction11));
      assertFalse(bigFraction7.equals((Object)bigFraction17));
      assertFalse(bigFraction7.equals((Object)bigFraction2));
      assertFalse(bigFraction7.equals((Object)bigFraction1));
      assertFalse(bigFraction7.equals((Object)bigFraction5));
      assertFalse(bigFraction7.equals((Object)bigFraction13));
      assertFalse(bigFraction7.equals((Object)bigFraction15));
      assertFalse(bigFraction7.equals((Object)bigFraction16));
      assertFalse(bigFraction7.equals((Object)bigFraction3));
      assertFalse(bigFraction7.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction6));
      assertFalse(bigFraction8.equals((Object)bigFraction3));
      assertFalse(bigFraction8.equals((Object)bigFraction17));
      assertFalse(bigFraction8.equals((Object)bigFraction5));
      assertFalse(bigFraction8.equals((Object)bigFraction11));
      assertFalse(bigFraction8.equals((Object)bigFraction15));
      assertFalse(bigFraction8.equals((Object)bigFraction2));
      assertFalse(bigFraction8.equals((Object)bigFraction1));
      assertFalse(bigFraction8.equals((Object)bigFraction13));
      assertFalse(bigFraction8.equals((Object)bigFraction16));
      assertFalse(bigFraction8.equals((Object)bigFraction14));
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of((-389L), (-1078L));
      BigFraction bigFraction1 = bigFraction0.ZERO.add(1765L);
      long long0 = bigFraction1.getNumeratorAsLong();
      assertEquals(1765L, long0);
      
      double double0 = bigFraction0.ONE.doubleValue();
      assertEquals(1.0, double0, 0.01);
      
      int int0 = bigFraction0.ONE.getNumeratorAsInt();
      bigFraction0.getDenominatorAsInt();
      BigFraction bigFraction2 = bigFraction0.subtract((-1078));
      BigInteger bigInteger0 = BigInteger.TEN;
      BigFraction bigFraction3 = bigFraction2.subtract(bigInteger0);
      BigFraction bigFraction4 = bigFraction3.ONE.divide(bigFraction0);
      assertEquals((short)2, bigFraction4.shortValue());
      
      BigFraction bigFraction5 = BigFraction.of(bigInteger0);
      bigFraction5.ONE.reciprocal();
      BigFraction bigFraction6 = BigFraction.of(0, (-1078));
      bigFraction2.ZERO.equals(bigFraction3);
      BigFraction bigFraction7 = BigFraction.of(1765L);
      bigFraction7.ZERO.floatValue();
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      BigFraction bigFraction8 = BigFraction.from((double) 0.0F);
      bigFraction7.ZERO.bigDecimalValue((-1074), roundingMode0);
      BigFraction bigFraction9 = bigFraction6.subtract(bigFraction0);
      BigFraction bigFraction10 = bigFraction2.multiply(bigFraction0);
      int int1 = bigFraction10.ONE.hashCode();
      assertFalse(int1 == int0);
      
      long long1 = bigFraction10.getDenominatorAsLong();
      assertEquals(1162084L, long1);
      
      bigFraction3.getDenominatorAsLong();
      BigFraction bigFraction11 = BigFraction.from(0.0, (-1311));
      assertSame(bigFraction11, bigFraction8);
      
      bigFraction2.getDenominatorAsLong();
      BigFraction bigFraction12 = bigFraction2.add(bigFraction0);
      RoundingMode roundingMode1 = RoundingMode.UP;
      BigDecimal bigDecimal0 = bigFraction12.bigDecimalValue(1673, roundingMode1);
      assertNotSame(bigFraction12, bigFraction2);
      assertFalse(bigFraction0.equals((Object)bigFraction9));
      assertEquals((byte)54, bigDecimal0.byteValue());
      
      BigFraction bigFraction13 = BigFraction.of((-1078L));
      assertFalse(bigFraction13.equals((Object)bigFraction10));
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.of(1L, 1L);
      BigFraction bigFraction1 = BigFraction.of(1L, (-5798L));
      BigFraction bigFraction2 = bigFraction0.ONE.subtract(bigFraction1);
      bigFraction2.doubleValue();
      BigFraction bigFraction3 = BigFraction.ZERO;
      bigFraction3.ZERO.divide(31);
      // Undeclared exception!
      try { 
        bigFraction0.divide(bigFraction3);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // The value to divide by must not be zero
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(1240.95149, 1240.95149, 1);
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigFraction bigFraction1 = bigFraction0.ZERO.subtract(bigInteger0);
      BigFraction bigFraction2 = BigFraction.of(1L);
      BigFraction bigFraction3 = bigFraction0.ONE.subtract(bigFraction2);
      BigInteger bigInteger1 = BigInteger.ONE;
      BigFraction bigFraction4 = bigFraction1.ZERO.add((-1174));
      bigFraction1.hashCode();
      int int0 = 8;
      bigFraction4.ONE.pow(1);
      BigFraction bigFraction5 = bigFraction0.add(8);
      bigFraction0.ONE.compareTo(bigFraction1);
      RoundingMode roundingMode0 = RoundingMode.CEILING;
      bigFraction5.ONE.bigDecimalValue(roundingMode0);
      BigFraction bigFraction6 = bigFraction1.zero();
      bigFraction6.ZERO.compareTo(bigFraction5);
      bigFraction0.getNumeratorAsLong();
      // Undeclared exception!
      try { 
        bigFraction3.divide(bigInteger0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // The value to divide by must not be zero
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      BigFraction bigFraction0 = BigFraction.from(1026.096099268624);
      bigFraction0.getNumeratorAsLong();
      bigFraction0.signum();
      BigFraction bigFraction1 = BigFraction.from((-1167.25669795782), 1);
      BigInteger bigInteger0 = BigInteger.ONE;
      BigFraction bigFraction2 = bigFraction0.divide(bigInteger0);
      bigFraction1.signum();
      BigFraction bigFraction3 = bigFraction2.divide(bigInteger0);
      bigFraction3.ONE.multiply(bigFraction0);
      BigFraction.of(1);
      BigFraction bigFraction4 = bigFraction3.ONE.add(bigFraction1);
      bigFraction1.getNumeratorAsLong();
      bigFraction1.getDenominator();
      bigFraction1.getDenominatorAsInt();
      BigFraction bigFraction5 = bigFraction1.multiply(4503599627370496L);
      bigFraction4.pow(0);
      bigFraction5.getDenominatorAsLong();
      bigFraction3.reciprocal();
      // Undeclared exception!
      try { 
        BigFraction.from((double) 4512818369445795L, 2464);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Overflow trying to convert 4.512818369445795E15 to fraction (4512818369445795/1)
         //
         verifyException("org.apache.commons.numbers.fraction.BigFraction", e);
      }
  }
}
