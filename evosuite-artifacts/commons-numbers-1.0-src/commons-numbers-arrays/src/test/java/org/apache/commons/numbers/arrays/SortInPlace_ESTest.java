/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 20:24:54 GMT 2022
 */

package org.apache.commons.numbers.arrays;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.numbers.arrays.SortInPlace;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SortInPlace_ESTest extends SortInPlace_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SortInPlace sortInPlace0 = SortInPlace.DESCENDING;
      double[] doubleArray0 = new double[4];
      double[][] doubleArray1 = new double[4][7];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      double[] doubleArray2 = new double[1];
      doubleArray1[3] = doubleArray2;
      // Undeclared exception!
      try { 
        sortInPlace0.apply(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Size mismatch: 1 != 4
         //
         verifyException("org.apache.commons.numbers.arrays.SortInPlace", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SortInPlace[] sortInPlaceArray0 = SortInPlace.values();
      assertEquals(2, sortInPlaceArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SortInPlace sortInPlace0 = SortInPlace.valueOf("DESCENDING");
      double[] doubleArray0 = new double[9];
      double[][] doubleArray1 = new double[3][9];
      sortInPlace0.apply(doubleArray0, doubleArray1);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SortInPlace sortInPlace0 = SortInPlace.DESCENDING;
      double[][] doubleArray0 = new double[1][9];
      // Undeclared exception!
      try { 
        sortInPlace0.apply((double[]) null, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.numbers.arrays.SortInPlace", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SortInPlace sortInPlace0 = SortInPlace.DESCENDING;
      double[] doubleArray0 = new double[2];
      double[][] doubleArray1 = new double[6][5];
      // Undeclared exception!
      try { 
        sortInPlace0.apply(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Size mismatch: 5 != 2
         //
         verifyException("org.apache.commons.numbers.arrays.SortInPlace", e);
      }
  }
}
