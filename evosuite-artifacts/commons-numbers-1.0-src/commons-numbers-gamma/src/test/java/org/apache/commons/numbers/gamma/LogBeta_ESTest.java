/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 11 20:18:19 GMT 2022
 */

package org.apache.commons.numbers.gamma;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.numbers.gamma.LogBeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LogBeta_ESTest extends LogBeta_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = LogBeta.value(472.598, 14.136097974741746);
      assertEquals((-64.3410545989385), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = LogBeta.value(47.672696327902905, 48.36584350846285);
      assertEquals((-67.23400150430327), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = LogBeta.value(33.37402430454192, 32.68087712398195);
      assertEquals((-46.261449053109196), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = LogBeta.value(134.502706, 0.0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = LogBeta.value((-2.955065141253382E-16), 898.95723);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = LogBeta.value(10.0, 10.0);
      assertEquals((-13.736229227036555), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = LogBeta.value(5.0E-5, 5.0E-5);
      assertEquals(10.59663472898404, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = LogBeta.value(1.5, 2.054450534995776);
      assertEquals((-1.358343948425031), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = LogBeta.value(1.0, 1.0);
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = LogBeta.value(1.5, Double.POSITIVE_INFINITY);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = LogBeta.value(2.2085410903653875, 10.0);
      assertEquals((-5.110136853829974), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = LogBeta.value(2.054450534995776, 2.054450534995776);
      assertEquals((-1.8822856334376317), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = LogBeta.value(2.054450534995776, 1861.6986580687667);
      assertEquals((-15.445076053519324), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = LogBeta.value(2131.10004463302, 2779.977887);
      assertEquals((-3363.736299619037), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = LogBeta.value(2779.977887, 1.7964371635940225E-17);
      assertEquals(38.55814123106456, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = LogBeta.value(898.95723, (-1.3922896466162779E-18));
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = LogBeta.value(0.0, 0.0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = LogBeta.value(10.59663472898404, Double.NaN);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = LogBeta.value(Double.NaN, Double.NaN);
      assertEquals(Double.NaN, double0, 0.01);
  }
}
